B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r1, r2 <- r2, r3 <- r3
v5 <- StaticCall:10( asUint8List<0> v2, v3, v4, using unchecked entrypoint, result_type = T{_Uint8ArrayView}) T{_Uint8ArrayView}
ParallelMove r0 <- r0
v20 <- LoadField(v5 T{_Uint8ArrayView} . TypedDataView.typed_data {final}) T{*}
ParallelMove fp[-3] <- r1
v25 <- LoadField(v5 T{_Uint8ArrayView} . TypedDataView.offset_in_bytes {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove fp[-2] <- r2
v30 <- LoadField(v5 T{_Uint8ArrayView} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove fp[-1] <- r3
v40 <- AllocateObject:16(cls=_UnmodifiableUint8ArrayView) T{_UnmodifiableUint8ArrayView}
ParallelMove r0 <- r0, r1 <- fp[-3]
StoreField(v40 . TypedDataView.typed_data = v20 T{_TypedList}, NoStoreBarrier)
ParallelMove r2 <- fp[-2]
StoreField(v40 . TypedDataView.offset_in_bytes = v25 T{_Smi}, NoStoreBarrier)
ParallelMove r3 <- fp[-1]
StoreField(v40 . TypedDataBase.length = v30 T{_Smi}, NoStoreBarrier)
v41 <- UnboxInt64([non-speculative], v25 T{_Smi}) [0, 4611686018427387903] int64
v42 <- LoadField(v20 T{_TypedList} . PointerBase.data, MayLoadInnerPointer) untagged
v44 <- CalculateElementAddress(v42, v45 T{_Smi}, v41, index_scale=1) untagged
StoreField(v40 . PointerBase.data = v44 <untagged>, NoStoreBarrier, MayStoreInnerPointer)
ParallelMove r0 <- r0
DartReturn:14(v40 T{_UnmodifiableUint8ArrayView})
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[6]
v7 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[4] <- v7 T{*})
MoveArgument(sp[3] <- v3)
MoveArgument(sp[2] <- v4)
MoveArgument(sp[1] <- v5)
MoveArgument(sp[0] <- v6)
v9 <- StaticCall:10( _setClampedRange@7027147<0> v7 T{*}, v3, v4, v5, v6) T{void?}
ParallelMove r0 <- r0
DartReturn:12(v9)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v4 <- AllocateObject:10(cls=NoSuchMethodError) T{NoSuchMethodError}
ParallelMove r1 <- r0, r0 <- fp[3]
StoreField(v4 T{NoSuchMethodError} . _receiver@0150898 = v2 T{Object}, NoStoreBarrier)
ParallelMove r0 <- fp[2]
StoreField(v4 T{NoSuchMethodError} . _invocation@0150898 = v3 T{_InvocationMirror}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:14(v4)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v9 <- AllocateObject:10(cls=NoSuchMethodError) T{NoSuchMethodError}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
MoveArgument(sp[7] <- v9)
MoveArgument(sp[6] <- v2)
MoveArgument(sp[5] <- v3)
MoveArgument(sp[4] <- v4)
MoveArgument(sp[3] <- v5)
MoveArgument(sp[2] <- v6)
MoveArgument(sp[1] <- v7)
MoveArgument(sp[0] <- v8)
StaticCall:12( NoSuchMethodError._withType@0150898<0> v9, v2, v3, v4, v5, v6, v7, v8)
ParallelMove r0 <- fp[-1]
Throw:14(v9)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[8], r1 <- fp[9]
StoreField(v2 . _receiver@0150898 = v3)
v11 <- AllocateObject:12(cls=Symbol) T{Symbol}
ParallelMove r1 <- r0, r0 <- fp[7]
ParallelMove fp[-1] <- r1
StoreField(v11 T{Symbol} . _name@9040228 = v4 T{String}, NoStoreBarrier)
MoveArgument(sp[1] <- v7)
MoveArgument(sp[0] <- v6)
v12 <- StaticCall:16( _unpackTypeArguments@0150898<0> v7, v6, result_type = T{!null}) T{List<Type>}
ParallelMove r1 <- r0, r2 <- fp[2]
ParallelMove fp[-2] <- r1
Branch if StrictCompare:18(!==, v9, v0) goto (3, 4)
B3
ParallelMove r3 <- fp[3]
CheckNull:24(v8, CastError) T{List<dynamic>?}
v50 <- LoadClassId(<non-smi> v8 T{List<dynamic>?}) int64
MoveArgument(sp[0] <- v8 T{List<dynamic>?})
ParallelMove r0 <- r0
v17 <- DispatchTableCall( cid=v50 List.length<0>, v8 T{List<dynamic>?}) T{int}
ParallelMove r1 <- r0, r2 <- fp[2]
ParallelMove fp[-3] <- r1
v51 <- LoadClassId(<non-smi> v9 T{List<dynamic>?}) int64
MoveArgument(sp[0] <- v9 T{List<dynamic>?})
ParallelMove r0 <- r0
v18 <- DispatchTableCall( cid=v51 List.length<0>, v9 T{List<dynamic>?}) T{int}
ParallelMove r1 <- r0, r0 <- fp[-3]
v41 <- UnboxInt64([non-speculative], v17 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v42 <- UnboxInt64([non-speculative], v18 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v19 <- BinaryInt64Op(- [tr], v41 T{_Smi}, v42 T{_Smi}) [-9223372036854775807, 9223372036854775807] int64
ParallelMove r4 <- fp[3]
v52 <- LoadClassId(<non-smi> v8 T{List<dynamic>?}) int64
ParallelMove r0 <- r0, r1 <- r4, r2 <- C, r3 <- r3
v20 <- DispatchTableCall( cid=v52 List.sublist<0>, v8 T{List<dynamic>?}, v43 T{_Smi}, v19) T{*?}
ParallelMove r0 <- r0
ParallelMove r6 <- r0 goto:38 B5
B4
ParallelMove r6 <- fp[3] goto:40 B5
B5
ParallelMove fp[-3] <- r6
Branch if StrictCompare:42(!==, v9, v0) goto (6, 7)
B6
ParallelMove r1 <- fp[3]
CheckNull:48(v8, CastError) T{List<dynamic>?}
ParallelMove r1 <- r1, r2 <- r2
v15 <- StaticCall:50( _NamedArgumentsMap@0150898<0> v8 T{List<dynamic>?}, v9 T{List<dynamic>?}, result_type = T{_Map}) T{_Map}
ParallelMove r0 <- r0
ParallelMove r7 <- r0 goto:56 B8
B7
ParallelMove r7 <- C goto:58 B8
B8
ParallelMove fp[-5] <- r7
v40 <- UnboxInt64([non-speculative], v5) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-4] <- r3
v10 <- AllocateObject:10(cls=_InvocationMirror) T{_InvocationMirror}
ParallelMove r1 <- r0, r2 <- fp[-1], r3 <- fp[-4], r5 <- fp[-2], r6 <- fp[-3], r7 <- fp[-5], r0 <- r0
ParallelMove fp[-1] <- r0
StaticCall:60( _InvocationMirror@0150898._withType@0150898<0> v10, v11, v40 T{int}, v12, v13, v14)
ParallelMove r0 <- fp[-1], r1 <- fp[9]
StoreField(v2 . _invocation@0150898 = v10)
ParallelMove r0 <- C
DartReturn:64(v0)
CheckStackOverflowSlowPath
slow path check null (cast) operation
slow path check null (cast) operation
B0
B5
Enter frame
ParallelMove r8 <- C, r4 <- C
ParallelMove r6 <- r1, r0 <- r2, r5 <- r3, r3 <- r5, r2 <- r6, r1 <- r7
StoreField(v2 . _isSuperInvocation@0150898 = v8)
StoreField(v2 . _delayedTypeArgumentsLen@0150898 = v62 T{_Smi} <int64>)
ParallelMove r0 <- r0
StoreField(v2 . _memberName@0150898 = v3)
ParallelMove r0 <- r3
StoreField(v2 . _typeArguments@0150898 = v5)
ParallelMove r0 <- r2
StoreField(v2 . _positionalArguments@0150898 = v6)
ParallelMove r0 <- r1
StoreField(v2 . _namedArguments@0150898 = v7)
StoreField(v2 . _type@0150898 = v4 <int64>)
Branch if StrictCompare:32(===, v6 T{List<Object?>??}, v0) goto (6, 7)
B6
ParallelMove r2 <- C
StoreField(v2 T{_InvocationMirror} . _positionalArguments@0150898 = v17 T{_ImmutableList})
ParallelMove  goto:44 B8
B7
B8
Branch if StrictCompare:50(===, v7 T{Map<Symbol, Object?>??}, v0) goto (9, 10)
B9
ParallelMove r1 <- C
StoreField(v2 T{_InvocationMirror} . _namedArguments@0150898 = v16 T{_ConstMap})
ParallelMove  goto:62 B11
B10
B11
ParallelMove r0 <- C
DartReturn:66(v0)
B0
B1
Enter frame
ParallelMove r0 <- fp[3]
Branch if StrictCompare:12(===, v5, v0) goto (3, 4)
B3
ParallelMove r4 <- C goto:22 B5
B4
v33 <- UnboxInt64([non-speculative], v5 T{int?}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- r1 goto:24 B5
B5
ParallelMove fp[-1] <- r4
v7 <- AllocateObject:10(cls=_InvocationMirror, <not-aliased>) T{_InvocationMirror}
ParallelMove r0 <- r0, r1 <- fp[6]
StoreField(v7 T{_InvocationMirror} . _functionName@0150898 = v2 T{String}, NoStoreBarrier)
ParallelMove r1 <- fp[5]
StoreField(v7 T{_InvocationMirror} . _argumentsDescriptor@0150898 = v3 T{List<dynamic>}, NoStoreBarrier)
ParallelMove r1 <- fp[4]
StoreField(v7 T{_InvocationMirror} . _arguments@0150898 = v4 T{List<dynamic>}, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v7 T{_InvocationMirror} . _isSuperInvocation@0150898 = v8 T{bool}, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
StoreField(v7 T{_InvocationMirror} . _type@0150898 = v9 T{int} <int64>, NoStoreBarrier)
ParallelMove r1 <- fp[2]
v32 <- UnboxInt64([non-speculative], v6 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v7 T{_InvocationMirror} . _delayedTypeArgumentsLen@0150898 = v32 T{int} <int64>, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:28(v7)
B0
B1
Enter frame
v4 <- LoadField(v2 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v6 <- BinarySmiOp:4(- [tr], v4, v5) [-4, 4611686018427387899] T{_Smi}
v7 <- LoadIndexedUnsafe(fp[v6 + 40]) T{String}
ParallelMove fp[-5] <- r0
v8 <- LoadIndexedUnsafe(fp[v6 + 32]) T{List<dynamic>}
ParallelMove fp[-4] <- r2
v9 <- LoadIndexedUnsafe(fp[v6 + 24]) T{List<dynamic>}
ParallelMove fp[-3] <- r3
v10 <- LoadIndexedUnsafe(fp[v6 + 16]) T{bool}
ParallelMove fp[-2] <- r4
Branch if RelationalOp:6(<=, v11, v6) T{bool} goto (2, 3)
B2
v17 <- LoadIndexedUnsafe(fp[v6 T{_Smi} + 8]) [-9223372036854775808, 9223372036854775807] T{int}
v38 <- UnboxInt64([non-speculative], v17) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r1 goto:20 B5
B3
ParallelMove r1 <- C goto:18 B5
B5
ParallelMove fp[-1] <- r1
v16 <- AllocateObject:28(cls=_InvocationMirror, <not-aliased>) T{_InvocationMirror}
ParallelMove r0 <- r0, r1 <- fp[-5]
StoreField(v16 T{_InvocationMirror} . _functionName@0150898 = v7 T{String}, NoStoreBarrier)
ParallelMove r1 <- fp[-4]
StoreField(v16 T{_InvocationMirror} . _argumentsDescriptor@0150898 = v8 T{List<dynamic>}, NoStoreBarrier)
ParallelMove r1 <- fp[-3]
StoreField(v16 T{_InvocationMirror} . _arguments@0150898 = v9 T{List<dynamic>}, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreField(v16 T{_InvocationMirror} . _isSuperInvocation@0150898 = v10 T{bool}, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
StoreField(v16 T{_InvocationMirror} . _type@0150898 = v15 T{int} <int64>, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v16 T{_InvocationMirror} . _delayedTypeArgumentsLen@0150898 = v40 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:32(v16)
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C
v5 <- StaticCall:10( Map.<0> v4, result_type = T{_Map}) T{_Map}
ParallelMove r2 <- r0, r1 <- fp[-1]
ParallelMove fp[-3] <- r2
v58 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[0] <- v2)
ParallelMove r0 <- r0
v6 <- DispatchTableCall( cid=v58 List.length<0>, v2) T{int}
ParallelMove r2 <- r0, r1 <- fp[-2]
ParallelMove fp[-4] <- r2
v59 <- LoadClassId(<non-smi> v3) int64
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r0
v7 <- DispatchTableCall( cid=v59 List.length<0>, v3) T{int}
ParallelMove r1 <- r0, r0 <- fp[-4]
v50 <- UnboxInt64([non-speculative], v6 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v51 <- UnboxInt64([non-speculative], v7 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v8 <- BinaryInt64Op(- [tr], v50 T{_Smi}, v51 T{_Smi}) [-9223372036854775807, 9223372036854775807] int64
ParallelMove fp[-6] <- r1
ParallelMove r4 <- C goto:50 B5
B5
  Loop 0
  Loop Header
ParallelMove fp[-5] <- r4
CheckStackOverflow:54(stack=0, loop=1)
v60 <- LoadClassId(<non-smi> v3) int64
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r0
v11 <- DispatchTableCall( cid=v60 List.length<0>, v3) T{int}
ParallelMove r0 <- r0
v53 <- UnboxInt64([non-speculative], v11 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r2 <- fp[-5]
Branch if RelationalOp(<, v10, v53 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 0
ParallelMove r5 <- fp[-1], r4 <- fp[-2], r3 <- fp[-6]
v14 <- BinaryInt64Op(+ [tr], v8, v10) [-9223372036854775808, 9223372036854775807] int64
v54 <- BoxInt64(v14) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v61 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v54 T{int})
ParallelMove r0 <- r1
v15 <- DispatchTableCall( cid=v61 List.[]<0>, v2, v54 T{int}) T{*?}
ParallelMove r3 <- r0, r2 <- fp[-5]
ParallelMove fp[-4] <- r3
v52 <- BoxInt64(v10) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0, r1 <- fp[-2]
v62 <- LoadClassId(<non-smi> v3) int64
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v52 T{int})
ParallelMove r0 <- r4
v17 <- DispatchTableCall( cid=v62 List.[]<0>, v3, v52 T{int}) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-7] <- r3
t3 <- AssertAssignable:42(v17 T{X0?}, v18, '', instantiator_type_args(v0), function_type_args(v0)) T{String}
AssertAssignable for compile-time type
TTSCall
v16 <- AllocateObject:38(cls=Symbol) T{Symbol}
ParallelMove r1 <- r0, r0 <- fp[-7]
ParallelMove fp[-8] <- r1
StoreField(v16 T{Symbol} . _name@9040228 = v17 T{String}, NoStoreBarrier)
MoveArgument(sp[0] <- v16 T{Symbol})
v43 <- StaticCall:10( get:hashCode<0> v16 T{Symbol}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v55 <- UnboxInt64([non-speculative], v43 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-3], r2 <- fp[-8], r3 <- fp[-4], r5 <- r5
StaticCall:16( _set@3220832<0> v5 T{_Map}, v16 T{Symbol}, v15 T{X0?}, v55 T{int}, using unchecked entrypoint)
ParallelMove r1 <- fp[-5]
v21 <- BinaryInt64Op(+ [tr], v10, v57 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- r4, r1 <- fp[-6] goto:52 B5
B4
ParallelMove r0 <- fp[-3]
DartReturn:56(v5)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r9 <- r1, r8 <- r2, r4 <- r3, r0 <- r5, fp[-2] <- r1, fp[-3] <- r2, fp[-4] <- r3, fp[-5] <- r5
CheckStackOverflow:8(stack=0, loop=0)
v31 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.index) T{_Uint32List}
v36 <- LoadField(v31 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v41 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.hash_mask) [0, 4611686018427387903] T{_Smi}
v84 <- UnboxInt64([non-speculative], v41 T{_Smi}) [0, 4611686018427387903] int64
v50 <- BinaryInt64Op(& [tr], v5 T{int}, v84 T{_Smi}) [0, 4611686018427387903] int64
Branch if EqualityCompare(v50 == v87 T{_Smi}) T{bool} goto (17, 18)
B17
v82 <- UnboxInt64([non-speculative], v36 T{_Smi}) [0, 4611686018427387903] int64
v58 <- ShiftInt64Op(>> [tr], v82 T{_Smi}, v88 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove r10 <- r3 goto:32 B19
B18
v81 <- UnboxInt64([non-speculative], v36 T{_Smi}) [0, 4611686018427387903] int64
v55 <- ShiftInt64Op(>> [tr], v81 T{_Smi}, v88 T{_Smi}) [0, 2305843009213693951] int64
v56 <- BinaryInt64Op(* [tr], v50, v55) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r10 <- r3 goto:34 B19
B19
ParallelMove fp[-1] <- r10
v83 <- UnboxInt64([non-speculative], v36 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- r9, r2 <- r8, r3 <- r0, r5 <- r10, r6 <- r6, r7 <- r7
v11 <- StaticCall:20( _findValueOrInsertPoint@3220832<0> v2, v3, v5, v57 T{int}, v83 T{_Smi}, v31 T{_Uint32List}, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0
ParallelMove fp[-7] <- r3
Branch if RelationalOp(>, v11, v87 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r1 <- fp[-2]
v26 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.data) T{_List}
ParallelMove fp[-6] <- r4
v17 <- LoadField(v26 T{_List} . Array.type_arguments {final}) T{TypeArguments?}
ParallelMove r0 <- fp[-4], r2 <- r2, r1 <- C
AssertAssignable:34(v4, v18, 'value', instantiator_type_args(v17), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[-6]
v20 <- LoadField(v26 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v85 <- UnboxInt64([non-speculative], v20) [0, 576460752303423487] int64
ParallelMove r0 <- r1, r1 <- fp[-7]
GenericCheckBound:34(v85 T{_Smi}, v11) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r2, r0 <- fp[-4], r2 <- fp[-7]
StoreIndexed:34([_List] v26 T{_List}, v11 T{int}, v4)
ParallelMove  goto:44 B5
B4
ParallelMove r1 <- fp[-2], r2 <- r3
v15 <- UnaryInt64Op(unary-, v11) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r1, r2 <- fp[-3], r3 <- fp[-4], r5 <- fp[-5], r6 <- fp[-1], r7 <- r7
StaticCall:40( _insert@3220832<0> v2, v3, v4, v5, v57 T{int}, v15, using unchecked entrypoint)
ParallelMove  goto:46 B5
B5
ParallelMove r0 <- C
DartReturn:48(v0)
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove r4 <- r1, r0 <- r2, r2 <- r7, fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3, fp[-4] <- r5
CheckStackOverflow:8(stack=0, loop=0)
v82 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.used_data) [0, 4611686018427387903] T{_Smi}
v87 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.data) T{_List}
ParallelMove fp[-8] <- r7
v92 <- LoadField(v87 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v100 <- UnboxInt64([non-speculative], v82 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove fp[-7] <- r9
v101 <- UnboxInt64([non-speculative], v92 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-6] <- r10
Branch if EqualityCompare(v100 T{_Smi} == v101 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r1 <- r4
StaticCall:26( _rehash@3220832<0> v2, using unchecked entrypoint)
ParallelMove r1 <- fp[-1], r2 <- fp[-2], r3 <- fp[-3], r5 <- fp[-4]
StaticCall:28( _set@3220832<0> v2, v3, v4, v5, using unchecked entrypoint)
ParallelMove  goto:64 B5
B4
ParallelMove r3 <- r4
v15 <- ShiftInt64Op(>> [tr], v100 T{_Smi}, v116 T{_Smi}) [0, 2305843009213693951] int64
v45 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.index) T{_Uint32List}
v17 <- BinaryInt64Op(| [tr], v6, v15) [-9223372036854775808, 9223372036854775807] int64
v24 <- LoadField(v45 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v104 <- UnboxInt64([non-speculative], v24) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r2
GenericCheckBound:40(v104 T{_Smi}, v7) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r5
v117 <- IntConverter(int64->uint32[tr], v17) [0, 4294967295] uint32
StoreIndexed:40([_Uint32List] v45 T{_Uint32List}, v7 T{int}, v117 T{_Smi}, NoStoreBarrier)
v20 <- BinaryInt64Op(+ [tr], v100 T{_Smi}, v116 T{_Smi}) [1, 4611686018427387904] int64
ParallelMove fp[-4] <- r4
v108 <- BoxInt64(v20 T{int}) [1, 4611686018427387904] T{int}
ParallelMove r0 <- r0
StoreField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.used_data = v108 T{int}, NoStoreBarrier)
v27 <- LoadField(v87 T{_List} . Array.type_arguments {final}) T{TypeArguments?}
ParallelMove r0 <- fp[-2], r2 <- r5, r1 <- C, fp[-5] <- r5
AssertAssignable:50(v3, v28, 'value', instantiator_type_args(v27), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-6], r1 <- fp[-7]
GenericCheckBound:50(v101 T{_Smi}, v100 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r1 <- fp[-8], r0 <- fp[-2], r2 <- fp[-7]
StoreIndexed:50([_List] v87 T{_List}, v100 T{_Smi}, v3 T{X0?})
ParallelMove r3 <- fp[-4]
v23 <- BinaryInt64Op(+ [tr], v20 T{_Smi}, v116 T{_Smi}) [2, 4611686018427387905] int64
v113 <- BoxInt64(v23 T{int}) [2, 4611686018427387905] T{int}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.used_data = v113 T{int}, NoStoreBarrier)
ParallelMove r0 <- fp[-3], r2 <- fp[-5], r1 <- C
AssertAssignable:60(v4, v28, 'value', instantiator_type_args(v27 T{TypeArguments?}), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-6], r1 <- fp[-4]
GenericCheckBound:60(v101 T{_Smi}, v20 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r1 <- fp[-8], r0 <- fp[-3], r2 <- fp[-4]
StoreIndexed:60([_List] v87 T{_List}, v20 T{_Smi}, v4)
ParallelMove  goto:66 B5
B5
ParallelMove r0 <- C
DartReturn:68(v0)
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v76 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.deleted_keys) [0, 4611686018427387903] T{_Smi}
v89 <- UnboxInt64([non-speculative], v76 T{_Smi}) [0, 4611686018427387903] int64
v5 <- ShiftInt64Op(<< [tr], v89 T{_Smi}, v97 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v81 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.used_data) [0, 4611686018427387903] T{_Smi}
v90 <- UnboxInt64([non-speculative], v81 T{_Smi}) [0, 4611686018427387903] int64
Branch if RelationalOp(>, v5, v90 T{_Smi}) T{bool} goto (3, 4)
B3
v51 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.index) T{_Uint32List}
v56 <- LoadField(v51 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v61 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.hash_mask) [0, 4611686018427387903] T{_Smi}
v66 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.data) T{_List}
v91 <- UnboxInt64([non-speculative], v56 T{_Smi}) [0, 4611686018427387903] int64
v92 <- UnboxInt64([non-speculative], v61 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- r1, r2 <- r3, r3 <- r2, r5 <- r5, r6 <- r6
StaticCall:36( _init@3220832<0> v2, v91 T{_Smi}, v92 T{_Smi}, v66 T{_List}, v90 T{_Smi}, using unchecked entrypoint)
ParallelMove  goto:58 B5
B4
v26 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.index) T{_Uint32List}
v31 <- LoadField(v26 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v94 <- UnboxInt64([non-speculative], v31 T{_Smi}) [0, 4611686018427387903] int64
v12 <- ShiftInt64Op(<< [tr], v94 T{_Smi}, v98 T{_Smi}) [0, 9223372036854775806] int64
v36 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.hash_mask) [0, 4611686018427387903] T{_Smi}
v95 <- UnboxInt64([non-speculative], v36 T{_Smi}) [0, 4611686018427387903] int64
v14 <- ShiftInt64Op(>> [tr], v95 T{_Smi}, v98 T{_Smi}) [0, 2305843009213693951] int64
v41 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.data) T{_List}
ParallelMove r1 <- r1, r2 <- r2, r3 <- r0, r5 <- r5, r6 <- r6
StaticCall:54( _init@3220832<0> v2, v12, v14, v41 T{_List}, v90 T{_Smi}, using unchecked entrypoint)
ParallelMove  goto:60 B5
B5
ParallelMove r0 <- C
DartReturn:62(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r7 <- r1, fp[-3] <- r1, fp[-4] <- r5, fp[-5] <- r6
CheckStackOverflow:8(stack=0, loop=0)
Branch if RelationalOp(<, v3, v162 T{_Smi}) T{bool} goto (40, 4)
B40
ParallelMove r3 <- C, r2 <- C goto:26 B5
B4
ParallelMove r3 <- r2, r2 <- r3 goto:28 B5
B5
ParallelMove fp[-2] <- r2
v155 <- BoxInt64(v10 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0, r0 <- r0
ParallelMove fp[-1] <- r0
v60 <- AllocateTypedData:10(v155 T{int}) T{_Uint32List}
ParallelMove r0 <- r0, r3 <- fp[-3]
StoreField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.index = v60 T{_Uint32List})
ParallelMove r2 <- fp[-2]
v156 <- BoxInt64(v11 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.hash_mask = v156 T{int}, NoStoreBarrier)
ParallelMove r1 <- C, r2 <- fp[-1]
v79 <- CreateArray:10(v13 T{TypeArguments}, v155 T{int}) T{_List}
ParallelMove r0 <- r0, r3 <- fp[-3]
StoreField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.data = v79 T{_List})
StoreField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.used_data = v15 T{_Smi}, NoStoreBarrier)
StoreField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.deleted_keys = v15 T{_Smi}, NoStoreBarrier)
ParallelMove r4 <- fp[-4]
v33 <- LoadField:90(v5 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v157 <- UnboxInt64:90([non-speculative], v33) [0, 576460752303423487] int64
ParallelMove fp[-7] <- r5
v24 <- LoadField:90(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove fp[-6] <- r6
ParallelMove r8 <- C goto:90 B11
B11
  Loop 0
  Loop Header
ParallelMove fp[-2] <- r8
CheckStackOverflow:94(stack=0, loop=1)
Branch if RelationalOp(<, v16, v6) T{bool} goto (6, 7)
B6
  Loop 0
ParallelMove r0 <- r5, r1 <- r8
GenericCheckBound:58(v157 T{_Smi}, v16) [-9223372036854775808, 9223372036854775807] int64
v164 <- LoadIndexed:58([_List] v5, v16 T{int}) T{*?}
ParallelMove fp[-1] <- r9
Branch if StrictCompare:10(!==, v164 T{Object??}, v5 T{_List}) T{bool} goto (8, 9)
B8
  Loop 0
ParallelMove r0 <- r9, r2 <- r6, r1 <- C
t1 <- AssertAssignable:70(v164 T{*?}, v23, '', instantiator_type_args(v24), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r3 <- fp[-2]
v27 <- BinaryInt64Op(+ [tr], v16 T{int}, v165 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-7], r1 <- r2
GenericCheckBound:74(v157 T{_Smi}, v27) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- fp[-4]
v166 <- LoadIndexed:74([_List] v5, v27 T{int}) T{*?}
ParallelMove r0 <- r5, r2 <- fp[-6], r1 <- C, fp[-8] <- r5
t2 <- AssertAssignable:76(v166 T{*?}, v29, '', instantiator_type_args(v24 T{TypeArguments}), function_type_args(v0)) T{X1?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-3], r2 <- fp[-1]
v47 <- StaticCall:14( _hashCode@3220832<0> v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>}, v164 T{X0?}, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-3], r2 <- fp[-1], r3 <- fp[-8], r5 <- r0
StaticCall:16( _set@3220832<0> v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>}, v164 T{X0?}, v166 T{X1?}, v47, using unchecked entrypoint)
ParallelMove  goto:84 B10
B9
B10
  Loop 0
v22 <- BinaryInt64Op(+ [tr], v16 T{int}, v132 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r8 <- r8, r3 <- fp[-3], r4 <- fp[-4], r6 <- fp[-6], r5 <- fp[-7] goto:92 B11
B7
ParallelMove r0 <- C
DartReturn:96(v0)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v6 <- LoadClassId(v3) int64
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r0
v4 <- DispatchTableCall( cid=v6 Object.hashCode<0>, v3) T{int}
ParallelMove r0 <- r0
v5 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r1
DartReturn:12(v5 T{int})
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-7] <- r1, fp[-8] <- r2, fp[-9] <- r5, fp[-10] <- r7
CheckStackOverflow:8(stack=0, loop=0)
v9 <- BinaryInt64Op(- [tr], v6, v126 T{_Smi}) [-4611686018427387905, 4611686018427387902] int64
ParallelMove fp[-6] <- r8
v10 <- ShiftInt64Op(>> [tr], v6, v126 T{_Smi}) [-2305843009213693952, 2305843009213693951] int64
ParallelMove fp[-5] <- r9
v80 <- BinaryInt64Op(& [tr], v4 T{int}, v9 T{int}) [-9223372036854775808, 9223372036854775807] int64
v82 <- ShiftInt64Op(<< [tr], v80, v126 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v83 <- BinaryInt64Op(+ [tr], v82, v80) [-9223372036854775808, 9223372036854775807] int64
v84 <- BinaryInt64Op(& [tr], v83, v9 T{int}) [-9223372036854775808, 9223372036854775807] int64
v42 <- LoadField(v7 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v116 <- UnboxInt64([non-speculative], v42) [0, 4611686018427387903] int64
ParallelMove r0 <- r3, r1 <- r6, fp[-4] <- r3
GenericCheckBound:18(v116 T{_Smi}, v84 T{int}) [-9223372036854775808, 9223372036854775807] int64
v127 <- LoadIndexed:18([_Uint32List] v7, v84 T{int}) [0, 4294967295] uint32
ParallelMove r10 <- r6, r6 <- C, r0 <- r0 goto:118 B15
B15
  Loop 0
  Loop Header
ParallelMove fp[-2] <- r10, fp[-3] <- r6
CheckStackOverflow:116(stack=0, loop=1)
ParallelMove r0 <- r0
v120 <- IntConverter(uint32->int64, v16) [0, 4294967295] int64
Branch if EqualityCompare(v120 T{_Smi} != v128 T{_Smi}) T{bool} goto (14, 16)
B14
  Loop 0
Branch if EqualityCompare(v120 T{_Smi} == v126 T{_Smi}) T{bool} goto (3, 7)
B3
  Loop 0
Branch if RelationalOp(<, v15, v128 T{_Smi}) T{bool} goto (4, 5)
B4
  Loop 0
ParallelMove r1 <- r10 goto:52 B6
B5
  Loop 0
ParallelMove r1 <- r6 goto:54 B6
B6
  Loop 0
ParallelMove r6 <- r1, r2 <- r7, r3 <- r8, r4 <- r10 goto:102 B13
B7
  Loop 0
v27 <- BinaryInt64Op(^ [tr], v5, v120 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v27, v10) T{bool} goto (8, 11)
B8
  Loop 0
v30 <- ShiftInt64Op(<< [tr], v27, v126 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-1] <- r11
v64 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.data) T{_List}
v45 <- LoadField(v64 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v121 <- UnboxInt64([non-speculative], v45) [0, 576460752303423487] int64
ParallelMove r0 <- r1, r1 <- r11
GenericCheckBound:74(v121 T{_Smi}, v30) [-9223372036854775808, 9223372036854775807] int64
v129 <- LoadIndexed:74([_List] v64 T{_List}, v30 T{int}) T{*?}
v147 <- LoadClassId(v3 T{X0?}) int64
MoveArgument(sp[1] <- v3 T{X0?})
MoveArgument(sp[0] <- v129 T{Object??})
ParallelMove r0 <- r1
v73 <- DispatchTableCall( cid=v147 Object.==<0>, v3 T{X0?}, v129 T{Object??}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:80(===, v73 T{bool}, v21) goto (9, 10)
BoolTest
B10
B9
ParallelMove r2 <- fp[-1]
v34 <- BinaryInt64Op(+ [tr], v30 T{int}, v126 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0
DartReturn:88(v34)
B11
B12
  Loop 0
ParallelMove r6 <- fp[-3], r2 <- fp[-10], r3 <- fp[-6], r4 <- fp[-2] goto:104 B13
B13
  Loop 0
v58 <- BinaryInt64Op(+ [tr], v14 T{int}, v126 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v59 <- BinaryInt64Op(& [tr], v58, v9 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-4], r1 <- r4
GenericCheckBound:108(v116 T{_Smi}, v59 T{int}) [-9223372036854775808, 9223372036854775807] int64
v130 <- LoadIndexed:108([_Uint32List] v7, v59 T{int}) [0, 4294967295] uint32
ParallelMove r10 <- r4, r6 <- r6, r0 <- r0, r4 <- fp[-7], r2 <- fp[-8], r5 <- fp[-9], r7 <- r2, r8 <- r3, r9 <- fp[-5], r3 <- fp[-4] goto:114 B15
B16
ParallelMove r4 <- r10, r1 <- r6
Branch if RelationalOp(>=, v15, v128 T{_Smi}) T{bool} goto (17, 18)
B17
v25 <- UnaryInt64Op(unary-, v15) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r2 goto:140 B19
B18
v23 <- UnaryInt64Op(unary-, v14) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r1 goto:142 B19
B19
ParallelMove r0 <- r0
DartReturn:144(v24)
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v18 <- LoadStaticField:4(_uninitializedIndex@3220832, CallsInitializer) T{_Uint32List}
ParallelMove r1 <- fp[-1], r0 <- r0
ParallelMove fp[-1] <- r0
v3 <- AllocateObject:10(cls=_Map, v2, <not-aliased>) T{_Map}
ParallelMove r1 <- r0, r0 <- fp[-1]
ParallelMove fp[-2] <- r1
StoreField(v3 T{_Map} . LinkedHashBase.index = v18 T{_Uint32List}, NoStoreBarrier)
StoreField(v3 T{_Map} . LinkedHashBase.hash_mask = v11 T{_Smi}, NoStoreBarrier)
v33 <- LoadStaticField:4(_uninitializedData@3220832, CallsInitializer) T{_List}
ParallelMove r1 <- r0, r0 <- fp[-2]
StoreField(v3 T{_Map} . LinkedHashBase.data = v33 T{_List}, NoStoreBarrier)
StoreField(v3 T{_Map} . LinkedHashBase.used_data = v11 T{_Smi}, NoStoreBarrier)
StoreField(v3 T{_Map} . LinkedHashBase.deleted_keys = v11 T{_Smi}, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:14(v3)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r1 <- C, r2 <- C
v5 <- CreateArray:6(v2, v3) T{_List}
ParallelMove r0 <- r0
DartReturn:8(v5)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
v29 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[0] <- v2)
ParallelMove r0 <- r0
v3 <- DispatchTableCall( cid=v29 List.length<0>, v2) T{int}
ParallelMove r0 <- r0
v22 <- UnboxInt64:32([non-speculative], v3 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove fp[-2] <- r2
ParallelMove r4 <- C goto:32 B5
B5
  Loop 0
  Loop Header
ParallelMove fp[-1] <- r4
CheckStackOverflow:36(stack=0, loop=1)
Branch if RelationalOp(<, v5, v22 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 0
v23 <- BoxInt64(v5) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v30 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v23 T{int})
ParallelMove r0 <- r1
v8 <- DispatchTableCall( cid=v30 List.[]<0>, v2, v23 T{int}) T{*?}
ParallelMove r0 <- r0
v31 <- LoadClassId(<non-smi> v8 T{X0?}) int64
ParallelMove r0 <- r1, r1 <- r0
DispatchTableCall( cid=v31 _HashBase._regenerateIndex<0>, v8 T{X0?})
ParallelMove r1 <- fp[-1]
v10 <- BinaryInt64Op(+ [tr], v5, v25 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- r4, r2 <- fp[-2] goto:34 B5
B4
ParallelMove r0 <- C
DartReturn:38(v0)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- C
v9 <- AllocateTypedData:10(v2 T{_Smi}) T{_Uint32List}
ParallelMove r0 <- r0
DartReturn:8(v9 T{_Uint32List})
B0
B1
ParallelMove r2 <- r1
v3 <- LoadField(v2 . _index@0150898) [-9223372036854775808, 9223372036854775807] int64
v4 <- LoadField(v2 . _length@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>=, v3, v4) T{bool} goto (3, 4)
B3
StoreField(v2 T{_ArrayIterator} . _current@0150898 = v0 T{Null?})
ParallelMove r0 <- C
DartReturn:26(v13)
B4
v7 <- LoadField(v2 . _array@0150898 {final}) T{_Array<X0>}
v14 <- LoadField(v7 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v35 <- UnboxInt64([non-speculative], v14) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:34(v35 T{_Smi}, v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
v37 <- LoadIndexed:34([_List] v7, v3 T{int}) T{*?}
ParallelMove r0 <- r0
StoreField(v2 T{_ArrayIterator} . _current@0150898 = v37 T{X0??})
v12 <- BinaryInt64Op(+ [tr], v3 T{int}, v38 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_ArrayIterator} . _index@0150898 = v12 T{int} <int64>)
ParallelMove r0 <- C
DartReturn:44(v6)
slow path check bound operation
B0
B1
Enter frame
ParallelMove r2 <- r1, fp[-4] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _re@0150898) T{_RegExp?}
ParallelMove fp[-3] <- r3
Branch if StrictCompare:12(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:18(v10)
B4
v4 <- LoadField(v2 . _nextIndex@0150898) [-9223372036854775808, 9223372036854775807] int64
v5 <- LoadField(v2 . _str@0150898 {final}) T{String}
ParallelMove fp[-2] <- r5
v168 <- LoadField(v5 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v213 <- UnboxInt64([non-speculative], v168 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove fp[-1] <- r6
Branch if RelationalOp(<=, v4, v213 T{_Smi}) T{bool} goto (5, 21)
B5
v214 <- BoxInt64(v4 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[2] <- v3 T{_RegExp})
MoveArgument(sp[1] <- v5 T{String})
MoveArgument(sp[0] <- v214 T{int})
v13 <- StaticCall:42( _ExecuteMatch@0150898<0> v3 T{_RegExp}, v5 T{String}, v214 T{int}, using unchecked entrypoint, recognized_kind = RegExp_ExecuteMatch) T{List<int>??}
ParallelMove r0 <- r0
ParallelMove fp[-5] <- r0
Branch if StrictCompare:44(!==, v13, v0) goto (6, 20)
B6
ParallelMove r1 <- fp[-4]
v15 <- AllocateObject:52(cls=_RegExpMatch) T{_RegExpMatch}
ParallelMove r2 <- r0, r0 <- fp[-5]
ParallelMove fp[-6] <- r2
StoreField(v15 T{_RegExpMatch} . _match@0150898 = v13 T{List<int>}, NoStoreBarrier)
ParallelMove r0 <- r2, r3 <- fp[-4]
StoreField(v2 T{_AllMatchesIterator} . _current@0150898 = v15 T{_RegExpMatch})
ParallelMove r1 <- r2
v152 <- StaticCall:10( _end@0150898<0> v15 T{_RegExpMatch}, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0, r0 <- fp[-4]
ParallelMove fp[-7] <- r2
StoreField(v2 T{_AllMatchesIterator} . _nextIndex@0150898 = v152 T{int} <int64>)
ParallelMove r1 <- fp[-6]
v163 <- StaticCall:10( _start@0150898<0> v15 T{_RegExpMatch}, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r0, r0 <- fp[-7]
Branch if EqualityCompare(v152 T{int} == v163 T{int}) T{bool} goto (7, 18)
B7
MoveArgument(sp[0] <- v3 T{_RegExp})
v20 <- StaticCall:76( get:isUnicode<0> v3 T{_RegExp}, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:80(===, v20 T{bool}, v8) goto (8, 13)
BoolTest
B8
ParallelMove r2 <- fp[-4], r3 <- fp[-1]
v24 <- LoadField(v2 . _nextIndex@0150898) [-9223372036854775808, 9223372036854775807] int64
v25 <- BinaryInt64Op(+ [tr], v24, v222 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v25, v213 T{_Smi}) T{bool} goto (9, 14)
B9
ParallelMove r6 <- fp[-2]
ParallelMove r0 <- r3, r1 <- r4
t0 <- GenericCheckBound:106(v213 T{_Smi}, v24 T{int}) [-9223372036854775808, 9223372036854775807] int64
v106 <- LoadClassId(v5 T{_StringBase}) [93, 94] T{_Smi}
Branch if StrictCompare:106(===, v106, v80 T{_Smi}) goto (40, 41)
B40
v110 <- LoadIndexed([_OneByteString] v5 T{_OneByteString}, v24 T{int}) [0, 255] int64
ParallelMove r4 <- r8 goto:106 B39
B41
v108 <- LoadIndexed([_TwoByteString] v5 T{_StringBase}, v24 T{int}) [0, 65535] int64
ParallelMove r4 <- r8 goto:106 B39
B39
Branch if RelationalOp(>=, v109 T{_Smi}, v223 T{_Smi}) T{bool} goto (45, 63)
B45
Branch if RelationalOp(<=, v109 T{_Smi}, v224 T{_Smi}) T{bool} goto (10, 61)
B10
ParallelMove r0 <- r3, r1 <- r5
t0 <- GenericCheckBound:124(v213 T{_Smi}, v25 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:124(===, v106 T{_Smi}, v80 T{_Smi}) goto (30, 31)
B30
v76 <- LoadIndexed([_OneByteString] v5 T{_OneByteString}, v25 T{int}) [0, 255] int64
ParallelMove r1 <- r1 goto:124 B29
B31
v74 <- LoadIndexed([_TwoByteString] v5 T{_StringBase}, v25 T{int}) [0, 65535] int64
ParallelMove r1 <- r1 goto:124 B29
B29
Branch if RelationalOp(>=, v75 T{_Smi}, v225 T{_Smi}) T{bool} goto (35, 67)
B35
Branch if RelationalOp(<=, v75 T{_Smi}, v226 T{_Smi}) T{bool} goto (11, 65)
B11
StoreField(v2 T{_AllMatchesIterator} . _nextIndex@0150898 = v25 T{int} <int64>)
ParallelMove  goto:164 B17
B65
B67
B16
B61
B63
B15
B14
B13
ParallelMove r2 <- fp[-4]
ParallelMove  goto:148 B12
B12
B17
v21 <- LoadField(v2 . _nextIndex@0150898) [-9223372036854775808, 9223372036854775807] int64
v23 <- BinaryInt64Op(+ [tr], v21, v222 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_AllMatchesIterator} . _nextIndex@0150898 = v23 T{int} <int64>)
ParallelMove  goto:178 B19
B18
B19
ParallelMove r0 <- C
DartReturn:182(v8)
B20
ParallelMove r2 <- fp[-4]
ParallelMove  goto:190 B22
B21
B22
StoreField(v2 T{_AllMatchesIterator} . _current@0150898 = v0 T{Null?})
StoreField(v2 T{_AllMatchesIterator} . _re@0150898 = v0 T{Null?})
ParallelMove r0 <- C
DartReturn:198(v10)
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _match@0150898 {final}) T{List<int>}
v11 <- LoadClassId(<non-smi> v3) int64
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v4 T{_Smi})
ParallelMove r0 <- r1
v7 <- DispatchTableCall( cid=v11 List.[]<0>, v3, v4 T{_Smi}) T{*?}
ParallelMove r0 <- r0
v10 <- UnboxInt64([non-speculative], v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r1
DartReturn:16(v10 T{int})
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _match@0150898 {final}) T{List<int>}
v14 <- LoadClassId(<non-smi> v3) int64
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v7 T{_Smi})
ParallelMove r0 <- r1
v9 <- DispatchTableCall( cid=v14 List.[]<0>, v3, v7 T{_Smi}) T{*?}
ParallelMove r0 <- r0
v13 <- UnboxInt64([non-speculative], v9 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r1
DartReturn:18(v13 T{int})
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r3 <- r1, fp[-4] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _index@0150898) [-9223372036854775808, 9223372036854775807] int64
v4 <- LoadField(v2 . _pattern@0150898 {final}) T{String}
ParallelMove fp[-3] <- r4
v82 <- LoadField(v4 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v99 <- UnboxInt64([non-speculative], v82 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove fp[-2] <- r5
v6 <- BinaryInt64Op(+ [tr], v3, v99 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v7 <- LoadField(v2 . _input@0150898 {final}) T{String}
v87 <- LoadField(v7 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v100 <- UnboxInt64([non-speculative], v87 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove fp[-1] <- r7
Branch if RelationalOp(>, v6, v100 T{_Smi}) T{bool} goto (3, 4)
B3
StoreField(v2 T{_StringAllMatchesIterator} . _current@0150898 = v0 T{Null?})
ParallelMove r0 <- C
DartReturn:34(v31)
B4
v101 <- BoxInt64(v3 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v106 <- LoadClassId(<non-smi> v7 T{String}) int64
MoveArgument(sp[0] <- v101 T{int})
ParallelMove r0 <- r1, r1 <- r6, r2 <- r4
v14 <- DispatchTableCall( cid=v106 String.indexOf<0>, v7 T{String}, v4 T{String}, v101 T{int}) int64
ParallelMove r0 <- r0
ParallelMove fp[-5] <- r0
Branch if RelationalOp(<, v14 T{int}, v104 T{_Smi}) T{bool} goto (5, 6)
B5
ParallelMove r1 <- fp[-4], r0 <- fp[-1]
v30 <- BinaryInt64Op(+ [tr], v100 T{_Smi}, v105 T{_Smi}) [v100+1, v100+1] int64
StoreField(v2 T{_StringAllMatchesIterator} . _index@0150898 = v30 T{int} <int64>)
StoreField(v2 T{_StringAllMatchesIterator} . _current@0150898 = v0 T{Null?})
ParallelMove r0 <- C
DartReturn:66(v31)
B6
ParallelMove r1 <- fp[-4], r2 <- fp[-3], r3 <- fp[-2]
v19 <- BinaryInt64Op(+ [tr], v14 T{int}, v99 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-1] <- r4
v22 <- AllocateObject:80(cls=_StringMatch) T{_StringMatch}
ParallelMove r0 <- r0, r1 <- fp[-5]
StoreField(v22 T{_StringMatch} . start = v14 T{int} <int64>, NoStoreBarrier)
ParallelMove r1 <- fp[-3]
StoreField(v22 T{_StringMatch} . pattern = v4 T{String}, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- fp[-4]
StoreField(v2 T{_StringAllMatchesIterator} . _current@0150898 = v22 T{_StringMatch})
v23 <- LoadField(v2 . _index@0150898) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[-1]
Branch if EqualityCompare(v19 == v23) T{bool} goto (7, 8)
B7
v27 <- BinaryInt64Op(+ [tr], v19, v105 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r2 goto:104 B9
B8
ParallelMove r2 <- r3 goto:106 B9
B9
StoreField(v2 T{_StringAllMatchesIterator} . _index@0150898 = v25 T{int} <int64>)
ParallelMove r0 <- C
DartReturn:110(v10)
CheckStackOverflowSlowPath
B0
B1
v3 <- LoadField(v2 . path {final}) T{String}
ParallelMove r0 <- r0
DartReturn:4(v3)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _uri@0150898 {final}) T{String}
v4 <- LoadField(v2 . _pathStart@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
v5 <- LoadField(v2 . _queryStart@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
v7 <- BoxInt64(v5) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v7 T{int})
ParallelMove r1 <- r2, r2 <- r3
v6 <- StaticCall:16( substring<0> v3, v4, v7 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:18(v6)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r5 <- r1, r0 <- r2, fp[-1] <- r1, fp[-2] <- r2
v6 <- LoadField(v4 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v8 <- BinarySmiOp:4(- [tr], v6, v7) [-2, 4611686018427387901] T{_Smi}
Branch if RelationalOp:6(<=, v9, v8) T{bool} goto (2, 3)
B2
v16 <- LoadIndexedUnsafe(fp[v8 T{_Smi} + 8]) T{int??}
ParallelMove r2 <- r1 goto:20 B5
B3
ParallelMove r2 <- C goto:18 B5
B5
CheckStackOverflow:26(stack=0, loop=0)
v21 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v22 <- UnboxInt64([non-speculative], v21 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove r1 <- r0, r2 <- r2, r3 <- r3
v14 <- StaticCall:30( checkValidRange<0> v3, v12, v22 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-1], r2 <- fp[-2], r3 <- r0
v15 <- StaticCall:32( _substringUnchecked@0150898<0> v2, v3, v14, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:34(v15)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1
CheckStackOverflow:8(stack=0, loop=0)
Branch if EqualityCompare(v3 == v4) T{bool} goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:20(v16)
B4
Branch if EqualityCompare(v3 == v36 T{_Smi}) T{bool} goto (5, 8)
B5
v21 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v35 <- UnboxInt64([non-speculative], v21 T{_Smi}) [0, 2305843009213693951] int64
Branch if EqualityCompare(v4 == v35 T{_Smi}) T{bool} goto (6, 9)
B6
ParallelMove r0 <- r4
DartReturn:46(v2)
B9
B8
B7
v10 <- BinaryInt64Op(+ [tr], v3, v37 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v10 == v4) T{bool} goto (10, 11)
B10
v33 <- BoxInt64(v3) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v33 T{int})
v13 <- StaticCall:70( []<0> v2, v33 T{int}, using unchecked entrypoint, recognized_kind = StringBaseCharAt, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:72(v13)
B11
v32 <- BoxInt64(v3) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r2 <- r0
v34 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v40 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v32 T{int})
MoveArgument(sp[0] <- v34 T{int})
ParallelMove r0 <- r1
v12 <- DispatchTableCall( cid=v40 _StringBase._substringUncheckedNative<0>, v2, v32 T{int}, v34 T{int}) T{String}
ParallelMove r0 <- r0
DartReturn:78(v12 T{String})
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
v67 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[0] <- v2)
ParallelMove r0 <- r0
v3 <- DispatchTableCall( cid=v67 List.length<0>, v2) T{int}
ParallelMove r2 <- r0
ParallelMove fp[-5] <- r2
v50 <- UnboxInt64:86([non-speculative], v3 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove fp[-4] <- r3
ParallelMove r6 <- C, r5 <- C goto:86 B9
B9
  Loop 1
  Loop Header
ParallelMove fp[-2] <- r6, fp[-3] <- r5
CheckStackOverflow:84(stack=0, loop=1)
Branch if RelationalOp(<, v6, v50 T{_Smi}) T{bool} goto (8, 10)
B8
  Loop 1
v52 <- BoxInt64(v6) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r0
ParallelMove fp[-1] <- r1
v68 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v52 T{int})
ParallelMove r0 <- r0
v11 <- DispatchTableCall( cid=v68 List.[]<0>, v2, v52 T{int}) T{*?}
ParallelMove r0 <- r0
v69 <- LoadClassId(v11 T{X0?}) int64
MoveArgument(sp[0] <- v11 T{X0?})
ParallelMove r0 <- r1
v12 <- DispatchTableCall( cid=v69 Object.toString<0>, v11 T{X0?}) T{String}
ParallelMove r2 <- r0, r1 <- fp[2]
ParallelMove fp[-6] <- r2
v70 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v52 T{int})
MoveArgument(sp[0] <- v12 T{String})
ParallelMove r0 <- r0
DispatchTableCall( cid=v70 List.[]=<0>, v2, v52 T{int}, v12 T{String})
ParallelMove r0 <- fp[-6]
v26 <- LoadClassId(v12 T{String}) [93, 94] T{_Smi}
Branch if StrictCompare(===, v26 T{_Smi}, v14 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 1
ParallelMove r2 <- fp[-2], r1 <- fp[-3]
v31 <- LoadField(v12 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v54 <- UnboxInt64([non-speculative], v31 T{_Smi}) [0, 2305843009213693951] int64
v24 <- BinaryInt64Op(+ [tr], v5, v54 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v25 <- BinaryInt64Op(+ [tr], v6, v60 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r6, r5 <- r5, r2 <- fp[-5], r3 <- fp[-4] goto:82 B9
B4
ParallelMove r1 <- fp[-3]
ParallelMove r0 <- r1 goto:70 B6
B6
  Loop 0
  Loop Header
CheckStackOverflow:68(stack=0, loop=2)
v18 <- BinaryInt64Op(+ [tr], v16, v60 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-3] <- r4
Branch if RelationalOp(<, v18, v50 T{_Smi}) T{bool} goto (5, 7)
B5
  Loop 0
v56 <- BoxInt64(v18) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r0
ParallelMove fp[-1] <- r1
v71 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v56 T{int})
ParallelMove r0 <- r0
v21 <- DispatchTableCall( cid=v71 List.[]<0>, v2, v56 T{int}) T{*?}
ParallelMove r0 <- r0
v72 <- LoadClassId(v21 T{X0?}) int64
MoveArgument(sp[0] <- v21 T{X0?})
ParallelMove r0 <- r1
v22 <- DispatchTableCall( cid=v72 Object.toString<0>, v21 T{X0?}) T{String}
ParallelMove r0 <- r0, r1 <- fp[2]
v73 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v56 T{int})
MoveArgument(sp[0] <- v22 T{String})
ParallelMove r0 <- r2
DispatchTableCall( cid=v73 List.[]=<0>, v2, v56 T{int}, v22 T{String})
ParallelMove r0 <- fp[-3] goto:66 B6
B7
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v3 T{_Smi})
v20 <- StaticCall:74( _concatRangeNative@0150898<0> v2, v4, v3 T{_Smi}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:76(v20)
B10
ParallelMove r2 <- r6
ParallelMove r1 <- fp[2], r2 <- r2
v10 <- StaticCall:90( _concatAll@0150898<0> v2, v5, result_type = T{!null}) T{*}
ParallelMove r0 <- r0
DartReturn:92(v10)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
Branch if RelationalOp(>, v3, v80 T{_Smi}) T{bool} goto (3, 4)
B3
v88 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[0] <- v2)
ParallelMove r0 <- r0
v28 <- DispatchTableCall( cid=v88 List.length<0>, v2) T{int}
ParallelMove r0 <- r0
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v9)
MoveArgument(sp[0] <- v28 T{_Smi})
v29 <- StaticCall:22( _concatRangeNative@0150898<0> v2, v9, v28 T{_Smi}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:24(v29)
B4
ParallelMove r3 <- r1
v72 <- BoxInt64(v3 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v72 T{int})
v52 <- StaticCall:10( allocateOneByteString<0> v72 T{int}, recognized_kind = AllocateOneByteString, result_type = T{_OneByteString}) T{_OneByteString}
ParallelMove r2 <- r0, r1 <- fp[-1]
ParallelMove fp[-2] <- r2
v89 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[0] <- v2)
ParallelMove r0 <- r0
v8 <- DispatchTableCall( cid=v89 List.length<0>, v2) T{int}
ParallelMove r0 <- r0
v73 <- UnboxInt64:82([non-speculative], v8 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove fp[-5] <- r2
ParallelMove r6 <- C, r5 <- C, r4 <- fp[-2] goto:82 B10
B10
  Loop 1
  Loop Header
ParallelMove fp[-3] <- r6, fp[-4] <- r5
CheckStackOverflow:86(stack=0, loop=1)
Branch if RelationalOp(<, v11, v73 T{_Smi}) T{bool} goto (5, 6)
B5
  Loop 1
v74 <- BoxInt64(v11) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v90 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v74 T{int})
ParallelMove r0 <- r1
v16 <- DispatchTableCall( cid=v90 List.[]<0>, v2, v74 T{int}) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-6] <- r3
t0 <- AssertAssignable:48(v16 T{X0?}, v17, '', instantiator_type_args(v0), function_type_args(v0)) T{_OneByteString}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-6]
v47 <- LoadField(v16 T{_OneByteString} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v75 <- UnboxInt64:74([non-speculative], v47 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove r6 <- fp[-3], r2 <- C, r0 <- fp[-2] goto:74 B9
B9
  Loop 0
  Loop 1
  Loop Header
CheckStackOverflow:78(stack=0, loop=2)
Branch if RelationalOp(<, v21, v75 T{_Smi}) T{bool} goto (7, 8)
B7
  Loop 0
  Loop 1
v25 <- BinaryInt64Op(+ [tr], v20, v82 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v83 <- LoadIndexed:68([_OneByteString] v16 T{_OneByteString}, v21 T{int}) [0, 255] int64
StoreIndexed:10([_OneByteString] v52 T{_OneByteString}, v20 T{int}, v83 T{_Smi}, NoStoreBarrier)
v27 <- BinaryInt64Op(+ [tr], v21 T{int}, v82 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r4, r2 <- r5 goto:76 B9
B8
  Loop 1
ParallelMove r1 <- fp[-4]
v24 <- BinaryInt64Op(+ [tr], v11, v82 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r6, r5 <- r5, r4 <- r0, r2 <- fp[-5] goto:84 B10
B6
ParallelMove r0 <- r4
ParallelMove r0 <- r0
DartReturn:88(v52 T{_OneByteString})
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
ParallelMove r0 <- C
DartReturn:6(v2)
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
v5 <- StaticCall:10( _unsupportedPrint@9040228<0> v3) T{void?}
ParallelMove r0 <- r0
DartReturn:12(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v3 <- AllocateObject:10(cls=UnsupportedError) T{UnsupportedError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v3 T{UnsupportedError} . message = v4 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:14(v3)
B0
B1
ParallelMove r0 <- sp[0], r1 <- sp[1]
StoreField(v2 . message = v3)
ParallelMove r0 <- C
DartReturn:12(v0)
B0
B1
Enter frame
v2 <- LoadStaticField:4(_printClosure@9040228, CallsInitializer) T{_Closure}
ParallelMove r0 <- r0
DartReturn:6(v2)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
v8 <- LoadClassId(v2) [1, 600] int64
Branch if TestRange(v8 in [93-94]) T{bool} goto (3, 4)
B3
ParallelMove r0 <- r0
DartReturn:20(v2 T{String})
B4
v9 <- LoadClassId(v2) int64
MoveArgument(sp[0] <- v2)
ParallelMove r0 <- r1
v6 <- DispatchTableCall( cid=v9 Object.toString<0>, v2) T{String}
ParallelMove r0 <- r0
DartReturn:26(v6 T{String})
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r3, fp[-1] <- r1, fp[-2] <- r3, fp[-4] <- r2
v7 <- LoadField(v5 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v9 <- BinarySmiOp:4(- [tr], v7, v8) [-3, 4611686018427387900] T{_Smi}
Branch if RelationalOp:6(<=, v10, v9) T{bool} goto (2, 3)
B2
Branch if RelationalOp:20(<=, v23, v9 T{_Smi}) T{bool} goto (5, 6)
B5
B6
B3
B4
B8
Branch if RelationalOp(>, v98 T{_Smi}, v2) T{bool} goto (11, 9)
B9
Branch if RelationalOp(>, v2, v4) T{bool} goto (12, 13)
B13
Branch if StrictCompare:80(!==, v3, v0) goto (14, 20)
B14
v96 <- UnboxInt64([non-speculative], v3 T{int?}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>, v2, v96 T{int?}) T{bool} goto (17, 15)
B15
Branch if RelationalOp(>, v96 T{int?}, v4) T{bool} goto (18, 19)
B19
ParallelMove r0 <- r3
DartReturn:122(v96 T{int?})
B20
ParallelMove r0 <- r0
DartReturn:126(v4)
B11
B12
B10
v21 <- AllocateObject:72(cls=RangeError, <not-aliased>) T{RangeError}
ParallelMove r2 <- r0
StoreField(v21 T{RangeError} . start = v13 T{_Smi}, NoStoreBarrier)
ParallelMove r3 <- fp[-2]
v93 <- BoxInt64(v4 T{_Smi}) [-4611686018427387904, 4611686018427387903] T{_Smi}
StoreField(v21 T{RangeError} . end = v93 T{_Smi}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v21 T{RangeError} . name = v20 T{_OneByteString}, NoStoreBarrier)
ParallelMove r4 <- C
StoreField(v21 T{RangeError} . message = v38 T{_OneByteString}, NoStoreBarrier)
ParallelMove r5 <- fp[-1]
v91 <- BoxInt64(v2 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v21 T{RangeError} . invalidValue = v91 T{int}, NoStoreBarrier)
ParallelMove r6 <- C
StoreField(v21 T{RangeError} . _hasValue@0150898 = v12 T{bool}, NoStoreBarrier)
ParallelMove r0 <- r2
Throw:76(v21)
B17
ParallelMove r5 <- r1, r3 <- r0, r6 <- C, r4 <- C
ParallelMove  goto:108 B16
B18
ParallelMove r5 <- r1, r3 <- r0, r6 <- C, r4 <- C
ParallelMove  goto:112 B16
B16
v92 <- BoxInt64(v2 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
ParallelMove fp[-3] <- r0
v19 <- AllocateObject:114(cls=RangeError, <not-aliased>) T{RangeError}
ParallelMove r1 <- r0, r0 <- fp[-3]
StoreField(v19 T{RangeError} . start = v92 T{int?}, NoStoreBarrier)
ParallelMove r0 <- fp[-2]
v94 <- BoxInt64(v4 T{_Smi}) [-4611686018427387904, 4611686018427387903] T{_Smi}
StoreField(v19 T{RangeError} . end = v94 T{_Smi}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v19 T{RangeError} . name = v18 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v19 T{RangeError} . message = v38 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-4]
StoreField(v19 T{RangeError} . invalidValue = v3 T{int?}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v19 T{RangeError} . _hasValue@0150898 = v12 T{bool}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:118(v19)
B0
B1
Enter frame
v4 <- LoadField(v2 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v6 <- BinarySmiOp:4(- [tr], v4, v5) [-2, 4611686018427387901] T{_Smi}
v7 <- LoadIndexedUnsafe(fp[v6 + 24]) T{*?}
v8 <- LoadIndexedUnsafe(fp[v6 + 16]) T{*?}
Branch if RelationalOp:6(<=, v9, v6) T{bool} goto (2, 3)
B2
v15 <- LoadIndexedUnsafe(fp[v6 T{_Smi} + 8]) T{String??}
Branch if RelationalOp:20(<=, v5, v6 T{_Smi}) T{bool} goto (5, 6)
B5
v17 <- LoadIndexedUnsafe(fp[v6 T{_Smi} + 0]) T{*?}
ParallelMove r0 <- r4, r4 <- r5 goto:36 B8
B6
ParallelMove r2 <- r4 goto:30 B4
B3
ParallelMove r2 <- C goto:18 B4
B4
ParallelMove r0 <- r2, r4 <- C goto:34 B8
B8
ParallelMove r0 <- r0
StoreField(v7 . name = v13)
ParallelMove r0 <- r4
StoreField(v7 . message = v14)
ParallelMove r0 <- r3
StoreField(v7 . invalidValue = v8)
StoreField(v7 . _hasValue@0150898 = v11)
ParallelMove r0 <- C
DartReturn:46(v0)
B0
B1
Enter frame
v4 <- LoadField(v2 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v6 <- BinarySmiOp:4(- [tr], v4, v5) [-1, 4611686018427387902] T{_Smi}
v7 <- LoadIndexedUnsafe(fp[v6 + 16]) T{*?}
Branch if RelationalOp:6(<=, v5, v6) T{bool} goto (2, 3)
B2
v14 <- LoadIndexedUnsafe(fp[v6 T{_Smi} + 8]) T{*?}
Branch if RelationalOp:20(<=, v15, v6 T{_Smi}) T{bool} goto (5, 6)
B5
v17 <- LoadIndexedUnsafe(fp[v6 T{_Smi} + 0]) T{String??}
ParallelMove r0 <- r3, r3 <- r4 goto:36 B8
B6
ParallelMove r2 <- r3 goto:30 B4
B3
ParallelMove r2 <- C goto:18 B4
B4
ParallelMove r0 <- r2, r3 <- C goto:34 B8
B8
ParallelMove r0 <- r0
StoreField(v7 . message = v11)
ParallelMove r0 <- r3
StoreField(v7 . name = v12)
StoreField(v7 . _hasValue@0150898 = v13)
ParallelMove r0 <- C
DartReturn:46(v0)
B0
B1
Enter frame
v4 <- LoadField(v2 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v6 <- BinarySmiOp:4(- [tr], v4, v5) [-4, 4611686018427387899] T{_Smi}
v7 <- LoadIndexedUnsafe(fp[v6 + 40]) T{*?}
v8 <- LoadIndexedUnsafe(fp[v6 + 32]) T{num}
v9 <- LoadIndexedUnsafe(fp[v6 + 24]) T{int??}
v10 <- LoadIndexedUnsafe(fp[v6 + 16]) T{int??}
Branch if RelationalOp:6(<=, v11, v6) T{bool} goto (2, 3)
B2
v19 <- LoadIndexedUnsafe(fp[v6 T{_Smi} + 8]) T{String??}
Branch if RelationalOp:20(<=, v20, v6 T{_Smi}) T{bool} goto (5, 6)
B5
v22 <- LoadIndexedUnsafe(fp[v6 T{_Smi} + 0]) T{String??}
ParallelMove r5 <- r5, r2 <- r6 goto:36 B8
B6
ParallelMove r2 <- r5 goto:30 B4
B3
ParallelMove r2 <- C goto:18 B4
B4
ParallelMove r5 <- r2, r2 <- C goto:34 B8
B8
ParallelMove r0 <- r0
StoreField(v7 . start = v9)
ParallelMove r0 <- r4
StoreField(v7 . end = v10)
Branch if StrictCompare:44(===, v16, v0) goto (9, 10)
B9
ParallelMove r4 <- C goto:54 B11
B10
ParallelMove r4 <- r2 goto:56 B11
B11
ParallelMove r0 <- r5
StoreField(v7 T{ArgumentError} . name = v15 T{String??})
ParallelMove r0 <- r4
StoreField(v7 T{ArgumentError} . message = v17 T{String?})
ParallelMove r0 <- r3
StoreField(v7 T{ArgumentError} . invalidValue = v8 T{num})
StoreField(v7 T{ArgumentError} . _hasValue@0150898 = v13 T{bool})
ParallelMove r0 <- C
DartReturn:60(v0)
B0
B1
ParallelMove r1 <- C
ParallelMove r0 <- sp[0], r2 <- sp[1]
StoreField(v2 T{RangeError} . message = v3 T{*?})
StoreField(v2 T{RangeError} . _hasValue@0150898 = v10 T{bool})
ParallelMove r0 <- C
DartReturn:12(v0)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v9 <- LoadField(v2 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v10 <- LoadField(v9 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v27 <- UnboxInt64([non-speculative], v10 T{_Smi}) [0, 576460752303423487] int64
v22 <- ShiftInt64Op(<< [tr], v27 T{_Smi}, v25) [0, 1152921504606846974] int64
v20 <- BinaryInt64Op(| [tr], v22 T{int}, v28 T{_Smi}) [0, 1152921504606846975] int64
ParallelMove r1 <- r1, r2 <- r0
StaticCall:14( _grow@0150898<0> v2, v20 T{int}, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:16(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, r1 <- r2, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r1
v4 <- StaticCall:10( _allocateData@0150898<0> v3, result_type = T{_List}) T{_List}
ParallelMove r3 <- r0, r2 <- fp[-1]
v31 <- LoadField(v2 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v43 <- UnboxInt64([non-speculative], v31 T{_Smi}) [0, 576460752303423487] int64
Branch if RelationalOp(>, v43 T{_Smi}, v51 T{_Smi}) T{bool} goto (3, 7)
B3
v18 <- LoadField:46(v2 . GrowableObjectArray.data) T{_List}
v20 <- LoadField:46(v4 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v47 <- UnboxInt64:46([non-speculative], v20) [0, 576460752303423487] int64
ParallelMove r6 <- C goto:46 B6
B6
  Loop 0
  Loop Header
CheckStackOverflow:50(stack=0, loop=1)
Branch if RelationalOp(<, v10, v43 T{_Smi}) T{bool} goto (4, 5)
B4
  Loop 0
v52 <- LoadIndexed:40([_List] v18, v10 T{int}) T{X0?}
ParallelMove r0 <- r7, r1 <- r6
GenericCheckBound:42(v47 T{_Smi}, v10 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r3, r0 <- r8
StoreIndexed:42([_List] v4, v10 T{int}, v52 T{X0?})
v15 <- BinaryInt64Op(+ [tr], v10 T{int}, v53 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r0 goto:48 B6
B5
B7
B8
ParallelMove r0 <- r3
StoreField(v2 . GrowableObjectArray.data = v4)
ParallelMove r0 <- C
DartReturn:62(v0)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
Branch if EqualityCompare(v2 == v32 T{_Smi}) T{bool} goto (3, 4)
B3
v24 <- LoadStaticField:4(_emptyList@0150898, CallsInitializer) T{_List}
ParallelMove r0 <- r0
DartReturn:22(v24 T{_List})
B4
v14 <- BinaryInt64Op(| [tr], v2 T{int}, v33 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v31 <- BoxInt64(v14 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- C, r2 <- r0
v21 <- CreateArray:10(v0 T{Null?}, v31 T{int}) T{_List}
ParallelMove r0 <- r0
DartReturn:30(v21 T{_List})
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r1 <- C, r2 <- C
v4 <- CreateArray:6(v0, v2) T{_List}
ParallelMove r0 <- r0
DartReturn:8(v4)
B0
B1
Enter frame
ParallelMove r2 <- r1, r0 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r0
v4 <- StaticCall:10( _allocateData@0150898<0> v3, result_type = T{_List}) T{_List}
ParallelMove r1 <- fp[-1], r0 <- r0
ParallelMove fp[-1] <- r0
v15 <- AllocateObject:10(cls=_GrowableList, v2 T{*?}, <not-aliased>) T{_GrowableList}
ParallelMove r3 <- r0, r2 <- fp[-1]
StoreField(v15 . GrowableObjectArray.data = v4 T{_List}, NoStoreBarrier)
StoreField(v15 . GrowableObjectArray.length = v6 T{_Smi}, NoStoreBarrier)
ParallelMove r2 <- fp[-2]
Branch if RelationalOp(>, v3, v23 T{_Smi}) T{bool} goto (3, 4)
B3
v22 <- BoxInt64(v3) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v15 T{_GrowableList} . GrowableObjectArray.length = v22 T{int}, NoStoreBarrier)
ParallelMove  goto:30 B5
B4
B5
ParallelMove r0 <- r3
DartReturn:34(v15 T{_GrowableList})
CheckStackOverflowSlowPath
B0
B1
ParallelMove r4 <- C
TailCall(_iso_stub_ResumeStub(v0))
B0
B1
Enter frame
ParallelMove r4 <- r1, r3 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v45 <- LoadField(v2 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v61 <- UnboxInt64([non-speculative], v45 T{_Smi}) [0, 576460752303423487] int64
Branch if RelationalOp(>, v3, v61 T{_Smi}) T{bool} goto (3, 7)
B3
v18 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- C, r2 <- r2, r1 <- C
AssertAssignable:22(v0, v17, ' in type cast', instantiator_type_args(v18), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
v39 <- LoadField(v2 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v40 <- LoadField(v39 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v62 <- UnboxInt64([non-speculative], v40 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r3 <- fp[-2]
Branch if RelationalOp(>, v3, v62 T{_Smi}) T{bool} goto (4, 5)
B4
ParallelMove r1 <- r0, r2 <- r3
StaticCall:36( _grow@0150898<0> v2, v3, using unchecked entrypoint)
ParallelMove  goto:42 B6
B5
B6
v60 <- BoxInt64(v3) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v2 . GrowableObjectArray.length = v60 T{int}, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:48(v0)
B7
ParallelMove r5 <- r3
v7 <- BinaryInt64Op(+ [tr], v3, v3) [-9223372036854775808, 9223372036854775807] int64
v9 <- BinaryInt64Op(- [tr], v61 T{_Smi}, v3) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v7, v9) T{bool} goto (8, 9)
B8
ParallelMove r1 <- r4, r2 <- r5, r3 <- r5
StaticCall:68( _shrink@0150898<0> v2, v3, v3, using unchecked entrypoint)
ParallelMove r3 <- fp[-1] goto:100 B13
B9
ParallelMove r3 <- r4
v23 <- LoadField:92(v2 . GrowableObjectArray.data) T{_List}
ParallelMove r5 <- fp[-2] goto:92 B12
B12
  Loop 0
  Loop Header
CheckStackOverflow:96(stack=0, loop=1)
Branch if RelationalOp(<, v11, v61 T{_Smi}) T{bool} goto (10, 11)
B10
  Loop 0
ParallelMove r0 <- r2, r1 <- r5
GenericCheckBound:88(v61 T{_Smi}, v11) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:88([_List] v23, v11 T{int}, v0, NoStoreBarrier)
v15 <- BinaryInt64Op(+ [tr], v11 T{int}, v68 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:94 B12
B11
B13
v59 <- BoxInt64(v3) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v2 . GrowableObjectArray.length = v59 T{int}, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:106(v0)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove r0 <- r1, r1 <- r2, fp[-1] <- r1, fp[-2] <- r3
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r1
v5 <- StaticCall:10( _allocateData@0150898<0> v3, result_type = T{_List}) T{_List}
ParallelMove r3 <- r0, r2 <- fp[-2]
Branch if RelationalOp(>, v4, v36 T{_Smi}) T{bool} goto (3, 7)
B3
ParallelMove r4 <- fp[-1]
v15 <- LoadField:42(v2 . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v32 <- UnboxInt64:42([non-speculative], v15) [0, 576460752303423487] int64
v17 <- LoadField:42(v2 . GrowableObjectArray.data) T{_List}
v19 <- LoadField:42(v5 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v34 <- UnboxInt64:42([non-speculative], v19) [0, 576460752303423487] int64
ParallelMove r7 <- C goto:42 B6
B6
  Loop 0
  Loop Header
CheckStackOverflow:46(stack=0, loop=1)
Branch if RelationalOp(<, v10, v4) T{bool} goto (4, 5)
B4
  Loop 0
ParallelMove r0 <- r6, r1 <- r7
GenericCheckBound:36(v32 T{_Smi}, v10) [-9223372036854775808, 9223372036854775807] int64
v37 <- LoadIndexed:36([_List] v17, v10 T{int}) T{X0?}
ParallelMove r0 <- r8, r1 <- r7
GenericCheckBound:38(v34 T{_Smi}, v10 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r3, r0 <- r9
StoreIndexed:38([_List] v5, v10 T{int}, v37 T{X0?})
v14 <- BinaryInt64Op(+ [tr], v10 T{int}, v38 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r7 <- r0 goto:44 B6
B5
B7
ParallelMove r4 <- fp[-1]
ParallelMove  goto:54 B8
B8
ParallelMove r0 <- r3
StoreField(v2 . GrowableObjectArray.data = v5)
ParallelMove r0 <- C
DartReturn:58(v0)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
B0
B9
Enter frame
ParallelMove r3 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v7 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- C, r2 <- r4, r1 <- C, fp[-1] <- r4
t0 <- AssertAssignable:10(v0, v6, 'value', instantiator_type_args(v7), function_type_args(v0)) T{Null?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-2]
v10 <- LoadField(v2 . future {final}) T{_Future}
ParallelMove fp[-3] <- r3
v30 <- LoadField(v10 T{_Future} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v30, v47) goto (3, 4)
B4
ParallelMove r0 <- C, r2 <- fp[-1], r1 <- C
t1 <- AssertAssignable:34(v0 T{Null?}, v14, '', instantiator_type_args(v7 T{TypeArguments}), function_type_args(v0 T{Null?})) T{FutureOr<X0>?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-3], r2 <- C
StaticCall:36( _asyncComplete@4048458<0> v10 T{_Future}, v0, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:38(v0 T{Null?})
B3
v17 <- AllocateObject:24(cls=StateError, <not-aliased>) T{StateError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v17 T{StateError} . message = v18 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:28(v17)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v3 <- AllocateObject:10(cls=StateError) T{StateError}
ParallelMove r1 <- r0, r0 <- fp[2]
StoreField(v3 T{StateError} . message = v2 T{String}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:14(v3)
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[0] <- v3)
v5 <- StaticCall:10( _throwNew@0150898<0> v3) T{*?}
ParallelMove r0 <- r0
DartReturn:12(v5)
CheckStackOverflowSlowPath
B0
B5
Enter frame
ParallelMove r4 <- r1, r3 <- r2, fp[-2] <- r1, fp[-3] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v5 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r3, r2 <- r5, r1 <- C, fp[-1] <- r5
t0 <- AssertAssignable:10(v3, v4, 'value', instantiator_type_args(v5), function_type_args(v0)) T{FutureOr<X0>?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-3], r2 <- fp[-1], r1 <- C
v9 <- InstanceOf:12(v3 T{FutureOr<X0>?} IS Future<X0>, instantiator_type_args(v5 T{TypeArguments}), function_type_args(v0)) T{bool}
InlineInstanceof
UninstantiatedTypeTest
BoolTest
ParallelMove r0 <- r0
Branch if StrictCompare:16(===, v9 T{bool}, v10) goto (3, 4)
BoolTest
B3
ParallelMove r1 <- fp[-2], r2 <- fp[-3]
StaticCall:22( _chainFuture@4048458<0> v2, v3 T{_Future}, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:24(v0)
B4
ParallelMove r1 <- fp[-2], r2 <- fp[-3]
StaticCall:28( _asyncCompleteWithValue@4048458<0> v2, v3 T{FutureOr<X0>?}, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:30(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v4 <- AllocateContext:10(num_variables=2) T{Context}
ParallelMove r2 <- r0, r0 <- fp[-1]
ParallelMove fp[-3] <- r2
StoreField(v4 . this = v2, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreField(v4 . value = v3, NoStoreBarrier)
ParallelMove r1 <- r0
StaticCall:12( _setPendingComplete@4048458<0> v2, using unchecked entrypoint)
ParallelMove r0 <- fp[-1]
v5 <- LoadField(v2 . _zone@4048458 {final}) T{_RootZone}
ParallelMove r1 <- C, r2 <- fp[-3], fp[-2] <- r3
v7 <- AllocateClosure:16(v6, v4) T{_Closure}
ParallelMove r1 <- fp[-2], r2 <- r0
StaticCall:18( scheduleMicrotask<0> v5, v7, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:20(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r3 <- r1, r5 <- r2
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C, r3 <- r3, r5 <- r5
StaticCall:10( _rootScheduleMicrotask@4048458<0> v0, v0, v2, v3)
ParallelMove r0 <- C
DartReturn:12(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r3, fp[-1] <- r3, fp[-2] <- r5
CheckStackOverflow:8(stack=0, loop=0)
Branch if StrictCompare:10(!==, v6, v4) goto (3, 7)
B3
ParallelMove r1 <- C, r2 <- r0
v8 <- StaticCall:16( inSameErrorZone<0> v6, v4, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
v9 <- BooleanNegate(v8 T{bool}) T{bool}
Branch if StrictCompare:22(===, v9 T{bool}, v10) goto (4, 5)
BoolTest
B4
ParallelMove r1 <- fp[-1], r0 <- fp[-2]
v34 <- AllocateContext:10(num_variables=2) T{Context}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v34 . this = v4 T{_RootZone}, NoStoreBarrier)
ParallelMove r2 <- fp[-2]
StoreField(v34 . f = v5 T{_Closure}, NoStoreBarrier)
ParallelMove r1 <- C, r2 <- r1
v36 <- AllocateClosure:12(v37 T{Function}, v34) T{_Closure}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:36 B6
B5
ParallelMove r0 <- fp[-1], r2 <- fp[-2]
v23 <- AllocateContext:24(num_variables=2) T{Context}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v23 . this = v4 T{_RootZone}, NoStoreBarrier)
ParallelMove r0 <- fp[-2]
StoreField(v23 . f = v5 T{_Closure}, NoStoreBarrier)
ParallelMove r1 <- C, r2 <- r1
v25 <- AllocateClosure:26(v26 T{Function}, v23) T{_Closure}
ParallelMove r1 <- r0, r0 <- C
StoreField(v25 . Closure.function_type_arguments = v11 T{TypeArguments}, NoStoreBarrier)
ParallelMove r0 <- r1 goto:38 B6
B6
ParallelMove r1 <- r0 goto:44 B8
B7
ParallelMove r0 <- r5
ParallelMove r1 <- r0 goto:46 B8
B8
ParallelMove r1 <- r1
StaticCall:48( _scheduleAsyncCallback@4048458<0> v7)
ParallelMove r0 <- C
DartReturn:50(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- AllocateObject:10(cls=_AsyncCallbackEntry) T{_AsyncCallbackEntry}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v3 T{_AsyncCallbackEntry} . callback = v2 T{_Closure}, NoStoreBarrier)
v4 <- LoadStaticField(_lastCallback@4048458) T{_AsyncCallbackEntry?}
Branch if StrictCompare:14(===, v4, v0) goto (3, 7)
B3
StoreStaticField(_lastCallback@4048458, v3)
StoreStaticField(_nextCallback@4048458, v3)
v5 <- LoadStaticField(_isInCallbackLoop@4048458) T{bool}
Branch if StrictCompare:22(!==, v5 T{bool}, v6) goto (4, 5)
BoolTest
B4
StaticCall:28( _scheduleImmediate@4048458<0> )
ParallelMove  goto:34 B6
B5
B6
B7
ParallelMove r0 <- r1
StoreField(v4 T{_AsyncCallbackEntry} . next = v3 T{_AsyncCallbackEntry})
StoreStaticField(_lastCallback@4048458, v3)
ParallelMove  goto:46 B8
B8
ParallelMove r0 <- C
DartReturn:48(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v2 <- LoadStaticField(_closure@4048458) T{_Closure?}
Branch if StrictCompare:10(===, v2, v0) goto (3, 4)
B4
MoveArgument(sp[1] <- v2 T{_Closure})
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r0
v4 <- ClosureCall:26( closure=v2 T{_Closure}<0>, v2 T{_Closure}, v3) T{*?}
ParallelMove r0 <- C
DartReturn:28(v0)
B3
v5 <- AllocateObject:16(cls=UnsupportedError, <not-aliased>) T{UnsupportedError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v5 T{UnsupportedError} . message = v6 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:20(v5)
CheckStackOverflowSlowPath
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v4 <- StaticCall:10( _startMicrotaskLoop@4048458<0> ) T{void?}
ParallelMove r0 <- r0
DartReturn:12(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v2 <- LoadStaticField(_nextCallback@4048458) T{_AsyncCallbackEntry?}
ParallelMove r0 <- r0 goto:42 B8
B8
  Loop 0
  Loop Header
CheckStackOverflow:46(stack=0, loop=1)
Branch if StrictCompare:10(!==, v3, v0) goto (3, 4)
B3
  Loop 0
StoreStaticField(_lastPriorityCallback@4048458, v0)
v4 <- LoadField(v3 T{_AsyncCallbackEntry} . next) T{_AsyncCallbackEntry?}
StoreStaticField(_nextCallback@4048458, v4)
Branch if StrictCompare:20(===, v4, v0) goto (5, 6)
B5
  Loop 0
StoreStaticField(_lastCallback@4048458, v0)
ParallelMove  goto:30 B7
B6
B7
  Loop 0
v5 <- LoadField(v3 T{_AsyncCallbackEntry} . callback {final}) T{(dynamic) => void}
MoveArgument(sp[0] <- v5)
ParallelMove r0 <- r2
v6 <- ClosureCall:38( closure=v5<0>, v5) T{*?}
v7 <- LoadStaticField(_nextCallback@4048458) T{_AsyncCallbackEntry?}
ParallelMove r0 <- r0 goto:44 B8
B4
ParallelMove r0 <- C
DartReturn:48(v0)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v64 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
Branch if StrictCompare:12(===, v4, v64) goto (3, 5)
B3
ParallelMove r1 <- fp[2]
StaticCall:48( _scheduleAsyncCallback@4048458<0> v2 T{_Closure})
ParallelMove r0 <- C
DartReturn:20(v0)
B5
ParallelMove r1 <- C, r2 <- r0
v10 <- StaticCall:32( inSameErrorZone<0> v4, v64, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:36(===, v10 T{bool}, v11) goto (6, 7)
BoolTest
B6
ParallelMove r1 <- C, r2 <- C, r3 <- fp[-1], r5 <- fp[2]
StaticCall:46( _rootScheduleMicrotask@4048458<0> v0, v0, v64, v2 T{_Closure})
ParallelMove r0 <- C
DartReturn:48(v0)
B7
ParallelMove r0 <- fp[2]
v67 <- LoadStaticField:4(_current@4048458) T{_RootZone}
ParallelMove fp[-1] <- r1
v26 <- AllocateContext:10(num_variables=2) T{Context}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v26 . this = v67 T{_RootZone}, NoStoreBarrier)
ParallelMove r2 <- fp[2]
StoreField(v26 . f = v2 T{_Closure}, NoStoreBarrier)
ParallelMove r1 <- C, r2 <- r1
v28 <- AllocateClosure:12(v29 T{Function}, v26) T{_Closure}
ParallelMove r1 <- fp[-1], r2 <- r0
StaticCall:66( scheduleMicrotask<0> v67, v28 T{_Closure}, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:68(v0)
CheckStackOverflowSlowPath
B0
B1
ParallelMove r0 <- C
DartReturn:6(v2)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
StaticCall:10( _scheduleImmediate@4048458<0> )
ParallelMove r0 <- C
DartReturn:12(v0)
CheckStackOverflowSlowPath
B0
B1
ParallelMove r1 <- sp[0]
StoreStaticField(_closure@4048458, v2)
ParallelMove r0 <- C
DartReturn:10(v0)
B0
B1
Branch if StrictCompare:12(===, v2, v3) goto (5, 4)
B5
ParallelMove r0 <- C goto:28 B3
B4
v6 <- StrictCompare:22(===, v2 T{_RootZone}, v3 T{_RootZone}) T{bool}
ParallelMove r0 <- r3 goto:24 B3
B3
ParallelMove r0 <- r0
DartReturn:30(v7)
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v2 . Closure.function_type_arguments {final}) T{TypeArguments?}
v5 <- LoadField(v3 . this) T{_RootZone}
v6 <- LoadField(v3 . f) T{(dynamic) => Y0}
MoveArgument(sp[2] <- v4)
MoveArgument(sp[1] <- v5)
MoveArgument(sp[0] <- v6)
v7 <- StaticCall:10( run<1> v4, v5, v6, using unchecked entrypoint) T{Y0?}
ParallelMove r0 <- r0
DartReturn:12(v7)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v5 <- LoadField(v4 . ArgumentsDescriptor.type_args_len {final}) [0, 4611686018427387903] T{_Smi}
Branch if StrictCompare:4(===, v5, v6) goto (2, 3)
B2
ParallelMove r0 <- C goto:14 B5
B3
v7 <- LoadField(v4 . ArgumentsDescriptor.size {final}) [0, 4611686018427387903] T{_Smi}
v8 <- LoadIndexedUnsafe(fp[v7 + 16]) T{TypeArguments?}
ParallelMove r0 <- r1 goto:16 B5
B5
ParallelMove fp[-1] <- r0
CheckStackOverflow:22(stack=0, loop=0)
v16 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r0 <- r0
Branch if StrictCompare:26(===, v16, v11) goto (6, 7)
B6
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- fp[2]
v13 <- ClosureCall:34( closure=v3<0>, v3) T{*?}
ParallelMove r0 <- r0
DartReturn:36(v13)
B7
MoveArgument(sp[2] <- v9)
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v3)
v12 <- StaticCall:40( _rootRun@4048458<1> v9, v2, v3) T{Y0?}
ParallelMove r0 <- r0
DartReturn:42(v12)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v3 . this) T{_RootZone}
v5 <- LoadField(v3 . f) T{(dynamic) => void}
ParallelMove r1 <- r0, r2 <- r2
StaticCall:10( runGuarded<0> v4, v5, using unchecked entrypoint, result_type = T{Null?})
ParallelMove r0 <- C
DartReturn:12(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v4 <- AllocateContext:10(num_variables=2) T{Context}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v4 . error = v2, NoStoreBarrier)
ParallelMove r0 <- fp[-2]
StoreField(v4 . stackTrace = v3, NoStoreBarrier)
ParallelMove r1 <- C, r2 <- r1
v6 <- AllocateClosure:12(v5, v4) T{_Closure}
ParallelMove r1 <- r0
StaticCall:14( _schedulePriorityAsyncCallback@4048458<0> v6)
ParallelMove r0 <- C
DartReturn:16(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadStaticField(_nextCallback@4048458) T{_AsyncCallbackEntry?}
ParallelMove fp[-1] <- r0
Branch if StrictCompare:10(===, v3, v0) goto (3, 4)
B3
ParallelMove r1 <- r1
StaticCall:16( _scheduleAsyncCallback@4048458<0> v2)
v8 <- LoadStaticField(_lastCallback@4048458) T{_AsyncCallbackEntry?}
StoreStaticField(_lastPriorityCallback@4048458, v8)
ParallelMove r0 <- C
DartReturn:18(v0)
B4
v4 <- AllocateObject:22(cls=_AsyncCallbackEntry) T{_AsyncCallbackEntry}
ParallelMove r2 <- r0, r1 <- fp[-2]
StoreField(v4 T{_AsyncCallbackEntry} . callback = v2 T{_Closure}, NoStoreBarrier)
v5 <- LoadStaticField(_lastPriorityCallback@4048458) T{_AsyncCallbackEntry?}
Branch if StrictCompare:26(===, v5, v0) goto (5, 6)
B5
ParallelMove r3 <- fp[-1]
StoreField(v4 T{_AsyncCallbackEntry} . next = v3 T{_AsyncCallbackEntry}, NoStoreBarrier)
StoreStaticField(_lastPriorityCallback@4048458, v4)
StoreStaticField(_nextCallback@4048458, v4)
ParallelMove  goto:58 B10
B6
v6 <- LoadField(v5 T{_AsyncCallbackEntry} . next) T{_AsyncCallbackEntry?}
StoreField(v4 T{_AsyncCallbackEntry} . next = v6 T{_AsyncCallbackEntry?}, NoStoreBarrier)
ParallelMove r0 <- r2
StoreField(v5 T{_AsyncCallbackEntry} . next = v4 T{_AsyncCallbackEntry})
StoreStaticField(_lastPriorityCallback@4048458, v4)
Branch if StrictCompare:42(===, v6, v0) goto (7, 8)
B7
StoreStaticField(_lastCallback@4048458, v4)
ParallelMove  goto:52 B9
B8
B9
B10
ParallelMove r0 <- C
DartReturn:62(v0)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v3 . error) T{Object}
v5 <- LoadField(v3 . stackTrace) T{StackTrace}
ParallelMove r1 <- r0, r2 <- r2
StaticCall:10( throwWithStackTrace<0> v4, v5)
ParallelMove r0 <- C
DartReturn:12(v0)
CheckStackOverflowSlowPath
B0
B18
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v3)
StaticCall:14( _throw@0150898<0> v2, v3)
ParallelMove r0 <- C
DartReturn:16(v0)
CheckStackOverflowSlowPath
B0
B1
v3 <- LoadField(v2 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
v7 <- BinaryInt64Op(^ [tr], v3, v14) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_Future} . _state@4048458 = v7 T{int} <int64>)
ParallelMove r0 <- C
DartReturn:18(v0)
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v3 . this) T{_Future}
v5 <- LoadField(v3 . value) T{X0?}
ParallelMove r1 <- r0, r2 <- r2
StaticCall:10( _completeWithValue@4048458<0> v4, v5, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:12(v0)
CheckStackOverflowSlowPath
B0
B3
Enter frame
ParallelMove r4 <- r1, r3 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v5 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r3, r2 <- r2, r1 <- C
t0 <- AssertAssignable:10(v3, v4, 'value', instantiator_type_args(v5), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-1]
v7 <- StaticCall:12( _removeListeners@4048458<0> v2, using unchecked entrypoint, result_type = T{_FutureListener?}) T{_FutureListener?}
ParallelMove r1 <- fp[-1], r2 <- fp[-2], r0 <- r0
ParallelMove fp[-2] <- r0
StaticCall:14( _setValue@4048458<0> v2, v3 T{X0?}, using unchecked entrypoint)
ParallelMove r1 <- fp[-1], r2 <- fp[-2]
StaticCall:16( _propagateToListeners@4048458<0> v2, v7)
ParallelMove r0 <- C
DartReturn:18(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v4 <- AllocateContext:10(num_variables=1) T{Context}
ParallelMove r1 <- r0, r0 <- fp[-1]
ParallelMove fp[-3] <- r1
StoreField(v4 . source = v2, NoStoreBarrier)
ParallelMove r2 <- fp[-2], r0 <- r0 goto:426 B59
B59
  Loop 1
  Loop Header
ParallelMove fp[-1] <- r2, fp[-2] <- r0
CheckStackOverflow:424(stack=0, loop=1)
v17 <- AllocateContext:18(num_variables=5) T{Context}
ParallelMove r3 <- r0, r0 <- fp[-3]
ParallelMove fp[-4] <- r3
StoreField(v17 . Context.parent = v4, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
v315 <- LoadField(v495 T{_Future} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r2
v562 <- IntConverter(int64->uint32[tr], v315) uint32
ParallelMove r4 <- C
v317 <- BinaryUint32Op(& [tr], v562 T{int}, v574 T{_Smi}) [0, 16] uint32
ParallelMove r5 <- r5
v563 <- IntConverter(uint32->int64, v317) int64
v319 <- EqualityCompare(v563 T{_Smi} != v480 T{_Smi}) T{bool}
StoreField(v17 . hasError = v319 T{bool}, NoStoreBarrier)
ParallelMove r5 <- fp[-1]
Branch if StrictCompare:22(===, v5, v0) goto (3, 10)
B10
  Loop 1
StoreField(v17 . listener = v5 T{_FutureListener}, NoStoreBarrier)
v22 <- LoadField(v5 T{_FutureListener} . _nextListener@4048458) T{_FutureListener?}
ParallelMove r5 <- r1, r2 <- r5 goto:96 B12
B12
  Loop 0
  Loop 1
  Loop Header
ParallelMove fp[-1] <- r5
CheckStackOverflow:94(stack=0, loop=2)
Branch if StrictCompare:78(!==, v23, v0) goto (11, 13)
B11
  Loop 0
  Loop 1
StoreField(v476 T{_FutureListener} . _nextListener@4048458 = v0 T{Null?})
v109 <- LoadField(v4 . source) T{_Future}
ParallelMove r1 <- r1, r2 <- r2
StaticCall:84( _propagateToListeners@4048458<0> v109, v476 T{_FutureListener})
ParallelMove r0 <- fp[-1], r1 <- fp[-4]
StoreField(v17 . listener = v23 T{_FutureListener})
ParallelMove r2 <- fp[-1]
v112 <- LoadField(v23 T{_FutureListener} . _nextListener@4048458) T{_FutureListener?}
ParallelMove r5 <- r5, r2 <- r2, r0 <- fp[-3], r3 <- r1, r4 <- C goto:92 B12
B13
  Loop 1
ParallelMove r3 <- r0, r1 <- r3
v25 <- LoadField(v4 . source) T{_Future}
v26 <- LoadField(v25 . _resultOrListeners@4048458) T{*?}
ParallelMove r0 <- r5
StoreField(v17 . sourceResult = v26)
v27 <- LoadField(v17 . hasError) T{bool}
StoreField(v17 . listenerHasError = v27)
ParallelMove r0 <- r5
StoreField(v17 . listenerValueOrError = v26 T{*?})
Branch if StrictCompare:104(===, v27 T{bool}, v16 T{bool}) goto (17, 14)
BoolTest
B17
  Loop 1
ParallelMove r5 <- C goto:132 B16
B14
  Loop 1
v300 <- LoadField(v476 T{_FutureListener} . state {final}) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v300, v481) goto (18, 15)
B18
  Loop 1
ParallelMove r5 <- C goto:136 B16
B15
  Loop 1
ParallelMove r5 <- C
ParallelMove r0 <- r0
v564 <- IntConverter(int64->uint32[tr], v300 T{int}) uint32
v293 <- BinaryUint32Op(& [tr], v564 T{int}, v575 T{_Smi}) [0, 15] uint32
ParallelMove r7 <- r7
v565 <- IntConverter(uint32->int64, v293) int64
Branch if EqualityCompare(v565 T{_Smi} == v483 T{_Smi}) T{bool} goto (19, 54)
B19
B16
  Loop 1
v285 <- LoadField(v476 T{_FutureListener} . result {final}) T{_Future}
v286 <- LoadField(v285 . _zone@4048458 {final}) T{_RootZone}
ParallelMove fp[-1] <- r2
Branch if StrictCompare:146(===, v27 T{bool}, v16 T{bool}) goto (20, 23)
BoolTest
B20
  Loop 1
v97 <- LoadField(v25 T{_Future} . _zone@4048458 {final}) T{_RootZone}
Branch if StrictCompare:12(===, v97 T{_RootZone}, v286 T{_RootZone}) goto (122, 95)
B122
B95
  Loop 1
Branch if StrictCompare:22(!==, v97, v286) T{bool} goto (21, 120)
B120
B24
  Loop 1
ParallelMove r0 <- r3 goto:184 B22
B21
ParallelMove r1 <- r4
v101 <- StaticCall:164( get:_error@4048458<0> v25 T{_Future}, result_type = T{AsyncError}) T{AsyncError}
ParallelMove r1 <- r0, r0 <- fp[-3]
v103 <- LoadField(v4 . source) T{_Future}
v104 <- LoadField(v103 . _zone@4048458 {final}) T{_RootZone}
v105 <- LoadField(v101 . error {final}) T{Object}
v106 <- LoadField(v101 . stackTrace {final}) T{StackTrace}
ParallelMove r1 <- r0, r2 <- r2, r3 <- r3
StaticCall:172( handleUncaughtError<0> v104, v105, v106, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:174(v0)
B23
  Loop 1
ParallelMove r0 <- r3
ParallelMove  goto:180 B22
B22
  Loop 1
v269 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r1 <- r0, r0 <- fp[-1]
Branch if StrictCompare:188(!==, v269, v286 T{_RootZone}) goto (25, 26)
B25
  Loop 1
StoreStaticField(_current@4048458, v286 T{_RootZone})
ParallelMove r3 <- r1 goto:200 B27
B26
  Loop 1
ParallelMove r3 <- C goto:202 B27
B27
  Loop 1
ParallelMove r1 <- C, r2 <- r0, fp[-1] <- r3
v65 <- AllocateClosure:204(v64, v17) T{_Closure}
ParallelMove r1 <- C, r2 <- fp[-4], r0 <- r0
ParallelMove fp[-5] <- r0
v67 <- AllocateClosure:206(v66, v17) T{_Closure}
ParallelMove r1 <- C, r2 <- fp[-4], r0 <- r0
ParallelMove fp[-6] <- r0
v69 <- AllocateClosure:208(v68, v17) T{_Closure}
ParallelMove r0 <- r0, r1 <- fp[-4]
v70 <- LoadField(v17 . listener) T{_FutureListener}
v256 <- LoadField(v70 T{_FutureListener} . state {final}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r3
v566 <- IntConverter(int64->uint32[tr], v256) uint32
ParallelMove r4 <- C
v258 <- BinaryUint32Op(& [tr], v566 T{int}, v575 T{_Smi}) [0, 15] uint32
ParallelMove r5 <- r5
v567 <- IntConverter(uint32->int64, v258) int64
Branch if EqualityCompare(v567 T{_Smi} == v483 T{_Smi}) T{bool} goto (28, 29)
B28
  Loop 1
MoveArgument(sp[0] <- v65)
ParallelMove r0 <- fp[-5]
ClosureCall:220( closure=v65<0>, v65)
ParallelMove  goto:282 B39
B29
  Loop 1
v72 <- LoadField(v17 . hasError) T{bool}
Branch if StrictCompare:226(!==, v72 T{bool}, v16 T{bool}) goto (30, 34)
BoolTest
B30
  Loop 1
Branch if TestInt(v256, v481) goto (31, 32)
B31
  Loop 1
MoveArgument(sp[0] <- v67)
ParallelMove r0 <- fp[-6]
ClosureCall:242( closure=v67<0>, v67)
ParallelMove  goto:248 B33
B32
B33
B34
  Loop 1
Branch if TestInt(v256, v484) goto (35, 36)
B35
  Loop 1
MoveArgument(sp[0] <- v69)
ParallelMove r0 <- r0
ClosureCall:264( closure=v69<0>, v69)
ParallelMove  goto:270 B37
B36
B37
B38
B39
  Loop 1
Branch if StrictCompare:286(!==, v63, v0) goto (40, 41)
B40
  Loop 1
StoreStaticField(_current@4048458, v63 T{_RootZone})
ParallelMove  goto:298 B42
B41
B42
  Loop 1
v77 <- LoadField(v17 . listenerValueOrError) T{*?}
ParallelMove fp[-5] <- r4
v131 <- LoadClassId(v77) [1, 600] int64
Branch if EqualityCompare(v131 == v126) T{bool} goto (43, 52)
B43
  Loop 1
v80 <- LoadField(v17 . listener) T{_FutureListener}
ParallelMove r0 <- r4, r2 <- C, r1 <- C, fp[-1] <- r5
t1 <- AssertAssignable:310(v77 T{*?}, v78, '', instantiator_type_args(v0), function_type_args(v0)) T{_Future}
AssertAssignable for compile-time type
TTSCall
ParallelMove r3 <- fp[-1]
v211 <- LoadField(v80 T{_FutureListener} . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- fp[-5], r2 <- r4, r1 <- C, fp[-6] <- r4
v213 <- InstanceOf:12(v77 T{_Future} IS Future<X1>, instantiator_type_args(v211), function_type_args(v0 T{Null?})) T{bool}
InlineInstanceof
UninstantiatedTypeTest
BoolTest
ParallelMove r0 <- r0
Branch if StrictCompare:16(===, v213, v16 T{bool}) goto (125, 79)
BoolTest
B125
B79
  Loop 1
ParallelMove r0 <- fp[-5], r2 <- fp[-6], r1 <- C
v217 <- InstanceOf:22(v77 T{_Future} IS X1, instantiator_type_args(v211 T{TypeArguments}), function_type_args(v0 T{Null?})) T{bool}
InlineInstanceof
UninstantiatedTypeTest
BoolTest
ParallelMove r0 <- r0
v218 <- BooleanNegate(v217) T{bool}
Branch if StrictCompare:316(===, v218, v16) goto (123, 53)
BoolTest
B123
B45
  Loop 1
v87 <- LoadField(v80 T{_FutureListener} . result {final}) T{_Future}
ParallelMove fp[-6] <- r4
v194 <- LoadField(v77 T{_Future} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v194, v204) goto (46, 50)
B46
  Loop 1
ParallelMove r5 <- fp[-3]
v171 <- LoadField(v87 T{_Future} . _resultOrListeners@4048458) T{*?}
ParallelMove r0 <- r6, r2 <- C, r1 <- C, fp[-1] <- r6
t0 <- AssertAssignable:12(v171, v166 T{_Type}, '', instantiator_type_args(v0 T{Null?}), function_type_args(v0 T{Null?})) T{_FutureListener?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-6]
StoreField(v87 T{_Future} . _resultOrListeners@4048458 = v0 T{Null?})
ParallelMove r1 <- r0, r2 <- fp[-1]
v174 <- StaticCall:16( _reverseListeners@4048458<0> v87 T{_Future}, v171 T{_FutureListener?}, using unchecked entrypoint, result_type = T{_FutureListener?}) T{_FutureListener?}
ParallelMove r2 <- r0, r1 <- fp[-5]
v181 <- LoadField(v77 T{_Future} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0
v568 <- IntConverter(int64->uint32[tr], v181) uint32
ParallelMove r3 <- C
v183 <- BinaryUint32Op(& [tr], v568 T{int}, v576 T{_Smi}) [0, 30] uint32
ParallelMove r5 <- fp[-6]
v184 <- LoadField(v87 T{_Future} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0
v570 <- IntConverter(int64->uint32[tr], v184) uint32
ParallelMove r6 <- C
v186 <- BinaryUint32Op(& [tr], v570 T{int}, v577 T{_Smi}) [0, 1] uint32
ParallelMove r4 <- r4
v569 <- IntConverter(uint32->int64, v183) int64
ParallelMove r7 <- r7
v571 <- IntConverter(uint32->int64, v186) int64
v187 <- BinaryInt64Op(| [tr], v569 T{_Smi}, v571 T{_Smi}) [0, 31] int64
StoreField(v87 T{_Future} . _state@4048458 = v187 T{int} <int64>)
v188 <- LoadField(v77 T{_Future} . _resultOrListeners@4048458) T{*?}
ParallelMove r0 <- r0
StoreField(v87 T{_Future} . _resultOrListeners@4048458 = v188 T{*?})
ParallelMove r0 <- r1, r4 <- fp[-3]
StoreField(v4 . source = v77 T{_Future})
ParallelMove r2 <- r2, r0 <- r1, r3 <- r6 goto:354 B47
B50
ParallelMove r1 <- r3, r5 <- r4
ParallelMove r1 <- r1, r2 <- r5
StaticCall:358( _chainCoreFutureSync@4048458<0> v77 T{_Future}, v87)
ParallelMove r0 <- C
DartReturn:370(v0)
B53
  Loop 1
ParallelMove r4 <- fp[-3], r3 <- C, r6 <- C
ParallelMove  goto:380 B51
B52
  Loop 1
ParallelMove r4 <- fp[-3], r3 <- C, r6 <- C
ParallelMove  goto:376 B51
B51
B54
  Loop 1
ParallelMove r4 <- r3, r3 <- C, r6 <- C
ParallelMove  goto:388 B55
B55
  Loop 1
v39 <- LoadField(v17 . listener) T{_FutureListener}
v40 <- LoadField(v39 . result {final}) T{_Future}
ParallelMove fp[-5] <- r7
v162 <- LoadField(v40 T{_Future} . _resultOrListeners@4048458) T{*?}
ParallelMove r0 <- r8, r2 <- C, r1 <- C, fp[-1] <- r8
t0 <- AssertAssignable:12(v162, v166 T{_Type}, '', instantiator_type_args(v0 T{Null?}), function_type_args(v0 T{Null?})) T{_FutureListener?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-5]
StoreField(v40 T{_Future} . _resultOrListeners@4048458 = v0 T{Null?})
ParallelMove r1 <- r0, r2 <- fp[-1]
v165 <- StaticCall:16( _reverseListeners@4048458<0> v40 T{_Future}, v162 T{_FutureListener?}, using unchecked entrypoint, result_type = T{_FutureListener?}) T{_FutureListener?}
ParallelMove r3 <- r0, r0 <- fp[-4]
ParallelMove fp[-6] <- r3
v42 <- LoadField(v17 . listenerHasError) T{bool}
Branch if StrictCompare:396(!==, v42 T{bool}, v16 T{bool}) goto (56, 57)
BoolTest
B56
  Loop 1
ParallelMove r4 <- fp[-5]
v48 <- LoadField(v17 . listenerValueOrError) T{*?}
ParallelMove fp[-1] <- r5
v153 <- LoadField(v40 T{_Future} . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r5, r2 <- r2, r1 <- C
t0 <- AssertAssignable:10(v48 T{*?}, v156 T{_TypeParameter}, 'value', instantiator_type_args(v153), function_type_args(v0 T{Null?})) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r3 <- fp[-5], r4 <- C
StoreField(v40 T{_Future} . _state@4048458 = v483 T{_Smi} <int64>)
ParallelMove r0 <- fp[-1]
StoreField(v40 T{_Future} . _resultOrListeners@4048458 = v48 T{X0?})
ParallelMove r1 <- r3, r3 <- C goto:412 B58
B57
  Loop 1
ParallelMove r3 <- fp[-5], r4 <- C
v43 <- LoadField(v17 . listenerValueOrError) T{*?}
ParallelMove r0 <- r5, r2 <- C, r1 <- C, fp[-1] <- r5
t0 <- AssertAssignable:406(v43, v44, '', instantiator_type_args(v0), function_type_args(v0)) T{AsyncError}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-5]
v140 <- LoadField(v40 T{_Future} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0
v572 <- IntConverter(int64->uint32[tr], v140) uint32
ParallelMove r3 <- C
v142 <- BinaryUint32Op(& [tr], v572 T{int}, v577 T{_Smi}) [0, 1] uint32
ParallelMove r2 <- r2
v573 <- IntConverter(uint32->int64, v142) int64
v143 <- BinaryInt64Op(| [tr], v573 T{_Smi}, v479 T{_Smi}) [0, 31] int64
StoreField(v40 T{_Future} . _state@4048458 = v143 T{int} <int64>)
ParallelMove r0 <- fp[-1]
StoreField(v40 T{_Future} . _resultOrListeners@4048458 = v43 T{AsyncError})
ParallelMove  goto:414 B58
B58
  Loop 1
ParallelMove r0 <- r1
StoreField(v4 . source = v40)
ParallelMove r2 <- fp[-6], r0 <- r1 goto:416 B47
B47
  Loop 1
ParallelMove r2 <- r2, r0 <- r0, r1 <- r4 goto:422 B59
B3
ParallelMove r4 <- r0
Branch if StrictCompare:30(===, v319 T{bool}, v16 T{bool}) goto (4, 7)
BoolTest
B4
ParallelMove r1 <- r1
v116 <- StaticCall:34( get:_ignoreError@4048458<0> v495 T{_Future}, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:38(!==, v116 T{bool}, v16 T{bool}) goto (5, 8)
BoolTest
B5
ParallelMove r0 <- fp[-3]
v118 <- LoadField(v4 . source) T{_Future}
ParallelMove r1 <- r1
v119 <- StaticCall:46( get:_error@4048458<0> v118, result_type = T{AsyncError}) T{AsyncError}
ParallelMove r1 <- r0, r0 <- fp[-3]
v121 <- LoadField(v4 . source) T{_Future}
v122 <- LoadField(v121 . _zone@4048458 {final}) T{_RootZone}
v123 <- LoadField(v119 . error {final}) T{Object}
v124 <- LoadField(v119 . stackTrace {final}) T{StackTrace}
ParallelMove r1 <- r0, r2 <- r2, r3 <- r3
StaticCall:54( handleUncaughtError<0> v122, v123, v124, using unchecked entrypoint)
ParallelMove  goto:68 B9
B8
B7
B6
B9
ParallelMove r0 <- C
DartReturn:72(v0)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
ParallelMove r2 <- C
v3 <- LoadField(v2 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r3
v14 <- IntConverter(int64->uint32[tr], v3) uint32
v5 <- BinaryUint32Op(& [tr], v14 T{int}, v16 T{_Smi}) [0, 1] uint32
ParallelMove r1 <- r1
v15 <- IntConverter(uint32->int64, v5) int64
v7 <- EqualityCompare(v15 T{_Smi} != v12 T{_Smi}) T{bool}
ParallelMove r0 <- r0
DartReturn:18(v7 T{bool})
B0
B1
Enter frame
ParallelMove r3 <- r2, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r2 <- r1 goto:28 B4
B4
  Loop 0
  Loop Header
ParallelMove fp[-3] <- r2
CheckStackOverflow:26(stack=0, loop=1)
v62 <- LoadField(v4 T{_Future} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v62, v85) goto (3, 5)
B3
  Loop 0
v54 <- LoadField(v4 T{_Future} . _resultOrListeners@4048458) T{*?}
ParallelMove r0 <- r4, r2 <- C, r1 <- C, fp[-1] <- r4
t0 <- AssertAssignable:12(v54, v57 T{_Type}, '', instantiator_type_args(v0 T{Null?}), function_type_args(v0 T{Null?})) T{_Future}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[-1], r3 <- fp[-2] goto:24 B4
B5
ParallelMove r1 <- r3
Branch if StrictCompare:32(===, v4, v3) goto (6, 7)
B6
v17 <- AllocateObject:38(cls=ArgumentError) T{ArgumentError}
ParallelMove r1 <- r0, r0 <- C
ParallelMove fp[-1] <- r1
StoreField(v17 T{ArgumentError} . message = v18 T{_OneByteString}, NoStoreBarrier)
ParallelMove r2 <- fp[-3]
StoreField(v17 T{ArgumentError} . invalidValue = v4 T{_Future}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v17 T{ArgumentError} . _hasValue@0150898 = v6 T{bool}, NoStoreBarrier)
v19 <- StaticCall:42( get:current<0> , result_type = T{!null}) T{StackTrace}
ParallelMove r1 <- fp[-2], r2 <- fp[-1], r3 <- r0
StaticCall:44( _asyncCompleteError@4048458<0> v3, v17, v19, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:46(v0)
B7
ParallelMove r3 <- r1, r1 <- C
v8 <- LoadField(v3 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- r4
v89 <- IntConverter(int64->uint32[tr], v8) uint32
v10 <- BinaryUint32Op(& [tr], v89 T{int}, v91 T{_Smi}) [0, 1] uint32
ParallelMove r5 <- r5
v90 <- IntConverter(uint32->int64, v10) int64
v11 <- BinaryInt64Op(| [tr], v62 T{int}, v90 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v4 T{_Future} . _state@4048458 = v11 T{int} <int64>)
Branch if TestInt(v11, v41) goto (8, 9)
B8
ParallelMove r1 <- r3
v16 <- StaticCall:70( _removeListeners@4048458<0> v3, using unchecked entrypoint, result_type = T{_FutureListener?}) T{_FutureListener?}
ParallelMove r1 <- fp[-2], r2 <- fp[-3], r0 <- r0
ParallelMove fp[-1] <- r0
StaticCall:72( _cloneResult@4048458<0> v3, v4, using unchecked entrypoint)
ParallelMove r1 <- fp[-2], r2 <- fp[-1]
StaticCall:74( _propagateToListeners@4048458<0> v3, v16)
ParallelMove  goto:88 B10
B9
v13 <- LoadField(v3 . _resultOrListeners@4048458) T{*?}
ParallelMove r0 <- r4, r2 <- C, r1 <- C, fp[-1] <- r4
t0 <- AssertAssignable:80(v13, v14, '', instantiator_type_args(v0), function_type_args(v0)) T{_FutureListener?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-2], r2 <- fp[-3]
StaticCall:82( _setChained@4048458<0> v3, v4, using unchecked entrypoint)
ParallelMove r1 <- fp[-3], r2 <- fp[-1]
StaticCall:84( _prependListeners@4048458<0> v4, v13 T{_FutureListener?}, using unchecked entrypoint)
ParallelMove  goto:90 B10
B10
ParallelMove r0 <- C
DartReturn:92(v0)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v4 <- AllocateContext:10(num_variables=2) T{Context}
ParallelMove r4 <- r0, r3 <- fp[-1]
ParallelMove fp[-4] <- r4
StoreField(v4 . this = v2, NoStoreBarrier)
ParallelMove r5 <- fp[-2]
StoreField(v4 . listeners = v3, NoStoreBarrier)
Branch if StrictCompare:12(===, v3 T{_FutureListener?}, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:18(v0)
B4
v87 <- LoadField(v2 T{_Future} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<=, v87, v93 T{_Smi}) T{bool} goto (5, 12)
B5
v21 <- LoadField(v2 . _resultOrListeners@4048458) T{*?}
ParallelMove r0 <- r4, r2 <- C, r1 <- C, fp[-3] <- r4
t0 <- AssertAssignable:34(v21, v22, '', instantiator_type_args(v0), function_type_args(v0)) T{_FutureListener?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-2], r3 <- fp[-1]
StoreField(v2 T{_Future} . _resultOrListeners@4048458 = v3 T{_FutureListener})
ParallelMove r0 <- fp[-3]
Branch if StrictCompare:38(!==, v21 T{_FutureListener?}, v0) goto (6, 10)
B6
ParallelMove r5 <- fp[-2]
v28 <- LoadField(v3 T{_FutureListener} . _nextListener@4048458) T{_FutureListener?}
ParallelMove r2 <- r5, r1 <- r1 goto:62 B8
B8
  Loop 0
  Loop Header
CheckStackOverflow:60(stack=0, loop=1)
Branch if StrictCompare:48(!==, v30, v0) goto (7, 9)
B7
  Loop 0
v31 <- LoadField(v30 T{_FutureListener} . _nextListener@4048458) T{_FutureListener?}
ParallelMove r2 <- r1, r1 <- r2 goto:58 B8
B9
ParallelMove r0 <- r0
StoreField(v29 T{_FutureListener} . _nextListener@4048458 = v21 T{_FutureListener})
ParallelMove  goto:72 B11
B10
B11
B12
Branch if TestInt(v87, v124) goto (13, 16)
B13
v41 <- LoadField(v2 T{_Future} . _resultOrListeners@4048458) T{*?}
ParallelMove r0 <- r6, r2 <- C, r1 <- C, fp[-3] <- r6
t0 <- AssertAssignable:12(v41, v44 T{_Type}, '', instantiator_type_args(v0 T{Null?}), function_type_args(v0 T{Null?})) T{_Future}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-3]
v49 <- LoadField(v41 T{_Future} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v49, v59) goto (14, 15)
B14
ParallelMove r1 <- r1, r2 <- fp[-2]
StaticCall:100( _prependListeners@4048458<0> v41 T{_Future}, v3 T{_FutureListener}, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:102(v0)
B15
ParallelMove r1 <- fp[-1], r2 <- r1
StaticCall:106( _cloneResult@4048458<0> v2, v41 T{_Future}, using unchecked entrypoint)
ParallelMove  goto:112 B17
B16
B17
v10 <- LoadField(v4 . listeners) T{_FutureListener?}
ParallelMove r1 <- r3, r2 <- r2
v11 <- StaticCall:116( _reverseListeners@4048458<0> v2, v10, using unchecked entrypoint, result_type = T{_FutureListener?}) T{_FutureListener?}
ParallelMove r0 <- r0, r2 <- fp[-4]
StoreField(v4 . listeners = v11)
ParallelMove r0 <- fp[-1]
v12 <- LoadField(v2 . _zone@4048458 {final}) T{_RootZone}
ParallelMove r1 <- C, r2 <- r2, fp[-2] <- r3
v14 <- AllocateClosure:120(v13, v4) T{_Closure}
ParallelMove r1 <- fp[-2], r2 <- r0
StaticCall:122( scheduleMicrotask<0> v12, v14, using unchecked entrypoint)
ParallelMove  goto:128 B18
B18
ParallelMove r0 <- C
DartReturn:130(v0)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v3 . this) T{_Future}
v5 <- LoadField(v3 . listeners) T{_FutureListener?}
ParallelMove r1 <- r0, r2 <- r2
StaticCall:10( _propagateToListeners@4048458<0> v4, v5)
ParallelMove r0 <- C
DartReturn:12(v0)
CheckStackOverflowSlowPath
B0
B1
ParallelMove r3 <- C
ParallelMove r0 <- r2
v5 <- LoadField(v2 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r2
v26 <- IntConverter(int64->uint32[tr], v5) uint32
v7 <- BinaryUint32Op(& [tr], v26 T{int}, v28 T{_Smi}) [0, 1] uint32
ParallelMove r4 <- r4
v27 <- IntConverter(uint32->int64, v7) int64
v8 <- BinaryInt64Op(| [tr], v27 T{_Smi}, v24 T{_Smi}) [0, 7] int64
StoreField(v2 T{_Future} . _state@4048458 = v8 T{int} <int64>)
ParallelMove r0 <- r0
StoreField(v2 T{_Future} . _resultOrListeners@4048458 = v3 T{_Future})
ParallelMove r0 <- C
DartReturn:20(v0)
B0
B1
ParallelMove r4 <- C, r3 <- C
v4 <- LoadField(v3 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r5
v30 <- IntConverter(int64->uint32[tr], v4) uint32
v6 <- BinaryUint32Op(& [tr], v30 T{int}, v34 T{_Smi}) [0, 30] uint32
v7 <- LoadField(v2 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- r4
v32 <- IntConverter(int64->uint32[tr], v7) uint32
v9 <- BinaryUint32Op(& [tr], v32 T{int}, v35 T{_Smi}) [0, 1] uint32
ParallelMove r6 <- r6
v31 <- IntConverter(uint32->int64, v6) int64
ParallelMove r5 <- r5
v33 <- IntConverter(uint32->int64, v9) int64
v10 <- BinaryInt64Op(| [tr], v31 T{_Smi}, v33 T{_Smi}) [0, 31] int64
StoreField(v2 T{_Future} . _state@4048458 = v10 T{int} <int64>)
v11 <- LoadField(v3 . _resultOrListeners@4048458) T{*?}
ParallelMove r0 <- r0
StoreField(v2 T{_Future} . _resultOrListeners@4048458 = v11 T{*?})
ParallelMove r0 <- C
DartReturn:26(v0)
B0
B1
Enter frame
ParallelMove fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v5 <- AllocateContext:10(num_variables=3) T{Context}
ParallelMove r2 <- r0, r0 <- fp[-1]
ParallelMove fp[-4] <- r2
StoreField(v5 . this = v2, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreField(v5 . error = v3, NoStoreBarrier)
ParallelMove r1 <- fp[-3]
StoreField(v5 . stackTrace = v4, NoStoreBarrier)
ParallelMove r1 <- r0
StaticCall:12( _setPendingComplete@4048458<0> v2, using unchecked entrypoint)
ParallelMove r0 <- fp[-1]
v6 <- LoadField(v2 . _zone@4048458 {final}) T{_RootZone}
ParallelMove r1 <- C, r2 <- fp[-4], fp[-2] <- r3
v8 <- AllocateClosure:16(v7, v5) T{_Closure}
ParallelMove r1 <- fp[-2], r2 <- r0
StaticCall:18( scheduleMicrotask<0> v6, v8, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:20(v0)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v3 . this) T{_Future}
v5 <- LoadField(v3 . error) T{Object}
v6 <- LoadField(v3 . stackTrace) T{StackTrace}
ParallelMove r1 <- r0, r2 <- r2, r3 <- r3
StaticCall:10( _completeError@4048458<0> v4, v5, v6, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:12(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r0
v5 <- StaticCall:10( _removeListeners@4048458<0> v2, using unchecked entrypoint, result_type = T{_FutureListener?}) T{_FutureListener?}
ParallelMove r1 <- fp[-1], r2 <- fp[-2], r3 <- fp[-3], r0 <- r0
ParallelMove fp[-2] <- r0
StaticCall:12( _setError@4048458<0> v2, v3, v4, using unchecked entrypoint)
ParallelMove r1 <- fp[-1], r2 <- fp[-2]
StaticCall:14( _propagateToListeners@4048458<0> v2, v5)
ParallelMove r0 <- C
DartReturn:16(v0)
CheckStackOverflowSlowPath
B0
B13
Enter frame
ParallelMove fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v5 <- AllocateObject:10(cls=AsyncError) T{AsyncError}
ParallelMove r1 <- r0, r0 <- fp[-2]
StoreField(v5 T{AsyncError} . error = v3 T{Y0}, NoStoreBarrier)
ParallelMove r0 <- fp[-3]
StoreField(v5 T{AsyncError} . stackTrace = v4 T{StackTrace}, NoStoreBarrier)
ParallelMove r1 <- fp[-1], r2 <- r1
StaticCall:14( _setErrorObject@4048458<0> v2, v5, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:16(v0)
CheckStackOverflowSlowPath
B0
B1
ParallelMove r3 <- C
ParallelMove r0 <- r2
v5 <- LoadField(v2 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r2
v26 <- IntConverter(int64->uint32[tr], v5) uint32
v7 <- BinaryUint32Op(& [tr], v26 T{int}, v28 T{_Smi}) [0, 1] uint32
ParallelMove r4 <- r4
v27 <- IntConverter(uint32->int64, v7) int64
v8 <- BinaryInt64Op(| [tr], v27 T{_Smi}, v24 T{_Smi}) [0, 31] int64
StoreField(v2 T{_Future} . _state@4048458 = v8 T{int} <int64>)
ParallelMove r0 <- r0
StoreField(v2 T{_Future} . _resultOrListeners@4048458 = v3 T{AsyncError})
ParallelMove r0 <- C
DartReturn:20(v0)
B0
B1
ParallelMove r0 <- C, r1 <- r2 goto:26 B4
B4
  Loop 0
  Loop Header
CheckStackOverflow:24(stack=0, loop=1)
Branch if StrictCompare:10(!==, v5, v0) goto (3, 5)
B3
  Loop 0
v6 <- LoadField(v5 T{_FutureListener} . _nextListener@4048458) T{_FutureListener?}
ParallelMove r0 <- r0
StoreField(v5 T{_FutureListener} . _nextListener@4048458 = v4 T{_FutureListener?})
ParallelMove r0 <- r1, r1 <- r2 goto:22 B4
B5
ParallelMove r0 <- r0
DartReturn:30(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, r1 <- r2, r2 <- r3
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r1, r2 <- r2
StaticCall:10( _rootHandleError@4048458<0> v3, v4)
ParallelMove r0 <- C
DartReturn:12(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v3 <- LoadField(v2 . _resultOrListeners@4048458) T{*?}
ParallelMove r0 <- r3, r2 <- C, r1 <- C, fp[-1] <- r3
t0 <- AssertAssignable:12(v3, v4, '', instantiator_type_args(v0), function_type_args(v0)) T{AsyncError}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:14(v3 T{AsyncError})
B0
B1
ParallelMove r1 <- sp[0]
v3 <- LoadField(v2 . _context@0150898) T{*?}
ParallelMove r0 <- r0
DartReturn:4(v3)
B0
B1
ParallelMove r2 <- sp[0]
v3 <- LoadField(v2 . state {final}) [-9223372036854775808, 9223372036854775807] int64
v4 <- BoxInt64(v3) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
DartReturn:4(v4 T{int})
B0
B1
ParallelMove r1 <- sp[0]
v3 <- LoadField(v2 . _delayed_type_arguments@0150898) T{*?}
ParallelMove r0 <- r0
DartReturn:4(v3)
B0
B1
Enter frame
v6 <- LoadField(v5 . ArgumentsDescriptor.type_args_len {final}) [0, 4611686018427387903] T{_Smi}
Branch if StrictCompare:4(===, v6, v7) goto (2, 3)
B2
ParallelMove r0 <- C goto:14 B5
B3
v8 <- LoadField(v5 . ArgumentsDescriptor.size {final}) [0, 4611686018427387903] T{_Smi}
v9 <- LoadIndexedUnsafe(fp[v8 + 16]) T{TypeArguments?}
ParallelMove r0 <- r1 goto:16 B5
B5
ParallelMove fp[-1] <- r0
CheckStackOverflow:22(stack=0, loop=0)
v17 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r0 <- r0
Branch if StrictCompare:26(===, v17, v12) goto (6, 7)
B6
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v4)
ParallelMove r0 <- fp[3]
v14 <- ClosureCall:34( closure=v3<0>, v3, v4) T{*?}
ParallelMove r0 <- r0
DartReturn:36(v14)
B7
MoveArgument(sp[3] <- v10)
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v4)
v13 <- StaticCall:40( _rootRunUnary@4048458<2> v10, v2, v3, v4) T{Y0?}
ParallelMove r0 <- r0
DartReturn:42(v13)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v7 <- LoadField(v6 . ArgumentsDescriptor.type_args_len {final}) [0, 4611686018427387903] T{_Smi}
Branch if StrictCompare:4(===, v7, v8) goto (2, 3)
B2
ParallelMove r0 <- C goto:14 B5
B3
v9 <- LoadField(v6 . ArgumentsDescriptor.size {final}) [0, 4611686018427387903] T{_Smi}
v10 <- LoadIndexedUnsafe(fp[v9 + 16]) T{TypeArguments?}
ParallelMove r0 <- r1 goto:16 B5
B5
ParallelMove fp[-1] <- r0
CheckStackOverflow:22(stack=0, loop=0)
v18 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r0 <- r0
Branch if StrictCompare:26(===, v18, v13) goto (6, 7)
B6
MoveArgument(sp[2] <- v3)
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v5)
ParallelMove r0 <- fp[4]
v15 <- ClosureCall:34( closure=v3<0>, v3, v4, v5) T{*?}
ParallelMove r0 <- r0
DartReturn:36(v15)
B7
MoveArgument(sp[4] <- v11)
MoveArgument(sp[3] <- v2)
MoveArgument(sp[2] <- v3)
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v5)
v14 <- StaticCall:40( _rootRunBinary@4048458<3> v11, v2, v3, v4, v5) T{Y0?}
ParallelMove r0 <- r0
DartReturn:42(v14)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- C
CheckStackOverflow:8(stack=0, loop=0)
v26 <- LoadField(v2 T{_FutureListener} . state {final}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r3
v44 <- IntConverter(int64->uint32[tr], v26) uint32
v28 <- BinaryUint32Op(& [tr], v44 T{int}, v46 T{_Smi}) [0, 15] uint32
ParallelMove r4 <- r4
v45 <- IntConverter(uint32->int64, v28) int64
Branch if EqualityCompare(v45 T{_Smi} != v40 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:20(v5)
B4
v15 <- LoadField(v2 T{_FutureListener} . result {final}) T{_Future}
v16 <- LoadField(v15 . _zone@4048458 {final}) T{_RootZone}
v21 <- LoadField(v2 T{_FutureListener} . callback {final}) T{Function??}
v9 <- LoadField(v3 . error {final}) T{Object}
MoveArgument(sp[3] <- v6)
MoveArgument(sp[2] <- v16 T{_RootZone})
MoveArgument(sp[1] <- v21 T{_Closure})
MoveArgument(sp[0] <- v9)
v10 <- StaticCall:30( runUnary<2> v6, v16 T{_RootZone}, v21 T{_Closure}, v9, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
DartReturn:32(v10)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v4 <- LoadField(v2 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v6 <- BinarySmiOp:4(- [tr], v4, v5) [-2, 4611686018427387901] T{_Smi}
v7 <- LoadIndexedUnsafe(fp[v6 + 24]) T{*?}
ParallelMove fp[-4] <- r2
v8 <- LoadIndexedUnsafe(fp[v6 + 16]) T{_Closure}
ParallelMove fp[-3] <- r3
v13 <- LoadIndexed([_List] v2, v11 T{_Smi}) T{*?}
Branch if StrictCompare:16(===, v13, v14) goto (2, 3)
B2
v44 <- LoadIndexed([_List] v2, v42 T{_Smi}) T{*?}
v45 <- BinarySmiOp:10(- [tr], v4, v44) [-4611686018427387903, 4611686018427387903] T{_Smi}
v46 <- LoadIndexedUnsafe(fp[v45 + 8]) T{Function??}
ParallelMove r0 <- r0 goto:26 B4
B3
ParallelMove r0 <- C goto:28 B4
B4
ParallelMove fp[-2] <- r0
v16 <- LoadField(v2 . ArgumentsDescriptor.type_args_len {final}) [0, 4611686018427387903] T{_Smi}
Branch if StrictCompare:30(===, v16, v9) goto (5, 6)
B5
ParallelMove r1 <- C goto:40 B8
B6
v17 <- LoadField(v2 . ArgumentsDescriptor.size {final}) [0, 4611686018427387903] T{_Smi}
v18 <- LoadIndexedUnsafe(fp[v17 + 16]) T{TypeArguments?}
ParallelMove r1 <- r4 goto:42 B8
B8
ParallelMove fp[-1] <- r1
CheckStackOverflow:48(stack=0, loop=0)
v106 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r0 <- r0
Branch if StrictCompare:52(===, v106, v21) goto (9, 17)
B9
ParallelMove r3 <- fp[-2]
Branch if StrictCompare:58(!==, v15, v0) goto (10, 14)
B10
ParallelMove r0 <- r3, r2 <- C, r1 <- fp[-1]
v36 <- InstanceOf:62(v15 T{_Closure} IS (dynamic, Object, StackTrace) => dynamic, instantiator_type_args(v0), function_type_args(v19)) T{bool}
InlineInstanceof
FunctionTypeTest
BoolTest
ParallelMove r0 <- r0
Branch if StrictCompare:66(!==, v36 T{bool}, v37) goto (11, 15)
BoolTest
B11
ParallelMove r0 <- fp[-2], r2 <- C, r1 <- fp[-1]
v39 <- InstanceOf:72(v15 T{_Closure} IS (dynamic, Object) => dynamic, instantiator_type_args(v0), function_type_args(v19)) T{bool}
InlineInstanceof
FunctionTypeTest
BoolTest
ParallelMove r0 <- r0
Branch if StrictCompare:76(!==, v39 T{bool}, v37) goto (12, 16)
BoolTest
B16
B15
B14
B13
ParallelMove r3 <- fp[-2] goto:128 B29
B17
ParallelMove r1 <- fp[-2]
Branch if StrictCompare:110(!==, v15, v0) goto (18, 19)
B18
ParallelMove r1 <- r1, r2 <- r0
v27 <- StaticCall:116( _registerErrorHandler@4048458<0> v15 T{_Closure}, v106, result_type = T{!null}) T{_Closure}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:122 B20
B19
ParallelMove r0 <- r1 goto:124 B20
B20
ParallelMove r3 <- r0 goto:130 B29
B29
ParallelMove r1 <- fp[-1], fp[-5] <- r3
v30 <- AllocateObject:132(cls=_Future, v19) T{_Future}
ParallelMove r4 <- r0, r0 <- C
ParallelMove fp[-6] <- r4
StoreField(v30 T{_Future} . _state@4048458 = v136 T{_Smi} <int64>, NoStoreBarrier)
v99 <- LoadStaticField:4(_current@4048458) T{_RootZone}
StoreField(v30 T{_Future} . _zone@4048458 = v99, NoStoreBarrier)
ParallelMove r0 <- fp[-4]
v31 <- LoadField(v7 . :type_arguments {final}) T{TypeArguments}
ParallelMove r2 <- r2, r1 <- fp[-1], r3 <- C
v33 <- InstantiateTypeArguments:136(v32, instantiator_type_args(v31), function_type_args(v19), instantiator_class(Library:'dart:async' Class: _Future@4048458)) T{*?}
ParallelMove r1 <- r0
v34 <- AllocateObject:138(cls=_FutureListener, v33) T{_FutureListener}
ParallelMove r1 <- r0, r0 <- fp[-6]
StoreField(v34 T{_FutureListener} . result = v30 T{_Future}, NoStoreBarrier)
ParallelMove r2 <- fp[-3]
StoreField(v34 T{_FutureListener} . callback = v8 T{_Closure}, NoStoreBarrier)
ParallelMove r2 <- fp[-5]
StoreField(v34 T{_FutureListener} . errorCallback = v29 T{_Closure?}, NoStoreBarrier)
v113 <- IfThenElse(===, v29, v0 ? 1 : 3) [1, 3] T{_Smi}
v135 <- UnboxInt64([non-speculative], v113 T{_Smi}) [1, 3] int64
StoreField(v34 T{_FutureListener} . state = v135 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r1 <- fp[-4], r2 <- r1
StaticCall:142( _addListener@4048458<0> v7, v34, using unchecked entrypoint)
ParallelMove r0 <- fp[-6]
DartReturn:144(v30)
B12
ParallelMove r1 <- fp[-2]
v40 <- AllocateObject:84(cls=ArgumentError, <not-aliased>) T{ArgumentError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v40 T{ArgumentError} . name = v14 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v40 T{ArgumentError} . message = v41 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-2]
StoreField(v40 T{ArgumentError} . invalidValue = v15 T{_Closure}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v40 T{ArgumentError} . _hasValue@0150898 = v37 T{bool}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:88(v40)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v4 <- AllocateContext:10(num_variables=2) T{Context}
ParallelMove r4 <- r0, r3 <- fp[-1]
ParallelMove fp[-4] <- r4
StoreField(v4 . this = v2, NoStoreBarrier)
ParallelMove r5 <- fp[-2]
StoreField(v4 . listener = v3, NoStoreBarrier)
v71 <- LoadField(v2 T{_Future} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<=, v71, v77 T{_Smi}) T{bool} goto (3, 4)
B3
v17 <- LoadField(v2 . _resultOrListeners@4048458) T{*?}
ParallelMove r0 <- r4, r2 <- C, r1 <- C, fp[-3] <- r4
t2 <- AssertAssignable:24(v17, v18, '', instantiator_type_args(v0), function_type_args(v0)) T{_FutureListener?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-3], r3 <- fp[-2]
StoreField(v3 T{_FutureListener} . _nextListener@4048458 = v17 T{_FutureListener?})
ParallelMove r0 <- r3, r5 <- fp[-1]
StoreField(v2 T{_Future} . _resultOrListeners@4048458 = v3 T{_FutureListener})
ParallelMove  goto:78 B10
B4
ParallelMove r5 <- r3, r3 <- r5
Branch if TestInt(v71, v89) goto (5, 8)
B5
v25 <- LoadField(v2 T{_Future} . _resultOrListeners@4048458) T{*?}
ParallelMove r0 <- r6, r2 <- C, r1 <- C, fp[-3] <- r6
t0 <- AssertAssignable:12(v25, v28 T{_Type}, '', instantiator_type_args(v0 T{Null?}), function_type_args(v0 T{Null?})) T{_Future}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-3]
v33 <- LoadField(v25 T{_Future} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v33, v43) goto (6, 7)
B6
ParallelMove r1 <- r1, r2 <- fp[-2]
StaticCall:54( _addListener@4048458<0> v25 T{_Future}, v3 T{_FutureListener}, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:56(v0)
B7
ParallelMove r1 <- fp[-1], r2 <- r1
StaticCall:60( _cloneResult@4048458<0> v2, v25 T{_Future}, using unchecked entrypoint)
ParallelMove  goto:66 B9
B8
B9
v9 <- LoadField(v2 . _zone@4048458 {final}) T{_RootZone}
ParallelMove r1 <- C, r2 <- fp[-4], fp[-2] <- r3
v11 <- AllocateClosure:72(v10, v4) T{_Closure}
ParallelMove r1 <- fp[-2], r2 <- r0
StaticCall:74( scheduleMicrotask<0> v9, v11, using unchecked entrypoint)
ParallelMove  goto:80 B10
B10
ParallelMove r0 <- C
DartReturn:82(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, r2 <- C, r1 <- C, r4 <- r1, r3 <- r2, fp[-1] <- r1
v5 <- InstanceOf:10(v2 IS (dynamic, Object, StackTrace) => dynamic, instantiator_type_args(v0), function_type_args(v0)) T{bool}
InlineInstanceof
FunctionTypeTest
BoolTest
ParallelMove r0 <- r0
Branch if StrictCompare:14(===, v5, v6) goto (3, 4)
BoolTest
B3
ParallelMove r0 <- fp[-1]
DartReturn:22(v2 T{_Closure})
B4
ParallelMove r0 <- fp[-1], r2 <- C, r1 <- C
v8 <- InstanceOf:26(v2 IS (dynamic, Object) => dynamic, instantiator_type_args(v0), function_type_args(v0)) T{bool}
InlineInstanceof
FunctionTypeTest
BoolTest
ParallelMove r0 <- r0
Branch if StrictCompare:30(===, v8, v6) goto (5, 6)
BoolTest
B5
ParallelMove r0 <- fp[-1]
DartReturn:38(v2 T{_Closure})
B6
ParallelMove r0 <- fp[-1]
v9 <- AllocateObject:42(cls=ArgumentError) T{ArgumentError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v9 T{ArgumentError} . name = v10 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v9 T{ArgumentError} . message = v11 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
StoreField(v9 T{ArgumentError} . invalidValue = v2 T{_Closure}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v9 T{ArgumentError} . _hasValue@0150898 = v6 T{bool}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:46(v9)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v10 <- LoadField(v2 T{_FutureListener} . result {final}) T{_Future}
v11 <- LoadField(v10 . _zone@4048458 {final}) T{_RootZone}
v16 <- LoadField(v2 T{_FutureListener} . callback {final}) T{Function??}
MoveArgument(sp[2] <- v0)
MoveArgument(sp[1] <- v11 T{_RootZone})
MoveArgument(sp[0] <- v16 T{_Closure})
v5 <- StaticCall:14( run<1> v0, v11 T{_RootZone}, v16 T{_Closure}, using unchecked entrypoint) T{Y0?}
ParallelMove r0 <- r0
DartReturn:16(v5)
CheckStackOverflowSlowPath
B0
B2
ParallelMove r1 <- sp[1]
v4 <- LoadField(v2 . Closure.context {final}) T{*}
v5 <- LoadField(v4 . originalSource) T{_Future}
ParallelMove r0 <- r0
DartReturn:10(v5)
B0
B3
Enter frame
ParallelMove r4 <- r1, r3 <- r2, fp[-1] <- r1, fp[-2] <- r2
v5 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r3, r2 <- r2, r1 <- C
t0 <- AssertAssignable:10(v3, v4, 'value', instantiator_type_args(v5), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[-1], r1 <- C
StoreField(v2 T{_Future} . _state@4048458 = v21 T{_Smi} <int64>)
ParallelMove r0 <- fp[-2]
StoreField(v2 T{_Future} . _resultOrListeners@4048458 = v3 T{X0?})
ParallelMove r0 <- C
DartReturn:16(v0)
B0
B1
Enter frame
ParallelMove r3 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _resultOrListeners@4048458) T{*?}
ParallelMove r0 <- r4, r2 <- C, r1 <- C, fp[-1] <- r4
t0 <- AssertAssignable:12(v3, v4, '', instantiator_type_args(v0), function_type_args(v0)) T{_FutureListener?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-2]
StoreField(v2 T{_Future} . _resultOrListeners@4048458 = v0 T{Null?})
ParallelMove r1 <- r1, r2 <- fp[-1]
v6 <- StaticCall:16( _reverseListeners@4048458<0> v2, v3 T{_FutureListener?}, using unchecked entrypoint, result_type = T{_FutureListener?}) T{_FutureListener?}
ParallelMove r0 <- r0
DartReturn:18(v6)
CheckStackOverflowSlowPath
B0
B11
Enter frame
v5 <- LoadField(v2 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v7 <- BinarySmiOp:4(- [tr], v5, v6) [-2, 4611686018427387901] T{_Smi}
v8 <- LoadIndexedUnsafe(fp[v7 + 24]) T{*?}
ParallelMove fp[-3] <- r2
v9 <- LoadIndexedUnsafe(fp[v7 + 16]) T{Duration}
ParallelMove fp[-2] <- r3
v13 <- LoadIndexed([_List] v2, v11 T{_Smi}) T{*?}
Branch if StrictCompare:16(===, v13, v14) goto (2, 3)
B2
v51 <- LoadIndexed([_List] v2, v49 T{_Smi}) T{*?}
v52 <- BinarySmiOp:10(- [tr], v5, v51) [-4611686018427387903, 4611686018427387903] T{_Smi}
v53 <- LoadIndexedUnsafe(fp[v52 + 8]) T{*?}
ParallelMove r0 <- r0 goto:26 B15
B3
ParallelMove r0 <- C goto:28 B15
B15
ParallelMove fp[-1] <- r0
CheckStackOverflow:34(stack=0, loop=0)
v16 <- AllocateContext:36(num_variables=6) T{Context}
ParallelMove r4 <- r0, r3 <- fp[-3]
ParallelMove fp[-4] <- r4
StoreField(v16 . this = v8, NoStoreBarrier)
ParallelMove r0 <- fp[-2]
StoreField(v16 . timeLimit = v9, NoStoreBarrier)
v18 <- LoadField(v8 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- fp[-1], r2 <- r5, r1 <- C, fp[-2] <- r5
t0 <- AssertAssignable:38(v15, v17, 'onTimeout', instantiator_type_args(v18), function_type_args(v0)) T{_Closure?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[-3]
v88 <- LoadField(v8 T{_Future} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v88, v97) goto (6, 7)
B6
ParallelMove r1 <- fp[-2]
v47 <- AllocateObject:50(cls=_Future, v18 T{TypeArguments}) T{_Future}
ParallelMove r1 <- r0, r0 <- C
ParallelMove fp[-5] <- r1
StoreField(v47 T{_Future} . _state@4048458 = v120 T{_Smi} <int64>, NoStoreBarrier)
v106 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r1 <- r0, r0 <- fp[-5]
StoreField(v47 T{_Future} . _zone@4048458 = v106, NoStoreBarrier)
ParallelMove r1 <- r0, r2 <- fp[-3]
StaticCall:14( _asyncComplete@4048458<0> v47 T{_Future}, v8 T{FutureOr<X0>?}, using unchecked entrypoint)
ParallelMove r0 <- fp[-5]
DartReturn:54(v47)
B7
ParallelMove r3 <- fp[-1], r2 <- fp[-4], r0 <- C
ParallelMove r1 <- fp[-2]
v24 <- AllocateObject:58(cls=_Future, v18 T{TypeArguments}) T{_Future}
ParallelMove r1 <- r0, r0 <- C
ParallelMove fp[-5] <- r1
StoreField(v24 T{_Future} . _state@4048458 = v120 T{_Smi} <int64>, NoStoreBarrier)
v103 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r1 <- r0, r0 <- fp[-5]
StoreField(v24 T{_Future} . _zone@4048458 = v103, NoStoreBarrier)
ParallelMove r3 <- fp[-4]
StoreField(v16 . _future = v24, NoStoreBarrier)
StoreField(v16 . timer = v0, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
Branch if StrictCompare:62(===, v15 T{_Closure?}, v0) goto (8, 9)
B8
v42 <- LoadField(v16 . timeLimit) T{Duration}
ParallelMove r1 <- C, r2 <- r3, fp[-5] <- r0
v44 <- AllocateClosure:68(v43, v16) T{_Closure}
ParallelMove r1 <- C, r2 <- fp[-5], r3 <- r0
v45 <- StaticCall:70( Timer.<0> v0, v42, v44, result_type = T{_Timer}) T{_Timer}
ParallelMove r0 <- r0, r3 <- fp[-4]
StoreField(v16 . timer = v45)
ParallelMove r4 <- r3 goto:86 B10
B9
StoreField(v16 . zone = v103 T{_RootZone}, NoStoreBarrier)
StoreField(v16 . onTimeoutHandler = v15 T{_Closure}, NoStoreBarrier)
v31 <- LoadField(v16 . timeLimit) T{Duration}
ParallelMove r1 <- C, r2 <- r3, fp[-1] <- r0
v33 <- AllocateClosure:80(v32, v16) T{_Closure}
ParallelMove r1 <- C, r2 <- fp[-1], r3 <- r0
v34 <- StaticCall:82( Timer.<0> v0, v31, v33, result_type = T{_Timer}) T{_Timer}
ParallelMove r0 <- r0, r4 <- fp[-4]
StoreField(v16 . timer = v34)
ParallelMove  goto:88 B10
B10
ParallelMove r1 <- C, r2 <- r4, r3 <- fp[-2]
v38 <- AllocateClosure:90(v36, v16, v18 T{TypeArguments}) T{_Closure}
ParallelMove r1 <- C, r2 <- fp[-4], r0 <- r0
ParallelMove fp[-1] <- r0
v40 <- AllocateClosure:92(v39, v16) T{_Closure}
ParallelMove r0 <- r0
MoveArgument(sp[3] <- v35)
MoveArgument(sp[2] <- v8)
MoveArgument(sp[1] <- v38)
MoveArgument(sp[0] <- v40)
StaticCall:94( then<1> v35, v8, v38, v40, using unchecked entrypoint)
ParallelMove r1 <- fp[-4]
v41 <- LoadField(v16 . _future) T{_Future}
ParallelMove r0 <- r0
DartReturn:96(v41)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, r1 <- r2, r2 <- r3, fp[-1] <- r2, fp[-2] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v73 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r0 <- r0
ParallelMove fp[-3] <- r0
Branch if StrictCompare:10(===, v73, v6 T{_RootZone}) T{bool} goto (3, 4)
B3
ParallelMove r1 <- fp[-1], r2 <- fp[-2]
v51 <- StaticCall:10( _createTimer@4048458<0> v3 T{Duration}, v4 T{_Closure}, result_type = T{_Timer}) T{_Timer}
ParallelMove r0 <- r0
DartReturn:26(v51 T{_Timer})
B4
ParallelMove r1 <- fp[-2]
v27 <- AllocateContext:10(num_variables=2) T{Context}
ParallelMove r1 <- r0, r0 <- fp[-3]
StoreField(v27 . this = v73 T{_RootZone}, NoStoreBarrier)
ParallelMove r0 <- fp[-2]
StoreField(v27 . f = v4 T{_Closure}, NoStoreBarrier)
ParallelMove r1 <- C, r2 <- r1
v29 <- AllocateClosure:12(v30 T{Function}, v27) T{_Closure}
ParallelMove r1 <- fp[-1], r2 <- r0
v39 <- StaticCall:10( _createTimer@4048458<0> v3 T{Duration}, v29 T{_Closure}, result_type = T{_Timer}) T{_Timer}
ParallelMove r0 <- r0
DartReturn:38(v39 T{_Timer})
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-1] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v4 <- AllocateContext:10(num_variables=1) T{Context}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v4 . callback = v3, NoStoreBarrier)
v5 <- LoadStaticField(timerFactory) T{_Closure?}
Branch if StrictCompare:12(===, v5, v0) goto (3, 7)
B7
ParallelMove r1 <- C, r2 <- r1
v12 <- AllocateClosure:46(v11, v4) T{_Closure}
ParallelMove r1 <- r0, r2 <- C, r3 <- C
v68 <- StaticCall:10( _createTimer@1026248<0> v12 T{_Closure}, v26 T{_Smi}, v13 T{bool}, result_type = T{_Timer}) T{_Timer}
ParallelMove r0 <- r0
DartReturn:52(v68 T{_Timer})
B3
v15 <- AllocateObject:18(cls=UnsupportedError, <not-aliased>) T{UnsupportedError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v15 T{UnsupportedError} . message = v16 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:22(v15)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r6 <- r3, fp[-2] <- r1, fp[-3] <- r3
CheckStackOverflow:8(stack=0, loop=0)
Branch if RelationalOp(<, v3, v42 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r5 <- C goto:24 B5
B4
ParallelMove r5 <- r2 goto:26 B5
B5
ParallelMove fp[-1] <- r5
v21 <- LoadStaticField:4(timerMillisecondClock, CallsInitializer) T{(dynamic) => int}
v27 <- StaticCall:10( _timerMillisecondClock@15069316<0> ) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0, r5 <- fp[-1]
Branch if EqualityCompare(v8 == v42 T{_Smi}) T{bool} goto (6, 7)
B6
v40 <- UnboxInt64([non-speculative], v27) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r1 goto:52 B8
B7
v41 <- UnboxInt64([non-speculative], v27 T{int?}) [-9223372036854775808, 9223372036854775807] int64
v13 <- BinaryInt64Op(+ [tr], v41 T{int?}, v43 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v14 <- BinaryInt64Op(+ [tr], v13, v8) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r1 goto:54 B8
B8
ParallelMove fp[-4] <- r3
v16 <- AllocateObject:56(cls=_Timer) T{_Timer}
ParallelMove r1 <- r0, r2 <- fp[-2], r3 <- fp[-4], r5 <- fp[-1], r6 <- fp[-3], r0 <- r0
ParallelMove fp[-2] <- r0
StaticCall:58( _Timer@1026248._internal@1026248<0> v16, v2, v15, v8, v4)
ParallelMove r1 <- fp[-2]
StaticCall:60( _enqueue@1026248<0> v16, using unchecked entrypoint)
ParallelMove r0 <- fp[-2]
DartReturn:62(v16)
CheckStackOverflowSlowPath
slow path late initialization error operation
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _milliSeconds@1026248 {final}) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v3 == v43 T{_Smi}) T{bool} goto (3, 7)
B3
v10 <- LoadStaticField(_firstZeroTimer@1026248) T{_Timer?}
Branch if StrictCompare:22(===, v10, v0) goto (4, 5)
B4
StoreStaticField(_lastZeroTimer@1026248, v2)
StoreStaticField(_firstZeroTimer@1026248, v2)
ParallelMove  goto:36 B6
B5
v22 <- LoadStaticField:4(_lastZeroTimer@1026248, CallsInitializer) T{_Timer}
ParallelMove r0 <- fp[-1], r1 <- r0
StoreField(v22 T{_Timer} . _indexOrNext@1026248 = v2 T{_Timer})
ParallelMove r2 <- fp[-1]
StoreStaticField(_lastZeroTimer@1026248, v2)
ParallelMove  goto:38 B6
B6
StaticCall:40( _notifyZeroHandler@1026248<0> )
ParallelMove  goto:72 B11
B7
ParallelMove r2 <- r0
v16 <- LoadStaticField:4(_heap@1026248, CallsInitializer) T{_TimerHeap}
ParallelMove r1 <- r0, r2 <- fp[-1], r0 <- r0
ParallelMove fp[-2] <- r0
StaticCall:46( add<0> v16 T{_TimerHeap}, v2, using unchecked entrypoint)
ParallelMove r1 <- fp[-2], r2 <- fp[-1]
v9 <- StaticCall:50( isFirst<0> v16 T{_TimerHeap}, v2, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:54(===, v9 T{bool}, v6) goto (8, 9)
BoolTest
B8
StaticCall:60( _notifyEventHandler@1026248<0> )
ParallelMove  goto:66 B10
B9
B10
B11
ParallelMove r0 <- C
DartReturn:76(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v2 <- LoadStaticField(_handlingCallbacks@1026248) T{bool}
Branch if StrictCompare:12(===, v2 T{bool}, v3) goto (3, 4)
BoolTest
B3
ParallelMove r0 <- C
DartReturn:18(v0)
B4
v4 <- LoadStaticField(_firstZeroTimer@1026248) T{_Timer?}
Branch if StrictCompare:22(===, v4, v0) goto (5, 11)
B5
v47 <- LoadStaticField:4(_heap@1026248, CallsInitializer) T{_TimerHeap}
ParallelMove r0 <- r0
v52 <- LoadField(v47 T{_TimerHeap} . _used@1026248) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v52 == v93 T{_Smi}) T{bool} goto (6, 12)
B6
v17 <- LoadStaticField(_sendPort@1026248) T{_SendPort?}
Branch if StrictCompare:40(!==, v17, v0) goto (7, 8)
B7
StaticCall:46( _cancelWakeup@1026248<0> )
StaticCall:48( _shutdownTimerHandler@1026248<0> )
ParallelMove  goto:54 B9
B8
B9
ParallelMove r0 <- C
DartReturn:58(v0)
B12
B11
B10
v37 <- LoadStaticField:4(_heap@1026248, CallsInitializer) T{_TimerHeap}
ParallelMove r0 <- r0
v42 <- LoadField(v37 T{_TimerHeap} . _used@1026248) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v42 == v93 T{_Smi}) T{bool} goto (13, 14)
B13
StaticCall:82( _cancelWakeup@1026248<0> )
ParallelMove r0 <- C
DartReturn:84(v0)
B14
v29 <- LoadField(v37 T{_TimerHeap} . _list@1026248) T{_List}
v32 <- LoadField(v29 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v89 <- UnboxInt64([non-speculative], v32) [0, 576460752303423487] int64
ParallelMove r0 <- r1, r1 <- C
GenericCheckBound:12(v89 T{_Smi}, v93 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v94 <- LoadIndexed:12([_List] v29, v93 T{_Smi}) T{_Timer}
v9 <- LoadField(v94 T{_Timer} . _wakeupTime@1026248) [-9223372036854775808, 9223372036854775807] int64
v10 <- LoadStaticField(_scheduledWakeupTime@1026248) [-9223372036854775808, 9223372036854775807] T{int}
v91 <- UnboxInt64([non-speculative], v10) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v91 T{int} == v93 T{_Smi}) T{bool} goto (17, 15)
B17
B15
Branch if EqualityCompare(v9 != v91 T{int}) T{bool} goto (18, 19)
B18
B16
ParallelMove r1 <- r1
StaticCall:122( _scheduleWakeup@1026248<0> v9)
ParallelMove  goto:128 B20
B19
B20
ParallelMove r0 <- C
DartReturn:132(v0)
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadStaticField(_receivePortActive@1026248) T{bool}
Branch if StrictCompare:12(!==, v3 T{bool}, v4) goto (3, 4)
BoolTest
B3
StaticCall:18( _createTimerHandler@1026248<0> )
ParallelMove  goto:24 B5
B4
B5
v11 <- LoadStaticField:4(eventHandlerSendData, CallsInitializer) T{(dynamic, Object?, SendPort, int) => void}
v6 <- LoadStaticField(_sendPort@1026248) T{_SendPort?}
CheckNull:30(v6, CastError) T{_SendPort}
v27 <- BoxInt64(v2 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
ParallelMove fp[-2] <- r0
MoveArgument(sp[2] <- v0 T{Null?})
MoveArgument(sp[1] <- v6 T{_SendPort})
MoveArgument(sp[0] <- v27 T{int})
v22 <- StaticCall:10( _sendData@15069316<0> v0 T{Null?}, v6 T{_SendPort}, v27 T{int}) T{void?}
ParallelMove r1 <- fp[-2]
StoreStaticField(_scheduledWakeupTime@1026248, v27 T{int})
ParallelMove r0 <- C
DartReturn:36(v0)
CheckStackOverflowSlowPath
slow path late initialization error operation
slow path check null (cast) operation
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[2] <- v3)
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v5)
v7 <- StaticCall:10( _sendData@15069316<0> v3, v4, v5) T{void?}
ParallelMove r0 <- r0
DartReturn:12(v7)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
v24 <- UnboxInt64([non-speculative], v6) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- C, r2 <- r2
v8 <- StaticCall:12( InternetAddressType._from@15069316<0> v0, v24 T{int}, result_type = T{InternetAddressType}) T{InternetAddressType}
v9 <- AllocateObject:16(cls=Datagram) T{Datagram}
ParallelMove r0 <- r0
DartReturn:20(v9)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r2, fp[-1] <- r2
CheckStackOverflow:8(stack=0, loop=0)
Branch if EqualityCompare(v3 == v49 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:22(v4)
B4
Branch if EqualityCompare(v3 == v50 T{_Smi}) T{bool} goto (5, 6)
B5
ParallelMove r0 <- C
DartReturn:38(v8)
B6
Branch if EqualityCompare(v3 == v51 T{_Smi}) T{bool} goto (7, 8)
B7
ParallelMove r0 <- C
DartReturn:54(v11)
B8
ParallelMove r1 <- C, r2 <- C
v16 <- CreateArray:60(v0, v15) T{_List}
ParallelMove r2 <- r0
StoreIndexed([_List] v16, v17, v18, NoStoreBarrier)
ParallelMove r3 <- fp[-1]
v48 <- BoxInt64(v3) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreIndexed([_List] v16, v19, v48 T{int}, NoStoreBarrier)
MoveArgument(sp[0] <- v16)
v20 <- StaticCall:62( _interpolate@0150898<0> v16, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-2] <- r0
v14 <- AllocateObject:58(cls=ArgumentError) T{ArgumentError}
ParallelMove r1 <- r0, r0 <- fp[-2]
StoreField(v14 T{ArgumentError} . message = v20 T{String}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v14 T{ArgumentError} . _hasValue@0150898 = v27 T{bool}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:66(v14)
CheckStackOverflowSlowPath
B0
B1
ParallelMove r0 <- C
DartReturn:10(v2)
B0
B3
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v16 <- LoadStaticField:4(_signalControllers@15069316, CallsInitializer) T{_List}
ParallelMove r0 <- C
Throw:12(v11 T{_OneByteString})
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r1 <- C, r2 <- C
v5 <- CreateArray:6(v2, v3) T{_List}
ParallelMove r0 <- r0
DartReturn:8(v5)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[4]
v9 <- LoadClassId(<non-smi> v2) int64
ParallelMove r0 <- r0, r1 <- r1
v5 <- DispatchTableCall( cid=v9 TypedData.buffer<0>, v2) T{ByteBuffer}
ParallelMove r1 <- r0, r0 <- fp[3]
v7 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[2]
v8 <- UnboxInt64([non-speculative], v4) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- C, r2 <- r1, r3 <- r3, r5 <- r5
v6 <- StaticCall:12( Uint8List.view<0> v0, v5 T{ByteBuffer}, v7 T{int}, v8 T{int}, result_type = T{!null}) T{Uint8List}
ParallelMove r0 <- r0
DartReturn:14(v6)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, r1 <- r2, r2 <- r3, r3 <- r5
CheckStackOverflow:8(stack=0, loop=0)
v7 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r1, r2 <- r2, r3 <- r3
v6 <- DispatchTableCall( cid=v7 ByteBuffer.asUint8List<0>, v3, v4, v5) T{Uint8List}
ParallelMove r0 <- r0
DartReturn:12(v6 T{Uint8List})
CheckStackOverflowSlowPath
B0
B1
ParallelMove r0 <- C
DartReturn:10(v2)
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v4 <- StaticCall:10( _uriBaseClosure@15069316<0> ) T{Uri}
ParallelMove r0 <- r0
DartReturn:12(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
StaticCall:10( get:current<0> , result_type = T{Null?})
v18 <- StaticCall:10( get:_namespace@15069316<0> , result_type = T{_NamespaceImpl}) T{_NamespaceImpl}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v18)
v3 <- StaticCall:14( _current@15069316<0> v18) T{*?}
ParallelMove r3 <- r0
ParallelMove fp[-1] <- r3
v14 <- LoadClassId(v3) [1, 600] int64
Branch if EqualityCompare(v14 == v15) T{bool} goto (3, 4)
B4
ParallelMove r0 <- r3, r2 <- C, r1 <- C
t1 <- AssertAssignable:32(v3, v7, ' in type cast', instantiator_type_args(v0), function_type_args(v0)) T{String}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- C, r2 <- fp[-1]
v9 <- StaticCall:34( _Uri@0150898.directory<0> v0, v3 T{String}, result_type = T{_Uri}) T{_Uri}
ParallelMove r0 <- r0
DartReturn:36(v9)
B3
MoveArgument(sp[3] <- v0)
MoveArgument(sp[2] <- v3 T{OSError})
MoveArgument(sp[1] <- v10)
MoveArgument(sp[0] <- v11)
v12 <- StaticCall:26( FileSystemException._fromOSError@15069316<0> v0, v3 T{OSError}, v10, v11) T{FileSystemException}
ParallelMove r0 <- r0
Throw:28(v12)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v161 <- LoadStaticField:4(isWindows, CallsInitializer) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:14(===, v161 T{bool}, v7) goto (3, 72)
BoolTest
B3
ParallelMove r2 <- fp[4]
v24 <- LoadField(v3 . errorCode {final}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp:54(<=, v24, v421 T{_Smi}) T{bool} goto (8, 9)
B8
Branch if RelationalOp:64(<=, v24, v422 T{_Smi}) T{bool} goto (10, 11)
B10
Branch if RelationalOp:86(<=, v24, v423 T{_Smi}) T{bool} goto (14, 15)
B14
Branch if RelationalOp:108(<=, v24, v424 T{_Smi}) T{bool} goto (18, 19)
B18
Branch if RelationalOp:130(<=, v24, v425 T{_Smi}) T{bool} goto (22, 23)
B22
v417 <- BoxInt64(v24) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
Branch if StrictCompare:140(===, v417 T{int}, v9) T{bool} goto (24, 25)
B24
ParallelMove r5 <- r2, r2 <- fp[3], r4 <- fp[2] goto:152 B6
B25
ParallelMove r3 <- r2, r0 <- fp[3], r2 <- fp[2] goto:150 B7
B23
ParallelMove r5 <- r2, r2 <- fp[3], r4 <- fp[2] goto:154 B6
B19
Branch if RelationalOp:118(>=, v24, v423 T{_Smi}) T{bool} goto (20, 21)
B20
B21
ParallelMove r3 <- r2, r0 <- fp[3], r2 <- fp[2] goto:128 B7
B15
Branch if RelationalOp:96(>=, v24, v426 T{_Smi}) T{bool} goto (16, 17)
B16
Branch if RelationalOp:158(<=, v24, v426 T{_Smi}) T{bool} goto (26, 27)
B26
ParallelMove r5 <- r2, r2 <- fp[3], r4 <- fp[2] goto:168 B6
B27
B17
ParallelMove r3 <- r2, r0 <- fp[3], r2 <- fp[2] goto:106 B7
B11
Branch if RelationalOp:74(>=, v24, v427 T{_Smi}) T{bool} goto (12, 13)
B12
Branch if RelationalOp:172(<=, v24, v428 T{_Smi}) T{bool} goto (28, 29)
B28
Branch if RelationalOp:194(<=, v24, v427 T{_Smi}) T{bool} goto (32, 33)
B32
ParallelMove r5 <- r2, r2 <- fp[3], r4 <- fp[2] goto:204 B6
B33
B29
Branch if RelationalOp:182(>=, v24, v429 T{_Smi}) T{bool} goto (30, 31)
B30
Branch if RelationalOp:208(<=, v24, v429 T{_Smi}) T{bool} goto (34, 35)
B34
B35
Branch if RelationalOp:218(>=, v24, v421 T{_Smi}) T{bool} goto (36, 37)
B36
B37
ParallelMove r3 <- r2, r0 <- fp[3], r2 <- fp[2] goto:228 B7
B31
ParallelMove r3 <- r2, r0 <- fp[3], r2 <- fp[2] goto:192 B7
B13
ParallelMove r3 <- r2, r0 <- fp[3], r2 <- fp[2] goto:84 B7
B9
Branch if RelationalOp:234(<=, v24, v430 T{_Smi}) T{bool} goto (38, 39)
B38
Branch if RelationalOp:256(<=, v24, v431 T{_Smi}) T{bool} goto (42, 43)
B42
Branch if RelationalOp:278(<=, v24, v432 T{_Smi}) T{bool} goto (46, 47)
B46
Branch if RelationalOp:300(<=, v24, v433 T{_Smi}) T{bool} goto (50, 51)
B50
B51
Branch if RelationalOp:310(>=, v24, v432 T{_Smi}) T{bool} goto (52, 53)
B52
ParallelMove r5 <- r2, r2 <- fp[3], r4 <- fp[2] goto:324 B6
B53
ParallelMove r3 <- r2, r0 <- fp[3], r2 <- fp[2] goto:320 B7
B47
Branch if RelationalOp:288(>=, v24, v431 T{_Smi}) T{bool} goto (48, 49)
B48
B49
ParallelMove r3 <- r2, r0 <- fp[3], r2 <- fp[2] goto:298 B7
B43
Branch if RelationalOp:266(>=, v24, v434 T{_Smi}) T{bool} goto (44, 45)
B44
Branch if RelationalOp:328(<=, v24, v434 T{_Smi}) T{bool} goto (54, 55)
B54
ParallelMove r5 <- r2, r2 <- fp[3], r4 <- fp[2] goto:350 B6
B55
Branch if RelationalOp:338(>=, v24, v430 T{_Smi}) T{bool} goto (56, 57)
B56
ParallelMove r4 <- r2, r0 <- fp[3], r2 <- fp[2] goto:352 B5
B57
ParallelMove r3 <- r2, r0 <- fp[3], r2 <- fp[2] goto:348 B7
B45
ParallelMove r3 <- r2, r0 <- fp[3], r2 <- fp[2] goto:276 B7
B39
Branch if RelationalOp:244(>=, v24, v435 T{_Smi}) T{bool} goto (40, 41)
B40
Branch if RelationalOp:354(<=, v24, v436 T{_Smi}) T{bool} goto (58, 59)
B58
Branch if RelationalOp:376(<=, v24, v435 T{_Smi}) T{bool} goto (62, 63)
B62
B4
v56 <- AllocateObject:22(cls=PathAccessException, <not-aliased>) T{PathAccessException}
ParallelMove r1 <- r0, r0 <- fp[3]
StoreField(v56 T{PathAccessException} . message = v4 T{String}, NoStoreBarrier)
ParallelMove r2 <- fp[2]
StoreField(v56 T{PathAccessException} . path = v5 T{String}, NoStoreBarrier)
ParallelMove r4 <- fp[4]
StoreField(v56 T{PathAccessException} . osError = v3 T{OSError}, NoStoreBarrier)
ParallelMove r0 <- r1
DartReturn:26(v56)
B63
ParallelMove r4 <- r2, r0 <- fp[3], r2 <- fp[2]
Branch if RelationalOp:386(>=, v24, v436 T{_Smi}) T{bool} goto (64, 65)
B64
ParallelMove r5 <- r4, r2 <- r0, r4 <- r2 goto:400 B6
B65
ParallelMove r3 <- r4 goto:396 B7
B59
ParallelMove r4 <- r2, r0 <- fp[3], r2 <- fp[2]
Branch if RelationalOp:364(>=, v24, v437 T{_Smi}) T{bool} goto (60, 61)
B60
Branch if RelationalOp:402(<=, v24, v437 T{_Smi}) T{bool} goto (66, 67)
B66
B5
v41 <- AllocateObject:30(cls=PathExistsException, <not-aliased>) T{PathExistsException}
ParallelMove r0 <- r0, r2 <- fp[3]
StoreField(v41 T{PathExistsException} . message = v4 T{String}, NoStoreBarrier)
ParallelMove r4 <- fp[2]
StoreField(v41 T{PathExistsException} . path = v5 T{String}, NoStoreBarrier)
ParallelMove r5 <- fp[4]
StoreField(v41 T{PathExistsException} . osError = v3 T{OSError}, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:34(v41)
B67
ParallelMove r5 <- r4, r2 <- r0, r4 <- r2
Branch if RelationalOp:412(>=, v24, v438 T{_Smi}) T{bool} goto (68, 69)
B68
v418 <- BoxInt64(v24) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
Branch if StrictCompare:426(===, v418 T{int}, v36) T{bool} goto (70, 71)
B70
B6
v55 <- AllocateObject:38(cls=PathNotFoundException, <not-aliased>) T{PathNotFoundException}
ParallelMove r1 <- r0, r0 <- fp[3]
StoreField(v55 T{PathNotFoundException} . message = v4 T{String}, NoStoreBarrier)
ParallelMove r2 <- fp[2]
StoreField(v55 T{PathNotFoundException} . path = v5 T{String}, NoStoreBarrier)
ParallelMove r3 <- fp[4]
StoreField(v55 T{PathNotFoundException} . osError = v3 T{OSError}, NoStoreBarrier)
ParallelMove r0 <- r1
DartReturn:42(v55)
B71
ParallelMove r3 <- r5, r0 <- r2, r2 <- r4
ParallelMove  goto:436 B7
B69
ParallelMove r3 <- r5, r0 <- r2, r2 <- r4
ParallelMove  goto:422 B7
B61
ParallelMove r3 <- r4
ParallelMove  goto:374 B7
B41
ParallelMove r3 <- r2, r0 <- fp[3], r2 <- fp[2]
ParallelMove  goto:254 B7
B7
v54 <- AllocateObject:46(cls=FileSystemException, <not-aliased>) T{FileSystemException}
ParallelMove r0 <- r0, r2 <- fp[3]
StoreField(v54 T{FileSystemException} . message = v4 T{String}, NoStoreBarrier)
ParallelMove r3 <- fp[2]
StoreField(v54 T{FileSystemException} . path = v5 T{String}, NoStoreBarrier)
ParallelMove r4 <- fp[4]
StoreField(v54 T{FileSystemException} . osError = v3 T{OSError}, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:50(v54)
B72
ParallelMove r4 <- fp[4], r2 <- fp[3], r3 <- fp[2]
v8 <- LoadField(v3 . errorCode {final}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp:472(<=, v8, v425 T{_Smi}) T{bool} goto (75, 76)
B75
Branch if RelationalOp:494(<=, v8, v439 T{_Smi}) T{bool} goto (79, 80)
B79
v419 <- BoxInt64(v8) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
Branch if StrictCompare:504(===, v419 T{int}, v20) T{bool} goto (81, 82)
B81
ParallelMove r3 <- r4, r0 <- r2, r2 <- r3 goto:516 B73
B82
ParallelMove r3 <- r4, r0 <- r2, r2 <- r3 goto:514 B74
B80
v22 <- AllocateObject:458(cls=PathNotFoundException, <not-aliased>) T{PathNotFoundException}
ParallelMove r1 <- r0, r0 <- fp[3]
StoreField(v22 T{PathNotFoundException} . message = v4 T{String}, NoStoreBarrier)
ParallelMove r2 <- fp[2]
StoreField(v22 T{PathNotFoundException} . path = v5 T{String}, NoStoreBarrier)
ParallelMove r3 <- fp[4]
StoreField(v22 T{PathNotFoundException} . osError = v3 T{OSError}, NoStoreBarrier)
ParallelMove r0 <- r1
DartReturn:462(v22)
B76
ParallelMove r3 <- r4, r0 <- r2, r2 <- r3
Branch if RelationalOp:482(>=, v8, v440 T{_Smi}) T{bool} goto (77, 78)
B77
Branch if RelationalOp:518(<=, v8, v440 T{_Smi}) T{bool} goto (83, 84)
B83
B73
v19 <- AllocateObject:444(cls=PathAccessException, <not-aliased>) T{PathAccessException}
ParallelMove r0 <- r0, r2 <- fp[3]
StoreField(v19 T{PathAccessException} . message = v4 T{String}, NoStoreBarrier)
ParallelMove r3 <- fp[2]
StoreField(v19 T{PathAccessException} . path = v5 T{String}, NoStoreBarrier)
ParallelMove r4 <- fp[4]
StoreField(v19 T{PathAccessException} . osError = v3 T{OSError}, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:448(v19)
B84
ParallelMove r4 <- r3, r2 <- r0, r3 <- r2
Branch if RelationalOp:528(>=, v8, v441 T{_Smi}) T{bool} goto (85, 86)
B85
v420 <- BoxInt64(v8) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
Branch if StrictCompare:542(===, v420 T{int}, v14) T{bool} goto (87, 88)
B87
v17 <- AllocateObject:452(cls=PathExistsException, <not-aliased>) T{PathExistsException}
ParallelMove r1 <- r0, r0 <- fp[3]
StoreField(v17 T{PathExistsException} . message = v4 T{String}, NoStoreBarrier)
ParallelMove r2 <- fp[2]
StoreField(v17 T{PathExistsException} . path = v5 T{String}, NoStoreBarrier)
ParallelMove r3 <- fp[4]
StoreField(v17 T{PathExistsException} . osError = v3 T{OSError}, NoStoreBarrier)
ParallelMove r0 <- r1
DartReturn:456(v17)
B88
ParallelMove r3 <- r4, r0 <- r2, r2 <- r3
ParallelMove  goto:552 B74
B86
ParallelMove r3 <- r4, r0 <- r2, r2 <- r3
ParallelMove  goto:538 B74
B78
B74
v18 <- AllocateObject:464(cls=FileSystemException, <not-aliased>) T{FileSystemException}
ParallelMove r0 <- r0, r1 <- fp[3]
StoreField(v18 T{FileSystemException} . message = v4 T{String}, NoStoreBarrier)
ParallelMove r1 <- fp[2]
StoreField(v18 T{FileSystemException} . path = v5 T{String}, NoStoreBarrier)
ParallelMove r1 <- fp[4]
StoreField(v18 T{FileSystemException} . osError = v3 T{OSError}, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:468(v18)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v4 <- LoadField(v2 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v6 <- BinarySmiOp:4(- [tr], v4, v5) [-1, 4611686018427387902] T{_Smi}
v7 <- LoadIndexedUnsafe(fp[v6 + 16]) T{*?}
Branch if RelationalOp:6(<=, v5, v6) T{bool} goto (2, 3)
B2
v15 <- LoadIndexedUnsafe(fp[v6 T{_Smi} + 8]) T{String}
Branch if RelationalOp:20(<=, v16, v6 T{_Smi}) T{bool} goto (5, 6)
B5
v18 <- LoadIndexedUnsafe(fp[v6 T{_Smi} + 0]) [-9223372036854775808, 9223372036854775807] T{int}
v20 <- UnboxInt64([non-speculative], v18) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r3, r2 <- r2 goto:36 B8
B6
ParallelMove r2 <- r3 goto:30 B4
B3
ParallelMove r2 <- C goto:18 B4
B4
ParallelMove r0 <- r2, r2 <- C goto:34 B8
B8
ParallelMove r0 <- r0
StoreField(v7 . message = v13)
StoreField(v7 . errorCode = v14 <int64>)
ParallelMove r0 <- C
DartReturn:46(v0)
B0
B1
Enter frame
CheckStackOverflow:4(stack=0, loop=0)
v7 <- LoadStaticField:4(operatingSystem, CallsInitializer) T{String}
ParallelMove r0 <- r0
v8 <- LoadClassId(<non-smi> v7 T{String}) int64
MoveArgument(sp[1] <- v7 T{String})
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r1
v4 <- DispatchTableCall( cid=v8 String.==<0>, v7 T{String}, v3) T{bool}
ParallelMove r0 <- r0
DartReturn:10(v4 T{bool})
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:4(stack=0, loop=0)
v5 <- StaticCall:10( _operatingSystem@15069316<0> , result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:8(v5 T{String})
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, r1 <- r2, fp[-1] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v14 <- LoadStaticField:4(_isWindowsCached@0150898, CallsInitializer) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:14(===, v14 T{bool}, v5) goto (3, 4)
BoolTest
B3
ParallelMove r1 <- fp[-1], r2 <- C
v8 <- StaticCall:20( _makeWindowsFileUrl@0150898<0> v3, v5, result_type = T{_Uri}) T{_Uri}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:28 B5
B4
ParallelMove r1 <- fp[-1], r2 <- C
v6 <- StaticCall:24( _makeFileUri@0150898<0> v3, v5, result_type = T{_Uri}) T{_Uri}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:30 B5
B5
ParallelMove r0 <- r0
DartReturn:32(v7)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, r3 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v127 <- LoadClassId(<non-smi> v2) int64
ParallelMove r0 <- r0, r1 <- r4, r2 <- C
v5 <- DispatchTableCall( cid=v127 String.split<0>, v2, v4) T{List<String>}
ParallelMove r2 <- r0, r0 <- fp[-2]
ParallelMove fp[-3] <- r2
Branch if StrictCompare:14(===, v3 T{bool}, v6) goto (3, 7)
BoolTest
B3
v77 <- LoadField(v5 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
Branch if StrictCompare(!==, v77 T{_Smi}, v65 T{_Smi}) T{bool} goto (4, 8)
B4
ParallelMove r1 <- r2
v12 <- StaticCall:28( get:last<0> v5 T{_GrowableList}, result_type = T{!null}) T{X0}
ParallelMove r0 <- r0
v62 <- LoadField(v12 T{X0} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(!==, v62, v65 T{_Smi}) T{bool} goto (5, 9)
B5
ParallelMove r0 <- fp[-3]
v51 <- LoadField(v5 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v56 <- LoadField(v5 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v57 <- LoadField(v56 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v101 <- UnboxInt64([non-speculative], v51 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-4] <- r2
v102 <- UnboxInt64([non-speculative], v57 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v101 T{_Smi} == v102 T{_Smi}) T{bool} goto (15, 16)
B15
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v5 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B17
B16
B17
v26 <- BinaryInt64Op(+ [tr], v101 T{_Smi}, v108 T{_Smi}) [1, 576460752303423488] int64
v103 <- BoxInt64(v26) [1, 576460752303423488] T{_Smi}
StoreField(v5 T{_GrowableList} . GrowableObjectArray.length = v103, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r2
GenericCheckBound:40(v26 T{_Smi}, v101 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v29 <- LoadField(v5 T{_GrowableList} . GrowableObjectArray.data) T{_List}
StoreIndexed:40([_List] v29, v101 T{_Smi}, v14 T{_OneByteString}, NoStoreBarrier)
ParallelMove  goto:60 B10
B9
ParallelMove r3 <- fp[-3]
ParallelMove  goto:56 B6
B8
ParallelMove r3 <- r2
ParallelMove  goto:52 B6
B7
ParallelMove r3 <- r2
ParallelMove  goto:48 B6
B6
B10
ParallelMove r1 <- fp[-1], r2 <- C
v7 <- StaticCall:64( startsWith<0> v2, v4, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:68(===, v7 T{bool}, v6) goto (11, 12)
BoolTest
B11
MoveArgument(sp[0] <- v9)
ParallelMove r1 <- C, r2 <- fp[-3]
v10 <- StaticCall:74( _Uri@0150898.<0> v0, v5 T{_GrowableList}, v9, result_type = T{_Uri}) T{_Uri}
ParallelMove r0 <- r0
DartReturn:76(v10)
B12
ParallelMove r1 <- C, r2 <- fp[-3]
v8 <- StaticCall:80( _Uri@0150898.<0> v0, v5 T{_GrowableList}, result_type = T{_Uri}) T{_Uri}
ParallelMove r0 <- r0
DartReturn:82(v8)
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove r5 <- r2, fp[-2] <- r2
v6 <- LoadField(v4 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v13 <- LoadIndexed([_List] v4, v11 T{_Smi}) T{*?}
Branch if StrictCompare:16(===, v13, v14) goto (2, 3)
B2
ParallelMove r1 <- C goto:26 B4
B3
ParallelMove r1 <- C goto:28 B4
B4
v335 <- BoxInt64(v15) [0, 1] T{_Smi}
v279 <- BinarySmiOp:30(<< [tr], v335 T{_Smi}, v82) [0, 2] T{_Smi}
v17 <- BinarySmiOp:38(+ [tr], v279 T{_Smi}, v11) [4, 6] T{_Smi}
v18 <- LoadIndexed([_List] v4, v17) T{*?}
Branch if StrictCompare:40(===, v18, v19) goto (5, 6)
B5
v104 <- BinarySmiOp:32(+ [tr], v279 T{_Smi}, v77) [5, 7] T{_Smi}
v105 <- LoadIndexed([_List] v4, v104) T{*?}
v106 <- BinarySmiOp:34(- [tr], v6, v105) [-4611686018427387903, 4611686018427387903] T{_Smi}
v107 <- LoadIndexedUnsafe(fp[v106 + 8]) T{String??}
v108 <- BinarySmiOp:36(+ [tr], v335 T{_Smi}, v82) [1, 2] T{_Smi}
v337 <- UnboxInt64([non-speculative], v108) [1, 2] int64
ParallelMove r3 <- r3, r1 <- r2 goto:50 B7
B6
ParallelMove r3 <- C, r1 <- r1 goto:52 B7
B7
ParallelMove fp[-1] <- r3
v338 <- BoxInt64(v21) [0, 2] T{_Smi}
v280 <- BinarySmiOp:54(<< [tr], v338 T{_Smi}, v82) [0, 4] T{_Smi}
v23 <- BinarySmiOp:62(+ [tr], v280 T{_Smi}, v11) [4, 8] T{_Smi}
v24 <- LoadIndexed([_List] v4, v23) T{*?}
Branch if StrictCompare:64(===, v24, v25) goto (8, 9)
B8
v103 <- BinarySmiOp:60(+ [tr], v338 T{_Smi}, v82) [1, 3] T{_Smi}
v340 <- UnboxInt64([non-speculative], v103) [1, 3] int64
ParallelMove r1 <- r2 goto:74 B10
B9
B10
v341 <- BoxInt64(v26) [0, 3] T{_Smi}
v281 <- BinarySmiOp:78(<< [tr], v341 T{_Smi}, v82) [0, 6] T{_Smi}
v28 <- BinarySmiOp:86(+ [tr], v281 T{_Smi}, v11) [4, 10] T{_Smi}
v29 <- LoadIndexed([_List] v4, v28) T{*?}
Branch if StrictCompare:88(===, v29, v30) goto (11, 12)
B11
v98 <- BinarySmiOp:84(+ [tr], v341 T{_Smi}, v82) [1, 4] T{_Smi}
v343 <- UnboxInt64([non-speculative], v98) [1, 4] int64
ParallelMove r1 <- r2 goto:98 B13
B12
B13
v344 <- BoxInt64(v31) [0, 4] T{_Smi}
v282 <- BinarySmiOp:102(<< [tr], v344 T{_Smi}, v82) [0, 8] T{_Smi}
v33 <- BinarySmiOp:110(+ [tr], v282 T{_Smi}, v11) [4, 12] T{_Smi}
v34 <- LoadIndexed([_List] v4, v33) T{*?}
Branch if StrictCompare:112(===, v34, v35) goto (14, 15)
B14
v93 <- BinarySmiOp:108(+ [tr], v344 T{_Smi}, v82) [1, 5] T{_Smi}
v346 <- UnboxInt64([non-speculative], v93) [1, 5] int64
ParallelMove r1 <- r2 goto:122 B16
B15
B16
v347 <- BoxInt64(v36) [0, 5] T{_Smi}
v252 <- BinarySmiOp:126(<< [tr], v347 T{_Smi}, v82) [0, 10] T{_Smi}
v38 <- BinarySmiOp:134(+ [tr], v252 T{_Smi}, v11) [4, 14] T{_Smi}
v39 <- LoadIndexed([_List] v4, v38) T{*?}
Branch if StrictCompare:136(===, v39, v40) goto (17, 18)
B17
v84 <- BinarySmiOp:128(+ [tr], v252 T{_Smi}, v77) [5, 15] T{_Smi}
v85 <- LoadIndexed([_List] v4, v84) T{*?}
v86 <- BinarySmiOp:130(- [tr], v6, v85) [-4611686018427387903, 4611686018427387903] T{_Smi}
v87 <- LoadIndexedUnsafe(fp[v86 + 8]) T{String??}
ParallelMove r1 <- r0 goto:146 B23
B18
ParallelMove r1 <- C goto:148 B23
B23
CheckStackOverflow:178(stack=0, loop=0)
Branch if StrictCompare:180(===, v41, v0) goto (24, 25)
B24
ParallelMove r6 <- C, r1 <- r3 goto:194 B26
B25
v251 <- LoadField(v41 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v352 <- UnboxInt64([non-speculative], v251 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove r1 <- r1, r2 <- r2
v48 <- StaticCall:190( _makeScheme@0150898<0> v41 T{String?}, v352 T{_Smi}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r6 <- r0, r1 <- fp[-1] goto:196 B26
B26
ParallelMove fp[-3] <- r6
Branch if StrictCompare:10(===, v20 T{String??}, v0 T{Null?}) goto (108, 109)
B108
ParallelMove r3 <- C goto:22 B29
B109
v272 <- LoadField(v20 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v353 <- UnboxInt64([non-speculative], v272 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove r3 <- r2 goto:24 B29
B29
ParallelMove r1 <- r1, r2 <- C, r3 <- r3
v52 <- StaticCall:204( _makeHost@0150898<0> v20, v356 T{_Smi}, v235 T{_Smi}) T{String??}
ParallelMove r1 <- r0, r6 <- fp[-3]
ParallelMove fp[-1] <- r1
v407 <- LoadClassId(<non-smi> v49) int64
MoveArgument(sp[1] <- v49)
MoveArgument(sp[0] <- v56)
ParallelMove r0 <- r0
v57 <- DispatchTableCall( cid=v407 String.==<0>, v49, v56) T{bool}
ParallelMove r1 <- r0, r0 <- fp[-1]
Branch if StrictCompare:236(===, v52, v0) goto (31, 38)
B31
Branch if StrictCompare:258(===, v57 T{bool}, v54) goto (33, 39)
BoolTest
B33
ParallelMove r4 <- C goto:292 B40
B39
B38
B37
ParallelMove r4 <- r0 goto:294 B40
B40
ParallelMove fp[-1] <- r4
v59 <- StrictCompare:296(!==, v58, v0) T{bool}
ParallelMove r1 <- C, r2 <- C, r3 <- C, r5 <- fp[-2], r6 <- r0, r7 <- r7
v61 <- StaticCall:302( _makePath@0150898<0> v0, v356 T{_Smi}, v356 T{_Smi}, v3, v49, v59 T{bool}, result_type = T{!null}) T{String}
ParallelMove r3 <- r0, r0 <- fp[-3]
ParallelMove fp[-2] <- r3
v155 <- LoadField(v49 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v155, v9 T{_Smi}) T{bool} goto (41, 48)
B41
ParallelMove r4 <- fp[-1]
Branch if StrictCompare:312(===, v58, v0) goto (42, 49)
B42
ParallelMove r1 <- r3, r2 <- C
v71 <- StaticCall:318( startsWith<0> v61, v70, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:322(!==, v71 T{bool}, v54) goto (44, 50)
BoolTest
B44
ParallelMove r1 <- fp[-2], r2 <- C
v75 <- StaticCall:350( _normalizeRelativePath@0150898<0> v61, v73 T{bool}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r3 <- r0 goto:370 B51
B50
B49
B48
B47
ParallelMove r1 <- fp[-2]
v63 <- StaticCall:366( _removeDotSegments@0150898<0> v61, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r3 <- r0 goto:372 B51
B51
ParallelMove fp[-2] <- r3
Branch if StrictCompare:374(===, v58, v0) goto (52, 55)
B52
ParallelMove r1 <- r3, r2 <- C
v69 <- StaticCall:378( startsWith<0> v64, v68, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:382(===, v69 T{bool}, v54) goto (53, 56)
BoolTest
B53
ParallelMove r2 <- C goto:402 B57
B56
B55
B54
ParallelMove r2 <- fp[-1] goto:404 B57
B57
ParallelMove fp[-1] <- r2
v67 <- AllocateObject:406(cls=_Uri, <not-aliased>) T{_Uri}
ParallelMove r0 <- r0, r1 <- C
StoreField(v67 T{_Uri} . _text@0150898 = v137 T{Sentinel~}, NoStoreBarrier)
StoreField(v67 T{_Uri} . pathSegments = v137 T{Sentinel~}, NoStoreBarrier)
StoreField(v67 T{_Uri} . hashCode = v137 T{Sentinel~}, NoStoreBarrier)
ParallelMove r1 <- fp[-3]
StoreField(v67 T{_Uri} . scheme = v49 T{String}, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v67 T{_Uri} . _userInfo@0150898 = v50 T{_OneByteString}, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
StoreField(v67 T{_Uri} . _host@0150898 = v66 T{String??}, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreField(v67 T{_Uri} . path = v64 T{String}, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:410(v67)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r0
v3 <- StaticCall:10( _mayContainDotSegments@0150898<0> v2, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:14(!==, v3 T{bool}, v4) goto (3, 4)
BoolTest
B3
ParallelMove r0 <- fp[-1]
DartReturn:20(v2)
B4
ParallelMove r0 <- fp[-1]
ParallelMove r1 <- C, r2 <- C
v7 <- StaticCall:24( _GrowableList@0150898.<0> v5, v367 T{_Smi}, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r3 <- r0, r1 <- fp[-1]
ParallelMove fp[-2] <- r3
v421 <- LoadClassId(<non-smi> v2) int64
ParallelMove r0 <- r0, r1 <- r1, r2 <- C
v10 <- DispatchTableCall( cid=v421 String.split<0>, v2, v9) T{List<String>}
ParallelMove r2 <- r0
ParallelMove fp[-5] <- r2
v254 <- LoadField(v10 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v327 <- UnboxInt64([non-speculative], v254) [0, 576460752303423487] int64
ParallelMove fp[-4] <- r3
ParallelMove r0 <- C, r5 <- C, r4 <- fp[-2] goto:124 B19
B19
  Loop 0
  Loop Header
CheckStackOverflow:128(stack=0, loop=1)
v259 <- LoadField(v10 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v329 <- UnboxInt64([non-speculative], v259) [0, 576460752303423487] int64
Branch if EqualityCompare(v327 T{_Smi} != v329 T{_Smi}) T{bool} goto (64, 65)
B65
  Loop 0
Branch if RelationalOp(>=, v364 T{int}, v329 T{_Smi}) T{bool} goto (6, 61)
B61
  Loop 0
ParallelMove r0 <- r6, r1 <- r5
GenericCheckBound:10(v329 T{_Smi}, v364 T{int}) [-9223372036854775808, 9223372036854775807] int64
v269 <- LoadField(v10 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v369 <- LoadIndexed:10([_List] v269, v364 T{int}) T{String}
ParallelMove fp[-1] <- r1
v139 <- BinaryInt64Op(+ [tr], v364 T{int}, v368 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-3] <- r6
v422 <- LoadClassId(<non-smi> v369) int64
MoveArgument(sp[1] <- v369)
MoveArgument(sp[0] <- v18)
ParallelMove r0 <- r0
v19 <- DispatchTableCall( cid=v422 String.==<0>, v369, v18) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:48(===, v19 T{bool}, v4) goto (7, 14)
BoolTest
B7
  Loop 0
ParallelMove r3 <- fp[-2]
v245 <- LoadField(v7 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v339 <- UnboxInt64([non-speculative], v245 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v339 T{_Smi} != v367 T{_Smi}) T{bool} goto (8, 12)
B8
  Loop 0
v90 <- BinaryInt64Op(- [tr], v339 T{_Smi}, v368 T{_Smi}) [-1, 576460752303423486] int64
ParallelMove r0 <- r1, r1 <- r2
GenericCheckBound:14(v339 T{_Smi}, v90) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r3, r2 <- r2
StaticCall:16( set:length<0> v7 T{_GrowableList}, v90 T{int}, using unchecked entrypoint)
ParallelMove r0 <- fp[-2]
v200 <- LoadField(v7 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v343 <- UnboxInt64([non-speculative], v200 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-6] <- r2
Branch if EqualityCompare(v343 T{_Smi} == v367 T{_Smi}) T{bool} goto (9, 10)
B9
  Loop 0
v189 <- LoadField(v7 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v190 <- LoadField(v189 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v347 <- UnboxInt64([non-speculative], v190 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v343 T{_Smi} == v347 T{_Smi}) T{bool} goto (43, 44)
B43
  Loop 0
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v7 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B45
B44
B45
  Loop 0
StoreField(v7 T{_GrowableList} . GrowableObjectArray.length = v45, NoStoreBarrier)
ParallelMove r0 <- C, r1 <- r3
GenericCheckBound:40(v368 T{_Smi}, v343 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v79 <- LoadField(v7 T{_GrowableList} . GrowableObjectArray.data) T{_List}
StoreIndexed:40([_List] v79, v343 T{_Smi}, v16 T{_OneByteString}, NoStoreBarrier)
ParallelMove  goto:82 B11
B10
  Loop 0
ParallelMove r2 <- r0, r4 <- C
ParallelMove  goto:84 B11
B11
B12
  Loop 0
ParallelMove r2 <- r3, r4 <- C
ParallelMove  goto:92 B13
B13
  Loop 0
ParallelMove r0 <- C goto:118 B18
B14
  Loop 0
ParallelMove r2 <- fp[-2], r4 <- C
MoveArgument(sp[1] <- v20)
MoveArgument(sp[0] <- v369)
v21 <- StaticCall:96( ==<0> v20, v369, using unchecked entrypoint, recognized_kind = OneByteString_equality, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:100(===, v21 T{bool}, v4) goto (15, 16)
BoolTest
B15
  Loop 0
ParallelMove r0 <- C, r2 <- fp[-2] goto:112 B17
B16
  Loop 0
ParallelMove r0 <- fp[-2]
v173 <- LoadField(v7 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v178 <- LoadField(v7 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v179 <- LoadField(v178 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v353 <- UnboxInt64([non-speculative], v173 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-6] <- r2
v354 <- UnboxInt64([non-speculative], v179 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v353 T{_Smi} == v354 T{_Smi}) T{bool} goto (34, 35)
B34
  Loop 0
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v7 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B36
B35
B36
  Loop 0
v57 <- BinaryInt64Op(+ [tr], v353 T{_Smi}, v368 T{_Smi}) [1, 576460752303423488] int64
v355 <- BoxInt64(v57) [1, 576460752303423488] T{_Smi}
StoreField(v7 T{_GrowableList} . GrowableObjectArray.length = v355, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v57 T{_Smi}, v353 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v60 <- LoadField(v7 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-1]
StoreIndexed:40([_List] v60, v353 T{_Smi}, v369)
ParallelMove r0 <- C goto:114 B17
B17
B18
  Loop 0
ParallelMove r0 <- r0, r5 <- fp[-3], r4 <- r2, r2 <- fp[-5], r3 <- fp[-4] goto:126 B19
B6
ParallelMove r2 <- r4
Branch if StrictCompare:132(===, v12 T{bool}, v4) goto (20, 21)
BoolTest
B20
v162 <- LoadField(v7 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v167 <- LoadField(v7 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v168 <- LoadField(v167 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v332 <- UnboxInt64([non-speculative], v162 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-3] <- r4
v333 <- UnboxInt64([non-speculative], v168 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v332 T{_Smi} == v333 T{_Smi}) T{bool} goto (25, 26)
B25
ParallelMove r1 <- r2
StaticCall:26( _growToNextCapacity@0150898<0> v7 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B27
B26
B27
v37 <- BinaryInt64Op(+ [tr], v332 T{_Smi}, v368 T{_Smi}) [1, 576460752303423488] int64
v334 <- BoxInt64(v37) [1, 576460752303423488] T{_Smi}
StoreField(v7 T{_GrowableList} . GrowableObjectArray.length = v334, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v37 T{_Smi}, v332 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v40 <- LoadField(v7 T{_GrowableList} . GrowableObjectArray.data) T{_List}
StoreIndexed:40([_List] v40, v332 T{_Smi}, v16 T{_OneByteString}, NoStoreBarrier)
ParallelMove  goto:144 B22
B21
B22
ParallelMove r1 <- r2, r2 <- C
v15 <- StaticCall:148( join<0> v7, v9, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:150(v15)
B64
ParallelMove r0 <- r2
v141 <- AllocateObject:26(cls=ConcurrentModificationError, <not-aliased>) T{ConcurrentModificationError}
ParallelMove r1 <- r0, r0 <- fp[-5]
StoreField(v141 T{ConcurrentModificationError} . modifiedObject = v10 T{_GrowableList}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:32(v141)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r3 <- r1, fp[-3] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v125 <- LoadField(v2 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
ParallelMove fp[-2] <- r0
v164 <- UnboxInt64([non-speculative], v125 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-1] <- r1
Branch if EqualityCompare(v164 T{_Smi} == v175 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:22(v58)
B4
Branch if EqualityCompare(v164 T{_Smi} == v176 T{_Smi}) T{bool} goto (5, 6)
B5
ParallelMove r0 <- r1, r1 <- C
GenericCheckBound:36(v164 T{_Smi}, v175 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v61 <- LoadField(v2 . GrowableObjectArray.data) T{_List}
v177 <- LoadIndexed:36([_List] v61, v175 T{_Smi}) T{X0?}
MoveArgument(sp[0] <- v177 T{X0?})
v57 <- StaticCall:38( _interpolateSingle@0150898<0> v177 T{X0?}) T{String}
ParallelMove r0 <- r0
DartReturn:40(v57)
B6
MoveArgument(sp[0] <- v4 T{_OneByteString})
v119 <- StaticCall:10( get:isEmpty<0> v4 T{_OneByteString}, recognized_kind = StringBaseIsEmpty, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
v120 <- BooleanNegate(v119 T{bool}) T{bool}
Branch if StrictCompare:48(===, v120 T{bool}, v8) goto (7, 8)
BoolTest
B7
ParallelMove r1 <- fp[-3]
v55 <- StaticCall:54( _joinWithSeparator@0150898<0> v2, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:56(v55)
B8
ParallelMove r2 <- fp[-3]
v63 <- LoadField:242(v2 . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v167 <- UnboxInt64:242([non-speculative], v63) [0, 576460752303423487] int64
v65 <- LoadField:242(v2 . GrowableObjectArray.data) T{_List}
ParallelMove r7 <- C, r6 <- C, r5 <- fp[-1] goto:242 B29
B29
  Loop 1
  Loop Header
CheckStackOverflow:240(stack=0, loop=1)
Branch if RelationalOp(<, v12, v164 T{_Smi}) T{bool} goto (28, 30)
B28
  Loop 1
ParallelMove r0 <- r3, r1 <- r7
GenericCheckBound:68(v167 T{_Smi}, v12) [-9223372036854775808, 9223372036854775807] int64
v178 <- LoadIndexed:68([_List] v65, v12 T{int}) T{X0}
v85 <- LoadClassId(v178 T{X0}) [1, 600] int64
Branch if EqualityCompare(v85 == v86) T{bool} goto (10, 11)
B10
  Loop 1
v114 <- LoadField(v178 T{_OneByteString} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v169 <- UnboxInt64([non-speculative], v114 T{_Smi}) [0, 2305843009213693951] int64
v53 <- BinaryInt64Op(+ [tr], v13, v169 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v54 <- BinaryInt64Op(+ [tr], v12 T{int}, v176 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r7 <- r0, r6 <- r1 goto:238 B29
B11
ParallelMove r0 <- r7 goto:126 B14
B14
  Loop 0
  Loop Header
CheckStackOverflow:124(stack=0, loop=2)
v48 <- BinaryInt64Op(+ [tr], v20, v176 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v48 == v164 T{_Smi}) T{bool} goto (12, 13)
B13
  Loop 0
ParallelMove r0 <- r3, r1 <- r4
GenericCheckBound:116(v167 T{_Smi}, v48) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r4 goto:122 B14
B12
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v6)
MoveArgument(sp[0] <- v125 T{_Smi})
v51 <- StaticCall:110( _concatRangeNative@0150898<0> v2, v6, v125 T{_Smi}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:112(v51)
B30
ParallelMove r1 <- r2, r2 <- r6
v16 <- StaticCall:246( _concatAll@0150898<0> v2, v13, result_type = T{!null}) T{*}
ParallelMove r0 <- r0
DartReturn:248(v16)
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- AllocateObject:10(cls=StringBuffer) T{StringBuffer}
ParallelMove r1 <- r0, r0 <- r0
ParallelMove fp[-2] <- r0
StaticCall:12( StringBuffer.<0> v3)
ParallelMove r3 <- fp[-1]
v15 <- LoadField(v2 . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v69 <- UnboxInt64([non-speculative], v15) [0, 576460752303423487] int64
ParallelMove r0 <- r1, r1 <- C
GenericCheckBound:14(v69 T{_Smi}, v74 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v17 <- LoadField(v2 . GrowableObjectArray.data) T{_List}
v75 <- LoadIndexed:14([_List] v17, v74 T{_Smi}) T{X0}
ParallelMove r1 <- fp[-2], r2 <- r2
StaticCall:16( write<0> v3, v75 T{X0}, using unchecked entrypoint)
ParallelMove r1 <- C goto:42 B5
B5
  Loop 0
  Loop Header
ParallelMove fp[-3] <- r1
CheckStackOverflow:46(stack=0, loop=1)
v53 <- LoadField(v2 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v71 <- UnboxInt64([non-speculative], v53 T{_Smi}) [0, 576460752303423487] int64
Branch if RelationalOp(<, v7, v71 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 0
MoveArgument(sp[0] <- v12 T{_OneByteString})
v30 <- StaticCall:12( get:isEmpty<0> v12 T{_OneByteString}, recognized_kind = StringBaseIsEmpty, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:16(===, v30 T{bool}, v10 T{bool}) goto (10, 11)
BoolTest
B10
B11
  Loop 0
ParallelMove r1 <- fp[-2]
StaticCall:26( _consumeBuffer@0150898<0> v3 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-2], r2 <- C
StaticCall:28( _addPart@0150898<0> v3 T{StringBuffer}, v12 T{_OneByteString}, using unchecked entrypoint)
ParallelMove  goto:30 B12
B12
  Loop 0
v19 <- LoadField(v2 . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v72 <- UnboxInt64([non-speculative], v19) [0, 576460752303423487] int64
ParallelMove r0 <- r1, r1 <- r3
GenericCheckBound:36(v72 T{_Smi}, v7) [-9223372036854775808, 9223372036854775807] int64
v21 <- LoadField(v2 . GrowableObjectArray.data) T{_List}
v77 <- LoadIndexed:36([_List] v21, v7 T{int}) T{X0}
MoveArgument(sp[0] <- v77 T{X0})
v42 <- StaticCall:10( _interpolateSingle@0150898<0> v77 T{X0}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-4] <- r0
MoveArgument(sp[0] <- v42)
v43 <- StaticCall:12( get:isEmpty<0> v42, recognized_kind = StringBaseIsEmpty, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:16(===, v43 T{bool}, v10 T{bool}) goto (15, 16)
BoolTest
B15
B16
  Loop 0
ParallelMove r1 <- fp[-2]
StaticCall:26( _consumeBuffer@0150898<0> v3 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-2], r2 <- fp[-4]
StaticCall:28( _addPart@0150898<0> v3 T{StringBuffer}, v42, using unchecked entrypoint)
ParallelMove  goto:30 B17
B17
  Loop 0
v14 <- BinaryInt64Op(+ [tr], v7 T{int}, v76 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r1 goto:44 B5
B4
MoveArgument(sp[0] <- v3)
v11 <- StaticCall:48( toString<0> v3, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:50(v11)
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove r2 <- r1, r0 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v2 . _parts@0150898) T{_GrowableList?}
ParallelMove fp[-5] <- r3
v73 <- LoadField(v3 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v6 <- LoadField(v2 . _partsCodeUnits@0150898) [-9223372036854775808, 9223372036854775807] int64
v126 <- UnboxInt64([non-speculative], v73 T{_Smi}) [0, 2305843009213693951] int64
v7 <- BinaryInt64Op(+ [tr], v6, v126 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{StringBuffer} . _partsCodeUnits@0150898 = v7 T{int} <int64>)
v8 <- LoadField(v2 . _partsCodeUnitsSinceCompaction@0150898) [-9223372036854775808, 9223372036854775807] int64
v9 <- BinaryInt64Op(+ [tr], v8, v126 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{StringBuffer} . _partsCodeUnitsSinceCompaction@0150898 = v9 T{int} <int64>)
Branch if StrictCompare:26(===, v4, v0) goto (3, 4)
B3
ParallelMove r1 <- C
v17 <- StaticCall:32( _GrowableList@0150898.withCapacity<0> v16, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r0 <- r0
ParallelMove fp[-4] <- r0
v101 <- LoadField(v17 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v106 <- LoadField(v17 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v107 <- LoadField(v106 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v129 <- UnboxInt64([non-speculative], v101 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-3] <- r2
v130 <- UnboxInt64([non-speculative], v107 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v129 T{_Smi} == v130 T{_Smi}) T{bool} goto (22, 23)
B22
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v17 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B24
B23
B24
v55 <- BinaryInt64Op(+ [tr], v129 T{_Smi}, v142 T{_Smi}) [1, 576460752303423488] int64
v131 <- BoxInt64(v55) [1, 576460752303423488] T{_Smi}
StoreField(v17 T{_GrowableList} . GrowableObjectArray.length = v131, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v55 T{_Smi}, v129 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v58 <- LoadField(v17 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-2]
StoreIndexed:40([_List] v58, v129 T{_Smi}, v3 T{String})
ParallelMove r0 <- r2
StoreField(v2 T{StringBuffer} . _parts@0150898 = v17 T{_GrowableList})
ParallelMove  goto:70 B8
B4
ParallelMove r4 <- r2
v90 <- LoadField(v4 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v95 <- LoadField(v4 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v96 <- LoadField(v95 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v136 <- UnboxInt64([non-speculative], v90 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-3] <- r5
v137 <- UnboxInt64([non-speculative], v96 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v136 T{_Smi} == v137 T{_Smi}) T{bool} goto (11, 12)
B11
ParallelMove r1 <- r3
StaticCall:26( _growToNextCapacity@0150898<0> v4 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B13
B12
B13
v30 <- BinaryInt64Op(+ [tr], v136 T{_Smi}, v142 T{_Smi}) [1, 576460752303423488] int64
v138 <- BoxInt64(v30) [1, 576460752303423488] T{_Smi}
StoreField(v4 T{_GrowableList} . GrowableObjectArray.length = v138, NoStoreBarrier)
ParallelMove r0 <- r5, r1 <- r4
GenericCheckBound:40(v30 T{_Smi}, v136 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v33 <- LoadField(v4 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-2]
StoreIndexed:40([_List] v33, v136 T{_Smi}, v3 T{String})
v11 <- LoadField(v2 . _partsCompactionIndex@0150898) [-9223372036854775808, 9223372036854775807] int64
v12 <- BinaryInt64Op(- [tr], v30 T{_Smi}, v11) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v12 == v143 T{_Smi}) T{bool} goto (5, 6)
B5
ParallelMove r1 <- r3
StaticCall:58( _compact@0150898<0> v2, using unchecked entrypoint)
ParallelMove  goto:64 B7
B6
B7
B8
ParallelMove r0 <- C
DartReturn:74(v0)
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _parts@0150898) T{_GrowableList?}
ParallelMove fp[-1] <- r4
CheckNull:12(v3, CastError) T{_GrowableList}
v4 <- LoadField(v2 . _partsCodeUnitsSinceCompaction@0150898) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v4, v93 T{_Smi}) T{bool} goto (3, 4)
B3
v10 <- LoadField(v2 . _partsCompactionIndex@0150898) [-9223372036854775808, 9223372036854775807] int64
v13 <- BinaryInt64Op(+ [tr], v10 T{int}, v94 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r4, r2 <- r2, r3 <- r3
v14 <- StaticCall:32( _concatRange@0150898<0> v3 T{_GrowableList}, v10, v13, result_type = T{!null}) T{String}
ParallelMove r3 <- r0, r0 <- fp[-1]
ParallelMove fp[-3] <- r3
v39 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v84 <- UnboxInt64([non-speculative], v39 T{_Smi}) [0, 576460752303423487] int64
v16 <- BinaryInt64Op(- [tr], v84 T{_Smi}, v94 T{_Smi}) [-128, 576460752303423359] int64
ParallelMove r1 <- r0, r2 <- r1
StaticCall:38( set:length<0> v3 T{_GrowableList}, v16, using unchecked entrypoint)
ParallelMove r0 <- fp[-1]
v64 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v69 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v70 <- LoadField(v69 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v87 <- UnboxInt64([non-speculative], v64 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-4] <- r2
v88 <- UnboxInt64([non-speculative], v70 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v87 T{_Smi} == v88 T{_Smi}) T{bool} goto (14, 15)
B14
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v3 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B16
B15
B16
v51 <- BinaryInt64Op(+ [tr], v87 T{_Smi}, v95 T{_Smi}) [1, 576460752303423488] int64
v89 <- BoxInt64(v51) [1, 576460752303423488] T{_Smi}
StoreField(v3 T{_GrowableList} . GrowableObjectArray.length = v89, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v51 T{_Smi}, v87 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v54 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-3]
StoreIndexed:40([_List] v54, v87 T{_Smi}, v14 T{String})
ParallelMove  goto:46 B5
B4
ParallelMove r2 <- r4
ParallelMove  goto:48 B5
B5
StoreField(v2 T{StringBuffer} . _partsCodeUnitsSinceCompaction@0150898 = v96 T{_Smi} <int64>)
v28 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v92 <- UnboxInt64([non-speculative], v28 T{_Smi}) [0, 576460752303423487] int64
StoreField(v2 T{StringBuffer} . _partsCompactionIndex@0150898 = v92 T{_Smi} <int64>)
ParallelMove r0 <- C
DartReturn:56(v0)
CheckStackOverflowSlowPath
slow path check null (cast) operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r4 <- r1
CheckStackOverflow:8(stack=0, loop=0)
v5 <- BinaryInt64Op(- [tr], v4, v3) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v5 == v24 T{_Smi}) T{bool} goto (3, 4)
B3
v11 <- LoadField(v2 . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v22 <- UnboxInt64([non-speculative], v11) [0, 576460752303423487] int64
ParallelMove r0 <- r1, r1 <- r2
GenericCheckBound:22(v22 T{_Smi}, v3) [-4611686018427387904, 4611686018427387903] int64
v13 <- LoadField(v2 . GrowableObjectArray.data) T{_List}
v25 <- LoadIndexed:22([_List] v13, v3 T{_Smi}) T{String}
ParallelMove r0 <- r1
DartReturn:24(v25 T{String})
B4
v20 <- BoxInt64(v3) [-4611686018427387904, 4611686018427387903] T{_Smi}
v21 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v20 T{_Smi})
MoveArgument(sp[0] <- v21 T{int})
v9 <- StaticCall:28( _concatRangeNative@0150898<0> v2, v20 T{_Smi}, v21 T{int}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:30(v9)
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C
v4 <- StaticCall:10( _allocateData@0150898<0> v16 T{_Smi}, result_type = T{_List}) T{_List}
ParallelMove r1 <- fp[-1], r0 <- r0
ParallelMove fp[-1] <- r0
v12 <- AllocateObject:10(cls=_GrowableList, v2 T{*?}, <not-aliased>) T{_GrowableList}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v12 . GrowableObjectArray.data = v4 T{_List}, NoStoreBarrier)
StoreField(v12 . GrowableObjectArray.length = v14 T{_Smi}, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:14(v12 T{_GrowableList})
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r2 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _bufferPosition@0150898) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v3 == v35 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:22(v0)
B4
v7 <- LoadField(v2 . _bufferCodeUnitMagnitude@0150898) [-9223372036854775808, 9223372036854775807] int64
v9 <- RelationalOp(<=, v7, v36 T{_Smi}) T{bool}
v10 <- LoadField(v2 . _buffer@0150898) T{_Uint16List?}
CheckNull:32(v10, CastError) T{_Uint16List}
v34 <- BoxInt64(v3 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[2] <- v10 T{_Uint16List})
MoveArgument(sp[1] <- v34 T{int})
MoveArgument(sp[0] <- v9)
v12 <- StaticCall:36( _create@0150898<0> v10 T{_Uint16List}, v34 T{int}, v9, result_type = T{!null}) T{String}
ParallelMove r2 <- r0, r1 <- fp[-1], r0 <- C
StoreField(v2 T{StringBuffer} . _bufferCodeUnitMagnitude@0150898 = v35 T{_Smi} <int64>)
StoreField(v2 T{StringBuffer} . _bufferPosition@0150898 = v35 T{_Smi} <int64>)
ParallelMove r1 <- r1, r2 <- r2
StaticCall:42( _addPart@0150898<0> v2, v12, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:44(v0)
CheckStackOverflowSlowPath
slow path check null (cast) operation
B0
B1
Enter frame
ParallelMove fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[0] <- v3)
v4 <- StaticCall:10( _interpolateSingle@0150898<0> v3) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-2] <- r0
MoveArgument(sp[0] <- v4)
v5 <- StaticCall:12( get:isEmpty<0> v4, recognized_kind = StringBaseIsEmpty, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:16(===, v5 T{bool}, v6) goto (3, 4)
BoolTest
B3
ParallelMove r0 <- C
DartReturn:22(v0)
B4
ParallelMove r1 <- fp[-1]
StaticCall:26( _consumeBuffer@0150898<0> v2, using unchecked entrypoint)
ParallelMove r1 <- fp[-1], r2 <- fp[-2]
StaticCall:28( _addPart@0150898<0> v2, v4, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:30(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v5 <- LoadField(v3 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v7 <- BinarySmiOp:4(- [tr], v5, v6) [-1, 4611686018427387902] T{_Smi}
Branch if RelationalOp:6(<=, v6, v7) T{bool} goto (2, 3)
B2
v13 <- LoadIndexedUnsafe(fp[v7 T{_Smi} + 8]) T{Object}
ParallelMove r2 <- r0 goto:20 B5
B3
ParallelMove r2 <- C goto:18 B5
B5
CheckStackOverflow:26(stack=0, loop=0)
StoreField(v2 . _partsCodeUnits@0150898 = v19 T{_Smi} <int64>)
StoreField(v2 . _partsCompactionIndex@0150898 = v19 T{_Smi} <int64>)
StoreField(v2 . _partsCodeUnitsSinceCompaction@0150898 = v19 T{_Smi} <int64>)
StoreField(v2 . _bufferPosition@0150898 = v19 T{_Smi} <int64>)
StoreField(v2 . _bufferCodeUnitMagnitude@0150898 = v19 T{_Smi} <int64>)
ParallelMove r1 <- r1, r2 <- r2
StaticCall:30( write<0> v2, v11, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:32(v0)
CheckStackOverflowSlowPath
B0
B1
Intrinsic
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r0, r2 <- C
v4 <- StaticCall:10( startsWith<0> v2, v3, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:14(===, v4 T{bool}, v5) goto (3, 4)
BoolTest
B3
ParallelMove r0 <- C
DartReturn:20(v5)
B4
ParallelMove r1 <- fp[-1]
v21 <- LoadClassId(<non-smi> v2) int64
ParallelMove r0 <- r0, r1 <- r1, r2 <- C
v7 <- DispatchTableCall( cid=v21 String.indexOf<0>, v2, v6) int64
ParallelMove r0 <- r0
v10 <- EqualityCompare(v7 T{int} != v14) T{bool}
ParallelMove r0 <- r1
DartReturn:32(v10 T{bool})
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r0
v4 <- StaticCall:10( _mayContainDotSegments@0150898<0> v2, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:14(!==, v4 T{bool}, v5) goto (3, 7)
BoolTest
B3
ParallelMove r0 <- fp[-2]
Branch if StrictCompare:22(!==, v3 T{bool}, v5) goto (4, 5)
BoolTest
B4
ParallelMove r1 <- fp[-1]
v41 <- StaticCall:28( _escapeScheme@0150898<0> v2, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:34 B6
B5
ParallelMove r0 <- fp[-1] goto:36 B6
B6
ParallelMove r0 <- r0
DartReturn:38(v40)
B7
ParallelMove r3 <- fp[-1], r0 <- fp[-2]
ParallelMove r1 <- C, r2 <- C
v8 <- StaticCall:42( _GrowableList@0150898.<0> v6, v466 T{_Smi}, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r3 <- r0, r1 <- fp[-1]
ParallelMove fp[-3] <- r3
v547 <- LoadClassId(<non-smi> v2) int64
ParallelMove r0 <- r0, r1 <- r1, r2 <- C
v11 <- DispatchTableCall( cid=v547 String.split<0>, v2, v10) T{List<String>}
ParallelMove r2 <- r0
ParallelMove fp[-6] <- r2
v310 <- LoadField(v11 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v417 <- UnboxInt64([non-speculative], v310) [0, 576460752303423487] int64
ParallelMove fp[-5] <- r3
ParallelMove r6 <- C, r5 <- C, r4 <- fp[-3] goto:144 B22
B22
  Loop 0
  Loop Header
ParallelMove fp[-8] <- r6
CheckStackOverflow:148(stack=0, loop=1)
v315 <- LoadField(v11 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v419 <- UnboxInt64([non-speculative], v315) [0, 576460752303423487] int64
Branch if EqualityCompare(v417 T{_Smi} != v419 T{_Smi}) T{bool} goto (91, 92)
B92
  Loop 0
Branch if RelationalOp(>=, v463 T{int}, v419 T{_Smi}) T{bool} goto (9, 88)
B88
  Loop 0
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound:10(v419 T{_Smi}, v463 T{int}) [-9223372036854775808, 9223372036854775807] int64
v325 <- LoadField(v11 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v470 <- LoadIndexed:10([_List] v325, v463 T{int}) T{String}
ParallelMove fp[-1] <- r1
v192 <- BinaryInt64Op(+ [tr], v463 T{int}, v467 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-4] <- r0
MoveArgument(sp[1] <- v21)
MoveArgument(sp[0] <- v470)
v31 <- StaticCall:62( ==<0> v21, v470, using unchecked entrypoint, recognized_kind = OneByteString_equality, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:66(===, v31 T{bool}, v5) goto (10, 17)
BoolTest
B10
  Loop 0
ParallelMove r2 <- fp[-3]
v268 <- LoadField(v8 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v437 <- UnboxInt64([non-speculative], v268 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v437 T{_Smi} != v466 T{_Smi}) T{bool} goto (11, 14)
B11
  Loop 0
Branch if RelationalOp(>, v437 T{_Smi}, v466 T{_Smi}) T{bool} goto (79, 80)
B79
  Loop 0
v145 <- BinaryInt64Op(- [tr], v437 T{_Smi}, v467 T{_Smi}) [-1, 576460752303423486] int64
ParallelMove r0 <- r1, r1 <- r3
GenericCheckBound:26(v437 T{_Smi}, v145) [-9223372036854775808, 9223372036854775807] int64
v149 <- LoadField(v8 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v471 <- LoadIndexed:26([_List] v149, v145 T{int}) T{String}
v549 <- LoadClassId(<non-smi> v471 T{String}) int64
MoveArgument(sp[1] <- v471 T{String})
MoveArgument(sp[0] <- v21)
ParallelMove r0 <- r0
v39 <- DispatchTableCall( cid=v549 String.==<0>, v471 T{String}, v21) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:86(!==, v39 T{bool}, v5) goto (12, 15)
BoolTest
B12
  Loop 0
ParallelMove r3 <- fp[-3]
v253 <- LoadField(v8 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v442 <- UnboxInt64([non-speculative], v253 T{_Smi}) [0, 576460752303423487] int64
v128 <- BinaryInt64Op(- [tr], v442 T{_Smi}, v467 T{_Smi}) [-1, 576460752303423486] int64
ParallelMove r0 <- r1, r1 <- r2
GenericCheckBound:14(v442 T{_Smi}, v128) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r3, r2 <- r2
StaticCall:16( set:length<0> v8 T{_GrowableList}, v128 T{int}, using unchecked entrypoint)
ParallelMove r0 <- C, r2 <- fp[-3] goto:110 B16
B15
B14
B13
  Loop 0
v242 <- LoadField(v8 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v247 <- LoadField(v8 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v248 <- LoadField(v247 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v447 <- UnboxInt64([non-speculative], v242 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-7] <- r2
v448 <- UnboxInt64([non-speculative], v248 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v447 T{_Smi} == v448 T{_Smi}) T{bool} goto (67, 68)
B67
  Loop 0
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v8 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B69
B68
B69
  Loop 0
v114 <- BinaryInt64Op(+ [tr], v447 T{_Smi}, v467 T{_Smi}) [1, 576460752303423488] int64
v449 <- BoxInt64(v114) [1, 576460752303423488] T{_Smi}
StoreField(v8 T{_GrowableList} . GrowableObjectArray.length = v449, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v114 T{_Smi}, v447 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v117 <- LoadField(v8 T{_GrowableList} . GrowableObjectArray.data) T{_List}
StoreIndexed:40([_List] v117, v447 T{_Smi}, v21 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- C goto:112 B16
B16
  Loop 0
ParallelMove r6 <- r0 goto:138 B21
B17
  Loop 0
ParallelMove r2 <- fp[-3]
MoveArgument(sp[1] <- v32)
MoveArgument(sp[0] <- v470)
v33 <- StaticCall:116( ==<0> v32, v470, using unchecked entrypoint, recognized_kind = OneByteString_equality, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:120(===, v33 T{bool}, v5) goto (18, 19)
BoolTest
B18
  Loop 0
ParallelMove r0 <- C, r2 <- fp[-3] goto:132 B20
B19
  Loop 0
ParallelMove r0 <- fp[-3]
v231 <- LoadField(v8 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v236 <- LoadField(v8 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v237 <- LoadField(v236 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v454 <- UnboxInt64([non-speculative], v231 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-7] <- r2
v455 <- UnboxInt64([non-speculative], v237 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v454 T{_Smi} == v455 T{_Smi}) T{bool} goto (58, 59)
B58
  Loop 0
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v8 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B60
B59
B60
  Loop 0
v95 <- BinaryInt64Op(+ [tr], v454 T{_Smi}, v467 T{_Smi}) [1, 576460752303423488] int64
v456 <- BoxInt64(v95) [1, 576460752303423488] T{_Smi}
StoreField(v8 T{_GrowableList} . GrowableObjectArray.length = v456, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v95 T{_Smi}, v454 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v98 <- LoadField(v8 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-1]
StoreIndexed:40([_List] v98, v454 T{_Smi}, v470)
ParallelMove r0 <- C goto:134 B20
B20
  Loop 0
ParallelMove r6 <- r0 goto:140 B21
B21
  Loop 0
ParallelMove r6 <- r6, r5 <- fp[-4], r4 <- r2, r2 <- fp[-6], r3 <- fp[-5] goto:146 B22
B9
ParallelMove r2 <- r4
v226 <- LoadField(v8 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v420 <- UnboxInt64([non-speculative], v226 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v420 T{_Smi} == v466 T{_Smi}) T{bool} goto (26, 24)
B26
B24
Branch if EqualityCompare(v420 T{_Smi} == v467 T{_Smi}) T{bool} goto (23, 29)
B23
ParallelMove r0 <- r1, r1 <- C
GenericCheckBound:168(v420 T{_Smi}, v466 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v44 <- LoadField(v8 . GrowableObjectArray.data) T{_List}
v468 <- LoadIndexed:168([_List] v44, v466 T{_Smi}) T{String}
MoveArgument(sp[0] <- v468 T{String})
v28 <- StaticCall:170( get:isEmpty<0> v468 T{String}, recognized_kind = StringBaseIsEmpty, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:174(===, v28 T{bool}, v5) goto (27, 30)
BoolTest
B27
B25
ParallelMove r0 <- C
DartReturn:192(v29)
B30
B29
B28
Branch if StrictCompare:206(===, v13 T{bool}, v5) goto (33, 31)
BoolTest
B33
B31
ParallelMove r1 <- fp[-3]
v20 <- StaticCall:210( get:last<0> v8, result_type = T{!null}) T{X0}
ParallelMove r0 <- r0
v548 <- LoadClassId(<non-smi> v20) int64
MoveArgument(sp[1] <- v20)
MoveArgument(sp[0] <- v21)
ParallelMove r0 <- r1
v22 <- DispatchTableCall( cid=v548 String.==<0>, v20, v21) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:216(===, v22 T{bool}, v5) goto (34, 35)
BoolTest
B34
B32
v215 <- LoadField(v8 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v220 <- LoadField(v8 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v221 <- LoadField(v220 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v426 <- UnboxInt64([non-speculative], v215 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-4] <- r2
v427 <- UnboxInt64([non-speculative], v221 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v426 T{_Smi} == v427 T{_Smi}) T{bool} goto (45, 46)
B45
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v8 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B47
B46
B47
v64 <- BinaryInt64Op(+ [tr], v426 T{_Smi}, v467 T{_Smi}) [1, 576460752303423488] int64
v428 <- BoxInt64(v64) [1, 576460752303423488] T{_Smi}
StoreField(v8 T{_GrowableList} . GrowableObjectArray.length = v428, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v64 T{_Smi}, v426 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v67 <- LoadField(v8 T{_GrowableList} . GrowableObjectArray.data) T{_List}
StoreIndexed:40([_List] v67, v426 T{_Smi}, v26 T{_OneByteString}, NoStoreBarrier)
ParallelMove  goto:238 B36
B35
ParallelMove r2 <- fp[-3]
ParallelMove  goto:240 B36
B36
Branch if StrictCompare:244(!==, v3 T{bool}, v5) goto (37, 38)
BoolTest
B37
v46 <- LoadField(v8 . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v431 <- UnboxInt64([non-speculative], v46) [0, 576460752303423487] int64
ParallelMove r0 <- r1, r1 <- C
GenericCheckBound:250(v431 T{_Smi}, v466 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v48 <- LoadField(v8 . GrowableObjectArray.data) T{_List}
v469 <- LoadIndexed:250([_List] v48, v466 T{_Smi}) T{String}
ParallelMove r1 <- r1
v25 <- StaticCall:252( _escapeScheme@0150898<0> v469 T{String}, result_type = T{!null}) T{String}
ParallelMove r3 <- r0, r2 <- fp[-3]
v50 <- LoadField(v8 . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v433 <- UnboxInt64([non-speculative], v50) [0, 576460752303423487] int64
ParallelMove r0 <- r1, r1 <- C
GenericCheckBound:254(v433 T{_Smi}, v466 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v52 <- LoadField(v8 . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- r3
StoreIndexed:254([_List] v52, v466 T{_Smi}, v25)
ParallelMove  goto:260 B39
B38
B39
ParallelMove r1 <- r2, r2 <- C
v23 <- StaticCall:264( join<0> v8, v10, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:266(v23)
B80
v142 <- StaticCall:32( noElement<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:34(v142)
B91
ParallelMove r0 <- r2
v194 <- AllocateObject:26(cls=ConcurrentModificationError, <not-aliased>) T{ConcurrentModificationError}
ParallelMove r1 <- r0, r0 <- fp[-6]
StoreField(v194 T{ConcurrentModificationError} . modifiedObject = v11 T{_GrowableList}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:32(v194)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
v2 <- AllocateObject:10(cls=StateError) T{StateError}
ParallelMove r0 <- r0, r1 <- C
StoreField(v2 T{StateError} . message = v3 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:14(v2)
B0
B1
Enter frame
ParallelMove r3 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v108 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v158 <- UnboxInt64([non-speculative], v108 T{_Smi}) [0, 2305843009213693951] int64
Branch if RelationalOp(>=, v158 T{_Smi}, v169 T{_Smi}) T{bool} goto (3, 17)
B3
ParallelMove r0 <- r2, r1 <- C
t0 <- GenericCheckBound:20(v158 T{_Smi}, v170 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v75 <- LoadClassId(v2 T{_StringBase}) [93, 94] T{_Smi}
Branch if StrictCompare:20(===, v75, v61 T{_Smi}) goto (31, 32)
B31
v79 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v170 T{_Smi}) [0, 255] int64
ParallelMove r0 <- r0 goto:20 B30
B32
v77 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v170 T{_Smi}) [0, 65535] int64
ParallelMove r0 <- r0 goto:20 B30
B30
v88 <- BinaryInt64Op(| [tr], v78 T{_Smi}, v171 T{_Smi}) [0, 65535] int64
Branch if RelationalOp(<=, v172 T{_Smi}, v88) T{bool} goto (36, 43)
B36
Branch if RelationalOp(<=, v88, v173 T{_Smi}) T{bool} goto (4, 41)
B4
ParallelMove r8 <- C, r7 <- C, r6 <- C, r5 <- C goto:122 B15
B15
  Loop 0
  Loop Header
ParallelMove fp[-1] <- r8
CheckStackOverflow:126(stack=0, loop=1)
Branch if RelationalOp(<, v13, v158 T{_Smi}) T{bool} goto (5, 6)
B5
  Loop 0
Branch if StrictCompare:50(===, v75 T{_Smi}, v61 T{_Smi}) goto (24, 25)
B24
  Loop 0
v57 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v13 T{int}) [0, 255] int64
ParallelMove r9 <- r0 goto:50 B23
B25
  Loop 0
v55 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v13 T{int}) [0, 65535] int64
ParallelMove r9 <- r0 goto:50 B23
B23
  Loop 0
Branch if EqualityCompare(v56 T{_Smi} == v175 T{_Smi}) T{bool} goto (7, 8)
B8
  Loop 0
Branch if RelationalOp(>, v56 T{_Smi}, v176 T{_Smi}) T{bool} goto (11, 9)
B9
  Loop 0
v25 <- ShiftInt64Op(>> [tr], v56 T{_Smi}, v177 T{_Smi}) [0, 4095] int64
ParallelMove r0 <- C, r1 <- r10
GenericCheckBound:86(v178 T{_Smi}, v25) [-9223372036854775808, 9223372036854775807] int64
v179 <- LoadIndexed:86([_List] v23, v25 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r9 <- r9
v198 <- IntConverter(int64->uint32[tr], v56 T{_Smi}) uint32
v28 <- BinaryUint32Op(& [tr], v198 T{_Smi}, v200 T{_Smi}) [0, 15] uint32
ParallelMove r1 <- r1
v199 <- IntConverter(uint32->int64, v28) int64
v29 <- ShiftInt64Op(<< [tr], v174 T{_Smi}, v199 T{_Smi}) [1, 32768] int64
v164 <- UnboxInt64([non-speculative], v179 T{int?}) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v164, v29) goto (12, 14)
B14
  Loop 0
v32 <- BinaryInt64Op(+ [tr], v13 T{int}, v174 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r8 <- r0 goto:124 B15
B12
B11
B10
B7
v160 <- BoxInt64(v13 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v160 T{int})
ParallelMove r1 <- r3, r2 <- C
v35 <- StaticCall:64( substring<0> v2, v170 T{_Smi}, v160 T{int}, using unchecked entrypoint) T{String}
ParallelMove r1 <- C, r2 <- C, r0 <- r0
ParallelMove fp[-3] <- r0
v34 <- CreateArray:62(v0, v33) T{_List}
ParallelMove r3 <- r0, r0 <- fp[-3]
ParallelMove fp[-4] <- r3
StoreIndexed([_List] v34, v9, v35, NoStoreBarrier)
StoreIndexed([_List] v34, v12, v36, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
v37 <- BinaryInt64Op(+ [tr], v13 T{int}, v174 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-2], r2 <- r2
v38 <- StaticCall:68( substring<0> v2, v37, using unchecked entrypoint) T{String}
ParallelMove r1 <- fp[-4], r0 <- r0
StoreIndexed([_List] v34, v4, v38)
MoveArgument(sp[0] <- v34)
v39 <- StaticCall:70( _interpolate@0150898<0> v34, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:72(v39)
B6
B13
B41
B43
B18
B17
B16
B19
ParallelMove r0 <- fp[-2]
DartReturn:146(v2)
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove r4 <- r1, r1 <- r2, r2 <- r6, fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3, fp[-4] <- r5, fp[-5] <- r6, fp[-6] <- r7
CheckStackOverflow:8(stack=0, loop=0)
v77 <- LoadClassId(<non-smi> v6) int64
MoveArgument(sp[1] <- v6)
MoveArgument(sp[0] <- v8)
ParallelMove r0 <- r0
v9 <- DispatchTableCall( cid=v77 String.==<0>, v6, v8) T{bool}
ParallelMove r0 <- r0
ParallelMove fp[-8] <- r0
Branch if StrictCompare:16(===, v9 T{bool}, v10) goto (5, 4)
BoolTest
B5
ParallelMove r3 <- C goto:28 B3
B4
ParallelMove r3 <- fp[-6] goto:24 B3
B3
ParallelMove fp[-7] <- r3
Branch if StrictCompare:30(===, v2, v0) goto (6, 7)
B6
ParallelMove r1 <- C, r2 <- C
v24 <- AllocateClosure:36(v23, v0) T{_Closure}
ParallelMove r0 <- r0
MoveArgument(sp[2] <- v22)
MoveArgument(sp[1] <- v5)
MoveArgument(sp[0] <- v24)
v25 <- StaticCall:38( map<1> v22, v5, v24, using unchecked entrypoint, result_type = T{MappedListIterable}) T{MappedListIterable}
ParallelMove r1 <- r0, r2 <- C
v26 <- StaticCall:40( join<0> v25, v17, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:48 B8
B7
MoveArgument(sp[1] <- v10)
MoveArgument(sp[0] <- v10)
ParallelMove r1 <- r1, r2 <- fp[-2], r3 <- fp[-3], r5 <- C
v13 <- StaticCall:44( _normalizeOrSubstring@0150898<0> v2 T{String?}, v3, v4, v12, v10, v10, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:50 B8
B8
ParallelMove fp[-1] <- r0
v32 <- LoadField(v14 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v32, v35 T{_Smi}) T{bool} goto (9, 12)
B9
ParallelMove r1 <- fp[-8]
Branch if StrictCompare:64(===, v9 T{bool}, v10) goto (10, 11)
BoolTest
B10
ParallelMove r0 <- C
DartReturn:70(v17)
B11
ParallelMove r1 <- r0 goto:114 B19
B12
ParallelMove r1 <- fp[-7]
Branch if StrictCompare:78(===, v11 T{bool}, v10) goto (13, 16)
BoolTest
B13
ParallelMove r1 <- r0, r2 <- C
v18 <- StaticCall:82( startsWith<0> v14, v17, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:86(!==, v18 T{bool}, v10) goto (14, 17)
BoolTest
B14
MoveArgument(sp[1] <- v17)
MoveArgument(sp[0] <- v14)
v19 <- StaticCall:94( +<0> v17, v14, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:108 B18
B17
B16
B15
ParallelMove r0 <- fp[-1] goto:110 B18
B18
ParallelMove r1 <- r0 goto:116 B19
B19
ParallelMove r1 <- r1, r2 <- fp[-5], r3 <- fp[-6]
v21 <- StaticCall:118( _normalizePath@0150898<0> v20, v6, v7, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:120(v21)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r3 <- r1, r0 <- r3, fp[-1] <- r1, fp[-2] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v25 <- LoadField(v3 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v25, v28 T{_Smi}) T{bool} goto (3, 11)
B3
Branch if StrictCompare:20(!==, v4 T{bool}, v6) goto (4, 12)
BoolTest
B4
ParallelMove r1 <- r3, r2 <- C
v9 <- StaticCall:26( startsWith<0> v2, v8, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:30(!==, v9 T{bool}, v6) goto (5, 13)
BoolTest
B5
ParallelMove r1 <- fp[-1], r2 <- C
v11 <- StaticCall:36( startsWith<0> v2, v10, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:40(!==, v11 T{bool}, v6) goto (7, 14)
BoolTest
B7
ParallelMove r1 <- fp[-1], r2 <- fp[-2]
v14 <- StaticCall:68( _normalizeRelativePath@0150898<0> v2, v4 T{bool}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:70(v14)
B14
B13
B12
B11
B10
ParallelMove r1 <- fp[-1]
v7 <- StaticCall:90( _removeDotSegments@0150898<0> v2, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:92(v7)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r8 <- r1, r7 <- r2, r0 <- r3, fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3
v8 <- LoadField(v6 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v15 <- LoadIndexed([_List] v6, v9 T{_Smi}) T{*?}
Branch if StrictCompare:16(===, v15, v16) goto (2, 3)
B2
v36 <- LoadIndexed([_List] v6, v28 T{_Smi}) T{*?}
v37 <- BinarySmiOp:10(- [tr], v8, v36) [-4611686018427387903, 4611686018427387903] T{_Smi}
v38 <- LoadIndexedUnsafe(fp[v37 + 8]) T{bool}
ParallelMove r6 <- r2, r2 <- C goto:26 B4
B3
ParallelMove r6 <- C, r2 <- C goto:28 B4
B4
v51 <- BoxInt64(v19) [0, 1] T{_Smi}
v41 <- BinarySmiOp:30(<< [tr], v51 T{_Smi}, v33) [0, 2] T{_Smi}
v21 <- BinarySmiOp:38(+ [tr], v41 T{_Smi}, v9) [4, 6] T{_Smi}
v22 <- LoadIndexed([_List] v6, v21) T{*?}
Branch if StrictCompare:40(===, v22, v23) goto (5, 6)
B5
v29 <- BinarySmiOp:32(+ [tr], v41 T{_Smi}, v28) [5, 7] T{_Smi}
v30 <- LoadIndexed([_List] v6, v29) T{*?}
v31 <- BinarySmiOp:34(- [tr], v8, v30) [-4611686018427387903, 4611686018427387903] T{_Smi}
v32 <- LoadIndexedUnsafe(fp[v31 + 8]) T{bool}
ParallelMove r1 <- r1 goto:50 B8
B6
ParallelMove r1 <- C goto:52 B8
B8
CheckStackOverflow:58(stack=0, loop=0)
MoveArgument(sp[0] <- v24)
ParallelMove r1 <- r8, r2 <- r7, r3 <- r0, r5 <- r5, r6 <- r6
v25 <- StaticCall:60( _normalize@0150898<0> v2, v3, v4, v5, v18, v24) T{String??}
ParallelMove r0 <- r0
Branch if StrictCompare:62(===, v25, v0) goto (9, 10)
B9
ParallelMove r2 <- fp[-3]
v50 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v50 T{int})
ParallelMove r1 <- fp[-1], r2 <- fp[-2]
v27 <- StaticCall:68( substring<0> v2, v3, v50 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:74 B11
B10
B11
ParallelMove r0 <- r0
DartReturn:78(v26)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r8 <- r1, r7 <- r3, fp[-8] <- r1, fp[-9] <- r3, fp[-10] <- r5, fp[-11] <- r6
v9 <- LoadField(v7 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v17 <- LoadIndexed([_List] v7, v15 T{_Smi}) T{*?}
Branch if StrictCompare:16(===, v17, v18) goto (2, 3)
B2
v123 <- LoadIndexed([_List] v7, v10 T{_Smi}) T{*?}
v124 <- BinarySmiOp:10(- [tr], v9, v123) [-4611686018427387903, 4611686018427387903] T{_Smi}
v125 <- LoadIndexedUnsafe(fp[v124 + 8]) T{bool}
ParallelMove r4 <- r0 goto:26 B5
B3
ParallelMove r4 <- C goto:28 B5
B5
ParallelMove fp[-7] <- r4
CheckStackOverflow:34(stack=0, loop=0)
v238 <- LoadField:324(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v383 <- UnboxInt64:324([non-speculative], v238) [0, 2305843009213693951] int64
ParallelMove fp[-6] <- r9
v240 <- LoadClassId:324(v2 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove fp[-5] <- r10
v127 <- LoadField:324(v5 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v384 <- UnboxInt64:324([non-speculative], v127) [0, 576460752303423487] int64
ParallelMove fp[-4] <- r11
ParallelMove r20 <- C, r19 <- r2, r14 <- r2 goto:324 B45
B45
  Loop 0
  Loop Header
ParallelMove fp[-1] <- r20, fp[-2] <- r19, fp[-3] <- r14
CheckStackOverflow:322(stack=0, loop=1)
Branch if RelationalOp(<, v24, v4) T{bool} goto (44, 46)
B44
  Loop 0
ParallelMove r0 <- r9, r1 <- r14
t0 <- GenericCheckBound:44(v383 T{_Smi}, v24 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:44(===, v240, v198 T{_Smi}) goto (88, 89)
B88
  Loop 0
v244 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v24 T{int}) [0, 255] int64
ParallelMove r2 <- r0 goto:44 B87
B89
  Loop 0
v242 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v24 T{int}) [0, 65535] int64
ParallelMove r2 <- r0 goto:44 B87
B87
  Loop 0
Branch if RelationalOp(<, v243 T{_Smi}, v399 T{_Smi}) T{bool} goto (6, 9)
B6
  Loop 0
v114 <- ShiftInt64Op(>> [tr], v243 T{_Smi}, v400 T{_Smi}) [0, 4095] int64
ParallelMove r0 <- r11, r1 <- r3
GenericCheckBound:56(v384 T{_Smi}, v114) [-9223372036854775808, 9223372036854775807] int64
v401 <- LoadIndexed:56([_List] v5, v114 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r2
v480 <- IntConverter(int64->uint32[tr], v243 T{_Smi}) uint32
v117 <- BinaryUint32Op(& [tr], v480 T{_Smi}, v489 T{_Smi}) [0, 15] uint32
ParallelMove r3 <- r3
v481 <- IntConverter(uint32->int64, v117) int64
v118 <- ShiftInt64Op(<< [tr], v403 T{_Smi}, v481 T{_Smi}) [1, 32768] int64
v386 <- UnboxInt64([non-speculative], v401 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v386, v118) goto (7, 10)
B7
  Loop 0
v121 <- BinaryInt64Op(+ [tr], v24 T{int}, v403 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r20, r1 <- r19, r0 <- r0 goto:310 B43
B10
B9
B8
  Loop 0
Branch if EqualityCompare(v243 T{_Smi} == v405 T{_Smi}) T{bool} goto (11, 18)
B11
  Loop 0
ParallelMove r1 <- r8, r2 <- r14, r3 <- C
v88 <- StaticCall:98( _normalizeEscape@0150898<0> v2, v24 T{int}, v19) T{String??}
ParallelMove r0 <- r0
ParallelMove fp[-12] <- r0
Branch if StrictCompare:100(===, v88, v0) goto (12, 14)
B12
  Loop 0
ParallelMove r2 <- fp[-3]
v95 <- BinaryInt64Op(+ [tr], v24 T{int}, v406 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r20 <- fp[-1], r19 <- fp[-2], r14 <- r0 goto:110 B13
B14
  Loop 0
ParallelMove r2 <- fp[-3]
MoveArgument(sp[1] <- v89)
MoveArgument(sp[0] <- v88 T{String?})
v90 <- StaticCall:114( ==<0> v89, v88 T{String?}, using unchecked entrypoint, recognized_kind = OneByteString_equality, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:118(===, v90 T{bool}, v31) goto (15, 16)
BoolTest
B15
  Loop 0
ParallelMove r1 <- C, r0 <- C goto:128 B17
B16
  Loop 0
ParallelMove r1 <- fp[-12], r0 <- C goto:130 B17
B17
B18
  Loop 0
Branch if EqualityCompare(v243 T{_Smi} == v407 T{_Smi}) T{bool} goto (19, 22)
B19
  Loop 0
ParallelMove r3 <- fp[-7]
Branch if StrictCompare:144(===, v20 T{bool}, v31) goto (20, 23)
BoolTest
B20
  Loop 0
ParallelMove r1 <- C, r0 <- C goto:272 B38
B23
B22
  Loop 0
ParallelMove r3 <- fp[-7]
ParallelMove  goto:156 B21
B21
  Loop 0
Branch if StrictCompare:164(!==, v6 T{bool}, v31) goto (24, 27)
BoolTest
B24
  Loop 0
Branch if RelationalOp(<=, v243 T{_Smi}, v408 T{_Smi}) T{bool} goto (82, 103)
B82
  Loop 0
ParallelMove r7 <- C, r6 <- C, r5 <- C
v210 <- ShiftInt64Op(>> [tr], v243 T{_Smi}, v400 T{_Smi}) [0, 4095] int64
ParallelMove r0 <- C, r1 <- r8
GenericCheckBound:24(v409 T{_Smi}, v210) [-9223372036854775808, 9223372036854775807] int64
v410 <- LoadIndexed:24([_List] v230, v210 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r2
v479 <- IntConverter(int64->uint32[tr], v243 T{_Smi}) uint32
v214 <- BinaryUint32Op(& [tr], v479 T{_Smi}, v489 T{_Smi}) [0, 15] uint32
ParallelMove r8 <- r8
v482 <- IntConverter(uint32->int64, v214) int64
v215 <- ShiftInt64Op(<< [tr], v403 T{_Smi}, v482 T{_Smi}) [1, 32768] int64
v388 <- UnboxInt64([non-speculative], v410 T{int?}) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v388, v215) goto (25, 101)
B101
B103
  Loop 0
ParallelMove r7 <- C, r6 <- C, r5 <- C
ParallelMove  goto:190 B28
B28
B27
  Loop 0
ParallelMove r7 <- C, r6 <- C, r5 <- C
ParallelMove  goto:188 B26
B26
  Loop 0
ParallelMove r0 <- r2
v478 <- IntConverter(int64->uint32[tr], v243 T{_Smi}) uint32
v44 <- BinaryUint32Op(& [tr], v478 T{_Smi}, v490 T{_Smi}) [0, 64512] uint32
ParallelMove r1 <- r1
v483 <- IntConverter(uint32->int64, v44) int64
Branch if EqualityCompare(v483 T{_Smi} == v412 T{_Smi}) T{bool} goto (29, 36)
B29
  Loop 0
ParallelMove r10 <- fp[-9], r9 <- fp[-3]
v51 <- BinaryInt64Op(+ [tr], v24 T{int}, v403 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v51, v4) T{bool} goto (30, 34)
B30
  Loop 0
ParallelMove r12 <- fp[-5]
ParallelMove r0 <- fp[-6], r1 <- r11
t0 <- GenericCheckBound:220(v383 T{_Smi}, v51 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:220(===, v240 T{_Smi}, v198 T{_Smi}) goto (77, 78)
B77
  Loop 0
ParallelMove r0 <- fp[-8]
v194 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v51 T{int}) [0, 255] int64
ParallelMove r1 <- r1 goto:220 B76
B78
  Loop 0
ParallelMove r0 <- fp[-8]
v192 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v51 T{int}) [0, 65535] int64
ParallelMove r1 <- r1 goto:220 B76
B76
  Loop 0
ParallelMove r11 <- r1
v485 <- IntConverter(int64->uint32[tr], v193 T{_Smi}) uint32
v58 <- BinaryUint32Op(& [tr], v485 T{_Smi}, v490 T{_Smi}) [0, 64512] uint32
ParallelMove r13 <- r13
v486 <- IntConverter(uint32->int64, v58) int64
Branch if EqualityCompare(v486 T{_Smi} == v413 T{_Smi}) T{bool} goto (31, 32)
B31
  Loop 0
ParallelMove r11 <- C
ParallelMove r2 <- r2
v477 <- IntConverter(int64->uint32[tr], v243 T{_Smi}) uint32
v65 <- BinaryUint32Op(& [tr], v477 T{_Smi}, v491 T{_Smi}) [0, 1023] uint32
ParallelMove r13 <- r13
v487 <- IntConverter(uint32->int64, v65) int64
v67 <- ShiftInt64Op(<< [tr], v487 T{_Smi}, v415 T{_Smi}) [0, 1047552] int64
v68 <- BinaryInt64Op(| [tr], v67, v416 T{_Smi}) [0, 1048575] int64
ParallelMove r1 <- r1
v484 <- IntConverter(int64->uint32[tr], v193 T{_Smi}) uint32
v69 <- BinaryUint32Op(& [tr], v484 T{_Smi}, v491 T{_Smi}) [0, 1023] uint32
ParallelMove r2 <- r2
v488 <- IntConverter(uint32->int64, v69) int64
v70 <- BinaryInt64Op(| [tr], v68, v488 T{_Smi}) [0, 1048575] int64
ParallelMove r2 <- r1, r1 <- C goto:248 B33
B32
  Loop 0
ParallelMove r11 <- C
ParallelMove r2 <- r2, r1 <- C goto:250 B33
B33
B34
  Loop 0
ParallelMove r0 <- fp[-8], r12 <- fp[-5], r11 <- C
ParallelMove r2 <- r2, r1 <- C goto:258 B35
B35
  Loop 0
ParallelMove r1 <- r2, r2 <- r1 goto:264 B37
B36
  Loop 0
ParallelMove r0 <- fp[-8], r10 <- fp[-9], r9 <- fp[-3], r12 <- fp[-5], r11 <- C
ParallelMove r1 <- r2, r2 <- C goto:266 B37
B37
  Loop 0
ParallelMove r1 <- r1, fp[-13] <- r2
v50 <- StaticCall:268( _escapeChar@0150898<0> v47, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r1 <- r0, r0 <- fp[-13] goto:274 B38
B38
B39
  Loop 0
ParallelMove fp[-12] <- r1, fp[-13] <- r0
Branch if StrictCompare:282(===, v22, v0) goto (40, 41)
B40
  Loop 0
v87 <- AllocateObject:288(cls=StringBuffer) T{StringBuffer}
ParallelMove r3 <- r0, r0 <- C
ParallelMove fp[-14] <- r3
StoreField(v87 T{StringBuffer} . _partsCodeUnits@0150898 = v404 T{_Smi} <int64>, NoStoreBarrier)
StoreField(v87 T{StringBuffer} . _partsCompactionIndex@0150898 = v404 T{_Smi} <int64>, NoStoreBarrier)
StoreField(v87 T{StringBuffer} . _partsCodeUnitsSinceCompaction@0150898 = v404 T{_Smi} <int64>, NoStoreBarrier)
StoreField(v87 T{StringBuffer} . _bufferPosition@0150898 = v404 T{_Smi} <int64>, NoStoreBarrier)
StoreField(v87 T{StringBuffer} . _bufferCodeUnitMagnitude@0150898 = v404 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r1 <- r3, r2 <- C
StaticCall:30( write<0> v87 T{StringBuffer}, v180 T{_OneByteString}, using unchecked entrypoint)
ParallelMove r6 <- fp[-14], r5 <- fp[-14] goto:296 B42
B41
  Loop 0
ParallelMove r6 <- r3, r5 <- r3 goto:298 B42
B42
  Loop 0
ParallelMove fp[-14] <- r6, fp[-15] <- r5
v382 <- BoxInt64(v24 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- fp[-2], r2 <- r0, r3 <- fp[-6]
v144 <- StaticCall:30( checkValidRange<0> v23 T{int}, v382 T{int?}, v383 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-8], r2 <- fp[-2], r3 <- r0
v145 <- StaticCall:32( _substringUnchecked@0150898<0> v2 T{_StringBase}, v23 T{int}, v144, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-16] <- r0
v266 <- LoadField(v145 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v266, v12 T{_Smi}) T{bool} goto (60, 61)
B60
B61
  Loop 0
ParallelMove r1 <- fp[-14]
StaticCall:26( _consumeBuffer@0150898<0> v83 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-14], r2 <- fp[-16]
StaticCall:28( _addPart@0150898<0> v83 T{StringBuffer}, v145 T{String}, using unchecked entrypoint)
ParallelMove  goto:30 B62
B62
  Loop 0
MoveArgument(sp[0] <- v80 T{String?})
v166 <- StaticCall:10( _interpolateSingle@0150898<0> v80 T{String?}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-12] <- r0
v273 <- LoadField(v166 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v273, v12 T{_Smi}) T{bool} goto (65, 66)
B65
B66
  Loop 0
ParallelMove r1 <- fp[-14]
StaticCall:26( _consumeBuffer@0150898<0> v83 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-14], r2 <- fp[-12]
StaticCall:28( _addPart@0150898<0> v83 T{StringBuffer}, v166, using unchecked entrypoint)
ParallelMove  goto:30 B67
B67
  Loop 0
v86 <- BinaryInt64Op(+ [tr], v24 T{int}, v81) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- fp[-15], r1 <- r1, r0 <- r1 goto:312 B43
B43
  Loop 0
ParallelMove r20 <- r2, r19 <- r1, r14 <- r0 goto:314 B13
B13
  Loop 0
ParallelMove r20 <- r20, r19 <- r19, r14 <- r14, r8 <- fp[-8], r7 <- fp[-9], r5 <- fp[-10], r6 <- fp[-11], r4 <- fp[-7], r10 <- fp[-5], r9 <- fp[-6], r11 <- fp[-4] goto:320 B45
B46
ParallelMove r3 <- r20
Branch if StrictCompare:328(===, v22, v0) goto (47, 48)
B47
ParallelMove r0 <- C
DartReturn:334(v0)
B48
ParallelMove r2 <- fp[-9], r4 <- fp[-2]
Branch if RelationalOp(<, v23, v4) T{bool} goto (49, 50)
B49
v381 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v381 T{int})
ParallelMove r1 <- fp[-8], r2 <- r4
v34 <- StaticCall:348( substring<0> v2, v23, v381 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r1 <- fp[-1], r2 <- r0
StaticCall:350( write<0> v22 T{StringBuffer}, v34, using unchecked entrypoint)
ParallelMove  goto:356 B51
B50
B51
MoveArgument(sp[0] <- v22 T{StringBuffer})
v33 <- StaticCall:360( toString<0> v22 T{StringBuffer}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:362(v33)
B25
ParallelMove r2 <- fp[-3]
ParallelMove r1 <- fp[-8], r2 <- r2, r3 <- C
StaticCall:180( _fail@0150898<0> v2, v24 T{int}, v72)
ParallelMove r0 <- C
Throw:182(v73)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3
v5 <- AllocateObject:10(cls=FormatException) T{FormatException}
ParallelMove r2 <- r0, r0 <- fp[-3]
StoreField(v5 T{FormatException} . message = v4 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
StoreField(v5 T{FormatException} . source = v2 T{String}, NoStoreBarrier)
ParallelMove r3 <- fp[-2]
v14 <- BoxInt64(v3 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v5 T{FormatException} . offset = v14 T{int?}, NoStoreBarrier)
ParallelMove r0 <- r2
Throw:14(v5)
B0
B1
Enter frame
v4 <- LoadField(v2 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v6 <- BinarySmiOp:4(- [tr], v4, v5) [-1, 4611686018427387902] T{_Smi}
v7 <- LoadIndexedUnsafe(fp[v6 + 16]) T{*?}
Branch if RelationalOp:6(<=, v5, v6) T{bool} goto (2, 3)
B2
v17 <- LoadIndexedUnsafe(fp[v6 T{_Smi} + 8]) T{String}
Branch if RelationalOp:20(<=, v18, v6 T{_Smi}) T{bool} goto (5, 6)
B5
v20 <- LoadIndexedUnsafe(fp[v6 T{_Smi} + 0]) T{*?}
Branch if RelationalOp:36(<=, v21, v6 T{_Smi}) T{bool} goto (8, 9)
B8
v23 <- LoadIndexedUnsafe(fp[v6 T{_Smi} + -8]) T{int??}
ParallelMove r0 <- r3, r3 <- r4, r2 <- r5 goto:52 B11
B9
ParallelMove r3 <- r3, r2 <- r4 goto:46 B7
B6
ParallelMove r2 <- r3 goto:30 B4
B3
ParallelMove r2 <- C goto:18 B4
B4
ParallelMove r3 <- r2, r2 <- C goto:34 B7
B7
ParallelMove r0 <- r3, r3 <- r2, r2 <- C goto:50 B11
B11
ParallelMove r0 <- r0
StoreField(v7 . message = v14)
ParallelMove r0 <- r3
StoreField(v7 . source = v15)
ParallelMove r0 <- r2
StoreField(v7 . offset = v16)
ParallelMove r0 <- C
DartReturn:62(v0)
B0
B1
Enter frame
ParallelMove fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
Branch if RelationalOp(<, v2, v158 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r4 <- C
v100 <- AllocateTypedData:10(v12 T{_Smi}) T{_Uint8List}
ParallelMove r2 <- r0, r0 <- C
StoreIndexed:22([_Uint8List] v100 T{_Uint8List}, v15 T{_Smi}, v101, NoStoreBarrier)
ParallelMove r3 <- fp[-1]
v51 <- ShiftInt64Op(>> [tr], v2, v159 T{_Smi}) [-576460752303423488, 576460752303423487] int64
ParallelMove r0 <- C, r1 <- r4
GenericCheckBound:26(v160 T{_Smi}, v51) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- C
v161 <- LoadIndexed:26([_OneByteString] v30, v51 T{int}) [0, 255] int64
StoreIndexed:28([_Uint8List] v100 T{_Uint8List}, v19 T{_Smi}, v161 T{_Smi}, NoStoreBarrier)
ParallelMove r0 <- r3
v190 <- IntConverter(int64->uint32[tr], v2) uint32
ParallelMove r5 <- C
v53 <- BinaryUint32Op(& [tr], v190 T{int}, v196 T{_Smi}) [0, 15] uint32
ParallelMove r3 <- r3
v191 <- IntConverter(uint32->int64, v53) int64
v163 <- LoadIndexed:32([_OneByteString] v30, v191 T{_Smi}) [0, 255] int64
StoreIndexed:34([_Uint8List] v100 T{_Uint8List}, v7 T{_Smi}, v163 T{_Smi}, NoStoreBarrier)
ParallelMove r2 <- r2 goto:130 B14
B4
ParallelMove r3 <- r1, r1 <- C, r0 <- C, r5 <- C
Branch if RelationalOp(>, v2, v164 T{_Smi}) T{bool} goto (5, 9)
B5
Branch if RelationalOp(>, v2, v165 T{_Smi}) T{bool} goto (6, 7)
B6
ParallelMove r4 <- C, r2 <- C goto:62 B8
B7
ParallelMove r4 <- C, r2 <- C goto:64 B8
B8
ParallelMove r6 <- r4, r2 <- r2 goto:70 B10
B9
ParallelMove r6 <- C, r2 <- C goto:72 B10
B10
ParallelMove fp[-3] <- r6, fp[-4] <- r2
v13 <- BinaryInt64Op(* [tr], v11, v167 T{_Smi}) [6, 12] int64
ParallelMove fp[-2] <- r7
v150 <- BoxInt64(v13 T{int}) [6, 12] T{_Smi}
ParallelMove r4 <- r4
v94 <- AllocateTypedData:10(v150) T{_Uint8List}
ParallelMove r2 <- r0
ParallelMove r1 <- fp[-3], r0 <- fp[-4], r8 <- C, r4 <- fp[-1], r5 <- C, r3 <- C, r6 <- C, r7 <- C goto:124 B12
B12
  Loop 0
  Loop Header
CheckStackOverflow:122(stack=0, loop=1)
v20 <- BinaryInt64Op(- [tr], v17, v172 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>=, v20, v171 T{_Smi}) T{bool} goto (11, 13)
B11
  Loop 0
v23 <- BinaryInt64Op(* [tr], v20, v173 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v24 <- ShiftInt64Op(>> [tr], v2, v23) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r10 <- r10
v192 <- IntConverter(int64->uint32[tr], v24) uint32
v26 <- BinaryUint32Op(& [tr], v192 T{int}, v197 T{_Smi}) [0, 63] uint32
ParallelMove r0 <- r0
v193 <- IntConverter(uint32->int64, v26) int64
v27 <- BinaryInt64Op(| [tr], v193 T{_Smi}, v16) [0, 255] int64
ParallelMove r0 <- fp[-2], r1 <- r8
GenericCheckBound:96(v13 T{_Smi}, v18) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:96([_Uint8List] v94 T{_Uint8List}, v18 T{int}, v101, NoStoreBarrier)
v29 <- BinaryInt64Op(+ [tr], v18 T{int}, v172 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v32 <- ShiftInt64Op(>> [tr], v27, v159 T{_Smi}) [0, 15] int64
v175 <- LoadIndexed:102([_OneByteString] v30, v32 T{int}) [0, 255] int64
ParallelMove r0 <- fp[-2], r1 <- r11
GenericCheckBound:104(v13 T{_Smi}, v29) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:104([_Uint8List] v94 T{_Uint8List}, v29 T{int}, v175 T{_Smi}, NoStoreBarrier)
v34 <- BinaryInt64Op(+ [tr], v18 T{int}, v170 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r10 <- r10
v194 <- IntConverter(int64->uint32[tr], v27) uint32
v36 <- BinaryUint32Op(& [tr], v194 T{int}, v196 T{_Smi}) [0, 15] uint32
ParallelMove r0 <- r0
v195 <- IntConverter(uint32->int64, v36) int64
v176 <- LoadIndexed:110([_OneByteString] v30, v195 T{_Smi}) [0, 255] int64
ParallelMove r0 <- fp[-2], r1 <- r11
GenericCheckBound:112(v13 T{_Smi}, v34) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:112([_Uint8List] v94 T{_Uint8List}, v34 T{int}, v176 T{_Smi}, NoStoreBarrier)
v38 <- BinaryInt64Op(+ [tr], v18 T{int}, v167 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- C, r0 <- r9, r8 <- r10 goto:120 B12
B13
B14
ParallelMove r1 <- C, r2 <- r2
v49 <- StaticCall:134( String.fromCharCodes<0> v0, v45, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:136(v49)
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path int64 shift operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r0 <- r1, r1 <- r2
v6 <- LoadField(v4 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v8 <- BinarySmiOp:4(- [tr], v6, v7) [-2, 4611686018427387901] T{_Smi}
Branch if RelationalOp:6(<=, v9, v8) T{bool} goto (2, 3)
B2
v17 <- LoadIndexedUnsafe(fp[v8 T{_Smi} + 8]) [-9223372036854775808, 9223372036854775807] T{int}
Branch if RelationalOp:20(<=, v7, v8 T{_Smi}) T{bool} goto (5, 6)
B5
v19 <- LoadIndexedUnsafe(fp[v8 T{_Smi} + 0]) T{int??}
v22 <- UnboxInt64([non-speculative], v17) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r2, r3 <- r3 goto:36 B8
B6
v21 <- UnboxInt64([non-speculative], v17) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r2 goto:30 B4
B3
ParallelMove r0 <- C goto:18 B4
B4
ParallelMove r2 <- r0, r3 <- C goto:34 B8
B8
CheckStackOverflow:42(stack=0, loop=0)
ParallelMove r1 <- r1, r2 <- r2, r3 <- r3
v16 <- StaticCall:44( createFromCharCodes<0> v3, v14, v15, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:46(v16)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, r0 <- r2, fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r0, r2 <- C
StaticCall:10( checkNotNegative<0> v3, v5) int64
ParallelMove r2 <- fp[-3]
Branch if StrictCompare:12(!==, v4, v0) goto (3, 8)
B3
ParallelMove r0 <- fp[-2]
v142 <- UnboxInt64([non-speculative], v4 T{int?}) [-9223372036854775808, 9223372036854775807] int64
v39 <- BinaryInt64Op(- [tr], v142 T{int?}, v3) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v39, v158 T{_Smi}) T{bool} goto (4, 5)
B5
Branch if EqualityCompare(v39 == v158 T{_Smi}) T{bool} goto (6, 7)
B6
ParallelMove r0 <- C
DartReturn:48(v28)
B7
B8
ParallelMove r0 <- fp[-2]
ParallelMove  goto:58 B9
B9
v44 <- LoadClassId(v2) [87, 549] T{_Smi}
v145 <- UnboxInt64([non-speculative], v44) [87, 549] int64
Branch if EqualityCompare(v145 T{_Smi} != v159 T{_Smi}) T{bool} goto (10, 22)
B10
Branch if EqualityCompare(v145 T{_Smi} != v160 T{_Smi}) T{bool} goto (11, 23)
B11
Branch if EqualityCompare(v145 T{_Smi} != v161 T{_Smi}) T{bool} goto (12, 24)
B12
v67 <- LoadField(v2 T{Iterable<int>} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v147 <- UnboxInt64([non-speculative], v67 T{_Smi}) [0, 4611686018427387903] int64
Branch if RelationalOp(<=, v147 T{_Smi}, v3) T{bool} goto (13, 14)
B13
ParallelMove r0 <- C
DartReturn:104(v28)
B14
Branch if StrictCompare:108(===, v4, v0) goto (17, 15)
B17
B15
v150 <- UnboxInt64([non-speculative], v4 T{int?}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>, v150 T{int?}, v147 T{_Smi}) T{bool} goto (18, 19)
B18
B16
ParallelMove r1 <- r3 goto:136 B20
B19
B20
v37 <- BinaryInt64Op(- [tr], v36 T{int?}, v3) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r4, r2 <- r0, r3 <- r3
v38 <- StaticCall:142( _createOneByteString@0150898<0> v2, v3, v37, result_type = T{_OneByteString}) T{_OneByteString}
ParallelMove r0 <- r0
DartReturn:144(v38)
B24
B23
B22
B21
v62 <- LoadField(v2 T{Iterable<int>} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v152 <- UnboxInt64([non-speculative], v62 T{_Smi}) [0, 4611686018427387903] int64
Branch if RelationalOp(<=, v152 T{_Smi}, v3) T{bool} goto (25, 26)
B25
ParallelMove r0 <- C
DartReturn:172(v28)
B26
Branch if StrictCompare:176(===, v4, v0) goto (29, 27)
B29
B27
v155 <- UnboxInt64([non-speculative], v4 T{int?}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>, v155 T{int?}, v152 T{_Smi}) T{bool} goto (30, 31)
B30
B28
ParallelMove r5 <- r3 goto:204 B32
B31
ParallelMove r5 <- r1 goto:206 B32
B32
ParallelMove fp[-5] <- r5
v15 <- BinaryInt64Op(- [tr], v14 T{int?}, v3) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-4] <- r6
Branch if EqualityCompare(v15 == v158 T{_Smi}) T{bool} goto (33, 34)
B33
ParallelMove r0 <- C
DartReturn:220(v28)
B34
ParallelMove r1 <- r4, r2 <- r0, r3 <- r5
v18 <- StaticCall:224( _scanCodeUnits@0150898<0> v2, v3, v14 T{int?}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0
Branch if RelationalOp(<, v18, v158 T{_Smi}) T{bool} goto (35, 36)
B36
Branch if RelationalOp(<=, v18, v162 T{_Smi}) T{bool} goto (37, 38)
B37
ParallelMove r1 <- fp[-1], r2 <- fp[-2], r3 <- fp[-4]
v26 <- StaticCall:254( _createOneByteString@0150898<0> v2, v3, v15, result_type = T{_OneByteString}) T{_OneByteString}
ParallelMove r0 <- r0
DartReturn:256(v26)
B38
Branch if RelationalOp(<=, v18, v163 T{_Smi}) T{bool} goto (39, 40)
B39
ParallelMove r3 <- fp[-2], r2 <- fp[-5]
v140 <- BoxInt64(v3) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r3 <- r0
v157 <- BoxInt64(v14 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v140 T{int})
MoveArgument(sp[0] <- v157 T{int?})
v25 <- StaticCall:270( _allocateFromTwoByteList@0150898<0> v2, v140 T{int}, v157 T{int?}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:272(v25)
B40
ParallelMove r3 <- fp[-2], r2 <- fp[-5]
v141 <- BoxInt64(v3) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r3 <- r0
v156 <- BoxInt64(v14 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v141 T{int})
MoveArgument(sp[0] <- v156 T{int?})
v24 <- StaticCall:276( _createFromCodePoints@0150898<0> v2, v141 T{int}, v156 T{int?}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:278(v24)
B4
ParallelMove r3 <- r0
v139 <- BoxInt64(v3) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
ParallelMove fp[-6] <- r0
v42 <- AllocateObject:30(cls=RangeError) T{RangeError}
ParallelMove r0 <- r0
ParallelMove fp[-7] <- r0
MoveArgument(sp[4] <- v42)
MoveArgument(sp[3] <- v4 T{int?})
MoveArgument(sp[2] <- v139 T{int})
MoveArgument(sp[1] <- v0)
MoveArgument(sp[0] <- v43)
StaticCall:32( RangeError.range<0> v42, v4 T{int?}, v139 T{int}, v0, v43)
ParallelMove r0 <- fp[-7]
Throw:34(v42)
B35
ParallelMove r0 <- fp[-1]
v27 <- AllocateObject:236(cls=ArgumentError, <not-aliased>) T{ArgumentError}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v27 T{ArgumentError} . message = v2 T{Iterable<int>}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v27 T{ArgumentError} . _hasValue@0150898 = v56 T{bool}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:240(v27)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-3] <- r1, fp[-4] <- r3
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r5 <- C, r2 <- r2 goto:30 B5
B5
  Loop 0
  Loop Header
ParallelMove fp[-1] <- r5, fp[-2] <- r2
CheckStackOverflow:34(stack=0, loop=1)
Branch if RelationalOp(<, v7, v4) T{bool} goto (3, 4)
B3
  Loop 0
v20 <- BoxInt64(v7) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v24 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v20 T{int})
ParallelMove r0 <- r1
v10 <- DispatchTableCall( cid=v24 List.[]<0>, v2, v20 T{int}) T{*?}
ParallelMove r0 <- r0
v21 <- UnboxInt64([non-speculative], v10 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r0 <- fp[-1]
v11 <- BinaryInt64Op(| [tr], v6, v21 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r1 <- fp[-2]
v13 <- BinaryInt64Op(+ [tr], v7, v23 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r5, r2 <- r2, r4 <- fp[-3], r3 <- fp[-4] goto:32 B5
B4
ParallelMove r0 <- r5
ParallelMove r0 <- r0
DartReturn:36(v6)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1, fp[-3] <- r2, fp[-4] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v51 <- BoxInt64(v4 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
MoveArgument(sp[0] <- v51 T{int})
v43 <- StaticCall:10( allocateOneByteString<0> v51 T{int}, recognized_kind = AllocateOneByteString, result_type = T{_OneByteString}) T{_OneByteString}
ParallelMove r3 <- r0, r2 <- fp[-2]
ParallelMove fp[-6] <- r3
v17 <- LoadClassId(v2) [89, 549] int64
Branch if TestRange(v17 in [115-118]) T{bool} goto (3, 4)
B3
ParallelMove r4 <- fp[-3]
v50 <- BoxInt64(v3 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v58 <- LoadField(v2 T{Uint8List} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r5 <- fp[-1]
MemoryCopy(v58 T{Uint8List}, v43 T{_OneByteString}, v50 T{int}, v9 T{_Smi}, v51 T{int}, dest_cid=_OneByteString (93), src_cid=_Uint8List (115) [untagged])
Copying until region size is a multiple of chunk size
Copying chunks at a time
ParallelMove r0 <- r3
DartReturn:24(v43 T{_OneByteString})
B4
ParallelMove r4 <- fp[-3]
ParallelMove r6 <- C goto:50 B7
B7
  Loop 0
  Loop Header
ParallelMove fp[-5] <- r6
CheckStackOverflow:54(stack=0, loop=1)
Branch if RelationalOp(<, v10, v4) T{bool} goto (5, 6)
B5
  Loop 0
v12 <- BinaryInt64Op(+ [tr], v3, v10) [-9223372036854775808, 9223372036854775807] int64
v54 <- BoxInt64(v12) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v57 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v54 T{int})
ParallelMove r0 <- r1
v13 <- DispatchTableCall( cid=v57 List.[]<0>, v2, v54 T{int}) T{*?}
ParallelMove r0 <- r0
v26 <- UnboxInt64:10([non-speculative], v13 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- fp[-5], r0 <- fp[-6]
StoreIndexed:10([_OneByteString] v43 T{_OneByteString}, v10 T{int}, v26, NoStoreBarrier)
v15 <- BinaryInt64Op(+ [tr], v10, v56 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r6, r2 <- fp[-2], r4 <- fp[-3], r3 <- r0 goto:52 B7
B6
ParallelMove r0 <- r3
ParallelMove r0 <- r0
DartReturn:56(v43 T{_OneByteString})
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1, fp[-2] <- r2
Branch if RelationalOp(<, v2, v39 T{_Smi}) T{bool} goto (3, 4)
B4
ParallelMove r0 <- r0
DartReturn:28(v2)
B3
v7 <- AllocateObject:20(cls=RangeError) T{RangeError}
ParallelMove r2 <- r0
StoreField(v7 T{RangeError} . start = v4 T{_Smi}, NoStoreBarrier)
ParallelMove r0 <- fp[-2]
StoreField(v7 T{RangeError} . name = v3 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v7 T{RangeError} . message = v18 T{_OneByteString}, NoStoreBarrier)
ParallelMove r3 <- fp[-1]
v38 <- BoxInt64(v2 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v7 T{RangeError} . invalidValue = v38 T{int}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v7 T{RangeError} . _hasValue@0150898 = v6 T{bool}, NoStoreBarrier)
ParallelMove r0 <- r2
Throw:24(v7)
B0
B1
Enter frame
ParallelMove r4 <- r1
CheckStackOverflow:8(stack=0, loop=0)
v6 <- BinaryInt64Op(+ [tr], v3, v293 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v189 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v287 <- UnboxInt64([non-speculative], v189 T{_Smi}) [0, 2305843009213693951] int64
Branch if RelationalOp(>=, v6, v287 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:24(v39)
B4
v11 <- BinaryInt64Op(+ [tr], v3, v294 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r6, r1 <- r7
t0 <- GenericCheckBound:30(v287 T{_Smi}, v11 T{int}) [-9223372036854775808, 9223372036854775807] int64
v85 <- LoadClassId(v2 T{_StringBase}) [93, 94] T{_Smi}
Branch if StrictCompare:30(===, v85, v93 T{_Smi}) goto (34, 35)
B34
v89 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v11 T{int}) [0, 255] int64
ParallelMove r7 <- r0 goto:30 B33
B35
v87 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v11 T{int}) [0, 65535] int64
ParallelMove r7 <- r0 goto:30 B33
B33
ParallelMove r0 <- r6, r1 <- r5
t0 <- GenericCheckBound:34(v287 T{_Smi}, v6 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:34(===, v85 T{_Smi}, v93 T{_Smi}) goto (39, 40)
B39
v106 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v6 T{int}) [0, 255] int64
ParallelMove r5 <- r0 goto:34 B38
B40
v104 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v6 T{int}) [0, 65535] int64
ParallelMove r5 <- r0 goto:34 B38
B38
v115 <- BinaryInt64Op(^ [tr], v88 T{_Smi}, v295 T{_Smi}) [0, 65535] int64
Branch if RelationalOp(<=, v115, v296 T{_Smi}) T{bool} goto (43, 44)
B43
B44
v120 <- BinaryInt64Op(| [tr], v88 T{_Smi}, v297 T{_Smi}) [0, 65535] int64
Branch if RelationalOp(<=, v298 T{_Smi}, v120) T{bool} goto (45, 48)
B45
Branch if RelationalOp(<=, v120, v299 T{_Smi}) T{bool} goto (46, 49)
B46
v129 <- BinaryInt64Op(- [tr], v120, v147 T{_Smi}) [-87, 65448] int64
ParallelMove r0 <- r1 goto:52 B50
B49
B48
B47
ParallelMove r0 <- C goto:66 B50
B50
v155 <- BinaryInt64Op(^ [tr], v105 T{_Smi}, v295 T{_Smi}) [0, 65535] int64
Branch if RelationalOp(<=, v155, v296 T{_Smi}) T{bool} goto (53, 54)
B53
B54
v160 <- BinaryInt64Op(| [tr], v105 T{_Smi}, v297 T{_Smi}) [0, 65535] int64
Branch if RelationalOp(<=, v298 T{_Smi}, v160) T{bool} goto (55, 58)
B55
Branch if RelationalOp(<=, v160, v299 T{_Smi}) T{bool} goto (56, 59)
B56
v169 <- BinaryInt64Op(- [tr], v160, v147 T{_Smi}) [-87, 65448] int64
ParallelMove r1 <- r6 goto:52 B60
B59
B58
B57
ParallelMove r1 <- C goto:66 B60
B60
Branch if RelationalOp(<, v149 T{int}, v300 T{_Smi}) T{bool} goto (7, 5)
B7
B5
Branch if RelationalOp(<, v184 T{int}, v300 T{_Smi}) T{bool} goto (8, 9)
B8
B6
ParallelMove r0 <- C
DartReturn:68(v39)
B9
v191 <- ShiftInt64Op(<< [tr], v149 T{int}, v190) [-1392, 1048560] int64
v22 <- BinaryInt64Op(+ [tr], v191 T{int}, v184 T{int}) [-1479, 1114095] int64
Branch if RelationalOp(<, v22 T{int}, v301 T{_Smi}) T{bool} goto (28, 66)
B28
ParallelMove r10 <- C, r9 <- C, r6 <- C
v51 <- ShiftInt64Op(>> [tr], v22 T{int}, v190 T{_Smi}) [-93, 69630] int64
ParallelMove r0 <- C, r1 <- r11
GenericCheckBound:24(v302 T{_Smi}, v51) [-9223372036854775808, 9223372036854775807] int64
v303 <- LoadIndexed:24([_List] v73, v51 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r8
v324 <- IntConverter(int64->uint32[tr], v22 T{int}) uint32
v55 <- BinaryUint32Op(& [tr], v324 T{int}, v327 T{_Smi}) [0, 15] uint32
ParallelMove r10 <- r10
v325 <- IntConverter(uint32->int64, v55) int64
v56 <- ShiftInt64Op(<< [tr], v294 T{_Smi}, v325 T{_Smi}) [1, 32768] int64
v291 <- UnboxInt64([non-speculative], v303 T{int?}) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v291, v56) goto (10, 64)
B10
Branch if StrictCompare:88(===, v4 T{bool}, v9) goto (11, 15)
BoolTest
B11
Branch if RelationalOp(<=, v305 T{_Smi}, v22) T{bool} goto (12, 16)
B12
Branch if RelationalOp(>=, v306 T{_Smi}, v22) T{bool} goto (13, 17)
B13
v38 <- BinaryInt64Op(| [tr], v22, v297 T{_Smi}) [-2097152, 2097151] int64
ParallelMove r2 <- r0 goto:132 B18
B17
B16
B15
B14
ParallelMove r2 <- r8 goto:134 B18
B18
ParallelMove r1 <- C, r2 <- r2
v32 <- StaticCall:136( String.fromCharCode<0> v0, v31, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:138(v32)
B64
B66
B19
Branch if RelationalOp(>=, v88 T{_Smi}, v298 T{_Smi}) T{bool} goto (22, 20)
B22
B20
Branch if RelationalOp(>=, v105 T{_Smi}, v298 T{_Smi}) T{bool} goto (23, 24)
B23
B21
v28 <- BinaryInt64Op(+ [tr], v3, v307 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v292 <- BoxInt64(v28) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v292 T{int})
ParallelMove r1 <- r4, r2 <- r2
v29 <- StaticCall:172( substring<0> v2, v3, v292 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
v326 <- LoadClassId(<non-smi> v29) int64
MoveArgument(sp[0] <- v29)
ParallelMove r0 <- r1
v30 <- DispatchTableCall( cid=v326 String.toUpperCase<0>, v29) T{String}
ParallelMove r0 <- r0
DartReturn:176(v30 T{String})
B24
ParallelMove r0 <- C
DartReturn:180(v0)
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove fp[-1] <- r2
CheckStackOverflow:8(stack=0, loop=0)
Branch if RelationalOp(>=, v3, v83 T{_Smi}) T{bool} goto (3, 10)
B3
Branch if RelationalOp(<=, v3, v84 T{_Smi}) T{bool} goto (4, 5)
B4
MoveArgument(sp[0] <- v27 T{_Smi})
v44 <- StaticCall:10( allocateOneByteString<0> v27 T{_Smi}, recognized_kind = AllocateOneByteString, result_type = T{_OneByteString}) T{_OneByteString}
ParallelMove r0 <- r0, r2 <- fp[-1]
StoreIndexed:10([_OneByteString] v44 T{_OneByteString}, v4 T{_Smi}, v3 T{int}, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:34(v44 T{_OneByteString})
B5
Branch if RelationalOp(<=, v3, v85 T{_Smi}) T{bool} goto (6, 7)
B6
v79 <- BoxInt64(v3) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- C, r2 <- C, r0 <- r0
ParallelMove fp[-2] <- r0
v32 <- CreateArray:48(v24, v27) T{_List}
ParallelMove r1 <- r0, r0 <- fp[-2]
StoreIndexed:50([_List] v32, v4 T{_Smi}, v79 T{int}, NoStoreBarrier)
MoveArgument(sp[2] <- v32)
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v27)
v30 <- StaticCall:52( _createFromCodePoints@0150898<0> v32, v4, v27, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:54(v30)
B7
Branch if RelationalOp(<=, v3, v86 T{_Smi}) T{bool} goto (8, 9)
B8
ParallelMove r0 <- C
ParallelMove r1 <- r2
v93 <- IntConverter(int64->uint32[tr], v3) uint32
v16 <- BinaryUint32Op(& [tr], v93 T{int}, v95 T{_Smi}) [0, 1023] uint32
ParallelMove r3 <- r3
v94 <- IntConverter(uint32->int64, v16) int64
v17 <- BinaryInt64Op(| [tr], v94 T{_Smi}, v88 T{_Smi}) [0, 65535] int64
ParallelMove fp[-3] <- r0
v19 <- BinaryInt64Op(- [tr], v3, v89 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v22 <- ShiftInt64Op(>> [tr], v19, v90 T{_Smi}) [-9007199254740992, 9007199254740991] int64
v23 <- BinaryInt64Op(| [tr], v22, v91 T{_Smi}) [-9007199254740992, 9007199254740991] int64
v82 <- BoxInt64(v23) [-9007199254740992, 9007199254740991] T{_Smi}
ParallelMove r1 <- C, r2 <- C, fp[-2] <- r3
v35 <- CreateArray:78(v24, v25) T{_List}
ParallelMove r1 <- r0, r0 <- fp[-2]
StoreIndexed:80([_List] v35, v4 T{_Smi}, v82, NoStoreBarrier)
ParallelMove r0 <- fp[-3]
v81 <- BoxInt64(v17) [0, 65535] T{_Smi}
StoreIndexed:82([_List] v35, v27 T{_Smi}, v81, NoStoreBarrier)
MoveArgument(sp[2] <- v35)
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v25)
v28 <- StaticCall:84( _createFromCodePoints@0150898<0> v35, v4, v25, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:86(v28)
B9
B10
B11
v80 <- BoxInt64(v3) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
ParallelMove fp[-2] <- r0
v7 <- AllocateObject:98(cls=RangeError) T{RangeError}
ParallelMove r0 <- r0
ParallelMove fp[-4] <- r0
MoveArgument(sp[3] <- v7)
MoveArgument(sp[2] <- v80 T{int})
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v8)
StaticCall:100( RangeError.range<0> v7, v80 T{int}, v4, v8)
ParallelMove r0 <- fp[-4]
Throw:102(v7)
CheckStackOverflowSlowPath
B0
B3
Enter frame
ParallelMove r0 <- r1, fp[-3] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v134 <- LoadField(v2 T{MappedListIterable} . _source@9040228 {final}) T{_GrowableList}
ParallelMove fp[-2] <- r3
v222 <- LoadField(v134 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v253 <- UnboxInt64([non-speculative], v222 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-1] <- r4
Branch if EqualityCompare(v253 T{_Smi} == v259 T{_Smi}) T{bool} goto (4, 5)
B4
ParallelMove r0 <- C
DartReturn:32(v34)
B5
ParallelMove r1 <- r0, r2 <- C
v20 <- StaticCall:36( elementAt<0> v2, v259 T{_Smi}, using unchecked entrypoint) T{C1X1?}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v20)
v21 <- StaticCall:38( _interpolateSingle@0150898<0> v20) T{String}
ParallelMove r1 <- r0, r0 <- fp[-2]
ParallelMove fp[-4] <- r1
v217 <- LoadField(v134 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v254 <- UnboxInt64([non-speculative], v217 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r2 <- fp[-1]
Branch if EqualityCompare(v253 T{_Smi} != v254 T{_Smi}) T{bool} goto (6, 7)
B7
ParallelMove r3 <- fp[-3]
v24 <- AllocateObject:60(cls=StringBuffer) T{StringBuffer}
ParallelMove r0 <- r0
ParallelMove fp[-5] <- r0
MoveArgument(sp[0] <- v21)
ParallelMove r1 <- r0
StaticCall:62( StringBuffer.<0> v24, v21)
ParallelMove r0 <- fp[-3]
v97 <- LoadField:106(v2 T{MappedListIterable} . _f@9040228 {final}) T{(dynamic, C1X0) => C1X1}
ParallelMove fp[-4] <- r2
ParallelMove r5 <- C, r3 <- fp[-2], r4 <- fp[-1] goto:106 B12
B12
  Loop 0
  Loop Header
ParallelMove fp[-6] <- r5
CheckStackOverflow:110(stack=0, loop=1)
Branch if RelationalOp(<, v25, v253 T{_Smi}) T{bool} goto (36, 9)
B36
  Loop 0
ParallelMove r1 <- fp[-5]
StaticCall:26( _consumeBuffer@0150898<0> v24 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-5], r2 <- C
StaticCall:28( _addPart@0150898<0> v24 T{StringBuffer}, v4 T{_OneByteString}, using unchecked entrypoint)
ParallelMove r2 <- fp[-2]
v193 <- LoadField(v134 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v255 <- UnboxInt64([non-speculative], v193) [0, 576460752303423487] int64
ParallelMove r0 <- r1, r1 <- fp[-6]
GenericCheckBound:10(v255 T{_Smi}, v25 T{int}) [-9223372036854775808, 9223372036854775807] int64
v195 <- LoadField(v134 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- fp[-6]
v261 <- LoadIndexed:10([_List] v195, v25 T{int}) T{*?}
MoveArgument(sp[1] <- v97)
MoveArgument(sp[0] <- v261 T{X0})
ParallelMove r0 <- fp[-4]
v98 <- ClosureCall:18( closure=v97<0>, v97, v261 T{X0}) T{*?}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v98 T{C1X1?})
v105 <- StaticCall:10( _interpolateSingle@0150898<0> v98 T{C1X1?}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-7] <- r0
v201 <- LoadField(v105 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v201, v9 T{_Smi}) T{bool} goto (41, 42)
B41
B42
  Loop 0
ParallelMove r1 <- fp[-5]
StaticCall:26( _consumeBuffer@0150898<0> v24 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-5], r2 <- fp[-7]
StaticCall:28( _addPart@0150898<0> v24 T{StringBuffer}, v105, using unchecked entrypoint)
ParallelMove  goto:30 B43
B43
  Loop 0
v208 <- LoadField(v134 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v257 <- UnboxInt64([non-speculative], v208 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v253 T{_Smi} != v257 T{_Smi}) T{bool} goto (10, 11)
B11
  Loop 0
ParallelMove r2 <- fp[-6]
v31 <- BinaryInt64Op(+ [tr], v25 T{int}, v260 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r5, r0 <- fp[-3], r2 <- fp[-4], r3 <- r0, r4 <- r1 goto:108 B12
B9
MoveArgument(sp[0] <- v24)
v27 <- StaticCall:112( toString<0> v24, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:114(v27)
B6
ParallelMove r0 <- fp[-3]
v33 <- AllocateObject:52(cls=ConcurrentModificationError, <not-aliased>) T{ConcurrentModificationError}
ParallelMove r1 <- r0, r0 <- fp[-3]
StoreField(v33 T{ConcurrentModificationError} . modifiedObject = v2 T{ListIterable<X0>}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:56(v33)
B10
ParallelMove r0 <- fp[-3]
v32 <- AllocateObject:96(cls=ConcurrentModificationError, <not-aliased>) T{ConcurrentModificationError}
ParallelMove r1 <- r0, r0 <- fp[-3]
StoreField(v32 T{ConcurrentModificationError} . modifiedObject = v2 T{ListIterable<X0>}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:100(v32)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
v5 <- LoadField(v4 . ArgumentsDescriptor.type_args_len {final}) [0, 4611686018427387903] T{_Smi}
Branch if StrictCompare:4(===, v5, v6) goto (2, 3)
B2
ParallelMove r1 <- C goto:14 B5
B3
v7 <- LoadField(v4 . ArgumentsDescriptor.size {final}) [0, 4611686018427387903] T{_Smi}
v8 <- LoadIndexedUnsafe(fp[v7 + 16]) T{TypeArguments?}
ParallelMove r1 <- r1 goto:16 B5
B5
v10 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r2 <- r2, r1 <- r1, r3 <- C
v12 <- InstantiateTypeArguments:24(v11, instantiator_type_args(v10), function_type_args(v9), instantiator_class(Library:'dart:collection' Class: ListBase)) T{*?}
ParallelMove r1 <- r0
v13 <- AllocateObject:26(cls=MappedListIterable, v12, <not-aliased>) T{MappedListIterable}
ParallelMove r0 <- r0, r1 <- fp[3]
StoreField(v13 T{MappedListIterable} . _source@9040228 = v2 T{_GrowableList}, NoStoreBarrier)
ParallelMove r1 <- fp[2]
StoreField(v13 T{MappedListIterable} . _f@9040228 = v3 T{_Closure}, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:30(v13)
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
v5 <- StaticCall:10( _uriEncode@0150898<0> v3, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:12(v5)
CheckStackOverflowSlowPath
B0
B5
Enter frame
ParallelMove r2 <- r1, fp[-3] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v194 <- LoadField:104(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v269 <- UnboxInt64:104([non-speculative], v194 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove fp[-2] <- r3
v182 <- LoadClassId:104(v2 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove r8 <- C, r7 <- C, r6 <- C, r5 <- C goto:104 B17
B17
  Loop 2
  Loop Header
ParallelMove fp[-1] <- r8
CheckStackOverflow:108(stack=0, loop=1)
Branch if RelationalOp(<, v45, v269 T{_Smi}) T{bool} goto (9, 10)
B9
  Loop 2
Branch if StrictCompare:56(===, v182, v168 T{_Smi}) goto (70, 71)
B70
  Loop 2
v186 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v45 T{int}) [0, 255] int64
ParallelMove r9 <- r0 goto:56 B69
B71
  Loop 2
v184 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v45 T{int}) [0, 65535] int64
ParallelMove r9 <- r0 goto:56 B69
B69
  Loop 2
Branch if RelationalOp(>=, v185 T{_Smi}, v292 T{_Smi}) T{bool} goto (13, 11)
B11
  Loop 2
v52 <- ShiftInt64Op(>> [tr], v185 T{_Smi}, v293 T{_Smi}) [0, 4095] int64
ParallelMove r0 <- C, r1 <- r10
GenericCheckBound:68(v294 T{_Smi}, v52) [-9223372036854775808, 9223372036854775807] int64
v295 <- LoadIndexed:68([_List] v36, v52 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r9 <- r9
v330 <- IntConverter(int64->uint32[tr], v185 T{_Smi}) uint32
v54 <- BinaryUint32Op(& [tr], v330 T{_Smi}, v336 T{_Smi}) [0, 15] uint32
ParallelMove r1 <- r1
v331 <- IntConverter(uint32->int64, v54) int64
v55 <- ShiftInt64Op(<< [tr], v297 T{_Smi}, v331 T{_Smi}) [1, 32768] int64
v272 <- UnboxInt64([non-speculative], v295 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v272, v55) goto (14, 16)
B16
  Loop 2
v58 <- BinaryInt64Op(+ [tr], v45 T{int}, v297 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r8 <- r0 goto:106 B17
B14
B13
B12
B10
B19
Branch if EqualityCompare(v45 T{int} == v269 T{_Smi}) T{bool} goto (20, 21)
B20
ParallelMove r0 <- r2
DartReturn:132(v2)
B21
v12 <- AllocateObject:136(cls=StringBuffer) T{StringBuffer}
ParallelMove r1 <- r0, r0 <- r0
ParallelMove fp[-4] <- r0
StaticCall:138( StringBuffer.<0> v12)
ParallelMove r3 <- fp[-3]
v160 <- LoadClassId:160(v2 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove fp[-6] <- r4
ParallelMove r6 <- C goto:160 B24
B24
  Loop 1
  Loop Header
ParallelMove fp[-5] <- r6
CheckStackOverflow:164(stack=0, loop=1)
Branch if RelationalOp(<, v13, v45 T{int}) T{bool} goto (22, 23)
B22
  Loop 1
ParallelMove r0 <- fp[-2], r1 <- r6
t0 <- GenericCheckBound:154(v269 T{_Smi}, v13 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:154(===, v160, v168 T{_Smi}) goto (63, 64)
B63
  Loop 1
v164 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v13 T{int}) [0, 255] int64
ParallelMove r2 <- r0 goto:154 B62
B64
  Loop 1
v162 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v13 T{int}) [0, 65535] int64
ParallelMove r2 <- r0 goto:154 B62
B62
  Loop 1
ParallelMove r1 <- fp[-4], r2 <- r2
StaticCall:156( writeCharCode<0> v12, v163 T{_Smi}, using unchecked entrypoint)
ParallelMove r0 <- fp[-5]
v44 <- BinaryInt64Op(+ [tr], v13 T{int}, v297 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r6, r3 <- fp[-3], r4 <- fp[-6] goto:162 B24
B23
ParallelMove r1 <- C, r2 <- fp[-3]
v150 <- StaticCall:10( convert<0> v151 T{Utf8Encoder}, v2 T{String}, using unchecked entrypoint, result_type = T{_Uint8List}) T{_Uint8List}
ParallelMove r3 <- r0
ParallelMove fp[-3] <- r3
v142 <- LoadField:280(v150 T{_Uint8List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v275 <- UnboxInt64:280([non-speculative], v142 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove fp[-2] <- r4
ParallelMove r9 <- fp[-1] goto:280 B38
B38
  Loop 0
  Loop Header
ParallelMove fp[-1] <- r9
CheckStackOverflow:284(stack=0, loop=1)
Branch if RelationalOp(<, v16, v275 T{_Smi}) T{bool} goto (25, 26)
B25
  Loop 0
ParallelMove r0 <- r4, r1 <- r9
GenericCheckBound:184(v275 T{_Smi}, v16) [-9223372036854775808, 9223372036854775807] int64
v298 <- LoadIndexed:184([_Uint8List] v150 T{_Uint8List}, v16 T{int}) [0, 255] int64
ParallelMove fp[-5] <- r10
Branch if RelationalOp(<, v298 T{_Smi}, v292 T{_Smi}) T{bool} goto (27, 30)
B27
  Loop 0
v37 <- ShiftInt64Op(>> [tr], v298 T{_Smi}, v293 T{_Smi}) [0, 15] int64
ParallelMove r0 <- C, r1 <- r2
GenericCheckBound:196(v294 T{_Smi}, v37) [-9223372036854775808, 9223372036854775807] int64
v299 <- LoadIndexed:196([_List] v36, v37 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r10
v333 <- IntConverter(int64->uint32[tr], v298 T{_Smi}) uint32
v39 <- BinaryUint32Op(& [tr], v333 T{_Smi}, v336 T{_Smi}) [0, 15] uint32
ParallelMove r2 <- r2
v334 <- IntConverter(uint32->int64, v39) int64
v40 <- ShiftInt64Op(<< [tr], v297 T{_Smi}, v334 T{_Smi}) [1, 32768] int64
v279 <- UnboxInt64([non-speculative], v299 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v279, v40) goto (28, 31)
B28
  Loop 0
ParallelMove r1 <- r5, r2 <- r10
StaticCall:216( writeCharCode<0> v12, v298 T{_Smi}, using unchecked entrypoint)
ParallelMove  goto:274 B37
B31
B30
B34
  Loop 0
ParallelMove r1 <- r0, r2 <- C
StaticCall:38( _ensureCapacity@0150898<0> v12 T{StringBuffer}, v297 T{_Smi}, using unchecked entrypoint)
ParallelMove r3 <- fp[-4]
v109 <- LoadField(v12 T{StringBuffer} . _buffer@0150898) T{_Uint16List?}
CheckNull:42(v109, CastError) T{_Uint16List}
v110 <- LoadField(v12 T{StringBuffer} . _bufferPosition@0150898) [-9223372036854775808, 9223372036854775807] int64
v111 <- BinaryInt64Op(+ [tr], v110, v297 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v12 T{StringBuffer} . _bufferPosition@0150898 = v111 T{int} <int64>)
v115 <- LoadField(v109 T{_Uint16List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v280 <- UnboxInt64([non-speculative], v115) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r4
GenericCheckBound:50(v280 T{_Smi}, v110) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- C
StoreIndexed:50([_Uint16List] v109 T{_Uint16List}, v110 T{int}, v137 T{_Smi}, NoStoreBarrier)
v112 <- LoadField(v12 T{StringBuffer} . _bufferCodeUnitMagnitude@0150898) [-9223372036854775808, 9223372036854775807] int64
v113 <- BinaryInt64Op(| [tr], v112, v137 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v12 T{StringBuffer} . _bufferCodeUnitMagnitude@0150898 = v113 T{int} <int64>)
ParallelMove r4 <- fp[-5]
v28 <- ShiftInt64Op(>> [tr], v298 T{_Smi}, v293 T{_Smi}) [0, 15] int64
ParallelMove r5 <- C
v301 <- LoadIndexed:262([_OneByteString] v26, v28 T{int}) [0, 255] int64
ParallelMove r1 <- r3, r2 <- r2
StaticCall:264( writeCharCode<0> v12, v301, using unchecked entrypoint)
ParallelMove r0 <- fp[-5]
v332 <- IntConverter(int64->uint32[tr], v298 T{_Smi}) uint32
ParallelMove r3 <- C
v31 <- BinaryUint32Op(& [tr], v332 T{_Smi}, v336 T{_Smi}) [0, 15] uint32
ParallelMove r1 <- r1
v335 <- IntConverter(uint32->int64, v31) int64
ParallelMove r0 <- C
v302 <- LoadIndexed:268([_OneByteString] v26, v335 T{_Smi}) [0, 255] int64
ParallelMove r1 <- fp[-4], r2 <- r2
StaticCall:270( writeCharCode<0> v12, v302, using unchecked entrypoint)
ParallelMove  goto:276 B37
B37
  Loop 0
v35 <- BinaryInt64Op(+ [tr], v16 T{int}, v297 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r9 <- r9, r3 <- fp[-3], r4 <- fp[-2] goto:282 B38
B26
MoveArgument(sp[0] <- v12)
v20 <- StaticCall:286( toString<0> v12, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:288(v20)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check null (cast) operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v2 . _buffer@0150898) T{_Uint16List?}
Branch if StrictCompare:12(===, v4, v0) goto (3, 4)
B3
ParallelMove r4 <- C
v23 <- AllocateTypedData:10(v10 T{_Smi}) T{_Uint16List}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v2 T{StringBuffer} . _buffer@0150898 = v23 T{_Uint16List})
ParallelMove  goto:52 B8
B4
v5 <- LoadField(v2 . _bufferPosition@0150898) [-9223372036854775808, 9223372036854775807] int64
v6 <- BinaryInt64Op(+ [tr], v5, v3) [-9223372036854775808, 9223372036854775807] int64
v17 <- LoadField(v4 T{_Uint16List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v36 <- UnboxInt64([non-speculative], v17 T{_Smi}) [0, 4611686018427387903] int64
Branch if RelationalOp(>, v6, v36 T{_Smi}) T{bool} goto (5, 6)
B5
ParallelMove r1 <- r1
StaticCall:40( _consumeBuffer@0150898<0> v2, using unchecked entrypoint)
ParallelMove  goto:46 B7
B6
B7
B8
ParallelMove r0 <- C
DartReturn:56(v0)
CheckStackOverflowSlowPath
B0
B15
Enter frame
ParallelMove r3 <- r2, fp[-1] <- r2
CheckStackOverflow:26(stack=0, loop=0)
ParallelMove r0 <- r3, r2 <- C, r1 <- C
t0 <- AssertAssignable:28(v3, v13, 'string', instantiator_type_args(v0), function_type_args(v0)) T{String}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
v68 <- LoadField(v3 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v93 <- UnboxInt64([non-speculative], v68 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove r1 <- C, r2 <- C, r3 <- r4, fp[-2] <- r4
v17 <- StaticCall:32( checkValidRange<0> v97 T{_Smi}, v0, v93 T{_Smi}, result_type = T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r0 <- r0
ParallelMove fp[-4] <- r0
Branch if EqualityCompare(v17 == v97 T{_Smi}) T{bool} goto (6, 7)
B6
ParallelMove r4 <- C
v63 <- AllocateTypedData:10(v5 T{_Smi}) T{_Uint8List}
ParallelMove r0 <- r0
DartReturn:48(v63 T{_Uint8List})
B7
v22 <- BinaryInt64Op(* [tr], v17, v98 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-3] <- r1
v20 <- AllocateObject:52(cls=_Utf8Encoder) T{_Utf8Encoder}
ParallelMove r3 <- r0, r2 <- C
ParallelMove fp[-5] <- r3
StoreField(v20 T{_Utf8Encoder} . _bufferIndex@10003594 = v97 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r4 <- fp[-3]
v94 <- BoxInt64(v22 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v79 <- AllocateTypedData:10(v94 T{int}) T{_Uint8List}
ParallelMove r4 <- r0, r0 <- fp[-5]
ParallelMove fp[-6] <- r4
StoreField(v20 T{_Utf8Encoder} . _buffer@10003594 = v79 T{_Uint8List}, NoStoreBarrier)
ParallelMove r1 <- r0, r2 <- fp[-1], r3 <- fp[-4]
v23 <- StaticCall:58( _fillBuffer@10003594<0> v20, v3 T{String}, v17, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r0, r0 <- fp[-4]
Branch if EqualityCompare(v23 != v17) T{bool} goto (18, 9)
B18
v28 <- BinaryInt64Op(- [tr], v17, v99 T{_Smi}) [-4611686018427387905, 4611686018427387902] int64
ParallelMove r0 <- fp[-2], r1 <- r1
t0 <- GenericCheckBound:72(v93 T{_Smi}, v28 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-5]
StaticCall:74( _writeReplacementCharacter@10003594<0> v20, using unchecked entrypoint)
ParallelMove  goto:80 B10
B9
B10
v26 <- LoadField(v20 . _bufferIndex@10003594) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-6], r2 <- C, r3 <- r3
v27 <- StaticCall:88( sublist<0> v79, v97 T{_Smi}, v26, using unchecked entrypoint, result_type = T{_Uint8List}) T{_Uint8List}
ParallelMove r0 <- r0
DartReturn:90(v27)
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove r4 <- C, r3 <- C, r2 <- C
ParallelMove r5 <- r1
v3 <- LoadField(v2 . _buffer@10003594 {final}) T{_Uint8List}
v4 <- LoadField(v2 . _bufferIndex@10003594) [-9223372036854775808, 9223372036854775807] int64
v6 <- BinaryInt64Op(+ [tr], v4, v55 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_Utf8Encoder} . _bufferIndex@10003594 = v6 T{int} <int64>)
v16 <- LoadField(v3 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v49 <- UnboxInt64([non-speculative], v16) [0, 4611686018427387903] int64
ParallelMove r0 <- r10, r1 <- r7
GenericCheckBound:18(v49 T{_Smi}, v4) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:18([_Uint8List] v3, v4 T{int}, v43, NoStoreBarrier)
v10 <- BinaryInt64Op(+ [tr], v6 T{int}, v55 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_Utf8Encoder} . _bufferIndex@10003594 = v10 T{int} <int64>)
ParallelMove r0 <- r10, r1 <- r8
GenericCheckBound:28(v49 T{_Smi}, v6 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:28([_Uint8List] v3 T{_Uint8List}, v6 T{int}, v44, NoStoreBarrier)
v14 <- BinaryInt64Op(+ [tr], v10 T{int}, v55 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_Utf8Encoder} . _bufferIndex@10003594 = v14 T{int} <int64>)
ParallelMove r0 <- r10, r1 <- r4
GenericCheckBound:38(v49 T{_Smi}, v10 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:38([_Uint8List] v3 T{_Uint8List}, v10 T{int}, v45, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:40(v0)
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r5 <- r1, r4 <- r2, fp[-12] <- r1, fp[-13] <- r2
CheckStackOverflow:8(stack=0, loop=0)
Branch if EqualityCompare(v377 T{_Smi} != v4) T{bool} goto (3, 6)
B3
v96 <- BinaryInt64Op(- [tr], v4, v378 T{_Smi}) [-4611686018427387905, 4611686018427387902] int64
v237 <- LoadField(v3 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v349 <- UnboxInt64([non-speculative], v237) [0, 2305843009213693951] int64
ParallelMove r0 <- r1, r1 <- r2
t0 <- GenericCheckBound:20(v349 T{_Smi}, v96 T{int}) [-9223372036854775808, 9223372036854775807] int64
v239 <- LoadClassId(v3 T{_StringBase}) [93, 94] T{_Smi}
Branch if StrictCompare:20(===, v239, v189 T{_Smi}) goto (77, 78)
B77
v243 <- LoadIndexed([_OneByteString] v3 T{_OneByteString}, v96 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:20 B76
B78
v241 <- LoadIndexed([_TwoByteString] v3 T{_StringBase}, v96 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:20 B76
B76
ParallelMove r0 <- r0
v446 <- IntConverter(int64->uint32[tr], v242 T{_Smi}) uint32
v252 <- BinaryUint32Op(& [tr], v446 T{_Smi}, v457 T{_Smi}) [0, 64512] uint32
ParallelMove r1 <- r1
v447 <- IntConverter(uint32->int64, v252) int64
Branch if EqualityCompare(v447 T{_Smi} == v380 T{_Smi}) T{bool} goto (4, 7)
B4
ParallelMove r7 <- r2 goto:48 B8
B7
B6
ParallelMove r6 <- C
ParallelMove  goto:40 B5
B5
ParallelMove r7 <- r3 goto:50 B8
B8
ParallelMove fp[-11] <- r7
v221 <- LoadField:360(v3 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v350 <- UnboxInt64:360([non-speculative], v221) [0, 2305843009213693951] int64
ParallelMove fp[-10] <- r8
v223 <- LoadClassId:360(v3 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove fp[-9] <- r9
v25 <- LoadField:360(v2 . _buffer@10003594 {final}) T{_Uint8List}
ParallelMove fp[-8] <- r10
v140 <- LoadField:360(v25 T{_Uint8List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v363 <- UnboxInt64:360([non-speculative], v140 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove fp[-7] <- r11
v358 <- UnboxInt64:360([non-speculative], v140 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove fp[-6] <- r12
v357 <- UnboxInt64:360([non-speculative], v140 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove fp[-5] <- r13
v355 <- UnboxInt64:360([non-speculative], v140 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove fp[-4] <- r14
v352 <- UnboxInt64:360([non-speculative], v140 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove fp[-3] <- r19
ParallelMove r20 <- C goto:360 B37
B37
  Loop 0
  Loop Header
ParallelMove fp[-2] <- r20
CheckStackOverflow:364(stack=0, loop=1)
Branch if RelationalOp(<, v9, v8) T{bool} goto (9, 10)
B9
  Loop 0
ParallelMove r0 <- r8, r1 <- r20
t0 <- GenericCheckBound:66(v350 T{_Smi}, v9 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:66(===, v223, v189 T{_Smi}) goto (72, 73)
B72
  Loop 0
v227 <- LoadIndexed([_OneByteString] v3 T{_OneByteString}, v9 T{int}) [0, 255] int64
ParallelMove r2 <- r0 goto:66 B71
B73
  Loop 0
v225 <- LoadIndexed([_TwoByteString] v3 T{_StringBase}, v9 T{int}) [0, 65535] int64
ParallelMove r2 <- r0 goto:66 B71
B71
  Loop 0
Branch if RelationalOp(<=, v226 T{_Smi}, v381 T{_Smi}) T{bool} goto (11, 15)
B11
  Loop 0
v89 <- LoadField(v2 . _bufferIndex@10003594) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>=, v89, v352 T{_Smi}) T{bool} goto (12, 14)
B14
  Loop 0
v95 <- BinaryInt64Op(+ [tr], v89 T{int}, v378 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_Utf8Encoder} . _bufferIndex@10003594 = v95 T{int} <int64>)
ParallelMove r0 <- r19, r1 <- r3
GenericCheckBound:108(v352 T{_Smi}, v89 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:108([_Uint8List] v25 T{_Uint8List}, v89 T{int}, v226, NoStoreBarrier)
ParallelMove r1 <- r20, r3 <- r5, r7 <- r10, r4 <- r12, r5 <- r11, r8 <- C goto:354 B36
B12
B15
  Loop 0
ParallelMove r0 <- r2
v451 <- IntConverter(int64->uint32[tr], v226 T{_Smi}) uint32
v200 <- BinaryUint32Op(& [tr], v451 T{_Smi}, v457 T{_Smi}) [0, 64512] uint32
ParallelMove r0 <- r1
v453 <- IntConverter(uint32->int64, v200) int64
Branch if EqualityCompare(v453 T{_Smi} == v380 T{_Smi}) T{bool} goto (16, 22)
B16
  Loop 0
v75 <- LoadField(v2 . _bufferIndex@10003594) [-9223372036854775808, 9223372036854775807] int64
v77 <- BinaryInt64Op(+ [tr], v75, v382 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>, v77, v355 T{_Smi}) T{bool} goto (17, 18)
B18
  Loop 0
v81 <- BinaryInt64Op(+ [tr], v9 T{int}, v378 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r8, r1 <- r23, fp[-1] <- r23
t0 <- GenericCheckBound:146(v350 T{_Smi}, v81 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:146(===, v223 T{_Smi}, v189 T{_Smi}) goto (60, 61)
B60
  Loop 0
v185 <- LoadIndexed([_OneByteString] v3 T{_OneByteString}, v81 T{int}) [0, 255] int64
ParallelMove r3 <- r0 goto:146 B59
B61
  Loop 0
v183 <- LoadIndexed([_TwoByteString] v3 T{_StringBase}, v81 T{int}) [0, 65535] int64
ParallelMove r3 <- r0 goto:146 B59
B59
  Loop 0
ParallelMove r1 <- r5, r2 <- r2, r3 <- r3
v83 <- StaticCall:148( _writeSurrogate@10003594<0> v2, v226 T{_Smi}, v184 T{_Smi}, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:152(===, v83 T{bool}, v7) goto (19, 20)
BoolTest
B19
  Loop 0
ParallelMove r0 <- fp[-1] goto:164 B21
B20
  Loop 0
ParallelMove r0 <- fp[-2] goto:166 B21
B21
  Loop 0
ParallelMove r1 <- r0, r3 <- fp[-12], r7 <- fp[-8], r4 <- fp[-6], r5 <- fp[-7], r8 <- C goto:348 B35
B17
B22
  Loop 0
ParallelMove r1 <- r1
v452 <- IntConverter(uint32->int64, v200) int64
Branch if EqualityCompare(v452 T{_Smi} == v383 T{_Smi}) T{bool} goto (23, 26)
B23
  Loop 0
ParallelMove r0 <- fp[-12], r2 <- fp[-5]
v67 <- LoadField(v2 . _bufferIndex@10003594) [-9223372036854775808, 9223372036854775807] int64
v69 <- BinaryInt64Op(+ [tr], v67, v384 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>, v69, v357 T{_Smi}) T{bool} goto (24, 25)
B25
  Loop 0
ParallelMove r1 <- r0
StaticCall:202( _writeReplacementCharacter@10003594<0> v2, using unchecked entrypoint)
ParallelMove r3 <- fp[-12], r7 <- fp[-8], r4 <- fp[-6], r5 <- fp[-7], r8 <- C goto:342 B34
B24
B26
  Loop 0
Branch if RelationalOp(<=, v226 T{_Smi}, v385 T{_Smi}) T{bool} goto (27, 30)
B27
  Loop 0
ParallelMove r3 <- fp[-12], r4 <- fp[-6]
v50 <- LoadField(v2 . _bufferIndex@10003594) [-9223372036854775808, 9223372036854775807] int64
v51 <- BinaryInt64Op(+ [tr], v50, v378 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>=, v51, v358 T{_Smi}) T{bool} goto (28, 29)
B29
  Loop 0
ParallelMove r7 <- fp[-8], r8 <- C
StoreField(v2 T{_Utf8Encoder} . _bufferIndex@10003594 = v51 T{int} <int64>)
v59 <- ShiftInt64Op(>> [tr], v226 T{_Smi}, v386 T{_Smi}) [0, 1023] int64
v60 <- BinaryInt64Op(| [tr], v59, v387 T{_Smi}) [0, 1023] int64
ParallelMove r0 <- r4, r1 <- r5
GenericCheckBound:250(v358 T{_Smi}, v50 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:250([_Uint8List] v25 T{_Uint8List}, v50 T{int}, v60 T{int}, NoStoreBarrier)
v63 <- BinaryInt64Op(+ [tr], v51 T{int}, v378 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_Utf8Encoder} . _bufferIndex@10003594 = v63 T{int} <int64>)
ParallelMove r5 <- r2
v450 <- IntConverter(int64->uint32[tr], v226 T{_Smi}) uint32
v64 <- BinaryUint32Op(& [tr], v450 T{_Smi}, v458 T{_Smi}) [0, 63] uint32
ParallelMove r9 <- r9
v454 <- IntConverter(uint32->int64, v64) int64
v65 <- BinaryInt64Op(| [tr], v454 T{_Smi}, v389 T{_Smi}) [0, 255] int64
ParallelMove r0 <- r4, r1 <- r6
GenericCheckBound:264(v358 T{_Smi}, v51 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:264([_Uint8List] v25 T{_Uint8List}, v51 T{int}, v65 T{int}, NoStoreBarrier)
ParallelMove r5 <- fp[-7] goto:336 B33
B28
B30
  Loop 0
ParallelMove r3 <- fp[-12], r7 <- fp[-8], r4 <- fp[-6], r5 <- fp[-7], r8 <- C
v22 <- LoadField(v2 . _bufferIndex@10003594) [-9223372036854775808, 9223372036854775807] int64
v24 <- BinaryInt64Op(+ [tr], v22, v390 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>=, v24, v363 T{_Smi}) T{bool} goto (31, 32)
B32
  Loop 0
v31 <- BinaryInt64Op(+ [tr], v22 T{int}, v378 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_Utf8Encoder} . _bufferIndex@10003594 = v31 T{int} <int64>)
v34 <- ShiftInt64Op(>> [tr], v226 T{_Smi}, v391 T{_Smi}) [0, 15] int64
v35 <- BinaryInt64Op(| [tr], v34, v392 T{_Smi}) [0, 255] int64
ParallelMove r0 <- r5, r1 <- r6
GenericCheckBound:302(v363 T{_Smi}, v22 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:302([_Uint8List] v25 T{_Uint8List}, v22 T{int}, v35 T{int}, NoStoreBarrier)
v38 <- BinaryInt64Op(+ [tr], v31 T{int}, v378 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_Utf8Encoder} . _bufferIndex@10003594 = v38 T{int} <int64>)
ParallelMove r10 <- r2
v449 <- IntConverter(int64->uint32[tr], v226 T{_Smi}) uint32
v41 <- ShiftUint32Op(>> [tr], v449 T{_Smi}, v386 T{_Smi}) [0, 1023] uint32
v43 <- BinaryUint32Op(& [tr], v41, v458 T{_Smi}) [0, 63] uint32
ParallelMove r10 <- r10
v455 <- IntConverter(uint32->int64, v43) int64
v44 <- BinaryInt64Op(| [tr], v455 T{_Smi}, v389 T{_Smi}) [0, 255] int64
ParallelMove r0 <- r5, r1 <- r9
GenericCheckBound:318(v363 T{_Smi}, v31 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:318([_Uint8List] v25 T{_Uint8List}, v31 T{int}, v44 T{int}, NoStoreBarrier)
v47 <- BinaryInt64Op(+ [tr], v38 T{int}, v378 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_Utf8Encoder} . _bufferIndex@10003594 = v47 T{int} <int64>)
ParallelMove r2 <- r2
v448 <- IntConverter(int64->uint32[tr], v226 T{_Smi}) uint32
v48 <- BinaryUint32Op(& [tr], v448 T{_Smi}, v458 T{_Smi}) [0, 63] uint32
ParallelMove r9 <- r9
v456 <- IntConverter(uint32->int64, v48) int64
v49 <- BinaryInt64Op(| [tr], v456 T{_Smi}, v389 T{_Smi}) [0, 255] int64
ParallelMove r0 <- r5, r1 <- r6
GenericCheckBound:332(v363 T{_Smi}, v38 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:332([_Uint8List] v25 T{_Uint8List}, v38 T{int}, v49 T{int}, NoStoreBarrier)
ParallelMove  goto:338 B33
B33
B34
  Loop 0
ParallelMove r1 <- fp[-2] goto:350 B35
B35
B36
  Loop 0
v88 <- BinaryInt64Op(+ [tr], v86, v378 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r20 <- r20, r5 <- r3, r4 <- fp[-13], r7 <- fp[-11], r10 <- r7, r9 <- fp[-9], r8 <- fp[-10], r19 <- fp[-3], r14 <- fp[-4], r13 <- fp[-5], r12 <- r4, r11 <- r5, r6 <- C goto:362 B37
B31
B10
B13
ParallelMove r0 <- fp[-2]
DartReturn:368(v9)
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r0 <- C
ParallelMove r4 <- r1
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r3
v163 <- IntConverter(int64->uint32[tr], v4 T{_Smi}) uint32
v96 <- BinaryUint32Op(& [tr], v163 T{_Smi}, v173 T{_Smi}) [0, 64512] uint32
ParallelMove r5 <- r5
v164 <- IntConverter(uint32->int64, v96) int64
Branch if EqualityCompare(v164 T{_Smi} == v134 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r0 <- C, r5 <- C
ParallelMove r2 <- r2
v161 <- IntConverter(int64->uint32[tr], v3 T{_Smi}) uint32
v58 <- BinaryUint32Op(& [tr], v161 T{_Smi}, v174 T{_Smi}) [0, 1023] uint32
ParallelMove r1 <- r1
v165 <- IntConverter(uint32->int64, v58) int64
v60 <- ShiftInt64Op(<< [tr], v165 T{_Smi}, v136 T{_Smi}) [0, 1047552] int64
v61 <- BinaryInt64Op(+ [tr], v60, v137 T{_Smi}) [65536, 1113088] int64
ParallelMove r3 <- r3
v162 <- IntConverter(int64->uint32[tr], v4 T{_Smi}) uint32
v62 <- BinaryUint32Op(& [tr], v162 T{_Smi}, v174 T{_Smi}) [0, 1023] uint32
ParallelMove r2 <- r2
v166 <- IntConverter(uint32->int64, v62) int64
v63 <- BinaryInt64Op(| [tr], v61, v166 T{_Smi}) [0, 2097151] int64
v9 <- LoadField(v2 . _buffer@10003594 {final}) T{_Uint8List}
v10 <- LoadField(v2 . _bufferIndex@10003594) [-9223372036854775808, 9223372036854775807] int64
v12 <- BinaryInt64Op(+ [tr], v10, v138 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_Utf8Encoder} . _bufferIndex@10003594 = v12 T{int} <int64>)
v15 <- ShiftInt64Op(>> [tr], v63 T{int}, v139 T{_Smi}) [0, 7] int64
v16 <- BinaryInt64Op(| [tr], v15, v140 T{_Smi}) [0, 255] int64
v38 <- LoadField(v9 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v125 <- UnboxInt64([non-speculative], v38) [0, 4611686018427387903] int64
ParallelMove r0 <- r9, r1 <- r6
GenericCheckBound:34(v125 T{_Smi}, v10) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:34([_Uint8List] v9, v10 T{int}, v16 T{int}, NoStoreBarrier)
v19 <- BinaryInt64Op(+ [tr], v12 T{int}, v138 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_Utf8Encoder} . _bufferIndex@10003594 = v19 T{int} <int64>)
ParallelMove r0 <- r3
v169 <- IntConverter(int64->uint32[tr], v63 T{int}) uint32
v22 <- ShiftUint32Op(>> [tr], v169 T{int}, v141 T{_Smi}) [0, 511] uint32
v24 <- BinaryUint32Op(& [tr], v22, v175 T{_Smi}) [0, 63] uint32
ParallelMove r0 <- r0
v170 <- IntConverter(uint32->int64, v24) int64
v25 <- BinaryInt64Op(| [tr], v170 T{_Smi}, v143 T{_Smi}) [0, 255] int64
ParallelMove r0 <- r9, r1 <- r7
GenericCheckBound:50(v125 T{_Smi}, v12 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:50([_Uint8List] v9 T{_Uint8List}, v12 T{int}, v25 T{int}, NoStoreBarrier)
v28 <- BinaryInt64Op(+ [tr], v19 T{int}, v138 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_Utf8Encoder} . _bufferIndex@10003594 = v28 T{int} <int64>)
ParallelMove r0 <- r3
v168 <- IntConverter(int64->uint32[tr], v63 T{int}) uint32
v30 <- ShiftUint32Op(>> [tr], v168 T{int}, v144 T{_Smi}) [0, 32767] uint32
v31 <- BinaryUint32Op(& [tr], v30, v175 T{_Smi}) [0, 63] uint32
ParallelMove r0 <- r0
v171 <- IntConverter(uint32->int64, v31) int64
v32 <- BinaryInt64Op(| [tr], v171 T{_Smi}, v143 T{_Smi}) [0, 255] int64
ParallelMove r0 <- r9, r1 <- r6
GenericCheckBound:66(v125 T{_Smi}, v19 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:66([_Uint8List] v9 T{_Uint8List}, v19 T{int}, v32 T{int}, NoStoreBarrier)
v35 <- BinaryInt64Op(+ [tr], v28 T{int}, v138 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_Utf8Encoder} . _bufferIndex@10003594 = v35 T{int} <int64>)
ParallelMove r3 <- r3
v167 <- IntConverter(int64->uint32[tr], v63 T{int}) uint32
v36 <- BinaryUint32Op(& [tr], v167 T{int}, v175 T{_Smi}) [0, 63] uint32
ParallelMove r0 <- r0
v172 <- IntConverter(uint32->int64, v36) int64
v37 <- BinaryInt64Op(| [tr], v172 T{_Smi}, v143 T{_Smi}) [0, 255] int64
ParallelMove r0 <- r9, r1 <- r7
GenericCheckBound:80(v125 T{_Smi}, v28 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:80([_Uint8List] v9 T{_Uint8List}, v28 T{int}, v37 T{int}, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:82(v6)
B4
ParallelMove r1 <- r4
StaticCall:86( _writeReplacementCharacter@10003594<0> v2, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:88(v7)
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r3 <- r1, r0 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
Branch if RelationalOp(<=, v3, v115 T{_Smi}) T{bool} goto (3, 6)
B3
Branch if RelationalOp(<, v3, v116 T{_Smi}) T{bool} goto (4, 5)
B5
ParallelMove r1 <- r3, r2 <- C
StaticCall:38( _ensureCapacity@0150898<0> v2, v117 T{_Smi}, using unchecked entrypoint)
ParallelMove r3 <- fp[-1]
v31 <- LoadField(v2 . _buffer@0150898) T{_Uint16List?}
CheckNull:42(v31, CastError) T{_Uint16List}
v32 <- LoadField(v2 . _bufferPosition@0150898) [-9223372036854775808, 9223372036854775807] int64
v33 <- BinaryInt64Op(+ [tr], v32, v117 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{StringBuffer} . _bufferPosition@0150898 = v33 T{int} <int64>)
v37 <- LoadField(v31 T{_Uint16List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v106 <- UnboxInt64([non-speculative], v37) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r4
GenericCheckBound:50(v106 T{_Smi}, v32) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-2]
StoreIndexed:50([_Uint16List] v31 T{_Uint16List}, v32 T{int}, v3 T{int}, NoStoreBarrier)
v34 <- LoadField(v2 . _bufferCodeUnitMagnitude@0150898) [-9223372036854775808, 9223372036854775807] int64
v35 <- BinaryInt64Op(| [tr], v34, v3) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{StringBuffer} . _bufferCodeUnitMagnitude@0150898 = v35 T{int} <int64>)
ParallelMove  goto:118 B9
B6
Branch if RelationalOp(>, v3, v118 T{_Smi}) T{bool} goto (7, 8)
B8
ParallelMove r1 <- r3, r2 <- C
StaticCall:78( _ensureCapacity@0150898<0> v2, v119 T{_Smi}, using unchecked entrypoint)
ParallelMove r2 <- fp[-2]
v11 <- BinaryInt64Op(- [tr], v3, v120 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- fp[-1]
v12 <- LoadField(v2 . _buffer@0150898) T{_Uint16List?}
CheckNull:84(v12, CastError) T{_Uint16List}
v13 <- LoadField(v2 . _bufferPosition@0150898) [-9223372036854775808, 9223372036854775807] int64
v15 <- BinaryInt64Op(+ [tr], v13, v117 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{StringBuffer} . _bufferPosition@0150898 = v15 T{int} <int64>)
v18 <- ShiftInt64Op(>> [tr], v11, v121 T{_Smi}) [-9007199254740992, 9007199254740991] int64
v19 <- BinaryInt64Op(| [tr], v18, v122 T{_Smi}) [-9007199254740992, 9007199254740991] int64
v40 <- LoadField(v12 T{_Uint16List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v108 <- UnboxInt64([non-speculative], v40) [0, 4611686018427387903] int64
ParallelMove r0 <- r8, r1 <- r5
GenericCheckBound:96(v108 T{_Smi}, v13) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:96([_Uint16List] v12 T{_Uint16List}, v13 T{int}, v19 T{int}, NoStoreBarrier)
v21 <- BinaryInt64Op(+ [tr], v15 T{int}, v117 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{StringBuffer} . _bufferPosition@0150898 = v21 T{int} <int64>)
ParallelMove r3 <- r3
v138 <- IntConverter(int64->uint32[tr], v11) uint32
ParallelMove r0 <- C
v24 <- BinaryUint32Op(& [tr], v138 T{int}, v140 T{_Smi}) [0, 1023] uint32
ParallelMove r1 <- r1
v139 <- IntConverter(uint32->int64, v24) int64
v25 <- BinaryInt64Op(| [tr], v139 T{_Smi}, v124 T{_Smi}) [0, 65535] int64
ParallelMove r0 <- r8, r1 <- r6
GenericCheckBound:108(v108 T{_Smi}, v15 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:108([_Uint16List] v12 T{_Uint16List}, v15 T{int}, v25 T{int}, NoStoreBarrier)
v26 <- LoadField(v2 . _bufferCodeUnitMagnitude@0150898) [-9223372036854775808, 9223372036854775807] int64
v27 <- BinaryInt64Op(| [tr], v26, v115 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{StringBuffer} . _bufferCodeUnitMagnitude@0150898 = v27 T{int} <int64>)
ParallelMove  goto:120 B9
B9
ParallelMove r0 <- C
DartReturn:122(v0)
B4
ParallelMove r2 <- r0
v104 <- BoxInt64(v3) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
v36 <- AllocateObject:30(cls=RangeError) T{RangeError}
ParallelMove r0 <- r0
ParallelMove fp[-3] <- r0
MoveArgument(sp[3] <- v36)
MoveArgument(sp[2] <- v104 T{int})
MoveArgument(sp[1] <- v29)
MoveArgument(sp[0] <- v7)
StaticCall:32( RangeError.range<0> v36, v104 T{int}, v29, v7)
ParallelMove r0 <- fp[-3]
Throw:34(v36)
B7
ParallelMove r2 <- r0
v105 <- BoxInt64(v3) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
v28 <- AllocateObject:70(cls=RangeError) T{RangeError}
ParallelMove r0 <- r0
ParallelMove fp[-3] <- r0
MoveArgument(sp[3] <- v28)
MoveArgument(sp[2] <- v105 T{int})
MoveArgument(sp[1] <- v29)
MoveArgument(sp[0] <- v7)
StaticCall:72( RangeError.range<0> v28, v105 T{int}, v29, v7)
ParallelMove r0 <- fp[-3]
Throw:74(v28)
CheckStackOverflowSlowPath
slow path check null (cast) operation
slow path check bound operation
slow path check null (cast) operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r6 <- r1, r5 <- r2, r4 <- r3, fp[-2] <- r1, fp[-3] <- r2, fp[-8] <- r3
CheckStackOverflow:8(stack=0, loop=0)
Branch if StrictCompare:10(===, v2, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:16(v0)
B4
Branch if EqualityCompare(v3 == v4) T{bool} goto (5, 6)
B5
ParallelMove r0 <- C
DartReturn:30(v20)
B6
v105 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v163 <- UnboxInt64([non-speculative], v105) [0, 2305843009213693951] int64
ParallelMove r0 <- r2, r1 <- r5
t0 <- GenericCheckBound:34(v163 T{_Smi}, v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
v107 <- LoadClassId(v2 T{_StringBase}) [93, 94] T{_Smi}
Branch if StrictCompare:34(===, v107, v44 T{_Smi}) goto (45, 46)
B45
v111 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v3 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:34 B44
B46
v109 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v3 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:34 B44
B44
Branch if EqualityCompare(v110 T{_Smi} == v171 T{_Smi}) T{bool} goto (7, 18)
B7
v42 <- BinaryInt64Op(- [tr], v4, v172 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r2, r1 <- r7, fp[-1] <- r7
t0 <- GenericCheckBound:48(v163 T{_Smi}, v42 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:48(===, v107 T{_Smi}, v44 T{_Smi}) goto (40, 41)
B40
v95 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v42 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:48 B39
B41
v93 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v42 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:48 B39
B39
Branch if EqualityCompare(v94 T{_Smi} != v173 T{_Smi}) T{bool} goto (8, 9)
B8
ParallelMove r1 <- r6, r2 <- r5, r3 <- C
StaticCall:60( _fail@0150898<0> v2 T{String?}, v3 T{int}, v65)
ParallelMove  goto:66 B10
B9
B10
v46 <- BinaryInt64Op(+ [tr], v3 T{int}, v172 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-2], r2 <- r5, r3 <- r4, fp[-4] <- r5
v48 <- StaticCall:74( _checkZoneID@0150898<0> v2 T{String?}, v46, v42 T{int}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- r0, r3 <- fp[-1]
ParallelMove fp[-6] <- r4
Branch if RelationalOp(<, v48, v42 T{int}) T{bool} goto (11, 15)
B11
v58 <- BinaryInt64Op(+ [tr], v48, v172 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-5] <- r5
v166 <- BoxInt64(v58) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v166 T{int})
ParallelMove r1 <- fp[-2], r2 <- C
v59 <- StaticCall:90( startsWith<0> v2 T{String?}, v34, v166 T{int}, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:94(===, v59 T{bool}, v6) goto (12, 13)
BoolTest
B12
ParallelMove r0 <- fp[-6]
v64 <- BinaryInt64Op(+ [tr], v48, v174 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r1 goto:108 B14
B13
ParallelMove r0 <- fp[-6]
ParallelMove r2 <- fp[-5] goto:110 B14
B14
ParallelMove r1 <- fp[-2], r2 <- r2, r3 <- fp[-1]
v63 <- StaticCall:114( _normalizeZoneID@0150898<0> v2 T{String?}, v61, v42 T{int}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r4 <- r0 goto:120 B16
B15
ParallelMove r4 <- C goto:122 B16
B16
ParallelMove r1 <- fp[-2], r2 <- fp[-4], r3 <- r0, fp[-7] <- r4
StaticCall:126( parseIPv6Address<0> v2 T{String?}, v46 T{int}, v48)
ParallelMove r2 <- fp[-6]
v165 <- BoxInt64(v48) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v165 T{int})
ParallelMove r1 <- fp[-2], r2 <- fp[-3]
v54 <- StaticCall:128( substring<0> v2 T{String?}, v3 T{int}, v165 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
v210 <- LoadClassId(<non-smi> v54) int64
MoveArgument(sp[0] <- v54)
ParallelMove r0 <- r1
v55 <- DispatchTableCall( cid=v210 String.toLowerCase<0>, v54) T{String}
ParallelMove r0 <- r0
MoveArgument(sp[1] <- v55 T{String})
MoveArgument(sp[0] <- v52)
v56 <- StaticCall:132( +<0> v55 T{String}, v52, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
MoveArgument(sp[1] <- v56)
MoveArgument(sp[0] <- v32)
v57 <- StaticCall:134( +<0> v56, v32, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:136(v57)
B18
ParallelMove r6 <- fp[-3], r5 <- fp[-2] goto:238 B29
B29
  Loop 0
  Loop Header
CheckStackOverflow:242(stack=0, loop=1)
Branch if RelationalOp(<, v13, v4) T{bool} goto (19, 31)
B19
  Loop 0
ParallelMove r0 <- r2, r1 <- r6
t0 <- GenericCheckBound:162(v163 T{_Smi}, v13 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:162(===, v107 T{_Smi}, v44 T{_Smi}) goto (35, 36)
B35
  Loop 0
v79 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v13 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:162 B34
B36
  Loop 0
v77 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v13 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:162 B34
B34
  Loop 0
Branch if EqualityCompare(v78 T{_Smi} == v175 T{_Smi}) T{bool} goto (21, 28)
B28
  Loop 0
v19 <- BinaryInt64Op(+ [tr], v13 T{int}, v172 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r0 goto:240 B29
B21
ParallelMove r1 <- r5, r2 <- fp[-3], r3 <- r4
v21 <- StaticCall:174( _checkZoneID@0150898<0> v2 T{String?}, v3 T{int}, v4, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- r0, r3 <- fp[-8]
ParallelMove fp[-4] <- r4
Branch if RelationalOp(<, v21, v4) T{bool} goto (22, 26)
B22
v35 <- BinaryInt64Op(+ [tr], v21, v172 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-1] <- r5
v169 <- BoxInt64(v35) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v169 T{int})
ParallelMove r1 <- fp[-2], r2 <- C
v36 <- StaticCall:188( startsWith<0> v2 T{String?}, v34, v169 T{int}, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:192(===, v36 T{bool}, v6) goto (23, 24)
BoolTest
B23
ParallelMove r0 <- fp[-4]
v41 <- BinaryInt64Op(+ [tr], v21, v174 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r1 goto:206 B25
B24
ParallelMove r0 <- fp[-4]
ParallelMove r2 <- fp[-1] goto:208 B25
B25
ParallelMove r1 <- fp[-2], r2 <- r2, r3 <- fp[-8]
v39 <- StaticCall:210( _normalizeZoneID@0150898<0> v2 T{String?}, v38, v4, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r4 <- r0 goto:216 B27
B26
ParallelMove r4 <- C goto:218 B27
B27
ParallelMove r1 <- fp[-2], r2 <- fp[-3], r3 <- r0, fp[-7] <- r4
StaticCall:220( parseIPv6Address<0> v2 T{String?}, v3 T{int}, v21)
ParallelMove r1 <- C, r2 <- C
v26 <- CreateArray:222(v0, v25) T{_List}
ParallelMove r3 <- r0
ParallelMove fp[-9] <- r3
StoreIndexed([_List] v26, v27, v28, NoStoreBarrier)
ParallelMove r2 <- fp[-4]
v168 <- BoxInt64(v21) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v168 T{int})
ParallelMove r1 <- fp[-2], r2 <- fp[-3]
v29 <- StaticCall:224( substring<0> v2 T{String?}, v3 T{int}, v168 T{int}, using unchecked entrypoint) T{String}
ParallelMove r1 <- fp[-9], r0 <- r0
StoreIndexed([_List] v26, v18, v29)
MoveArgument(sp[0] <- v26)
v30 <- StaticCall:226( _interpolate@0150898<0> v26, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
MoveArgument(sp[1] <- v30)
MoveArgument(sp[0] <- v24)
v31 <- StaticCall:228( +<0> v30, v24, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
MoveArgument(sp[1] <- v31)
MoveArgument(sp[0] <- v32)
v33 <- StaticCall:230( +<0> v31, v32, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:232(v33)
B31
ParallelMove r1 <- fp[-2], r2 <- fp[-3], r3 <- fp[-8]
v12 <- StaticCall:252( _normalizeRegName@0150898<0> v2 T{String?}, v3 T{int}, v4, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:254(v12)
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove r6 <- r1, r5 <- r2, r4 <- r3, fp[-7] <- r1, fp[-8] <- r2, fp[-9] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v384 <- LoadField:408(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v649 <- UnboxInt64:408([non-speculative], v384) [0, 2305843009213693951] int64
ParallelMove fp[-6] <- r7
v386 <- LoadClassId:408(v2 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove fp[-5] <- r8
ParallelMove r12 <- C, r11 <- r5, r10 <- r5, r9 <- C goto:408 B60
B60
  Loop 0
  Loop Header
ParallelMove fp[-1] <- r12, fp[-2] <- r11, fp[-3] <- r10, fp[-4] <- r9
CheckStackOverflow:406(stack=0, loop=1)
Branch if RelationalOp(<, v9, v4) T{bool} goto (59, 61)
B59
  Loop 0
ParallelMove r0 <- r7, r1 <- r10
t0 <- GenericCheckBound:18(v649 T{_Smi}, v9 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:18(===, v386, v213 T{_Smi}) goto (156, 157)
B156
  Loop 0
v390 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v9 T{int}) [0, 255] int64
ParallelMove r2 <- r0 goto:18 B155
B157
  Loop 0
v388 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v9 T{int}) [0, 65535] int64
ParallelMove r2 <- r0 goto:18 B155
B155
  Loop 0
Branch if EqualityCompare(v389 T{_Smi} == v667 T{_Smi}) T{bool} goto (3, 22)
B3
  Loop 0
ParallelMove r1 <- r6, r2 <- r10, r3 <- C
v119 <- StaticCall:30( _normalizeEscape@0150898<0> v2, v9 T{int}, v5) T{String??}
ParallelMove r0 <- r0
ParallelMove fp[-10] <- r0
Branch if StrictCompare:32(===, v119, v0) goto (4, 8)
B4
  Loop 0
ParallelMove r1 <- fp[-4]
Branch if StrictCompare:38(===, v10 T{bool}, v5) goto (5, 9)
BoolTest
B5
  Loop 0
ParallelMove r2 <- fp[-3]
v137 <- BinaryInt64Op(+ [tr], v9 T{int}, v668 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r12 <- fp[-1], r11 <- fp[-2], r10 <- r0, r9 <- r1 goto:50 B6
B9
  Loop 0
ParallelMove r2 <- fp[-3]
ParallelMove  goto:60 B7
B8
  Loop 0
ParallelMove r2 <- fp[-3], r1 <- fp[-4]
ParallelMove  goto:56 B7
B7
  Loop 0
Branch if StrictCompare:62(===, v7, v0) goto (10, 11)
B10
  Loop 0
v136 <- AllocateObject:68(cls=StringBuffer) T{StringBuffer}
ParallelMove r3 <- r0, r0 <- C
ParallelMove fp[-11] <- r3
StoreField(v136 T{StringBuffer} . _partsCodeUnits@0150898 = v669 T{_Smi} <int64>, NoStoreBarrier)
StoreField(v136 T{StringBuffer} . _partsCompactionIndex@0150898 = v669 T{_Smi} <int64>, NoStoreBarrier)
StoreField(v136 T{StringBuffer} . _partsCodeUnitsSinceCompaction@0150898 = v669 T{_Smi} <int64>, NoStoreBarrier)
StoreField(v136 T{StringBuffer} . _bufferPosition@0150898 = v669 T{_Smi} <int64>, NoStoreBarrier)
StoreField(v136 T{StringBuffer} . _bufferCodeUnitMagnitude@0150898 = v669 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r1 <- r3, r2 <- C
StaticCall:30( write<0> v136 T{StringBuffer}, v182 T{_OneByteString}, using unchecked entrypoint)
ParallelMove r6 <- fp[-11] goto:76 B12
B11
  Loop 0
ParallelMove r6 <- r4 goto:78 B12
B12
  Loop 0
ParallelMove fp[-11] <- r6
v646 <- BoxInt64(v9 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- fp[-2], r2 <- r0, r3 <- fp[-6]
v369 <- StaticCall:30( checkValidRange<0> v8 T{int}, v646 T{int?}, v649 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-7], r2 <- fp[-2], r3 <- r0
v370 <- StaticCall:32( _substringUnchecked@0150898<0> v2 T{_StringBase}, v8 T{int}, v369, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0, r5 <- fp[-4]
Branch if StrictCompare:84(!==, v10 T{bool}, v5) goto (13, 14)
BoolTest
B13
  Loop 0
v778 <- LoadClassId(<non-smi> v370 T{String}) int64
MoveArgument(sp[0] <- v370 T{String})
ParallelMove r0 <- r1
v135 <- DispatchTableCall( cid=v778 String.toLowerCase<0>, v370 T{String}) T{String}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:96 B15
B14
  Loop 0
ParallelMove r2 <- r0 goto:98 B15
B15
  Loop 0
ParallelMove fp[-12] <- r2
v485 <- LoadField(v123 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v485, v183 T{_Smi}) T{bool} goto (139, 140)
B139
B140
  Loop 0
ParallelMove r1 <- fp[-11]
StaticCall:26( _consumeBuffer@0150898<0> v121 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-11], r2 <- fp[-12]
StaticCall:28( _addPart@0150898<0> v121 T{StringBuffer}, v123 T{String}, using unchecked entrypoint)
ParallelMove  goto:30 B141
B141
  Loop 0
Branch if StrictCompare:102(===, v119, v0) goto (16, 17)
B16
  Loop 0
ParallelMove r4 <- fp[-3]
v133 <- BinaryInt64Op(+ [tr], v9 T{int}, v668 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v651 <- BoxInt64(v133 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r4, r2 <- r0, r3 <- fp[-6]
v345 <- StaticCall:30( checkValidRange<0> v9 T{int}, v651 T{int?}, v649 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-7], r2 <- fp[-3], r3 <- r0
v346 <- StaticCall:32( _substringUnchecked@0150898<0> v2 T{_StringBase}, v9 T{int}, v345, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r1 <- r0, r0 <- C goto:134 B21
B17
  Loop 0
v779 <- LoadClassId(<non-smi> v119 T{String?}) int64
MoveArgument(sp[1] <- v119 T{String?})
MoveArgument(sp[0] <- v125)
ParallelMove r0 <- r0
v126 <- DispatchTableCall( cid=v779 String.==<0>, v119 T{String?}, v125) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:118(===, v126 T{bool}, v5) goto (18, 19)
BoolTest
B18
  Loop 0
ParallelMove r1 <- C, r0 <- C goto:128 B20
B19
  Loop 0
ParallelMove r1 <- fp[-10], r0 <- C goto:130 B20
B20
B21
  Loop 0
ParallelMove fp[-13] <- r0
MoveArgument(sp[0] <- v130 T{String?})
v329 <- StaticCall:10( _interpolateSingle@0150898<0> v130 T{String?}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-10] <- r0
v464 <- LoadField(v329 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v464, v183 T{_Smi}) T{bool} goto (129, 130)
B129
B130
  Loop 0
ParallelMove r1 <- fp[-11]
StaticCall:26( _consumeBuffer@0150898<0> v121 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-11], r2 <- fp[-10]
StaticCall:28( _addPart@0150898<0> v121 T{StringBuffer}, v329, using unchecked entrypoint)
ParallelMove  goto:30 B131
B131
  Loop 0
v132 <- BinaryInt64Op(+ [tr], v9 T{int}, v131) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[-11], r2 <- r1, r1 <- r1, r0 <- C goto:394 B58
B22
  Loop 0
ParallelMove r4 <- r12, r3 <- r10, r5 <- r9
Branch if RelationalOp(<, v389 T{_Smi}, v671 T{_Smi}) T{bool} goto (124, 207)
B124
  Loop 0
ParallelMove r8 <- C, r7 <- C, r6 <- C
v301 <- ShiftInt64Op(>> [tr], v389 T{_Smi}, v672 T{_Smi}) [0, 4095] int64
ParallelMove r0 <- C, r1 <- r9
GenericCheckBound:24(v673 T{_Smi}, v301) [-9223372036854775808, 9223372036854775807] int64
v674 <- LoadIndexed:24([_List] v322, v301 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r2
v769 <- IntConverter(int64->uint32[tr], v389 T{_Smi}) uint32
v305 <- BinaryUint32Op(& [tr], v769 T{_Smi}, v782 T{_Smi}) [0, 15] uint32
ParallelMove r9 <- r9
v770 <- IntConverter(uint32->int64, v305) int64
v306 <- ShiftInt64Op(<< [tr], v670 T{_Smi}, v770 T{_Smi}) [1, 32768] int64
v654 <- UnboxInt64([non-speculative], v674 T{int?}) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v654, v306) goto (23, 205)
B23
  Loop 0
Branch if StrictCompare:156(===, v10 T{bool}, v5) goto (24, 34)
BoolTest
B24
  Loop 0
Branch if RelationalOp(<=, v676 T{_Smi}, v389 T{_Smi}) T{bool} goto (25, 35)
B25
  Loop 0
Branch if RelationalOp(>=, v677 T{_Smi}, v389 T{_Smi}) T{bool} goto (26, 36)
B26
  Loop 0
Branch if StrictCompare:182(===, v7, v0) goto (27, 28)
B27
  Loop 0
v98 <- AllocateObject:188(cls=StringBuffer) T{StringBuffer}
ParallelMove r3 <- r0, r0 <- C
ParallelMove fp[-10] <- r3
StoreField(v98 T{StringBuffer} . _partsCodeUnits@0150898 = v669 T{_Smi} <int64>, NoStoreBarrier)
StoreField(v98 T{StringBuffer} . _partsCompactionIndex@0150898 = v669 T{_Smi} <int64>, NoStoreBarrier)
StoreField(v98 T{StringBuffer} . _partsCodeUnitsSinceCompaction@0150898 = v669 T{_Smi} <int64>, NoStoreBarrier)
StoreField(v98 T{StringBuffer} . _bufferPosition@0150898 = v669 T{_Smi} <int64>, NoStoreBarrier)
StoreField(v98 T{StringBuffer} . _bufferCodeUnitMagnitude@0150898 = v669 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r1 <- r3, r2 <- C
StaticCall:30( write<0> v98 T{StringBuffer}, v182 T{_OneByteString}, using unchecked entrypoint)
ParallelMove r6 <- fp[-10] goto:196 B29
B28
  Loop 0
ParallelMove r6 <- r4 goto:198 B29
B29
  Loop 0
ParallelMove fp[-10] <- r6
Branch if RelationalOp(<, v8, v9 T{int}) T{bool} goto (30, 31)
B30
  Loop 0
v647 <- BoxInt64(v9 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r5, r2 <- r0, r3 <- fp[-6]
v268 <- StaticCall:30( checkValidRange<0> v8 T{int}, v647 T{int?}, v649 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-7], r2 <- fp[-2], r3 <- r0
v269 <- StaticCall:32( _substringUnchecked@0150898<0> v2 T{_StringBase}, v8 T{int}, v268, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-11] <- r0
v457 <- LoadField(v269 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v457, v183 T{_Smi}) T{bool} goto (112, 113)
B112
B113
  Loop 0
ParallelMove r1 <- fp[-10]
StaticCall:26( _consumeBuffer@0150898<0> v93 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-10], r2 <- fp[-11]
StaticCall:28( _addPart@0150898<0> v93 T{StringBuffer}, v269 T{String}, using unchecked entrypoint)
ParallelMove  goto:30 B114
B114
  Loop 0
ParallelMove r0 <- fp[-3] goto:218 B32
B31
  Loop 0
ParallelMove r0 <- fp[-2] goto:220 B32
B32
  Loop 0
ParallelMove r2 <- fp[-10], r1 <- r0, r0 <- C goto:238 B37
B36
B35
B34
B33
  Loop 0
ParallelMove r2 <- r4, r1 <- fp[-2], r0 <- r5 goto:240 B37
B37
  Loop 0
v87 <- BinaryInt64Op(+ [tr], v9 T{int}, v670 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r2, r2 <- r1, r1 <- r3, r0 <- r0 goto:388 B57
B205
  Loop 0
ParallelMove r6 <- r3
ParallelMove  goto:244 B38
B207
  Loop 0
ParallelMove r6 <- r3
ParallelMove  goto:244 B38
B38
  Loop 0
Branch if RelationalOp(<=, v389 T{_Smi}, v678 T{_Smi}) T{bool} goto (102, 211)
B102
  Loop 0
ParallelMove r9 <- C, r8 <- C, r7 <- C
v235 <- ShiftInt64Op(>> [tr], v389 T{_Smi}, v672 T{_Smi}) [0, 4095] int64
ParallelMove r0 <- C, r1 <- r3
GenericCheckBound:24(v673 T{_Smi}, v235) [-9223372036854775808, 9223372036854775807] int64
v679 <- LoadIndexed:24([_List] v255, v235 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r2
v768 <- IntConverter(int64->uint32[tr], v389 T{_Smi}) uint32
v239 <- BinaryUint32Op(& [tr], v768 T{_Smi}, v782 T{_Smi}) [0, 15] uint32
ParallelMove r3 <- r3
v771 <- IntConverter(uint32->int64, v239) int64
v240 <- ShiftInt64Op(<< [tr], v670 T{_Smi}, v771 T{_Smi}) [1, 32768] int64
v657 <- UnboxInt64([non-speculative], v679 T{int?}) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v657, v240) goto (96, 209)
B209
B211
  Loop 0
ParallelMove r9 <- C, r8 <- C, r7 <- C
ParallelMove  goto:258 B40
B40
  Loop 0
ParallelMove r0 <- r2
v767 <- IntConverter(int64->uint32[tr], v389 T{_Smi}) uint32
v31 <- BinaryUint32Op(& [tr], v767 T{_Smi}, v783 T{_Smi}) [0, 64512] uint32
ParallelMove r1 <- r1
v772 <- IntConverter(uint32->int64, v31) int64
Branch if EqualityCompare(v772 T{_Smi} == v681 T{_Smi}) T{bool} goto (41, 47)
B41
  Loop 0
ParallelMove r11 <- fp[-9]
v45 <- BinaryInt64Op(+ [tr], v9 T{int}, v670 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v45, v4) T{bool} goto (42, 48)
B42
  Loop 0
ParallelMove r12 <- fp[-5]
ParallelMove r0 <- fp[-6], r1 <- r3
t0 <- GenericCheckBound:286(v649 T{_Smi}, v45 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:286(===, v386 T{_Smi}, v213 T{_Smi}) goto (94, 95)
B94
  Loop 0
ParallelMove r13 <- fp[-7]
v209 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v45 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:286 B93
B95
  Loop 0
ParallelMove r13 <- fp[-7]
v207 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v45 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:286 B93
B93
  Loop 0
ParallelMove r1 <- r0
v774 <- IntConverter(int64->uint32[tr], v208 T{_Smi}) uint32
v49 <- BinaryUint32Op(& [tr], v774 T{_Smi}, v783 T{_Smi}) [0, 64512] uint32
ParallelMove r3 <- r3
v775 <- IntConverter(uint32->int64, v49) int64
Branch if EqualityCompare(v775 T{_Smi} == v682 T{_Smi}) T{bool} goto (43, 44)
B43
  Loop 0
ParallelMove r14 <- C
ParallelMove r1 <- r2
v766 <- IntConverter(int64->uint32[tr], v389 T{_Smi}) uint32
v56 <- BinaryUint32Op(& [tr], v766 T{_Smi}, v784 T{_Smi}) [0, 1023] uint32
ParallelMove r2 <- r2
v776 <- IntConverter(uint32->int64, v56) int64
v58 <- ShiftInt64Op(<< [tr], v776 T{_Smi}, v684 T{_Smi}) [0, 1047552] int64
v59 <- BinaryInt64Op(| [tr], v58, v685 T{_Smi}) [0, 1048575] int64
ParallelMove r0 <- r0
v773 <- IntConverter(int64->uint32[tr], v208 T{_Smi}) uint32
v60 <- BinaryUint32Op(& [tr], v773 T{_Smi}, v784 T{_Smi}) [0, 1023] uint32
ParallelMove r1 <- r1
v777 <- IntConverter(uint32->int64, v60) int64
v61 <- BinaryInt64Op(| [tr], v59, v777 T{_Smi}) [0, 1048575] int64
ParallelMove r1 <- r0, r0 <- C goto:314 B45
B44
  Loop 0
ParallelMove r14 <- C
ParallelMove r1 <- r2, r0 <- C goto:316 B45
B45
  Loop 0
ParallelMove r20 <- r1, r19 <- r0 goto:330 B49
B48
  Loop 0
ParallelMove r13 <- fp[-7], r12 <- fp[-5], r14 <- C
ParallelMove  goto:326 B46
B47
  Loop 0
ParallelMove r13 <- fp[-7], r11 <- fp[-9], r12 <- fp[-5], r14 <- C
ParallelMove  goto:322 B46
B46
  Loop 0
ParallelMove r20 <- r2, r19 <- C goto:332 B49
B49
  Loop 0
ParallelMove fp[-13] <- r20, fp[-14] <- r19
v648 <- BoxInt64(v9 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- fp[-2], r2 <- r0, r3 <- fp[-6]
v194 <- StaticCall:30( checkValidRange<0> v8 T{int}, v648 T{int?}, v649 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-7], r2 <- fp[-2], r3 <- r0
v195 <- StaticCall:32( _substringUnchecked@0150898<0> v2 T{_StringBase}, v8 T{int}, v194, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0, r1 <- fp[-4]
Branch if StrictCompare:338(!==, v10 T{bool}, v5) goto (50, 51)
BoolTest
B50
  Loop 0
v780 <- LoadClassId(<non-smi> v195 T{String}) int64
MoveArgument(sp[0] <- v195 T{String})
ParallelMove r0 <- r2
v44 <- DispatchTableCall( cid=v780 String.toLowerCase<0>, v195 T{String}) T{String}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:350 B52
B51
  Loop 0
ParallelMove r2 <- r0 goto:352 B52
B52
  Loop 0
ParallelMove fp[-10] <- r2
Branch if StrictCompare:354(===, v7, v0) goto (53, 54)
B53
  Loop 0
v43 <- AllocateObject:360(cls=StringBuffer) T{StringBuffer}
ParallelMove r3 <- r0, r0 <- C
ParallelMove fp[-11] <- r3
StoreField(v43 T{StringBuffer} . _partsCodeUnits@0150898 = v669 T{_Smi} <int64>, NoStoreBarrier)
StoreField(v43 T{StringBuffer} . _partsCompactionIndex@0150898 = v669 T{_Smi} <int64>, NoStoreBarrier)
StoreField(v43 T{StringBuffer} . _partsCodeUnitsSinceCompaction@0150898 = v669 T{_Smi} <int64>, NoStoreBarrier)
StoreField(v43 T{StringBuffer} . _bufferPosition@0150898 = v669 T{_Smi} <int64>, NoStoreBarrier)
StoreField(v43 T{StringBuffer} . _bufferCodeUnitMagnitude@0150898 = v669 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r1 <- r3, r2 <- C
StaticCall:30( write<0> v43 T{StringBuffer}, v182 T{_OneByteString}, using unchecked entrypoint)
ParallelMove r3 <- fp[-11], r0 <- fp[-11] goto:368 B55
B54
  Loop 0
ParallelMove r3 <- r3, r0 <- r3 goto:370 B55
B55
  Loop 0
ParallelMove fp[-11] <- r3, fp[-12] <- r0
v407 <- LoadField(v38 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v407, v183 T{_Smi}) T{bool} goto (72, 73)
B72
B73
  Loop 0
ParallelMove r1 <- r3
StaticCall:26( _consumeBuffer@0150898<0> v39 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-11], r2 <- fp[-10]
StaticCall:28( _addPart@0150898<0> v39 T{StringBuffer}, v38 T{String}, using unchecked entrypoint)
ParallelMove  goto:30 B74
B74
  Loop 0
ParallelMove r1 <- fp[-13]
v41 <- StaticCall:374( _escapeChar@0150898<0> v34, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-10] <- r0
v423 <- LoadField(v41 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v423, v183 T{_Smi}) T{bool} goto (77, 78)
B77
B78
  Loop 0
ParallelMove r1 <- fp[-11]
StaticCall:26( _consumeBuffer@0150898<0> v39 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-11], r2 <- fp[-10]
StaticCall:28( _addPart@0150898<0> v39 T{StringBuffer}, v41 T{String}, using unchecked entrypoint)
ParallelMove  goto:30 B56
B56
  Loop 0
v42 <- BinaryInt64Op(+ [tr], v9 T{int}, v35) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[-12], r2 <- r2, r1 <- r2, r0 <- fp[-4] goto:390 B57
B57
B58
  Loop 0
ParallelMove r12 <- r3, r11 <- r2, r10 <- r1, r9 <- r0 goto:398 B6
B6
  Loop 0
ParallelMove r12 <- r12, r11 <- r11, r10 <- r10, r9 <- r9, r6 <- fp[-7], r5 <- fp[-8], r4 <- fp[-9], r8 <- fp[-5], r7 <- fp[-6] goto:404 B60
B61
ParallelMove r3 <- r12
Branch if StrictCompare:412(===, v7, v0) goto (62, 63)
B62
ParallelMove r2 <- fp[-9]
v643 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v643 T{int})
ParallelMove r1 <- fp[-7], r2 <- fp[-8]
v23 <- StaticCall:418( substring<0> v2, v3, v643 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:420(v23)
B63
ParallelMove r2 <- fp[-9], r4 <- fp[-2]
Branch if RelationalOp(<, v8, v4) T{bool} goto (64, 68)
B64
ParallelMove r5 <- fp[-4]
v644 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v644 T{int})
ParallelMove r1 <- fp[-7], r2 <- r4
v20 <- StaticCall:434( substring<0> v2, v8, v644 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r1 <- r0, r0 <- fp[-4]
Branch if StrictCompare:438(!==, v10 T{bool}, v5) goto (65, 66)
BoolTest
B65
v781 <- LoadClassId(<non-smi> v20) int64
MoveArgument(sp[0] <- v20)
ParallelMove r0 <- r0
v22 <- DispatchTableCall( cid=v781 String.toLowerCase<0>, v20) T{String}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:450 B67
B66
ParallelMove r2 <- r1 goto:452 B67
B67
ParallelMove r1 <- fp[-1], r2 <- r2
StaticCall:454( write<0> v7 T{StringBuffer}, v21, using unchecked entrypoint)
ParallelMove  goto:460 B69
B68
B69
MoveArgument(sp[0] <- v7 T{StringBuffer})
v19 <- StaticCall:464( toString<0> v7 T{StringBuffer}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:466(v19)
B96
ParallelMove r1 <- fp[-7], r0 <- r6
v222 <- AllocateObject:10(cls=FormatException, <not-aliased>) T{FormatException}
ParallelMove r2 <- r0, r0 <- C
StoreField(v222 T{FormatException} . message = v72 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-7]
StoreField(v222 T{FormatException} . source = v2 T{String}, NoStoreBarrier)
ParallelMove r3 <- fp[-3]
v645 <- BoxInt64(v9 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v222 T{FormatException} . offset = v645 T{int?}, NoStoreBarrier)
ParallelMove r0 <- r2
Throw:14(v222)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v5 <- AllocateContext:10(num_variables=2) T{Context}
ParallelMove r3 <- r0, r0 <- fp[-1]
ParallelMove fp[-4] <- r3
StoreField(v5 . host = v2, NoStoreBarrier)
ParallelMove r1 <- C, r2 <- r3
v7 <- AllocateClosure:12(v6, v5) T{_Closure}
ParallelMove r1 <- r0, r0 <- fp[-4]
StoreField(v5 . error = v7, NoStoreBarrier)
ParallelMove r1 <- C, r2 <- r0
v9 <- AllocateClosure:14(v8, v5) T{_Closure}
ParallelMove r3 <- r0, r0 <- fp[-1]
ParallelMove fp[-5] <- r3
v316 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v692 <- UnboxInt64([non-speculative], v316 T{_Smi}) [0, 2305843009213693951] int64
Branch if RelationalOp(<, v692 T{_Smi}, v781 T{_Smi}) T{bool} goto (157, 5)
B5
ParallelMove r1 <- C, r2 <- C
v17 <- StaticCall:38( _GrowableList@0150898.<0> v15, v549 T{_Smi}, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r2 <- r0
ParallelMove fp[-9] <- r2
ParallelMove r9 <- C, r8 <- C, r7 <- fp[-2], r6 <- fp[-2] goto:182 B26
B26
  Loop 2
  Loop Header
ParallelMove fp[-8] <- r8, fp[-10] <- r9, fp[-12] <- r7
CheckStackOverflow:186(stack=0, loop=1)
Branch if RelationalOp(<, v22, v4) T{bool} goto (6, 7)
B6
  Loop 2
v92 <- LoadField(v5 . host) T{String}
ParallelMove fp[-15] <- r10
v302 <- LoadField(v92 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v694 <- UnboxInt64([non-speculative], v302) [0, 2305843009213693951] int64
ParallelMove r0 <- r11, r1 <- r6
t0 <- GenericCheckBound:54(v694 T{_Smi}, v22 T{int}) [-9223372036854775808, 9223372036854775807] int64
v304 <- LoadClassId(v92 T{_StringBase}) [93, 94] T{_Smi}
Branch if StrictCompare:54(===, v304, v295 T{_Smi}) goto (134, 135)
B134
  Loop 2
v308 <- LoadIndexed([_OneByteString] v92 T{_OneByteString}, v22 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:54 B133
B135
  Loop 2
v306 <- LoadIndexed([_TwoByteString] v92 T{_StringBase}, v22 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:54 B133
B133
  Loop 2
Branch if EqualityCompare(v307 T{_Smi} == v782 T{_Smi}) T{bool} goto (8, 21)
B8
  Loop 2
Branch if EqualityCompare(v22 T{int} == v3) T{bool} goto (9, 13)
B9
  Loop 2
v115 <- BinaryInt64Op(+ [tr], v22 T{int}, v783 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r11, r1 <- r13, fp[-14] <- r13
t0 <- GenericCheckBound:78(v694 T{_Smi}, v115 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:78(===, v304 T{_Smi}, v295 T{_Smi}) goto (129, 130)
B129
  Loop 2
v291 <- LoadIndexed([_OneByteString] v92 T{_OneByteString}, v115 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:78 B128
B130
  Loop 2
v289 <- LoadIndexed([_TwoByteString] v92 T{_StringBase}, v115 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:78 B128
B128
  Loop 2
Branch if EqualityCompare(v290 T{_Smi} != v782 T{_Smi}) T{bool} goto (154, 12)
B12
  Loop 2
ParallelMove r6 <- r13, r0 <- r13 goto:104 B14
B13
  Loop 2
ParallelMove r6 <- r7, r0 <- r6 goto:106 B14
B14
  Loop 2
ParallelMove fp[-7] <- r0
Branch if EqualityCompare(v106 == v105) T{bool} goto (15, 19)
B15
  Loop 2
Branch if StrictCompare:120(===, v19 T{bool}, v14) goto (151, 18)
BoolTest
B18
  Loop 2
v496 <- LoadField(v17 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v501 <- LoadField(v17 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v502 <- LoadField(v501 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v702 <- UnboxInt64([non-speculative], v496 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-6] <- r6
v703 <- UnboxInt64([non-speculative], v502 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v702 T{_Smi} == v703 T{_Smi}) T{bool} goto (119, 120)
B119
  Loop 2
ParallelMove r1 <- r2
StaticCall:26( _growToNextCapacity@0150898<0> v17 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B121
B120
B121
  Loop 2
v271 <- BinaryInt64Op(+ [tr], v702 T{_Smi}, v783 T{_Smi}) [1, 576460752303423488] int64
v704 <- BoxInt64(v271) [1, 576460752303423488] T{_Smi}
StoreField(v17 T{_GrowableList} . GrowableObjectArray.length = v704, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v271 T{_Smi}, v702 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v274 <- LoadField(v17 T{_GrowableList} . GrowableObjectArray.data) T{_List}
StoreIndexed:40([_List] v274, v702 T{_Smi}, v784 T{_Smi}, NoStoreBarrier)
ParallelMove r1 <- C goto:148 B20
B19
  Loop 2
ParallelMove r3 <- r0
v697 <- BoxInt64(v105) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v699 <- BoxInt64(v106) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[2] <- v9)
MoveArgument(sp[1] <- v697 T{int})
MoveArgument(sp[0] <- v699 T{int})
ParallelMove r0 <- fp[-5]
v108 <- ClosureCall:142( closure=v9<0>, v9, v697 T{int}, v699 T{int}) T{*?}
ParallelMove r2 <- r0, r0 <- fp[-9]
ParallelMove fp[-11] <- r2
v485 <- LoadField(v17 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v490 <- LoadField(v17 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v491 <- LoadField(v490 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v709 <- UnboxInt64([non-speculative], v485 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-6] <- r3
v710 <- UnboxInt64([non-speculative], v491 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v709 T{_Smi} == v710 T{_Smi}) T{bool} goto (110, 111)
B110
  Loop 2
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v17 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B112
B111
B112
  Loop 2
v252 <- BinaryInt64Op(+ [tr], v709 T{_Smi}, v783 T{_Smi}) [1, 576460752303423488] int64
v711 <- BoxInt64(v252) [1, 576460752303423488] T{_Smi}
StoreField(v17 T{_GrowableList} . GrowableObjectArray.length = v711, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v252 T{_Smi}, v709 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v255 <- LoadField(v17 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-11]
StoreIndexed:40([_List] v255, v709 T{_Smi}, v108 T{*?})
ParallelMove r1 <- fp[-10] goto:150 B20
B20
  Loop 2
v110 <- BinaryInt64Op(+ [tr], v106, v783 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r9 <- r1, r8 <- fp[-8], r7 <- r3, r0 <- r0 goto:176 B25
B21
  Loop 2
Branch if EqualityCompare(v307 T{_Smi} == v785 T{_Smi}) T{bool} goto (22, 23)
B22
  Loop 2
ParallelMove r0 <- C goto:170 B24
B23
  Loop 2
ParallelMove r0 <- fp[-8] goto:172 B24
B24
  Loop 2
ParallelMove r9 <- fp[-10], r8 <- r0, r7 <- r7, r0 <- r6 goto:178 B25
B25
  Loop 2
v103 <- BinaryInt64Op(+ [tr], v102, v783 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r9 <- r9, r8 <- r8, r7 <- r7, r6 <- r6 goto:184 B26
B7
v240 <- LoadField(v17 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
Branch if StrictCompare(===, v240 T{_Smi}, v16 T{_Smi}) T{bool} goto (148, 29)
B29
ParallelMove r3 <- fp[-3]
v27 <- EqualityCompare(v21 == v4) T{bool}
ParallelMove r1 <- r2, fp[-11] <- r0
v28 <- StaticCall:212( get:last<0> v17, result_type = T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r0, r0 <- fp[-11]
Branch if StrictCompare:220(===, v27, v14) goto (30, 33)
BoolTest
B30
Branch if StrictCompare(!==, v28 T{int}, v784 T{_Smi}) T{bool} goto (145, 34)
B34
B33
B35
Branch if StrictCompare:254(!==, v27, v14) goto (36, 40)
BoolTest
B36
ParallelMove r0 <- fp[-8]
Branch if StrictCompare:262(!==, v20 T{bool}, v14) goto (37, 38)
BoolTest
B37
ParallelMove r4 <- fp[-3], r3 <- fp[-9], r2 <- fp[-12]
v691 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v693 <- BoxInt64(v21) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[2] <- v9)
MoveArgument(sp[1] <- v693 T{int})
MoveArgument(sp[0] <- v691 T{int})
ParallelMove r0 <- fp[-5]
v85 <- ClosureCall:268( closure=v9<0>, v9, v693 T{int}, v691 T{int}) T{*?}
ParallelMove r2 <- r0, r0 <- fp[-9]
ParallelMove fp[-5] <- r2
v474 <- LoadField(v17 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v479 <- LoadField(v17 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v480 <- LoadField(v479 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v718 <- UnboxInt64([non-speculative], v474 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-2] <- r3
v719 <- UnboxInt64([non-speculative], v480 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v718 T{_Smi} == v719 T{_Smi}) T{bool} goto (99, 100)
B99
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v17 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B101
B100
B101
v228 <- BinaryInt64Op(+ [tr], v718 T{_Smi}, v783 T{_Smi}) [1, 576460752303423488] int64
v720 <- BoxInt64(v228) [1, 576460752303423488] T{_Smi}
StoreField(v17 T{_GrowableList} . GrowableObjectArray.length = v720, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r2
GenericCheckBound:40(v228 T{_Smi}, v718 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v231 <- LoadField(v17 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-5]
StoreIndexed:40([_List] v231, v718 T{_Smi}, v85 T{*?})
ParallelMove r2 <- r5 goto:298 B39
B38
ParallelMove r4 <- fp[-3], r0 <- fp[-4], r5 <- fp[-9], r2 <- fp[-12]
v74 <- LoadField(v5 . host) T{String}
ParallelMove r1 <- r1, r2 <- r2, r3 <- r4
v75 <- StaticCall:274( _parseIPv4Address@0150898<0> v74, v21, v4, result_type = T{_Uint8List}) T{_Uint8List}
ParallelMove r2 <- r0
ParallelMove fp[-5] <- r2
v125 <- LoadField(v75 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v723 <- UnboxInt64([non-speculative], v125) [0, 4611686018427387903] int64
ParallelMove r0 <- r3, r1 <- C, fp[-12] <- r3
GenericCheckBound:276(v723 T{_Smi}, v549 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v788 <- LoadIndexed:276([_Uint8List] v75, v549 T{_Smi}) [0, 255] int64
v77 <- ShiftInt64Op(<< [tr], v788 T{_Smi}, v789 T{_Smi}) [0, 65280] int64
ParallelMove r0 <- r3, r1 <- C
GenericCheckBound:280(v723 T{_Smi}, v783 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v790 <- LoadIndexed:280([_Uint8List] v75, v783 T{_Smi}) [0, 255] int64
v79 <- BinaryInt64Op(| [tr], v77, v790 T{_Smi}) [0, 65535] int64
ParallelMove r0 <- fp[-9], fp[-6] <- r5
v452 <- LoadField(v17 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v457 <- LoadField(v17 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v458 <- LoadField(v457 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v730 <- UnboxInt64([non-speculative], v452 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-2] <- r4
v731 <- UnboxInt64([non-speculative], v458 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v730 T{_Smi} == v731 T{_Smi}) T{bool} goto (81, 82)
B81
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v17 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B83
B82
B83
v190 <- BinaryInt64Op(+ [tr], v730 T{_Smi}, v783 T{_Smi}) [-4611686018427387904, 5188146770730811390] int64
ParallelMove fp[-13] <- r6
v732 <- BoxInt64(v190) [-4611686018427387904, 5188146770730811390] T{int}
ParallelMove r0 <- r0
StoreField(v17 T{_GrowableList} . GrowableObjectArray.length = v732 T{int}, NoStoreBarrier)
ParallelMove r0 <- r6, r1 <- r5
GenericCheckBound:40(v190 T{_Smi}, v730 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v193 <- LoadField(v17 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v727 <- BoxInt64(v79 T{int}) [0, 65535] T{_Smi}
StoreIndexed:40([_List] v193, v730 T{_Smi}, v727, NoStoreBarrier)
ParallelMove r0 <- fp[-12], r1 <- C
GenericCheckBound:286(v723 T{_Smi}, v781 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v791 <- LoadIndexed:286([_Uint8List] v75, v781 T{_Smi}) [0, 255] int64
v81 <- ShiftInt64Op(<< [tr], v791 T{_Smi}, v789 T{_Smi}) [0, 65280] int64
ParallelMove r0 <- fp[-12], r1 <- C
GenericCheckBound:290(v723 T{_Smi}, v792 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v793 <- LoadIndexed:290([_Uint8List] v75, v792 T{_Smi}) [0, 255] int64
v84 <- BinaryInt64Op(| [tr], v81, v793 T{_Smi}) [0, 65535] int64
ParallelMove fp[-2] <- r2
v469 <- LoadField(v193 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v743 <- UnboxInt64([non-speculative], v469 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v190 T{_Smi} == v743 T{_Smi}) T{bool} goto (90, 91)
B90
ParallelMove r1 <- r4
StaticCall:26( _growToNextCapacity@0150898<0> v17 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B92
B91
B92
v209 <- BinaryInt64Op(+ [tr], v190 T{_Smi}, v783 T{_Smi}) [v730-4611686018427387903, 9223372036854775806] int64
v744 <- BoxInt64(v209) [v730-4611686018427387903, 9223372036854775806] T{int}
ParallelMove r0 <- r0
StoreField(v17 T{_GrowableList} . GrowableObjectArray.length = v744 T{int}, NoStoreBarrier)
ParallelMove r0 <- r5, r1 <- r3
GenericCheckBound:40(v209 T{_Smi}, v190 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v212 <- LoadField(v17 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v739 <- BoxInt64(v84 T{int}) [0, 65535] T{_Smi}
StoreIndexed:40([_List] v212, v190 T{_Smi}, v739, NoStoreBarrier)
ParallelMove  goto:300 B39
B39
B40
ParallelMove r2 <- fp[-9]
ParallelMove  goto:308 B41
B41
Branch if StrictCompare:312(===, v19 T{bool}, v14) goto (42, 46)
BoolTest
B42
v178 <- LoadField(v17 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v747 <- UnboxInt64([non-speculative], v178 T{_Smi}) [0, 576460752303423487] int64
Branch if RelationalOp(>, v747 T{_Smi}, v794 T{_Smi}) T{bool} goto (142, 45)
B45
v921 <- UnboxInt64([non-speculative], v178) int64
ParallelMove r0 <- r1 goto:366 B50
B46
v173 <- LoadField(v17 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
Branch if StrictCompare(!==, v173 T{_Smi}, v33 T{_Smi}) T{bool} goto (139, 49)
B49
v922 <- UnboxInt64([non-speculative], v173) int64
ParallelMove r0 <- r1 goto:368 B50
B50
ParallelMove r4 <- C, fp[-2] <- r0
v168 <- AllocateTypedData:10(v38 T{_Smi}, <not-aliased>) T{_Uint8List}
ParallelMove r2 <- r0, r0 <- fp[-9]
v139 <- LoadField:458(v17 . GrowableObjectArray.data) T{_List}
ParallelMove r4 <- fp[-2], r0 <- C
v61 <- BinaryInt64Op:458(- [tr], v797 T{_Smi}, v765 T{_Smi}) [-576460752303423478, 9] int64
ParallelMove r8 <- C, r7 <- C, r6 <- C goto:458 B59
B59
  Loop 1
  Loop Header
CheckStackOverflow:462(stack=0, loop=1)
Branch if RelationalOp(<, v40, v765 T{_Smi}) T{bool} goto (51, 52)
B51
  Loop 1
v796 <- LoadIndexed:388([_List] v139, v40 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
v754 <- UnboxInt64([non-speculative], v796 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v754 T{int} == v600) T{bool} goto (53, 57)
B53
  Loop 1
ParallelMove r9 <- r7, r7 <- C goto:430 B56
B56
  Loop 0
  Loop 1
  Loop Header
CheckStackOverflow:434(stack=0, loop=2)
Branch if RelationalOp(<, v63, v61) T{bool} goto (54, 55)
B54
  Loop 0
  Loop 1
ParallelMove r0 <- C, r1 <- r9
GenericCheckBound:420(v798 T{_Smi}, v62) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:420([_Uint8List] v168 T{_Uint8List}, v62 T{int}, v549, NoStoreBarrier)
v65 <- BinaryInt64Op(+ [tr], v62 T{int}, v783 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- C, r1 <- r10
GenericCheckBound:424(v798 T{_Smi}, v65) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:424([_Uint8List] v168 T{_Uint8List}, v65 T{int}, v549, NoStoreBarrier)
v66 <- BinaryInt64Op(+ [tr], v62 T{int}, v781 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v67 <- BinaryInt64Op(+ [tr], v63, v783 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r9 <- r0, r7 <- r1 goto:432 B56
B55
  Loop 1
ParallelMove r7 <- r9 goto:452 B58
B57
  Loop 1
v50 <- ShiftInt64Op(>> [tr], v754 T{int}, v789 T{_Smi}) [-36028797018963968, 36028797018963967] int64
ParallelMove r0 <- C, r1 <- r7
GenericCheckBound:440(v798 T{_Smi}, v41) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:440([_Uint8List] v168 T{_Uint8List}, v41 T{int}, v50 T{int}, NoStoreBarrier)
v51 <- BinaryInt64Op(+ [tr], v41 T{int}, v783 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r9 <- r9
v925 <- IntConverter(int64->uint32[tr], v754 T{int}) uint32
v53 <- BinaryUint32Op(& [tr], v925 T{int}, v927 T{_Smi}) [0, 255] uint32
ParallelMove r0 <- C, r1 <- r10
GenericCheckBound:446(v798 T{_Smi}, v51) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r11 <- r11
v926 <- IntConverter(uint32->int64, v53) int64
StoreIndexed:446([_Uint8List] v168 T{_Uint8List}, v51 T{int}, v926 T{_Smi}, NoStoreBarrier)
v54 <- BinaryInt64Op(+ [tr], v41 T{int}, v781 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r7 <- r0 goto:454 B58
B58
  Loop 1
v58 <- BinaryInt64Op(+ [tr], v40 T{int}, v783 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r8 <- r0, r7 <- r7 goto:460 B59
B52
ParallelMove r0 <- r2
DartReturn:464(v168 T{_Uint8List})
B157
v438 <- AllocateObject:10(cls=FormatException, <not-aliased>) T{FormatException}
ParallelMove r1 <- r0, r0 <- C
StoreField(v438 T{FormatException} . message = v447 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
StoreField(v438 T{FormatException} . source = v2 T{String}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:18(v438)
B154
v420 <- AllocateObject:10(cls=FormatException, <not-aliased>) T{FormatException}
ParallelMove r2 <- r0, r0 <- C
StoreField(v420 T{FormatException} . message = v429 T{_OneByteString}, NoStoreBarrier)
ParallelMove r1 <- fp[-15]
StoreField(v420 T{FormatException} . source = v92 T{String}, NoStoreBarrier)
ParallelMove r3 <- fp[-14]
v695 <- BoxInt64(v115 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v420 T{FormatException} . offset = v695 T{int?}, NoStoreBarrier)
ParallelMove r0 <- r2
Throw:18(v420)
B151
ParallelMove r1 <- r10
v401 <- AllocateObject:10(cls=FormatException, <not-aliased>) T{FormatException}
ParallelMove r2 <- r0, r0 <- C
StoreField(v401 T{FormatException} . message = v410 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-15]
StoreField(v401 T{FormatException} . source = v92 T{String}, NoStoreBarrier)
ParallelMove r3 <- fp[-7]
v698 <- BoxInt64(v106 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v401 T{FormatException} . offset = v698 T{int?}, NoStoreBarrier)
ParallelMove r0 <- r2
Throw:18(v401)
B148
ParallelMove r0 <- fp[-4]
v389 <- LoadField(v5 . host) T{String}
ParallelMove fp[-1] <- r1
v382 <- AllocateObject:10(cls=FormatException, <not-aliased>) T{FormatException}
ParallelMove r1 <- r0, r0 <- C
StoreField(v382 T{FormatException} . message = v391 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
StoreField(v382 T{FormatException} . source = v389 T{String}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:18(v382)
B145
ParallelMove r4 <- fp[-3], r0 <- fp[-4]
v371 <- LoadField(v5 . host) T{String}
ParallelMove fp[-1] <- r1
v364 <- AllocateObject:10(cls=FormatException, <not-aliased>) T{FormatException}
ParallelMove r2 <- r0, r0 <- C
StoreField(v364 T{FormatException} . message = v373 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
StoreField(v364 T{FormatException} . source = v371 T{String}, NoStoreBarrier)
ParallelMove r3 <- fp[-3]
v690 <- BoxInt64(v4 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v364 T{FormatException} . offset = v690 T{int?}, NoStoreBarrier)
ParallelMove r0 <- r2
Throw:18(v364)
B142
ParallelMove r0 <- fp[-4]
v352 <- LoadField(v5 . host) T{String}
ParallelMove fp[-1] <- r1
v345 <- AllocateObject:10(cls=FormatException, <not-aliased>) T{FormatException}
ParallelMove r1 <- r0, r0 <- C
StoreField(v345 T{FormatException} . message = v354 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
StoreField(v345 T{FormatException} . source = v352 T{String}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:18(v345)
B139
ParallelMove r0 <- fp[-4]
v332 <- LoadField(v5 . host) T{String}
ParallelMove fp[-1] <- r1
v325 <- AllocateObject:10(cls=FormatException, <not-aliased>) T{FormatException}
ParallelMove r1 <- r0, r0 <- C
StoreField(v325 T{FormatException} . message = v335 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
StoreField(v325 T{FormatException} . source = v332 T{String}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:18(v325)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r4 <- C
v88 <- AllocateTypedData:10(v8 T{_Smi}, <not-aliased>) T{_Uint8List}
ParallelMove r5 <- r0, r4 <- fp[-1]
ParallelMove fp[-8] <- r5
v72 <- LoadField:124(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v276 <- UnboxInt64:124([non-speculative], v72) [0, 2305843009213693951] int64
ParallelMove fp[-7] <- r6
v74 <- LoadClassId:124(v2 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove fp[-6] <- r7
ParallelMove r11 <- C, r10 <- fp[-2], r9 <- fp[-2] goto:124 B17
B17
  Loop 0
  Loop Header
ParallelMove fp[-2] <- r11, fp[-4] <- r10, fp[-5] <- r9
CheckStackOverflow:128(stack=0, loop=1)
Branch if RelationalOp(<, v13, v4) T{bool} goto (3, 4)
B3
  Loop 0
ParallelMove r0 <- r6, r1 <- r9
t0 <- GenericCheckBound:30(v276 T{_Smi}, v13 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:30(===, v74, v82 T{_Smi}) goto (34, 35)
B34
  Loop 0
v78 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v13 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:30 B33
B35
  Loop 0
v76 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v13 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:30 B33
B33
  Loop 0
Branch if EqualityCompare(v77 T{_Smi} != v282 T{_Smi}) T{bool} goto (5, 9)
B5
  Loop 0
v44 <- BinaryInt64Op(^ [tr], v77 T{_Smi}, v283 T{_Smi}) [0, 65535] int64
Branch if RelationalOp(>, v44, v284 T{_Smi}) T{bool} goto (51, 8)
B8
  Loop 0
ParallelMove r11 <- r11, r10 <- r10, r4 <- r9, r3 <- r5 goto:118 B16
B9
  Loop 0
Branch if EqualityCompare(v11 == v285 T{_Smi}) T{bool} goto (48, 12)
B12
  Loop 0
v275 <- BoxInt64(v13 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r10, r2 <- r0, r3 <- r6
v63 <- StaticCall:30( checkValidRange<0> v12 T{int}, v275 T{int?}, v276 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-1], r2 <- fp[-4], r3 <- r0
v64 <- StaticCall:32( _substringUnchecked@0150898<0> v2 T{_StringBase}, v12 T{int}, v63, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r1 <- r0
v34 <- StaticCall:88( parse<0> v64 T{String}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0
Branch if RelationalOp(>, v34, v286 T{_Smi}) T{bool} goto (45, 15)
B15
  Loop 0
ParallelMove r5 <- fp[-2], r4 <- fp[-5], r3 <- fp[-8]
v37 <- BinaryInt64Op(+ [tr], v11, v287 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- C, r1 <- r5
GenericCheckBound:112(v288 T{_Smi}, v11) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:112([_Uint8List] v88 T{_Uint8List}, v11 T{int}, v34 T{int}, NoStoreBarrier)
v38 <- BinaryInt64Op(+ [tr], v13 T{int}, v287 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r11 <- r6, r10 <- r0 goto:120 B16
B16
  Loop 0
v42 <- BinaryInt64Op(+ [tr], v13 T{int}, v287 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r11 <- r11, r10 <- r10, r9 <- r9, r4 <- fp[-1], r7 <- fp[-6], r5 <- r3, r6 <- fp[-7] goto:126 B17
B4
ParallelMove r5 <- r11, r3 <- r5
Branch if EqualityCompare(v11 != v285 T{_Smi}) T{bool} goto (42, 20)
B20
ParallelMove r2 <- fp[-3]
v270 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v270 T{int})
ParallelMove r1 <- fp[-1], r2 <- fp[-4]
v21 <- StaticCall:150( substring<0> v2 T{String}, v12, v270 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r1 <- r0
v22 <- StaticCall:152( parse<0> v21, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0
Branch if RelationalOp(>, v22, v286 T{_Smi}) T{bool} goto (39, 23)
B23
ParallelMove r4 <- fp[-2], r3 <- fp[-8]
ParallelMove r0 <- C, r1 <- r4
GenericCheckBound:174(v288 T{_Smi}, v11 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:174([_Uint8List] v88 T{_Uint8List}, v11 T{int}, v22 T{int}, NoStoreBarrier)
ParallelMove r0 <- r3
DartReturn:176(v88 T{_Uint8List})
B51
ParallelMove r0 <- r4, r4 <- r9
v175 <- AllocateObject:10(cls=FormatException, <not-aliased>) T{FormatException}
ParallelMove r2 <- r0, r0 <- C
StoreField(v175 T{FormatException} . message = v184 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
StoreField(v175 T{FormatException} . source = v2 T{String}, NoStoreBarrier)
ParallelMove r3 <- fp[-5]
v273 <- BoxInt64(v13 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v175 T{FormatException} . offset = v273 T{int?}, NoStoreBarrier)
ParallelMove r0 <- r2
Throw:18(v175)
B45
ParallelMove r0 <- fp[-1], r1 <- fp[-4]
v139 <- AllocateObject:10(cls=FormatException, <not-aliased>) T{FormatException}
ParallelMove r2 <- r0, r0 <- C
StoreField(v139 T{FormatException} . message = v109 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
StoreField(v139 T{FormatException} . source = v2 T{String}, NoStoreBarrier)
ParallelMove r3 <- fp[-4]
v271 <- BoxInt64(v12 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v139 T{FormatException} . offset = v271 T{int?}, NoStoreBarrier)
ParallelMove r0 <- r2
Throw:18(v139)
B48
ParallelMove r0 <- r4, r3 <- r9
v157 <- AllocateObject:10(cls=FormatException, <not-aliased>) T{FormatException}
ParallelMove r2 <- r0, r0 <- C
StoreField(v157 T{FormatException} . message = v129 T{_OneByteString}, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
StoreField(v157 T{FormatException} . source = v2 T{String}, NoStoreBarrier)
ParallelMove r3 <- fp[-5]
v274 <- BoxInt64(v13 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v157 T{FormatException} . offset = v274 T{int?}, NoStoreBarrier)
ParallelMove r0 <- r2
Throw:18(v157)
B42
ParallelMove r1 <- fp[-1], r2 <- fp[-3], r0 <- C
v120 <- AllocateObject:10(cls=FormatException, <not-aliased>) T{FormatException}
ParallelMove r2 <- r0, r0 <- C
StoreField(v120 T{FormatException} . message = v129 T{_OneByteString}, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
StoreField(v120 T{FormatException} . source = v2 T{String}, NoStoreBarrier)
ParallelMove r3 <- fp[-3]
v269 <- BoxInt64(v4 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v120 T{FormatException} . offset = v269 T{int?}, NoStoreBarrier)
ParallelMove r0 <- r2
Throw:18(v120)
B39
ParallelMove r1 <- fp[-1], r3 <- fp[-4], r0 <- C
v98 <- AllocateObject:10(cls=FormatException, <not-aliased>) T{FormatException}
ParallelMove r2 <- r0, r0 <- C
StoreField(v98 T{FormatException} . message = v109 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
StoreField(v98 T{FormatException} . source = v2 T{String}, NoStoreBarrier)
ParallelMove r3 <- fp[-4]
v272 <- BoxInt64(v12 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v98 T{FormatException} . offset = v272 T{int?}, NoStoreBarrier)
ParallelMove r0 <- r2
Throw:18(v98)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-2] <- r1
v5 <- LoadField(v3 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v13 <- LoadIndexed([_List] v3, v11 T{_Smi}) T{*?}
Branch if StrictCompare:16(===, v13, v14) goto (2, 3)
B2
v38 <- LoadIndexed([_List] v3, v36 T{_Smi}) T{*?}
v39 <- BinarySmiOp:10(- [tr], v5, v38) [-4611686018427387903, 4611686018427387903] T{_Smi}
v40 <- LoadIndexedUnsafe(fp[v39 + 8]) T{int??}
ParallelMove r4 <- r1 goto:26 B5
B3
ParallelMove r4 <- C goto:28 B5
B5
ParallelMove fp[-1] <- r4
CheckStackOverflow:34(stack=0, loop=0)
v59 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v59, v8 T{_Smi}) T{bool} goto (6, 10)
B10
Branch if StrictCompare:70(===, v15, v0) goto (13, 11)
B13
B11
Branch if StrictCompare(===, v15 T{int?}, v18) T{bool} goto (14, 17)
B14
B12
v99 <- UnboxInt64([non-speculative], v59 T{_Smi}) [0, 2305843009213693951] int64
v32 <- BinaryInt64Op(- [tr], v99 T{_Smi}, v103 T{_Smi}) [v99-1, v99-1] int64
ParallelMove r1 <- r0, r2 <- C, r3 <- r3
v33 <- StaticCall:98( _tryParseSmi@0150898<0> v2, v104 T{_Smi}, v32, result_type = T{int??}) T{int??}
ParallelMove r0 <- r0
Branch if StrictCompare:100(!==, v33, v0) goto (15, 16)
B15
v100 <- UnboxInt64([non-speculative], v33 T{int?}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r1
DartReturn:106(v100 T{int?})
B16
ParallelMove r0 <- fp[-1] goto:154 B23
B17
ParallelMove r0 <- r4
v97 <- UnboxInt64([non-speculative], v15 T{int?}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v97 T{int?}, v105 T{_Smi}) T{bool} goto (20, 18)
B18
Branch if RelationalOp(>, v97 T{int?}, v106 T{_Smi}) T{bool} goto (21, 22)
B22
B23
ParallelMove r1 <- fp[-2], r2 <- r0, r3 <- C
v30 <- StaticCall:158( _parse@0150898<0> v2, v15, v0, result_type = T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v101 <- UnboxInt64([non-speculative], v30) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r1
DartReturn:160(v101 T{int})
B6
ParallelMove r0 <- r4
ParallelMove r1 <- C, r2 <- fp[-2], r3 <- C, r5 <- r0, r6 <- C
v34 <- StaticCall:46( _handleFormatError@0150898<0> v0, v2, v8, v15, v0, result_type = T{!null}) [-9223372036854775808, 9223372036854775807] T{int?}
ParallelMove r0 <- C
Throw:48(v35)
B20
B21
B19
ParallelMove r1 <- C, r2 <- C
v25 <- CreateArray:142(v0, v24) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v25, v8, v26, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
StoreIndexed([_List] v25, v6, v15 T{int?}, NoStoreBarrier)
StoreIndexed([_List] v25, v9, v27, NoStoreBarrier)
MoveArgument(sp[0] <- v25)
v28 <- StaticCall:144( _interpolate@0150898<0> v25, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
v23 <- AllocateObject:140(cls=RangeError, <not-aliased>) T{RangeError}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v23 T{RangeError} . message = v28 T{String}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v23 T{RangeError} . _hasValue@0150898 = v68 T{bool}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:148(v23)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-1] <- r2, fp[-2] <- r3, fp[-3] <- r6, fp[-4] <- r5
CheckStackOverflow:8(stack=0, loop=0)
Branch if StrictCompare:10(!==, v2, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:20(v0)
B4
Branch if StrictCompare:24(!==, v6, v0) goto (5, 6)
B5
v18 <- AllocateObject:30(cls=FormatException) T{FormatException}
ParallelMove r1 <- r0, r0 <- fp[-3]
StoreField(v18 T{FormatException} . message = v6 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
StoreField(v18 T{FormatException} . source = v3 T{String}, NoStoreBarrier)
ParallelMove r2 <- fp[-2]
StoreField(v18 T{FormatException} . offset = v4 T{int??}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:34(v18)
B6
ParallelMove r0 <- r2, r2 <- r3
Branch if StrictCompare:38(===, v5, v0) goto (7, 8)
B7
v16 <- AllocateObject:44(cls=FormatException) T{FormatException}
ParallelMove r1 <- r0, r0 <- C
StoreField(v16 T{FormatException} . message = v17 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
StoreField(v16 T{FormatException} . source = v3 T{String}, NoStoreBarrier)
ParallelMove r3 <- fp[-2]
StoreField(v16 T{FormatException} . offset = v4 T{int??}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:48(v16)
B8
ParallelMove r3 <- r2
ParallelMove r1 <- C, r2 <- C
v9 <- CreateArray:54(v0, v8) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v9, v10, v11, NoStoreBarrier)
ParallelMove r1 <- fp[-4]
StoreIndexed([_List] v9, v12, v5 T{_Smi}, NoStoreBarrier)
StoreIndexed([_List] v9, v13, v14, NoStoreBarrier)
MoveArgument(sp[0] <- v9)
v15 <- StaticCall:56( _interpolate@0150898<0> v9, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-3] <- r0
v7 <- AllocateObject:52(cls=FormatException) T{FormatException}
ParallelMove r1 <- r0, r0 <- fp[-3]
StoreField(v7 T{FormatException} . message = v15 T{String}, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
StoreField(v7 T{FormatException} . source = v3 T{String}, NoStoreBarrier)
ParallelMove r0 <- fp[-2]
StoreField(v7 T{FormatException} . offset = v4 T{int??}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:60(v7)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r2 <- r1, r5 <- r2, r0 <- r3, fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r2
v5 <- StaticCall:10( _lastNonWhitespace@0150898<0> v2, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0
v7 <- BinaryInt64Op(+ [tr], v5, v153 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-4] <- r5
Branch if EqualityCompare(v7 == v154 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r2 <- fp[-1]
v100 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
ParallelMove r1 <- fp[-3], r2 <- r2, r3 <- r3, r5 <- fp[-2], r6 <- C
StaticCall:26( _handleFormatError@0150898<0> v4, v2, v100 T{_Smi}, v3, v0, result_type = T{Null?})
ParallelMove r0 <- C
DartReturn:28(v0)
B4
ParallelMove r2 <- fp[-1]
ParallelMove r1 <- r2
v11 <- StaticCall:32( _firstNonWhitespace@0150898<0> v2, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0, r2 <- fp[-1]
v86 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v145 <- UnboxInt64([non-speculative], v86) [0, 2305843009213693951] int64
ParallelMove r0 <- r4, r1 <- r3
t0 <- GenericCheckBound:34(v145 T{_Smi}, v11 T{int}) [-9223372036854775808, 9223372036854775807] int64
v88 <- LoadClassId(v2 T{_StringBase}) [93, 94] T{_Smi}
Branch if StrictCompare:34(===, v88, v63 T{_Smi}) goto (38, 39)
B38
v92 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v11 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:34 B37
B39
v90 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v11 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:34 B37
B37
Branch if EqualityCompare(v91 T{_Smi} == v155 T{_Smi}) T{bool} goto (7, 5)
B7
B5
Branch if EqualityCompare(v91 T{_Smi} == v156 T{_Smi}) T{bool} goto (8, 11)
B8
B6
v41 <- BinaryInt64Op(- [tr], v157 T{_Smi}, v91 T{_Smi}) [-65491, 44] int64
v42 <- BinaryInt64Op(+ [tr], v11 T{int}, v153 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v42 == v7) T{bool} goto (9, 10)
B9
v144 <- BoxInt64(v7) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- fp[-3], r2 <- r2, r3 <- r0, r5 <- fp[-2], r6 <- C
StaticCall:78( _handleFormatError@0150898<0> v4, v2, v144 T{int}, v3, v0, result_type = T{Null?})
ParallelMove r0 <- C
DartReturn:80(v0)
B10
ParallelMove r0 <- r4, r1 <- r8
t0 <- GenericCheckBound:84(v145 T{_Smi}, v42 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:84(===, v88 T{_Smi}, v63 T{_Smi}) goto (33, 34)
B33
v76 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v42 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:84 B32
B34
v74 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v42 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:84 B32
B32
ParallelMove r7 <- r8, r1 <- r0, r3 <- r7 goto:90 B12
B11
ParallelMove r6 <- fp[-4]
ParallelMove r7 <- r3, r1 <- r0, r3 <- C goto:92 B12
B12
Branch if StrictCompare:94(===, v3, v0) goto (13, 23)
B13
Branch if EqualityCompare(v18 == v158 T{_Smi}) T{bool} goto (14, 21)
B14
v28 <- BinaryInt64Op(+ [tr], v17, v153 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v28 == v7) T{bool} goto (15, 16)
B15
ParallelMove r0 <- C
DartReturn:122(v8)
B16
ParallelMove r0 <- r4, r1 <- r8
t0 <- GenericCheckBound:126(v145 T{_Smi}, v28 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:126(===, v88 T{_Smi}, v63 T{_Smi}) goto (28, 29)
B28
v59 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v28 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:126 B27
B29
v57 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v28 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:126 B27
B27
v32 <- BinaryInt64Op(| [tr], v58 T{_Smi}, v159 T{_Smi}) [0, 65535] int64
Branch if EqualityCompare(v32 == v160 T{_Smi}) T{bool} goto (17, 20)
B17
v35 <- BinaryInt64Op(+ [tr], v28 T{int}, v153 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v35 == v7) T{bool} goto (18, 19)
B18
v148 <- BoxInt64(v35) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- fp[-3], r2 <- r2, r3 <- r0, r5 <- C, r6 <- C
StaticCall:152( _handleFormatError@0150898<0> v4, v2, v148 T{int}, v0, v0, result_type = T{Null?})
ParallelMove r0 <- C
DartReturn:154(v0)
B19
v38 <- RelationalOp(>, v19, v154 T{_Smi}) T{bool}
MoveArgument(sp[0] <- v4)
ParallelMove r1 <- r2, r2 <- C, r3 <- r4, r5 <- r6, r6 <- r3, r7 <- r7
v39 <- StaticCall:160( _parseRadix@0150898<0> v2, v161 T{_Smi}, v35, v7, v19, v38, v4, result_type = T{int??}) T{int??}
ParallelMove r0 <- r0
DartReturn:162(v39)
B20
B21
B22
ParallelMove r0 <- C goto:178 B24
B23
v149 <- UnboxInt64([non-speculative], v3 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r0 <- r1 goto:180 B24
B24
MoveArgument(sp[0] <- v4)
ParallelMove r1 <- r2, r2 <- r0, r3 <- r7, r5 <- r6, r6 <- r3, r7 <- C
v23 <- StaticCall:182( _parseRadix@0150898<0> v2, v20, v17, v7, v19, v22, v4, result_type = T{int??}) T{int??}
ParallelMove r0 <- r0
DartReturn:184(v23)
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B5
Enter frame
ParallelMove r4 <- C
ParallelMove r11 <- r1, r10 <- r2, r9 <- r3, r8 <- r5, fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3, fp[-4] <- r6, fp[-8] <- r5, fp[-9] <- r7
CheckStackOverflow:8(stack=0, loop=0)
v10 <- BinaryInt64Op(- [tr], v3, v135 T{_Smi}) [-4611686018427387906, 4611686018427387901] int64
v136 <- ShiftInt64Op(<< [tr], v10, v135) [-9223372036854775808, 9223372036854775807] int64
v17 <- BinaryInt64Op(+ [tr], v136 T{int}, v135 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- C, r1 <- r12, fp[-7] <- r12
GenericCheckBound:34(v259 T{_Smi}, v17) [-9223372036854775808, 9223372036854775807] int64
v260 <- LoadIndexed:34([_List] v18, v17 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
v20 <- BinaryInt64Op(- [tr], v5, v4) [-9223372036854775808, 9223372036854775807] int64
v232 <- UnboxInt64([non-speculative], v260 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-6] <- r13
Branch if RelationalOp(<=, v20, v232 T{int}) T{bool} goto (6, 9)
B6
ParallelMove r1 <- r11, r2 <- r10, r3 <- r9, r5 <- r8
v85 <- StaticCall:48( _parseBlock@0150898<0> v2, v3, v4, v5, result_type = T{_Smi?}) T{_Smi?}
ParallelMove r0 <- r0
Branch if StrictCompare:50(===, v85, v0) goto (7, 8)
B7
ParallelMove r0 <- fp[-2], r6 <- fp[-3]
v219 <- BoxInt64(v3) [-4611686018427387904, 4611686018427387903] T{_Smi}
v224 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- fp[2], r2 <- fp[-1], r3 <- r0, r5 <- r5, r6 <- C
StaticCall:56( _handleFormatError@0150898<0> v8, v2, v224 T{int}, v219 T{_Smi}, v0, result_type = T{Null?})
ParallelMove r0 <- C
DartReturn:58(v0)
B8
ParallelMove r9 <- fp[-4]
v233 <- UnboxInt64([non-speculative], v85 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v86 <- BinaryInt64Op(* [tr], v6, v233 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v234 <- BoxInt64(v86) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
DartReturn:64(v234 T{int})
B9
ParallelMove r0 <- r10, r6 <- r9, r9 <- r6
ParallelMove r1 <- r1 goto:86 B11
B11
  Loop 1
  Loop Header
CheckStackOverflow:84(stack=0, loop=1)
Branch if RelationalOp(>=, v22, v232 T{int}) T{bool} goto (10, 12)
B10
  Loop 1
v84 <- BinaryInt64Op(- [tr], v22, v232 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r2 goto:82 B11
B12
Branch if RelationalOp(>, v22, v261 T{_Smi}) T{bool} goto (13, 16)
B13
v81 <- BinaryInt64Op(+ [tr], v4, v22) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-1], r2 <- r0, r3 <- r6, r5 <- r10, fp[-5] <- r10
v82 <- StaticCall:102( _parseBlock@0150898<0> v2, v3, v4, v81, result_type = T{_Smi?}) T{_Smi?}
ParallelMove r0 <- r0
Branch if StrictCompare:104(===, v82, v0) goto (14, 15)
B14
ParallelMove r3 <- fp[-2], r2 <- fp[-3]
v220 <- BoxInt64(v3) [-4611686018427387904, 4611686018427387903] T{_Smi}
v225 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- fp[2], r2 <- fp[-1], r3 <- r0, r5 <- r5, r6 <- C
StaticCall:110( _handleFormatError@0150898<0> v8, v2, v225 T{int}, v220 T{_Smi}, v0, result_type = T{Null?})
ParallelMove r0 <- C
DartReturn:112(v0)
B15
ParallelMove r3 <- fp[-2], r4 <- fp[-4]
v235 <- UnboxInt64([non-speculative], v82 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v83 <- BinaryInt64Op(* [tr], v6, v235 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r7 <- fp[-5], r6 <- r0 goto:122 B17
B16
ParallelMove r3 <- r0, r2 <- r6, r4 <- r9
ParallelMove r7 <- r2, r6 <- C goto:124 B17
B17
ParallelMove fp[-5] <- r7, fp[-11] <- r6
v30 <- BinaryInt64Op(+ [tr], v17 T{int}, v262 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- C, r1 <- r8
GenericCheckBound:128(v259 T{_Smi}, v30) [-9223372036854775808, 9223372036854775807] int64
v263 <- LoadIndexed:128([_List] v18, v30 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove fp[-10] <- r0
v32 <- ShiftInt64Op(<< [tr], v17 T{int}, v262 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-3] <- r1
v131 <- LoadStaticField:4(_int64OverflowLimits@0150898, CallsInitializer) T{_Int64List}
ParallelMove r3 <- r0
ParallelMove fp[-12] <- r3
v87 <- LoadField(v131 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v240 <- UnboxInt64([non-speculative], v87) [0, 4611686018427387903] int64
ParallelMove r0 <- r4, r1 <- fp[-3], fp[-7] <- r4
GenericCheckBound:134(v240 T{_Smi}, v32) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-3]
v264 <- LoadIndexed:134([_Int64List] v131, v32 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v264 T{int} == v261 T{_Smi}) T{bool} goto (18, 19)
B18
ParallelMove r5 <- fp[-10]
v239 <- UnboxInt64([non-speculative], v263 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r0, r2 <- r2
v80 <- StaticCall:146( _initInt64OverflowLimits@0150898<0> v32 T{int}, v239 T{int}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0
ParallelMove r8 <- r0 goto:152 B20
B19
ParallelMove r8 <- r1 goto:154 B20
B20
ParallelMove fp[-17] <- r8
v38 <- BinaryInt64Op(+ [tr], v32 T{int}, v262 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-7], r1 <- r5
GenericCheckBound:160(v240 T{_Smi}, v38) [-9223372036854775808, 9223372036854775807] int64
v265 <- LoadIndexed:160([_Int64List] v131 T{_Int64List}, v38 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-16] <- r0
v40 <- BinaryInt64Op(+ [tr], v25, v232 T{int}) [-9223372036854775808, 9223372036854775807] int64
v237 <- UnboxInt64:424([non-speculative], v263 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-15] <- r9
v51 <- BinaryInt64Op:424(+ [tr], v32 T{int}, v269 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-14] <- r10
v62 <- BinaryInt64Op:424(+ [tr], v32 T{int}, v135 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-13] <- r11
ParallelMove r24 <- r3, r23 <- fp[-11], r20 <- r1, r12 <- fp[-2], r19 <- fp[-8], r13 <- fp[-4], r14 <- fp[-9] goto:424 B54
B54
  Loop 0
  Loop Header
ParallelMove fp[-3] <- r24, fp[-5] <- r23, fp[-11] <- r20
CheckStackOverflow:418(stack=0, loop=1)
ParallelMove r1 <- fp[-1], r2 <- r12, r3 <- r24, r5 <- r20
v45 <- StaticCall:164( _parseBlock@0150898<0> v2, v3, v41, v43, result_type = T{_Smi?}) T{_Smi?}
ParallelMove r2 <- r0
Branch if StrictCompare:166(===, v45, v0) goto (21, 22)
B22
  Loop 0
ParallelMove r3 <- fp[-17], r4 <- fp[-5]
Branch if RelationalOp(>=, v42, v36) T{bool} goto (23, 44)
B23
  Loop 0
Branch if RelationalOp(>, v42, v36) T{bool} goto (26, 24)
B24
  Loop 0
ParallelMove r6 <- fp[-13], r5 <- fp[-12]
ParallelMove r0 <- fp[-7], r1 <- r6
GenericCheckBound:200(v240 T{_Smi}, v62) [-9223372036854775808, 9223372036854775807] int64
v266 <- LoadIndexed:200([_Int64List] v131 T{_Int64List}, v62 T{int}) [-9223372036854775808, 9223372036854775807] int64
v246 <- UnboxInt64([non-speculative], v45 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
Branch if RelationalOp(>, v246 T{_Smi}, v266 T{int}) T{bool} goto (27, 43)
B43
  Loop 0
ParallelMove r11 <- fp[-2], r9 <- fp[-8], r7 <- fp[-9], r24 <- fp[-11], r13 <- fp[-14], r8 <- fp[-6], r10 <- fp[-10], r12 <- fp[-16] goto:396 B53
B27
B26
B30
Branch if StrictCompare:242(===, v7 T{bool}, v14) goto (33, 39)
BoolTest
B33
Branch if RelationalOp(>=, v42, v267 T{_Smi}) T{bool} goto (32, 35)
B32
Branch if RelationalOp(>, v42, v267 T{_Smi}) T{bool} goto (40, 31)
B40
B31
v245 <- UnboxInt64([non-speculative], v45 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
Branch if RelationalOp(>, v245 T{_Smi}, v268 T{_Smi}) T{bool} goto (41, 36)
B41
B36
B35
B34
v71 <- BinaryInt64Op(+ [tr], v43, v232 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>, v71 T{int}, v5) T{bool} goto (37, 42)
B37
ParallelMove r10 <- fp[-10]
v238 <- UnboxInt64([non-speculative], v263 T{int}) [-9223372036854775808, 9223372036854775807] int64
v73 <- BinaryInt64Op(* [tr], v42, v238 T{int}) [-9223372036854775808, 9223372036854775807] int64
v247 <- UnboxInt64([non-speculative], v45 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v74 <- BinaryInt64Op(+ [tr], v73 T{int}, v247 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v252 <- BoxInt64(v74) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
DartReturn:308(v252 T{int})
B42
B39
B38
v222 <- BoxInt64(v3) [-4611686018427387904, 4611686018427387903] T{_Smi}
ParallelMove r1 <- fp[2], r2 <- fp[-1], r3 <- C, r5 <- r5, r6 <- C
StaticCall:328( _handleFormatError@0150898<0> v8, v2, v0, v222 T{_Smi}, v67, result_type = T{Null?})
ParallelMove r0 <- C
DartReturn:330(v0)
B44
  Loop 0
ParallelMove r11 <- fp[-2], r9 <- fp[-8], r7 <- fp[-9], r24 <- fp[-11], r6 <- fp[-13], r5 <- fp[-12], r8 <- fp[-6], r10 <- fp[-10], r12 <- fp[-16]
Branch if RelationalOp(<=, v42, v265 T{int}) T{bool} goto (45, 51)
B45
  Loop 0
Branch if RelationalOp(<, v42, v265 T{int}) T{bool} goto (48, 46)
B46
  Loop 0
ParallelMove r13 <- fp[-14]
ParallelMove r0 <- fp[-7], r1 <- r13
GenericCheckBound:358(v240 T{_Smi}, v51) [-9223372036854775808, 9223372036854775807] int64
v270 <- LoadIndexed:358([_Int64List] v131 T{_Int64List}, v51 T{int}) [-9223372036854775808, 9223372036854775807] int64
v248 <- UnboxInt64([non-speculative], v45 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
Branch if RelationalOp(>, v248 T{_Smi}, v270 T{int}) T{bool} goto (49, 50)
B50
B49
B48
B47
v223 <- BoxInt64(v3) [-4611686018427387904, 4611686018427387903] T{_Smi}
ParallelMove r1 <- fp[2], r2 <- fp[-1], r3 <- C, r5 <- r5, r6 <- C
StaticCall:380( _handleFormatError@0150898<0> v8, v2, v0, v223 T{_Smi}, v54, result_type = T{Null?})
ParallelMove r0 <- C
DartReturn:382(v0)
B51
  Loop 0
ParallelMove r13 <- fp[-14]
ParallelMove  goto:392 B52
B52
B53
  Loop 0
v55 <- BinaryInt64Op(* [tr], v42, v237 T{int}) [-9223372036854775808, 9223372036854775807] int64
v249 <- UnboxInt64([non-speculative], v45 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v56 <- BinaryInt64Op(* [tr], v6, v249 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v57 <- BinaryInt64Op(+ [tr], v55 T{int}, v56) [-9223372036854775808, 9223372036854775807] int64
v58 <- BinaryInt64Op(+ [tr], v43, v232 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<=, v58 T{int}, v5) T{bool} goto (55, 56)
B55
  Loop 0
ParallelMove r24 <- r24, r23 <- r23, r20 <- r20, r12 <- r11, r19 <- r9, r13 <- r1, r14 <- r7, r8 <- r3, r10 <- r13, r11 <- r6, r4 <- r5, r7 <- r8, r9 <- r0, r6 <- r10, r0 <- r12 goto:422 B54
B56
v255 <- BoxInt64(v57) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
DartReturn:428(v255 T{int})
B21
ParallelMove r11 <- fp[-2], r2 <- fp[-3]
v221 <- BoxInt64(v3) [-4611686018427387904, 4611686018427387903] T{_Smi}
v244 <- BoxInt64(v41) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- fp[2], r2 <- fp[-1], r3 <- r0, r5 <- r5, r6 <- C
StaticCall:172( _handleFormatError@0150898<0> v8, v2, v244 T{int}, v221 T{_Smi}, v0, result_type = T{Null?})
ParallelMove r0 <- C
DartReturn:174(v0)
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v40 <- LoadStaticField:4(_int64OverflowLimits@0150898, CallsInitializer) T{_Int64List}
ParallelMove r4 <- r0, r3 <- fp[-2], r2 <- C
v6 <- BinaryInt64Op(~/ [tr], v104 T{_Mint}, v3) [-9223372036854775808, 9223372036854775807] int64
v23 <- LoadField(v40 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v94 <- UnboxInt64([non-speculative], v23) [0, 4611686018427387903] int64
ParallelMove r0 <- r7, r1 <- fp[-1]
GenericCheckBound:14(v94 T{_Smi}, v2) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- fp[-1]
StoreIndexed:14([_Int64List] v40, v2 T{int}, v6 T{int}, NoStoreBarrier)
v9 <- BinaryInt64Op(+ [tr], v2 T{int}, v105 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r9 <- C
v11 <- BinaryInt64Op(~/ [tr], v106 T{_Mint}, v3) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r7, r1 <- r8
GenericCheckBound:22(v94 T{_Smi}, v9) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:22([_Int64List] v40 T{_Int64List}, v9 T{int}, v11 T{int}, NoStoreBarrier)
v14 <- BinaryInt64Op(+ [tr], v2 T{int}, v107 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v74 <- BinaryInt64Op(* [tr], v6 T{int}, v3 T{_IntegerImplementation}) [-9223372036854775808, 9223372036854775807] int64
v75 <- BinaryInt64Op(- [tr], v104 T{_Mint}, v74) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r7, r1 <- r8
GenericCheckBound:30(v94 T{_Smi}, v14) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:30([_Int64List] v40 T{_Int64List}, v14 T{int}, v75 T{int}, NoStoreBarrier)
v18 <- BinaryInt64Op(+ [tr], v2 T{int}, v108 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v83 <- BinaryInt64Op(* [tr], v11 T{int}, v3 T{_IntegerImplementation}) [-9223372036854775808, 9223372036854775807] int64
v84 <- BinaryInt64Op(- [tr], v106 T{_Mint}, v83) [-9223372036854775808, 9223372036854775807] int64
v20 <- UnaryInt64Op(unary-, v84 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r7, r1 <- r2
GenericCheckBound:40(v94 T{_Smi}, v18) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:40([_Int64List] v40 T{_Int64List}, v18 T{int}, v20 T{int}, NoStoreBarrier)
v109 <- LoadIndexed:44([_Int64List] v40 T{_Int64List}, v2 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0
DartReturn:46(v109 T{int})
CheckStackOverflowSlowPath
slow path int64 divide operation
slow path check bound operation
slow path int64 divide operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r6 <- r1, r4 <- r2, fp[-5] <- r1, fp[-6] <- r2, fp[-7] <- r5
Branch if RelationalOp(<=, v3, v124 T{_Smi}) T{bool} goto (3, 9)
B3
v72 <- LoadField:60(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v117 <- UnboxInt64:60([non-speculative], v72) [0, 2305843009213693951] int64
ParallelMove fp[-4] <- r7
v74 <- LoadClassId:60(v2 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove fp[-3] <- r8
ParallelMove r2 <- C, r3 <- r3 goto:60 B8
B8
  Loop 1
  Loop Header
ParallelMove fp[-2] <- r3
CheckStackOverflow:64(stack=0, loop=1)
Branch if RelationalOp(<, v39, v5) T{bool} goto (4, 5)
B4
  Loop 1
ParallelMove r0 <- r7, r1 <- r3
t0 <- GenericCheckBound:34(v117 T{_Smi}, v39 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:34(===, v74, v65 T{_Smi}) goto (30, 31)
B30
  Loop 1
v78 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v39 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:34 B29
B31
  Loop 1
v76 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v39 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:34 B29
B29
  Loop 1
v43 <- BinaryInt64Op(^ [tr], v77 T{_Smi}, v126 T{_Smi}) [0, 65535] int64
Branch if RelationalOp(>=, v43, v3) T{bool} goto (6, 7)
B7
  Loop 1
v45 <- BinaryInt64Op(* [tr], v3, v38) [-9223372036854775808, 9223372036854775807] int64
v46 <- BinaryInt64Op(+ [tr], v45, v43) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-1] <- r9
v118 <- BoxInt64(v46) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0, r2 <- C, r1 <- C
t0 <- AssertAssignable:56(v118 T{int}, v23, ' in type cast', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{_Smi}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-2]
v48 <- BinaryInt64Op(+ [tr], v39 T{int}, v127 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- fp[-1], r3 <- r3, r6 <- fp[-5], r4 <- fp[-6], r5 <- fp[-7], r8 <- fp[-3], r7 <- fp[-4] goto:62 B8
B6
ParallelMove r0 <- C
DartReturn:48(v0)
B5
ParallelMove r1 <- r2 goto:158 B21
B9
ParallelMove r4 <- r6
v55 <- LoadField:150(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v120 <- UnboxInt64:150([non-speculative], v55) [0, 2305843009213693951] int64
ParallelMove fp[-4] <- r5
v57 <- LoadClassId:150(v2 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove fp[-3] <- r6
ParallelMove r2 <- C, r8 <- r3 goto:150 B20
B20
  Loop 0
  Loop Header
ParallelMove fp[-2] <- r8
CheckStackOverflow:154(stack=0, loop=1)
Branch if RelationalOp(<, v11, v5) T{bool} goto (10, 11)
B10
  Loop 0
ParallelMove r0 <- r5, r1 <- r8
t0 <- GenericCheckBound:82(v120 T{_Smi}, v11 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:82(===, v57, v65 T{_Smi}) goto (25, 26)
B25
  Loop 0
v61 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v11 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:82 B24
B26
  Loop 0
v59 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v11 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:82 B24
B24
  Loop 0
v17 <- BinaryInt64Op(^ [tr], v60 T{_Smi}, v126 T{_Smi}) [0, 65535] int64
Branch if RelationalOp(>, v17, v128 T{_Smi}) T{bool} goto (12, 18)
B12
  Loop 0
v28 <- BinaryInt64Op(| [tr], v60 T{_Smi}, v129 T{_Smi}) [0, 65535] int64
v31 <- BinaryInt64Op(- [tr], v28, v82) [-87, 65448] int64
Branch if RelationalOp(<, v31, v124 T{_Smi}) T{bool} goto (15, 13)
B13
  Loop 0
Branch if RelationalOp(>=, v31, v3) T{bool} goto (16, 17)
B17
B16
B15
B14
ParallelMove r0 <- C
DartReturn:130(v0)
B18
  Loop 0
ParallelMove r0 <- r1 goto:140 B19
B19
  Loop 0
v21 <- BinaryInt64Op(* [tr], v3, v10) [-9223372036854775808, 9223372036854775807] int64
v22 <- BinaryInt64Op(+ [tr], v21, v20) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-1] <- r9
v121 <- BoxInt64(v22) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0, r2 <- C, r1 <- C
t0 <- AssertAssignable:146(v121 T{int}, v23, ' in type cast', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{_Smi}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-2]
v26 <- BinaryInt64Op(+ [tr], v11 T{int}, v127 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- fp[-1], r8 <- r8, r4 <- fp[-5], r6 <- fp[-3], r5 <- fp[-4] goto:152 B20
B11
ParallelMove r1 <- r2 goto:160 B21
B21
v123 <- BoxInt64(v34) [-4611686018427387904, 4611686018427387903] T{_Smi}
ParallelMove r0 <- r0
DartReturn:162(v123 T{_Smi})
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove r4 <- C
v19 <- AllocateTypedData:10(v22 T{_Smi}) T{_Int64List}
ParallelMove r0 <- r0
DartReturn:12(v19 T{_Int64List})
B0
B1
v52 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v317 <- UnboxInt64:46([non-speculative], v52 T{_Smi}) [0, 2305843009213693951] int64
v39 <- LoadClassId:46(v2 T{_StringBase}) [93, 94] T{_Smi}
v28 <- LoadClassId:46(v2) [93, 94] int64
ParallelMove r0 <- C goto:46 B8
B8
  Loop 0
  Loop Header
CheckStackOverflow:50(stack=0, loop=1)
Branch if RelationalOp(<, v5, v317 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 0
Branch if StrictCompare:26(===, v39, v47 T{_Smi}) goto (19, 20)
B19
  Loop 0
v43 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v5 T{int}) [0, 255] int64
ParallelMove r5 <- r5 goto:26 B18
B20
  Loop 0
v41 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v5 T{int}) [0, 65535] int64
ParallelMove r5 <- r5 goto:26 B18
B18
  Loop 0
Branch if EqualityCompare:28(v28 == v29) goto (9, 14)
B9
  Loop 0
Branch if RelationalOp(<=, v42 T{_Smi}, v322 T{_Smi}) T{bool} goto (25, 31)
B25
  Loop 0
Branch if EqualityCompare(v42 T{_Smi} == v322 T{_Smi}) T{bool} goto (112, 27)
B112
B27
  Loop 0
Branch if RelationalOp(<=, v42 T{_Smi}, v323 T{_Smi}) T{bool} goto (28, 113)
B28
  Loop 0
Branch if RelationalOp(<, v42 T{_Smi}, v324 T{_Smi}) T{bool} goto (109, 110)
B110
B102
B109
B113
B101
B31
  Loop 0
Branch if EqualityCompare(v42 T{_Smi} == v325 T{_Smi}) T{bool} goto (108, 33)
B108
B33
  Loop 0
Branch if EqualityCompare(v42 T{_Smi} != v326 T{_Smi}) T{bool} goto (103, 106)
B106
B104
B72
B103
B71
B14
  Loop 0
Branch if RelationalOp(<=, v42 T{_Smi}, v322 T{_Smi}) T{bool} goto (38, 44)
B38
  Loop 0
Branch if EqualityCompare(v42 T{_Smi} == v322 T{_Smi}) T{bool} goto (98, 40)
B98
B40
  Loop 0
Branch if RelationalOp(<=, v42 T{_Smi}, v323 T{_Smi}) T{bool} goto (41, 99)
B41
  Loop 0
Branch if RelationalOp(<, v42 T{_Smi}, v324 T{_Smi}) T{bool} goto (95, 96)
B96
B76
B95
B99
B75
B44
  Loop 0
Branch if RelationalOp(<, v42 T{_Smi}, v325 T{_Smi}) T{bool} goto (77, 46)
B46
  Loop 0
Branch if EqualityCompare(v42 T{_Smi} == v325 T{_Smi}) T{bool} goto (49, 47)
B49
B47
  Loop 0
Branch if EqualityCompare(v42 T{_Smi} == v326 T{_Smi}) T{bool} goto (50, 51)
B50
B80
B51
  Loop 0
Branch if RelationalOp(<=, v42 T{_Smi}, v327 T{_Smi}) T{bool} goto (52, 56)
B52
  Loop 0
Branch if EqualityCompare(v42 T{_Smi} == v328 T{_Smi}) T{bool} goto (94, 54)
B94
B54
  Loop 0
Branch if RelationalOp(>, v329 T{_Smi}, v42 T{_Smi}) T{bool} goto (83, 92)
B92
B84
B83
B56
  Loop 0
Branch if EqualityCompare(v42 T{_Smi} == v330 T{_Smi}) T{bool} goto (64, 58)
B64
B58
  Loop 0
Branch if EqualityCompare(v42 T{_Smi} == v331 T{_Smi}) T{bool} goto (65, 59)
B65
B59
  Loop 0
Branch if EqualityCompare(v42 T{_Smi} == v332 T{_Smi}) T{bool} goto (66, 60)
B66
B60
  Loop 0
Branch if EqualityCompare(v42 T{_Smi} == v333 T{_Smi}) T{bool} goto (67, 61)
B67
B61
  Loop 0
Branch if EqualityCompare(v42 T{_Smi} == v334 T{_Smi}) T{bool} goto (68, 62)
B68
B90
B62
  Loop 0
Branch if EqualityCompare(v42 T{_Smi} != v335 T{_Smi}) T{bool} goto (85, 88)
B88
B86
B82
B74
B7
  Loop 0
v11 <- BinaryInt64Op(+ [tr], v5 T{int}, v336 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r5 goto:48 B8
B85
B81
B77
B73
B5
B4
B6
ParallelMove r0 <- r0
DartReturn:54(v5)
CheckStackOverflowSlowPath
B0
B1
v53 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v319 <- UnboxInt64([non-speculative], v53 T{_Smi}) [0, 2305843009213693951] int64
v5 <- BinaryInt64Op(- [tr], v319 T{_Smi}, v323 T{_Smi}) [v319-1, v319-1] int64
v40 <- LoadClassId:48(v2 T{_StringBase}) [93, 94] T{_Smi}
v29 <- LoadClassId:48(v2) [93, 94] int64
ParallelMove r0 <- r2 goto:48 B8
B8
  Loop 0
  Loop Header
CheckStackOverflow:52(stack=0, loop=1)
Branch if RelationalOp(>=, v6, v324 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 0
Branch if StrictCompare:28(===, v40, v48 T{_Smi}) goto (19, 20)
B19
  Loop 0
v44 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v6 T{int}) [0, 255] int64
ParallelMove r2 <- r2 goto:28 B18
B20
  Loop 0
v42 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v6 T{int}) [0, 65535] int64
ParallelMove r2 <- r2 goto:28 B18
B18
  Loop 0
Branch if EqualityCompare:30(v29 == v30) goto (9, 14)
B9
  Loop 0
Branch if RelationalOp(<=, v43 T{_Smi}, v325 T{_Smi}) T{bool} goto (25, 31)
B25
  Loop 0
Branch if EqualityCompare(v43 T{_Smi} == v325 T{_Smi}) T{bool} goto (112, 27)
B112
B27
  Loop 0
Branch if RelationalOp(<=, v43 T{_Smi}, v326 T{_Smi}) T{bool} goto (28, 113)
B28
  Loop 0
Branch if RelationalOp(<, v43 T{_Smi}, v327 T{_Smi}) T{bool} goto (109, 110)
B110
B102
B109
B113
B101
B31
  Loop 0
Branch if EqualityCompare(v43 T{_Smi} == v328 T{_Smi}) T{bool} goto (108, 33)
B108
B33
  Loop 0
Branch if EqualityCompare(v43 T{_Smi} != v329 T{_Smi}) T{bool} goto (103, 106)
B106
B104
B72
B103
B71
B14
  Loop 0
Branch if RelationalOp(<=, v43 T{_Smi}, v325 T{_Smi}) T{bool} goto (38, 44)
B38
  Loop 0
Branch if EqualityCompare(v43 T{_Smi} == v325 T{_Smi}) T{bool} goto (98, 40)
B98
B40
  Loop 0
Branch if RelationalOp(<=, v43 T{_Smi}, v326 T{_Smi}) T{bool} goto (41, 99)
B41
  Loop 0
Branch if RelationalOp(<, v43 T{_Smi}, v327 T{_Smi}) T{bool} goto (95, 96)
B96
B76
B95
B99
B75
B44
  Loop 0
Branch if RelationalOp(<, v43 T{_Smi}, v328 T{_Smi}) T{bool} goto (77, 46)
B46
  Loop 0
Branch if EqualityCompare(v43 T{_Smi} == v328 T{_Smi}) T{bool} goto (49, 47)
B49
B47
  Loop 0
Branch if EqualityCompare(v43 T{_Smi} == v329 T{_Smi}) T{bool} goto (50, 51)
B50
B80
B51
  Loop 0
Branch if RelationalOp(<=, v43 T{_Smi}, v330 T{_Smi}) T{bool} goto (52, 56)
B52
  Loop 0
Branch if EqualityCompare(v43 T{_Smi} == v331 T{_Smi}) T{bool} goto (94, 54)
B94
B54
  Loop 0
Branch if RelationalOp(>, v332 T{_Smi}, v43 T{_Smi}) T{bool} goto (83, 92)
B92
B84
B83
B56
  Loop 0
Branch if EqualityCompare(v43 T{_Smi} == v333 T{_Smi}) T{bool} goto (64, 58)
B64
B58
  Loop 0
Branch if EqualityCompare(v43 T{_Smi} == v334 T{_Smi}) T{bool} goto (65, 59)
B65
B59
  Loop 0
Branch if EqualityCompare(v43 T{_Smi} == v335 T{_Smi}) T{bool} goto (66, 60)
B66
B60
  Loop 0
Branch if EqualityCompare(v43 T{_Smi} == v336 T{_Smi}) T{bool} goto (67, 61)
B67
B61
  Loop 0
Branch if EqualityCompare(v43 T{_Smi} == v337 T{_Smi}) T{bool} goto (68, 62)
B68
B90
B62
  Loop 0
Branch if EqualityCompare(v43 T{_Smi} != v338 T{_Smi}) T{bool} goto (85, 88)
B88
B86
B82
B74
B7
  Loop 0
v12 <- BinaryInt64Op(- [tr], v6 T{int}, v323 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r2 goto:50 B8
B85
B81
B77
B73
B5
B4
B6
ParallelMove r0 <- r0
DartReturn:56(v6)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1
v64 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v110 <- UnboxInt64([non-speculative], v64) [0, 2305843009213693951] int64
ParallelMove r0 <- r6, r1 <- r2
t0 <- GenericCheckBound:10(v110 T{_Smi}, v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
v66 <- LoadClassId(v2 T{_StringBase}) [93, 94] T{_Smi}
Branch if StrictCompare:10(===, v66, v54 T{_Smi}) goto (31, 32)
B31
v70 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v3 T{int}) [0, 255] int64
ParallelMove r7 <- r7 goto:10 B30
B32
v68 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v3 T{int}) [0, 65535] int64
ParallelMove r7 <- r7 goto:10 B30
B30
Branch if EqualityCompare(v69 T{_Smi} == v114 T{_Smi}) T{bool} goto (5, 3)
B5
B3
Branch if EqualityCompare(v69 T{_Smi} == v115 T{_Smi}) T{bool} goto (6, 9)
B6
B4
v34 <- BinaryInt64Op(+ [tr], v3 T{int}, v116 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v36 <- BinaryInt64Op(- [tr], v117 T{_Smi}, v69 T{_Smi}) [-65491, 44] int64
Branch if RelationalOp(>, v34, v4) T{bool} goto (7, 8)
B7
ParallelMove r0 <- C
DartReturn:54(v0)
B8
ParallelMove r7 <- r9, r2 <- r10 goto:62 B13
B9
ParallelMove r7 <- r2, r2 <- C goto:64 B13
B13
v17 <- BinaryInt64Op(- [tr], v4, v12) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>=, v17, v118 T{_Smi}) T{bool} goto (14, 15)
B14
ParallelMove r0 <- C
DartReturn:96(v0)
B15
ParallelMove r8 <- C, r7 <- r7 goto:138 B20
B20
  Loop 0
  Loop Header
CheckStackOverflow:142(stack=0, loop=1)
Branch if RelationalOp(<=, v21, v4) T{bool} goto (16, 17)
B16
  Loop 0
ParallelMove r0 <- r6, r1 <- r7
t0 <- GenericCheckBound:114(v110 T{_Smi}, v21 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:114(===, v66 T{_Smi}, v54 T{_Smi}) goto (24, 25)
B24
  Loop 0
v50 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v21 T{int}) [0, 255] int64
ParallelMove r9 <- r9 goto:114 B23
B25
  Loop 0
v48 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v21 T{int}) [0, 65535] int64
ParallelMove r9 <- r9 goto:114 B23
B23
  Loop 0
v27 <- BinaryInt64Op(^ [tr], v49 T{_Smi}, v120 T{_Smi}) [0, 65535] int64
Branch if RelationalOp(<, v121 T{_Smi}, v27) T{bool} goto (18, 19)
B19
  Loop 0
v30 <- BinaryInt64Op(* [tr], v20, v122 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v31 <- BinaryInt64Op(+ [tr], v30, v27) [-9223372036854775808, 9223372036854775807] int64
v32 <- BinaryInt64Op(+ [tr], v21 T{int}, v116 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r8 <- r8, r7 <- r0 goto:140 B20
B18
ParallelMove r0 <- C
DartReturn:128(v0)
B17
v24 <- BinaryInt64Op(* [tr], v13, v20) [-9223372036854775808, 9223372036854775807] int64
v112 <- BoxInt64(v24) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
DartReturn:146(v112 T{int})
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
B0
B2
Enter frame
ParallelMove r0 <- fp[4]
v5 <- LoadField(v2 . Closure.context {final}) T{*}
ParallelMove fp[-1] <- r3
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[3]
v96 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[2]
v98 <- UnboxInt64([non-speculative], v4) [-9223372036854775808, 9223372036854775807] int64
v6 <- BinaryInt64Op(- [tr], v98 T{int}, v96 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>, v6, v100 T{_Smi}) T{bool} goto (16, 5)
B5
v10 <- LoadField(v5 . host) T{String}
MoveArgument(sp[0] <- v4)
ParallelMove r1 <- r4, r2 <- r2
v11 <- StaticCall:32( substring<0> v10, v96 T{int}, v4, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v12)
ParallelMove r1 <- r0
v13 <- StaticCall:34( parse<0> v11, v12, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0
Branch if RelationalOp(<, v13, v101 T{_Smi}) T{bool} goto (8, 6)
B6
Branch if RelationalOp(>, v13, v102 T{_Smi}) T{bool} goto (9, 11)
B11
v99 <- BoxInt64(v13) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
DartReturn:74(v99 T{int})
B16
ParallelMove r1 <- r0, r0 <- r3
v21 <- LoadField(v5 . error {final}) T{_Closure}
v55 <- LoadField(v21 T{_Closure} . Closure.context {final}) T{*}
v63 <- LoadField(v55 . host) T{String}
ParallelMove fp[-2] <- r2
v56 <- AllocateObject:10(cls=FormatException, <not-aliased>) T{FormatException}
ParallelMove r1 <- r0, r0 <- C
StoreField(v56 T{FormatException} . message = v65 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-2]
StoreField(v56 T{FormatException} . source = v63 T{String}, NoStoreBarrier)
ParallelMove r2 <- fp[3]
StoreField(v56 T{FormatException} . offset = v3 T{int?}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:18(v56)
B8
ParallelMove r2 <- fp[3], r0 <- fp[-1]
ParallelMove  goto:58 B13
B9
ParallelMove r2 <- fp[3], r0 <- fp[-1]
ParallelMove  goto:62 B13
B13
v18 <- LoadField(v5 . error {final}) T{_Closure}
v32 <- LoadField(v18 T{_Closure} . Closure.context {final}) T{*}
v40 <- LoadField(v32 . host) T{String}
ParallelMove fp[-1] <- r1
v33 <- AllocateObject:10(cls=FormatException, <not-aliased>) T{FormatException}
ParallelMove r1 <- r0, r0 <- C
StoreField(v33 T{FormatException} . message = v45 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
StoreField(v33 T{FormatException} . source = v40 T{String}, NoStoreBarrier)
ParallelMove r0 <- fp[3]
StoreField(v33 T{FormatException} . offset = v3 T{int?}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:18(v33)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[4]
v5 <- LoadField(v2 . Closure.context {final}) T{*}
ParallelMove fp[-1] <- r3
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v8 <- CreateArray:12(v0, v7) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v8, v9, v10, NoStoreBarrier)
ParallelMove r1 <- fp[3]
StoreIndexed([_List] v8, v11, v3, NoStoreBarrier)
MoveArgument(sp[0] <- v8)
v12 <- StaticCall:14( _interpolate@0150898<0> v8, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- r0, r0 <- fp[-1]
ParallelMove fp[-3] <- r1
v13 <- LoadField(v5 . host) T{String}
ParallelMove fp[-2] <- r2
v6 <- AllocateObject:10(cls=FormatException, <not-aliased>) T{FormatException}
ParallelMove r1 <- r0, r0 <- fp[-3]
StoreField(v6 T{FormatException} . message = v12 T{String}, NoStoreBarrier)
ParallelMove r0 <- fp[-2]
StoreField(v6 T{FormatException} . source = v13 T{String}, NoStoreBarrier)
ParallelMove r0 <- fp[2]
StoreField(v6 T{FormatException} . offset = v4 T{int??}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:18(v6)
CheckStackOverflowSlowPath
B0
B5
Enter frame
ParallelMove fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v121 <- AllocateObject:20(cls=StringBuffer) T{StringBuffer}
ParallelMove r0 <- r0
ParallelMove fp[-4] <- r0
MoveArgument(sp[0] <- v5)
ParallelMove r1 <- r0
StaticCall:22( StringBuffer.<0> v121, v5)
ParallelMove r4 <- fp[-1]
v335 <- LoadField:376(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v572 <- UnboxInt64:376([non-speculative], v335) [0, 2305843009213693951] int64
ParallelMove fp[-8] <- r5
v337 <- LoadClassId:376(v2 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove fp[-7] <- r6
ParallelMove r10 <- C, r9 <- fp[-2], r8 <- fp[-2] goto:376 B54
B54
  Loop 0
  Loop Header
ParallelMove fp[-5] <- r10, fp[-2] <- r9, fp[-6] <- r8
CheckStackOverflow:374(stack=0, loop=1)
Branch if RelationalOp(<, v13, v4) T{bool} goto (53, 57)
B53
  Loop 0
ParallelMove r0 <- r5, r1 <- r8
t0 <- GenericCheckBound:40(v572 T{_Smi}, v13 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:40(===, v337, v196 T{_Smi}) goto (141, 142)
B141
  Loop 0
v341 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v13 T{int}) [0, 255] int64
ParallelMove r2 <- r0 goto:40 B140
B142
  Loop 0
v339 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v13 T{int}) [0, 65535] int64
ParallelMove r2 <- r0 goto:40 B140
B140
  Loop 0
Branch if EqualityCompare(v340 T{_Smi} == v588 T{_Smi}) T{bool} goto (6, 22)
B6
  Loop 0
ParallelMove r1 <- r4, r2 <- r8, r3 <- C
v107 <- StaticCall:52( _normalizeEscape@0150898<0> v2, v13 T{int}, v8) T{String??}
ParallelMove r4 <- r0
ParallelMove fp[-10] <- r4
Branch if StrictCompare:54(===, v107, v0) goto (7, 11)
B7
  Loop 0
ParallelMove r5 <- fp[-5]
Branch if StrictCompare:60(===, v14 T{bool}, v8) goto (8, 12)
BoolTest
B8
  Loop 0
ParallelMove r6 <- fp[-6]
v120 <- BinaryInt64Op(+ [tr], v13 T{int}, v589 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r10 <- r5, r9 <- fp[-2], r8 <- r0 goto:72 B9
B12
  Loop 0
ParallelMove r6 <- fp[-6]
ParallelMove  goto:82 B15
B11
  Loop 0
ParallelMove r6 <- fp[-6]
ParallelMove  goto:78 B15
B15
  Loop 0
v569 <- BoxInt64(v13 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- fp[-2], r2 <- r0, r3 <- fp[-8], r0 <- r0
ParallelMove fp[-9] <- r0
v307 <- StaticCall:30( checkValidRange<0> v12 T{int}, v569 T{int?}, v572 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-1], r2 <- fp[-2], r3 <- r0
v308 <- StaticCall:32( _substringUnchecked@0150898<0> v2 T{_StringBase}, v12 T{int}, v307, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-11] <- r0
v441 <- LoadField(v308 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v441, v166 T{_Smi}) T{bool} goto (129, 130)
B129
B130
  Loop 0
ParallelMove r1 <- fp[-4]
StaticCall:26( _consumeBuffer@0150898<0> v121 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-4], r2 <- fp[-11]
StaticCall:28( _addPart@0150898<0> v121 T{StringBuffer}, v308 T{String}, using unchecked entrypoint)
ParallelMove  goto:30 B131
B131
  Loop 0
Branch if StrictCompare:106(===, v107, v0) goto (16, 17)
B16
  Loop 0
ParallelMove r4 <- fp[-6]
v117 <- BinaryInt64Op(+ [tr], v13 T{int}, v589 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v574 <- BoxInt64(v117 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r4, r2 <- r0, r3 <- fp[-8]
v296 <- StaticCall:30( checkValidRange<0> v13 T{int}, v574 T{int?}, v572 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-1], r2 <- fp[-6], r3 <- r0
v297 <- StaticCall:32( _substringUnchecked@0150898<0> v2 T{_StringBase}, v13 T{int}, v296, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:140 B21
B17
  Loop 0
v677 <- LoadClassId(<non-smi> v107 T{String?}) int64
MoveArgument(sp[1] <- v107 T{String?})
MoveArgument(sp[0] <- v112)
ParallelMove r0 <- r0
v113 <- DispatchTableCall( cid=v677 String.==<0>, v107 T{String?}, v112) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:122(===, v113 T{bool}, v8) goto (114, 20)
BoolTest
B20
  Loop 0
ParallelMove r0 <- fp[-10] goto:142 B21
B21
  Loop 0
MoveArgument(sp[0] <- v115 T{String?})
v270 <- StaticCall:10( _interpolateSingle@0150898<0> v115 T{String?}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-10] <- r0
v407 <- LoadField(v270 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v407, v166 T{_Smi}) T{bool} goto (111, 112)
B111
B112
  Loop 0
ParallelMove r1 <- fp[-4]
StaticCall:26( _consumeBuffer@0150898<0> v121 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-4], r2 <- fp[-10]
StaticCall:28( _addPart@0150898<0> v121 T{StringBuffer}, v270, using unchecked entrypoint)
ParallelMove  goto:30 B113
B113
  Loop 0
v116 <- BinaryInt64Op(+ [tr], v13 T{int}, v589 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- C, r1 <- r0, r0 <- r0 goto:362 B52
B22
  Loop 0
ParallelMove r4 <- r8, r5 <- r10
Branch if RelationalOp(<, v340 T{_Smi}, v591 T{_Smi}) T{bool} goto (106, 192)
B106
  Loop 0
ParallelMove r8 <- C, r7 <- C, r6 <- C
v239 <- ShiftInt64Op(>> [tr], v340 T{_Smi}, v592 T{_Smi}) [0, 4095] int64
ParallelMove r0 <- C, r1 <- r3
GenericCheckBound:24(v593 T{_Smi}, v239) [-9223372036854775808, 9223372036854775807] int64
v594 <- LoadIndexed:24([_List] v260, v239 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r2
v669 <- IntConverter(int64->uint32[tr], v340 T{_Smi}) uint32
v243 <- BinaryUint32Op(& [tr], v669 T{_Smi}, v678 T{_Smi}) [0, 15] uint32
ParallelMove r3 <- r3
v670 <- IntConverter(uint32->int64, v243) int64
v244 <- ShiftInt64Op(<< [tr], v596 T{_Smi}, v670 T{_Smi}) [1, 32768] int64
v577 <- UnboxInt64([non-speculative], v594 T{int?}) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v577, v244) goto (23, 190)
B23
  Loop 0
Branch if StrictCompare:162(===, v14 T{bool}, v8) goto (24, 34)
BoolTest
B24
  Loop 0
Branch if RelationalOp(<=, v597 T{_Smi}, v340 T{_Smi}) T{bool} goto (25, 35)
B25
  Loop 0
Branch if RelationalOp(>=, v598 T{_Smi}, v340 T{_Smi}) T{bool} goto (29, 36)
B29
  Loop 0
ParallelMove r5 <- fp[-2]
Branch if RelationalOp(<, v12, v13 T{int}) T{bool} goto (30, 31)
B30
  Loop 0
v570 <- BoxInt64(v13 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r5, r2 <- r0, r3 <- fp[-8]
v206 <- StaticCall:30( checkValidRange<0> v12 T{int}, v570 T{int?}, v572 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-1], r2 <- fp[-2], r3 <- r0
v207 <- StaticCall:32( _substringUnchecked@0150898<0> v2 T{_StringBase}, v12 T{int}, v206, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-10] <- r0
v400 <- LoadField(v207 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v400, v166 T{_Smi}) T{bool} goto (94, 95)
B94
B95
  Loop 0
ParallelMove r1 <- fp[-4]
StaticCall:26( _consumeBuffer@0150898<0> v121 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-4], r2 <- fp[-10]
StaticCall:28( _addPart@0150898<0> v121 T{StringBuffer}, v207 T{String}, using unchecked entrypoint)
ParallelMove  goto:30 B96
B96
  Loop 0
ParallelMove r0 <- fp[-6] goto:224 B32
B31
  Loop 0
ParallelMove r0 <- fp[-2] goto:226 B32
B32
  Loop 0
ParallelMove r1 <- C, r0 <- r0 goto:244 B37
B36
B35
B34
B33
  Loop 0
ParallelMove r1 <- r5, r0 <- fp[-2] goto:246 B37
B37
  Loop 0
v75 <- BinaryInt64Op(+ [tr], v13 T{int}, v596 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r1, r1 <- r0, r0 <- r2 goto:356 B51
B190
B192
B38
  Loop 0
ParallelMove r0 <- r2
v668 <- IntConverter(int64->uint32[tr], v340 T{_Smi}) uint32
v31 <- BinaryUint32Op(& [tr], v668 T{_Smi}, v679 T{_Smi}) [0, 64512] uint32
ParallelMove r1 <- r1
v671 <- IntConverter(uint32->int64, v31) int64
Branch if EqualityCompare(v671 T{_Smi} == v600 T{_Smi}) T{bool} goto (39, 45)
B39
  Loop 0
ParallelMove r7 <- fp[-3]
v43 <- BinaryInt64Op(+ [tr], v13 T{int}, v596 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v43, v4) T{bool} goto (40, 46)
B40
  Loop 0
ParallelMove r8 <- fp[-7]
ParallelMove r0 <- fp[-8], r1 <- r3
t0 <- GenericCheckBound:278(v572 T{_Smi}, v43 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:278(===, v337 T{_Smi}, v196 T{_Smi}) goto (85, 86)
B85
  Loop 0
ParallelMove r9 <- fp[-1]
v192 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v43 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:278 B84
B86
  Loop 0
ParallelMove r9 <- fp[-1]
v190 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v43 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:278 B84
B84
  Loop 0
ParallelMove r1 <- r0
v673 <- IntConverter(int64->uint32[tr], v191 T{_Smi}) uint32
v47 <- BinaryUint32Op(& [tr], v673 T{_Smi}, v679 T{_Smi}) [0, 64512] uint32
ParallelMove r3 <- r3
v674 <- IntConverter(uint32->int64, v47) int64
Branch if EqualityCompare(v674 T{_Smi} == v601 T{_Smi}) T{bool} goto (41, 42)
B41
  Loop 0
ParallelMove r10 <- C
ParallelMove r1 <- r2
v667 <- IntConverter(int64->uint32[tr], v340 T{_Smi}) uint32
v54 <- BinaryUint32Op(& [tr], v667 T{_Smi}, v680 T{_Smi}) [0, 1023] uint32
ParallelMove r2 <- r2
v675 <- IntConverter(uint32->int64, v54) int64
v56 <- ShiftInt64Op(<< [tr], v675 T{_Smi}, v603 T{_Smi}) [0, 1047552] int64
v57 <- BinaryInt64Op(| [tr], v56, v604 T{_Smi}) [0, 1048575] int64
ParallelMove r0 <- r0
v672 <- IntConverter(int64->uint32[tr], v191 T{_Smi}) uint32
v58 <- BinaryUint32Op(& [tr], v672 T{_Smi}, v680 T{_Smi}) [0, 1023] uint32
ParallelMove r1 <- r1
v676 <- IntConverter(uint32->int64, v58) int64
v59 <- BinaryInt64Op(| [tr], v57, v676 T{_Smi}) [0, 1048575] int64
ParallelMove r1 <- r0, r0 <- C goto:306 B43
B42
  Loop 0
ParallelMove r10 <- C
ParallelMove r1 <- r2, r0 <- C goto:308 B43
B43
  Loop 0
ParallelMove r12 <- r1, r11 <- r0 goto:322 B50
B46
  Loop 0
ParallelMove r9 <- fp[-1], r8 <- fp[-7], r10 <- C
ParallelMove  goto:318 B44
B45
  Loop 0
ParallelMove r9 <- fp[-1], r7 <- fp[-3], r8 <- fp[-7], r10 <- C
ParallelMove  goto:314 B44
B44
  Loop 0
ParallelMove r12 <- r2, r11 <- C goto:324 B50
B50
  Loop 0
ParallelMove fp[-12] <- r12, fp[-13] <- r11
v571 <- BoxInt64(v13 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- fp[-2], r2 <- r0, r3 <- fp[-8]
v177 <- StaticCall:30( checkValidRange<0> v12 T{int}, v571 T{int?}, v572 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-1], r2 <- fp[-2], r3 <- r0
v178 <- StaticCall:32( _substringUnchecked@0150898<0> v2 T{_StringBase}, v12 T{int}, v177, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-10] <- r0
v358 <- LoadField(v178 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v358, v166 T{_Smi}) T{bool} goto (63, 64)
B63
B64
  Loop 0
ParallelMove r1 <- fp[-4]
StaticCall:26( _consumeBuffer@0150898<0> v121 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-4], r2 <- fp[-10]
StaticCall:28( _addPart@0150898<0> v121 T{StringBuffer}, v178 T{String}, using unchecked entrypoint)
ParallelMove  goto:30 B65
B65
  Loop 0
ParallelMove r1 <- fp[-12]
v40 <- StaticCall:348( _escapeChar@0150898<0> v34, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-10] <- r0
v374 <- LoadField(v40 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v374, v166 T{_Smi}) T{bool} goto (68, 69)
B68
B69
  Loop 0
ParallelMove r1 <- fp[-4]
StaticCall:26( _consumeBuffer@0150898<0> v121 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-4], r2 <- fp[-10]
StaticCall:28( _addPart@0150898<0> v121 T{StringBuffer}, v40 T{String}, using unchecked entrypoint)
ParallelMove  goto:30 B70
B70
  Loop 0
v41 <- BinaryInt64Op(+ [tr], v13 T{int}, v35) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- fp[-5], r1 <- r2, r0 <- r2 goto:358 B51
B51
B52
  Loop 0
ParallelMove r10 <- r2, r9 <- r1, r8 <- r0 goto:366 B9
B9
  Loop 0
ParallelMove r10 <- r10, r9 <- r9, r8 <- r8, r4 <- fp[-1], r6 <- fp[-7], r5 <- fp[-8] goto:372 B54
B57
ParallelMove r2 <- r7, r3 <- r9
Branch if RelationalOp(<, v12, v4) T{bool} goto (58, 59)
B58
v567 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v567 T{int})
ParallelMove r1 <- fp[-1], r2 <- r3
v23 <- StaticCall:402( substring<0> v2, v12, v567 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r1 <- fp[-4], r2 <- r0
StaticCall:404( write<0> v121 T{StringBuffer}, v23, using unchecked entrypoint)
ParallelMove  goto:410 B60
B59
B60
MoveArgument(sp[0] <- v121 T{StringBuffer})
v22 <- StaticCall:414( toString<0> v121 T{StringBuffer}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:416(v22)
B114
ParallelMove r0 <- fp[-1], r1 <- fp[-9]
v285 <- AllocateObject:10(cls=FormatException, <not-aliased>) T{FormatException}
ParallelMove r1 <- r0, r0 <- C
StoreField(v285 T{FormatException} . message = v114 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
StoreField(v285 T{FormatException} . source = v2 T{String}, NoStoreBarrier)
ParallelMove r0 <- fp[-9]
StoreField(v285 T{FormatException} . offset = v569 T{int?}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:14(v285)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r2 <- r1, r4 <- r2, fp[-1] <- r2, fp[-2] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v11 <- BoxInt64(v3) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v12 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[0] <- v11 T{int})
ParallelMove r0 <- r1, r1 <- r2, r2 <- C
v6 <- DispatchTableCall( cid=v12 String.indexOf<0>, v2, v5, v11 T{int}) int64
ParallelMove r0 <- r0, r1 <- fp[-1]
Branch if RelationalOp(>=, v6 T{int}, v3) T{bool} goto (3, 6)
B3
ParallelMove r1 <- fp[-2]
Branch if RelationalOp(<, v6 T{int}, v4) T{bool} goto (4, 7)
B4
B7
B6
ParallelMove r1 <- fp[-2]
ParallelMove  goto:36 B5
B5
ParallelMove r0 <- r1 goto:46 B8
B8
ParallelMove r0 <- r0
DartReturn:48(v9)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r5 <- r1, r4 <- r2, fp[-3] <- r1, fp[-4] <- r2
CheckStackOverflow:8(stack=0, loop=0)
Branch if EqualityCompare(v201 T{_Smi} == v3) T{bool} goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:20(v29)
B4
v99 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v195 <- UnboxInt64([non-speculative], v99) [0, 2305843009213693951] int64
ParallelMove r0 <- r6, r1 <- C, fp[-2] <- r6
t0 <- GenericCheckBound:24(v195 T{_Smi}, v201 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v101 <- LoadClassId(v2 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove fp[-1] <- r0
Branch if StrictCompare:24(===, v101, v56 T{_Smi}) goto (40, 41)
B40
v105 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v201 T{_Smi}) [0, 255] int64
ParallelMove r1 <- r1 goto:24 B39
B41
v103 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v201 T{_Smi}) [0, 65535] int64
ParallelMove r1 <- r1 goto:24 B39
B39
v114 <- BinaryInt64Op(| [tr], v104 T{_Smi}, v202 T{_Smi}) [0, 65535] int64
Branch if RelationalOp(<=, v203 T{_Smi}, v114) T{bool} goto (45, 61)
B45
Branch if RelationalOp(>, v114, v204 T{_Smi}) T{bool} goto (59, 6)
B59
B6
B61
B5
ParallelMove r1 <- r5, r2 <- C, r3 <- C
StaticCall:36( _fail@0150898<0> v2, v201 T{_Smi}, v28)
ParallelMove  goto:42 B7
B7
ParallelMove r9 <- C, r8 <- C, r3 <- fp[-3], r2 <- fp[-4], r7 <- C, r4 <- fp[-1], r6 <- C, r5 <- C goto:120 B19
B19
  Loop 0
  Loop Header
ParallelMove fp[-5] <- r9, fp[-6] <- r8
CheckStackOverflow:124(stack=0, loop=1)
Branch if RelationalOp(<, v11, v3) T{bool} goto (8, 9)
B8
  Loop 0
ParallelMove r0 <- fp[-2], r1 <- r8
t0 <- GenericCheckBound:60(v195 T{_Smi}, v11 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:60(===, v101 T{_Smi}, v56 T{_Smi}) goto (29, 30)
B29
  Loop 0
v52 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v11 T{int}) [0, 255] int64
ParallelMove r10 <- r0 goto:60 B28
B30
  Loop 0
v50 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v11 T{int}) [0, 65535] int64
ParallelMove r10 <- r0 goto:60 B28
B28
  Loop 0
Branch if RelationalOp(<, v51 T{_Smi}, v205 T{_Smi}) T{bool} goto (34, 65)
B34
  Loop 0
v68 <- ShiftInt64Op(>> [tr], v51 T{_Smi}, v206 T{_Smi}) [0, 4095] int64
ParallelMove r0 <- C, r1 <- r11
GenericCheckBound:24(v207 T{_Smi}, v68) [-9223372036854775808, 9223372036854775807] int64
v208 <- LoadIndexed:24([_List] v89, v68 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r10
v232 <- IntConverter(int64->uint32[tr], v51 T{_Smi}) uint32
v72 <- BinaryUint32Op(& [tr], v232 T{_Smi}, v235 T{_Smi}) [0, 15] uint32
ParallelMove r11 <- r11
v233 <- IntConverter(uint32->int64, v72) int64
v73 <- ShiftInt64Op(<< [tr], v210 T{_Smi}, v233 T{_Smi}) [1, 32768] int64
v199 <- UnboxInt64([non-speculative], v208 T{int?}) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v199, v73) goto (63, 12)
B12
  Loop 0
Branch if RelationalOp(<=, v211 T{_Smi}, v51 T{_Smi}) T{bool} goto (13, 16)
B13
  Loop 0
Branch if RelationalOp(<=, v51 T{_Smi}, v212 T{_Smi}) T{bool} goto (14, 17)
B14
  Loop 0
ParallelMove r9 <- C goto:114 B18
B17
B16
B15
B18
  Loop 0
v24 <- BinaryInt64Op(+ [tr], v11 T{int}, v210 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r9 <- r9, r8 <- r0 goto:122 B19
B9
v194 <- BoxInt64(v3) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v194 T{int})
ParallelMove r1 <- r3, r2 <- C
v14 <- StaticCall:126( substring<0> v2, v201 T{_Smi}, v194 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r1 <- r0, r0 <- fp[-5]
Branch if StrictCompare:130(===, v10 T{bool}, v6) goto (20, 21)
BoolTest
B20
v234 <- LoadClassId(<non-smi> v14) int64
MoveArgument(sp[0] <- v14)
ParallelMove r0 <- r0
v17 <- DispatchTableCall( cid=v234 String.toLowerCase<0>, v14) T{String}
ParallelMove r0 <- r0
ParallelMove r1 <- r0 goto:142 B22
B21
B22
ParallelMove r1 <- r1
v16 <- StaticCall:146( _canonicalizeScheme@0150898<0> v15, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:148(v16)
B63
B65
B23
v38 <- AllocateObject:10(cls=FormatException, <not-aliased>) T{FormatException}
ParallelMove r2 <- r0, r0 <- C
StoreField(v38 T{FormatException} . message = v27 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-3]
StoreField(v38 T{FormatException} . source = v2 T{String}, NoStoreBarrier)
ParallelMove r3 <- fp[-6]
v196 <- BoxInt64(v11 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v38 T{FormatException} . offset = v196 T{int?}, NoStoreBarrier)
ParallelMove r0 <- r2
Throw:14(v38)
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v44 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r0
v4 <- DispatchTableCall( cid=v44 String.==<0>, v2, v3) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:14(===, v4 T{bool}, v5) goto (3, 4)
BoolTest
B3
ParallelMove r0 <- C
DartReturn:20(v3)
B4
ParallelMove r1 <- fp[-1]
v45 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v6)
ParallelMove r0 <- r0
v7 <- DispatchTableCall( cid=v45 String.==<0>, v2, v6) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:28(===, v7 T{bool}, v5) goto (5, 6)
BoolTest
B5
ParallelMove r0 <- C
DartReturn:34(v6)
B6
ParallelMove r1 <- fp[-1]
v46 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v8)
ParallelMove r0 <- r0
v9 <- DispatchTableCall( cid=v46 String.==<0>, v2, v8) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:42(===, v9 T{bool}, v5) goto (7, 8)
BoolTest
B7
ParallelMove r0 <- C
DartReturn:48(v8)
B8
ParallelMove r1 <- fp[-1]
v47 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v10)
ParallelMove r0 <- r0
v11 <- DispatchTableCall( cid=v47 String.==<0>, v2, v10) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:56(===, v11 T{bool}, v5) goto (9, 10)
BoolTest
B9
ParallelMove r0 <- C
DartReturn:62(v10)
B10
ParallelMove r0 <- fp[-1]
DartReturn:66(v2)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r3 <- r1
v6 <- LoadField(v4 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v8 <- BinarySmiOp:4(- [tr], v6, v7) [-2, 4611686018427387901] T{_Smi}
Branch if RelationalOp:6(<=, v9, v8) T{bool} goto (2, 3)
B2
v25 <- LoadIndexedUnsafe(fp[v8 T{_Smi} + 8]) [-9223372036854775808, 9223372036854775807] T{int}
v48 <- UnboxInt64([non-speculative], v25) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- r1 goto:20 B5
B3
ParallelMove r4 <- C goto:18 B5
B5
CheckStackOverflow:26(stack=0, loop=0)
Branch if RelationalOp(<, v13, v52 T{_Smi}) T{bool} goto (8, 6)
B6
v37 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v51 <- UnboxInt64([non-speculative], v37 T{_Smi}) [0, 2305843009213693951] int64
Branch if RelationalOp(>, v13, v51 T{_Smi}) T{bool} goto (9, 10)
B10
v27 <- LoadClassId(v3) [78, 94] int64
Branch if TestRange(v27 in [93-94]) T{bool} goto (11, 12)
B11
v50 <- BoxInt64(v13) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v50 T{int})
MoveArgument(sp[0] <- v3 T{String})
v22 <- StaticCall:78( _substringMatches@0150898<0> v2, v50 T{int}, v3 T{String}, using unchecked entrypoint, recognized_kind = StringBaseSubstringMatches, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
DartReturn:80(v22)
B12
v55 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r2, r2 <- r3, r3 <- r4
v19 <- DispatchTableCall( cid=v55 Pattern.matchAsPrefix<0>, v3, v2, v13) T{Match??}
ParallelMove r0 <- r0
v20 <- StrictCompare:86(!==, v19 T{Match??}, v0) T{bool}
ParallelMove r0 <- r1
DartReturn:90(v20 T{bool})
B8
B9
B7
v32 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
ParallelMove fp[-2] <- r2
v49 <- BoxInt64(v13) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
v23 <- AllocateObject:58(cls=RangeError) T{RangeError}
ParallelMove r0 <- r0
ParallelMove fp[-3] <- r0
MoveArgument(sp[3] <- v23)
MoveArgument(sp[2] <- v49 T{int})
MoveArgument(sp[1] <- v12)
MoveArgument(sp[0] <- v32 T{_Smi})
StaticCall:62( RangeError.range<0> v23, v49 T{int}, v12, v32 T{_Smi})
ParallelMove r0 <- fp[-3]
Throw:64(v23)
CheckStackOverflowSlowPath
B0
B1
Intrinsic
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[0] <- v4)
v5 <- StaticCall:10( get:isEmpty<0> v4, recognized_kind = StringBaseIsEmpty, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:14(===, v5 T{bool}, v6) goto (3, 4)
BoolTest
B3
ParallelMove r0 <- C
DartReturn:20(v6)
B4
ParallelMove r3 <- fp[3], r2 <- fp[2]
v64 <- LoadField(v4 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v94 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v94 T{int}, v102 T{_Smi}) T{bool} goto (7, 5)
B7
B5
ParallelMove r3 <- fp[4]
v96 <- UnboxInt64([non-speculative], v64 T{_Smi}) [0, 2305843009213693951] int64
v10 <- BinaryInt64Op(+ [tr], v94 T{int}, v96 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v59 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v97 <- UnboxInt64([non-speculative], v59 T{_Smi}) [0, 2305843009213693951] int64
Branch if RelationalOp(>, v10, v97 T{_Smi}) T{bool} goto (8, 9)
B8
B6
ParallelMove r0 <- C
DartReturn:58(v21)
B9
v30 <- LoadClassId:98(v2 T{_StringBase}) [93, 94] T{_Smi}
v47 <- LoadClassId:98(v4 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove r9 <- C goto:98 B14
B14
  Loop 0
  Loop Header
CheckStackOverflow:102(stack=0, loop=1)
Branch if RelationalOp(<, v13, v96 T{_Smi}) T{bool} goto (10, 11)
B10
  Loop 0
v15 <- BinaryInt64Op(+ [tr], v13, v94 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r8, r1 <- r10
t0 <- GenericCheckBound:78(v97 T{_Smi}, v15 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:78(===, v30, v38 T{_Smi}) goto (18, 19)
B18
  Loop 0
v34 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v15 T{int}) [0, 255] int64
ParallelMove r1 <- r1 goto:78 B17
B19
  Loop 0
v32 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v15 T{int}) [0, 65535] int64
ParallelMove r1 <- r1 goto:78 B17
B17
  Loop 0
Branch if StrictCompare:80(===, v47, v38 T{_Smi}) goto (23, 24)
B23
  Loop 0
v51 <- LoadIndexed([_OneByteString] v4 T{_OneByteString}, v13 T{int}) [0, 255] int64
ParallelMove r10 <- r10 goto:80 B22
B24
  Loop 0
v49 <- LoadIndexed([_TwoByteString] v4 T{_StringBase}, v13 T{int}) [0, 65535] int64
ParallelMove r10 <- r10 goto:80 B22
B22
  Loop 0
Branch if EqualityCompare(v33 T{_Smi} != v50 T{_Smi}) T{bool} goto (12, 13)
B13
  Loop 0
v20 <- BinaryInt64Op(+ [tr], v13 T{int}, v103 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r9 <- r0 goto:100 B14
B12
ParallelMove r0 <- C
DartReturn:92(v21)
B11
ParallelMove r0 <- C
DartReturn:104(v6)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove r3 <- r1, r0 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r3, r2 <- C
v5 <- StaticCall:10( startsWith<0> v2, v4, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:14(===, v5 T{bool}, v6) goto (3, 14)
BoolTest
B3
MoveArgument(sp[0] <- v59)
ParallelMove r1 <- fp[-1], r2 <- C
v60 <- StaticCall:20( startsWith<0> v2, v58, v59, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:24(===, v60 T{bool}, v6) goto (4, 5)
BoolTest
B4
ParallelMove r1 <- fp[-1], r2 <- C, r3 <- C, r5 <- C
v73 <- StaticCall:30( replaceRange<0> v2, v557 T{_Smi}, v72, v8, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:94 B13
B5
ParallelMove r1 <- fp[-1], r2 <- C
v61 <- StaticCall:34( substring<0> v2, v558 T{_Smi}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r2 <- r0
ParallelMove fp[-6] <- r2
v293 <- LoadField(v61 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v516 <- UnboxInt64([non-speculative], v293 T{_Smi}) [0, 2305843009213693951] int64
Branch if RelationalOp(<, v516 T{_Smi}, v559 T{_Smi}) T{bool} goto (9, 6)
B6
ParallelMove r0 <- r3, r1 <- C
t0 <- GenericCheckBound:46(v516 T{_Smi}, v560 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v281 <- LoadClassId(v61 T{_StringBase}) [93, 94] T{_Smi}
Branch if StrictCompare:46(===, v281, v206 T{_Smi}) goto (151, 152)
B151
v285 <- LoadIndexed([_OneByteString] v61 T{_OneByteString}, v560 T{_Smi}) [0, 255] int64
ParallelMove r0 <- r0 goto:46 B150
B152
v283 <- LoadIndexed([_TwoByteString] v61 T{_StringBase}, v560 T{_Smi}) [0, 65535] int64
ParallelMove r0 <- r0 goto:46 B150
B150
Branch if EqualityCompare(v284 T{_Smi} != v561 T{_Smi}) T{bool} goto (10, 7)
B7
ParallelMove r0 <- r3, r1 <- C
t0 <- GenericCheckBound:58(v516 T{_Smi}, v562 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
Branch if StrictCompare:58(===, v281 T{_Smi}, v206 T{_Smi}) goto (146, 147)
B146
v269 <- LoadIndexed([_OneByteString] v61 T{_OneByteString}, v562 T{_Smi}) [0, 255] int64
ParallelMove r0 <- r0 goto:58 B145
B147
v267 <- LoadIndexed([_TwoByteString] v61 T{_StringBase}, v562 T{_Smi}) [0, 65535] int64
ParallelMove r0 <- r0 goto:58 B145
B145
Branch if EqualityCompare(v268 T{_Smi} != v563 T{_Smi}) T{bool} goto (11, 12)
B12
ParallelMove r0 <- r2 goto:96 B13
B13
ParallelMove r3 <- r0 goto:104 B15
B14
ParallelMove r1 <- fp[-1], r2 <- C, r3 <- C
v9 <- StaticCall:100( replaceAll<0> v2, v7, v8, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r3 <- r0 goto:106 B15
B15
ParallelMove fp[-4] <- r3
v248 <- LoadField(v10 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v519 <- UnboxInt64([non-speculative], v248 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove fp[-3] <- r4
Branch if RelationalOp(>, v519 T{_Smi}, v560 T{_Smi}) T{bool} goto (16, 30)
B16
ParallelMove r0 <- r4, r1 <- C
t0 <- GenericCheckBound:118(v519 T{_Smi}, v560 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v236 <- LoadClassId(v10 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove fp[-1] <- r0
Branch if StrictCompare:118(===, v236, v206 T{_Smi}) goto (131, 132)
B131
v240 <- LoadIndexed([_OneByteString] v10 T{_OneByteString}, v560 T{_Smi}) [0, 255] int64
ParallelMove r1 <- r1 goto:118 B130
B132
v238 <- LoadIndexed([_TwoByteString] v10 T{_StringBase}, v560 T{_Smi}) [0, 65535] int64
ParallelMove r1 <- r1 goto:118 B130
B130
Branch if EqualityCompare(v239 T{_Smi} == v561 T{_Smi}) T{bool} goto (17, 31)
B17
Branch if StrictCompare:132(===, v236 T{_Smi}, v206 T{_Smi}) goto (124, 125)
B124
v219 <- LoadIndexed([_OneByteString] v10 T{_OneByteString}, v557 T{_Smi}) [0, 255] int64
ParallelMove r1 <- r1 goto:132 B123
B125
v217 <- LoadIndexed([_TwoByteString] v10 T{_StringBase}, v557 T{_Smi}) [0, 65535] int64
ParallelMove r1 <- r1 goto:132 B123
B123
ParallelMove r1 <- r1, r2 <- C
StaticCall:134( _checkWindowsDriveLetter@0150898<0> v218 T{_Smi}, v6)
ParallelMove r0 <- fp[-3]
Branch if EqualityCompare(v519 T{_Smi} == v562 T{_Smi}) T{bool} goto (20, 18)
B18
ParallelMove r2 <- fp[-1]
ParallelMove r0 <- r0, r1 <- C
t0 <- GenericCheckBound:146(v519 T{_Smi}, v562 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
Branch if StrictCompare:146(===, v236 T{_Smi}, v206 T{_Smi}) goto (119, 120)
B119
ParallelMove r0 <- fp[-4]
v202 <- LoadIndexed([_OneByteString] v10 T{_OneByteString}, v562 T{_Smi}) [0, 255] int64
ParallelMove r1 <- r1 goto:146 B118
B120
ParallelMove r0 <- fp[-4]
v200 <- LoadIndexed([_TwoByteString] v10 T{_StringBase}, v562 T{_Smi}) [0, 65535] int64
ParallelMove r1 <- r1 goto:146 B118
B118
Branch if EqualityCompare(v201 T{_Smi} != v563 T{_Smi}) T{bool} goto (21, 22)
B22
ParallelMove r3 <- fp[-2]
v657 <- LoadClassId(<non-smi> v10) int64
ParallelMove r0 <- r1, r1 <- r0, r2 <- C
v51 <- DispatchTableCall( cid=v657 String.split<0>, v10, v8) T{List<String>}
ParallelMove r0 <- r0, r3 <- fp[-2]
ParallelMove fp[-1] <- r0
Branch if StrictCompare:180(===, v3 T{bool}, v6) goto (23, 26)
BoolTest
B23
ParallelMove r1 <- r0
v53 <- StaticCall:184( get:last<0> v51 T{_GrowableList}, result_type = T{!null}) T{X0}
ParallelMove r0 <- r0
v370 <- LoadField(v53 T{X0} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(!==, v370, v29 T{_Smi}) T{bool} goto (24, 27)
B24
ParallelMove r0 <- fp[-1]
v359 <- LoadField(v51 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v364 <- LoadField(v51 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v365 <- LoadField(v364 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v526 <- UnboxInt64([non-speculative], v359 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-3] <- r2
v527 <- UnboxInt64([non-speculative], v365 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v526 T{_Smi} == v527 T{_Smi}) T{bool} goto (99, 100)
B99
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v51 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B101
B100
B101
v167 <- BinaryInt64Op(+ [tr], v526 T{_Smi}, v560 T{_Smi}) [-4611686018427387904, 5188146770730811390] int64
v528 <- BoxInt64(v167) [-4611686018427387904, 5188146770730811390] T{int}
ParallelMove r0 <- r0
StoreField(v51 T{_GrowableList} . GrowableObjectArray.length = v528 T{int}, NoStoreBarrier)
ParallelMove r0 <- r4, r1 <- r2
GenericCheckBound:40(v167 T{_Smi}, v526 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v170 <- LoadField(v51 T{_GrowableList} . GrowableObjectArray.data) T{_List}
StoreIndexed:40([_List] v170, v526 T{_Smi}, v20 T{_OneByteString}, NoStoreBarrier)
ParallelMove  goto:212 B28
B27
ParallelMove r3 <- fp[-1]
ParallelMove  goto:208 B25
B26
ParallelMove r3 <- r0
ParallelMove  goto:204 B25
B25
B28
MoveArgument(sp[0] <- v12)
ParallelMove r1 <- r3, r2 <- C
StaticCall:216( _checkWindowsPathReservedCharacters@0150898<0> v51 T{_GrowableList}, v6, v12)
MoveArgument(sp[0] <- v23)
ParallelMove r1 <- C, r2 <- fp[-1]
v52 <- StaticCall:218( _Uri@0150898.<0> v0, v51 T{_GrowableList}, v23, result_type = T{_Uri}) T{_Uri}
ParallelMove r0 <- r0
DartReturn:220(v52)
B31
ParallelMove r3 <- fp[-2], r0 <- r3
ParallelMove  goto:230 B29
B30
ParallelMove r3 <- fp[-2], r0 <- r3
ParallelMove  goto:226 B29
B29
ParallelMove r1 <- r0, r2 <- C
v14 <- StaticCall:232( startsWith<0> v10, v8, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:236(===, v14 T{bool}, v6) goto (32, 53)
BoolTest
B32
MoveArgument(sp[0] <- v12)
ParallelMove r1 <- fp[-4], r2 <- C
v21 <- StaticCall:242( startsWith<0> v10, v8, v12, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:246(===, v21 T{bool}, v6) goto (33, 46)
BoolTest
B33
ParallelMove r3 <- fp[-4]
v658 <- LoadClassId(<non-smi> v10) int64
MoveArgument(sp[0] <- v27)
ParallelMove r0 <- r0, r1 <- r3, r2 <- C
v28 <- DispatchTableCall( cid=v658 String.indexOf<0>, v10, v8, v27) int64
ParallelMove r0 <- r0
ParallelMove fp[-3] <- r0
v30 <- RelationalOp(<, v28 T{int}, v557 T{_Smi}) T{bool}
ParallelMove fp[-1] <- r3
Branch if StrictCompare:258(===, v30, v6) goto (34, 35)
BoolTest
B34
ParallelMove r1 <- fp[-4], r2 <- C
v41 <- StaticCall:264( substring<0> v10, v562 T{_Smi}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r3 <- r0 goto:272 B36
B35
ParallelMove r3 <- r0
v531 <- BoxInt64(v28 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v531 T{int})
ParallelMove r1 <- fp[-4], r2 <- C
v31 <- StaticCall:268( substring<0> v10, v562 T{_Smi}, v531 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r3 <- r0 goto:274 B36
B36
ParallelMove fp[-5] <- r3
Branch if StrictCompare:280(===, v30 T{bool}, v6) goto (37, 38)
BoolTest
B37
ParallelMove r1 <- C goto:294 B39
B38
ParallelMove r0 <- fp[-3]
v34 <- BinaryInt64Op(+ [tr], v28 T{int}, v560 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-4], r2 <- r2
v35 <- StaticCall:290( substring<0> v10, v34, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r1 <- r0 goto:296 B39
B39
v659 <- LoadClassId(<non-smi> v36) int64
ParallelMove r0 <- r0, r1 <- r1, r2 <- C
v37 <- DispatchTableCall( cid=v659 String.split<0>, v36, v8) T{List<String>}
ParallelMove r1 <- r0, r2 <- C, r0 <- r0
ParallelMove fp[-1] <- r0
StaticCall:300( _checkWindowsPathReservedCharacters@0150898<0> v37 T{_GrowableList}, v6)
ParallelMove r3 <- fp[-2]
Branch if StrictCompare:304(===, v3 T{bool}, v6) goto (40, 43)
BoolTest
B40
ParallelMove r1 <- fp[-1]
v39 <- StaticCall:308( get:last<0> v37 T{_GrowableList}, result_type = T{!null}) T{X0}
ParallelMove r0 <- r0
v352 <- LoadField(v39 T{X0} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(!==, v352, v29 T{_Smi}) T{bool} goto (41, 44)
B41
ParallelMove r0 <- fp[-1]
v341 <- LoadField(v37 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v346 <- LoadField(v37 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v347 <- LoadField(v346 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v534 <- UnboxInt64([non-speculative], v341 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-3] <- r2
v535 <- UnboxInt64([non-speculative], v347 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v534 T{_Smi} == v535 T{_Smi}) T{bool} goto (88, 89)
B88
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v37 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B90
B89
B90
v142 <- BinaryInt64Op(+ [tr], v534 T{_Smi}, v560 T{_Smi}) [1, 576460752303423488] int64
v536 <- BoxInt64(v142) [1, 576460752303423488] T{_Smi}
StoreField(v37 T{_GrowableList} . GrowableObjectArray.length = v536, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v142 T{_Smi}, v534 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v145 <- LoadField(v37 T{_GrowableList} . GrowableObjectArray.data) T{_List}
StoreIndexed:40([_List] v145, v534 T{_Smi}, v20 T{_OneByteString}, NoStoreBarrier)
ParallelMove  goto:336 B45
B44
ParallelMove r2 <- fp[-1]
ParallelMove  goto:332 B42
B43
ParallelMove r2 <- fp[-1]
ParallelMove  goto:328 B42
B42
B45
MoveArgument(sp[1] <- v23)
MoveArgument(sp[0] <- v32)
ParallelMove r1 <- C, r2 <- r2
v38 <- StaticCall:340( _Uri@0150898.<0> v0, v37 T{_GrowableList}, v23, v32, result_type = T{_Uri}) T{_Uri}
ParallelMove r0 <- r0
DartReturn:342(v38)
B46
ParallelMove r3 <- fp[-2], r1 <- fp[-4]
v660 <- LoadClassId(<non-smi> v10) int64
ParallelMove r0 <- r0, r1 <- r1, r2 <- C
v22 <- DispatchTableCall( cid=v660 String.split<0>, v10, v8) T{List<String>}
ParallelMove r0 <- r0, r3 <- fp[-2]
ParallelMove fp[-1] <- r0
Branch if StrictCompare:350(===, v3 T{bool}, v6) goto (47, 50)
BoolTest
B47
ParallelMove r1 <- r0
v25 <- StaticCall:354( get:last<0> v22 T{_GrowableList}, result_type = T{!null}) T{X0}
ParallelMove r0 <- r0
v334 <- LoadField(v25 T{X0} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(!==, v334, v29 T{_Smi}) T{bool} goto (48, 51)
B48
ParallelMove r0 <- fp[-1]
v323 <- LoadField(v22 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v328 <- LoadField(v22 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v329 <- LoadField(v328 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v541 <- UnboxInt64([non-speculative], v323 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-3] <- r2
v542 <- UnboxInt64([non-speculative], v329 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v541 T{_Smi} == v542 T{_Smi}) T{bool} goto (77, 78)
B77
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v22 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B79
B78
B79
v117 <- BinaryInt64Op(+ [tr], v541 T{_Smi}, v560 T{_Smi}) [1, 576460752303423488] int64
v543 <- BoxInt64(v117) [1, 576460752303423488] T{_Smi}
StoreField(v22 T{_GrowableList} . GrowableObjectArray.length = v543, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r2
GenericCheckBound:40(v117 T{_Smi}, v541 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v120 <- LoadField(v22 T{_GrowableList} . GrowableObjectArray.data) T{_List}
StoreIndexed:40([_List] v120, v541 T{_Smi}, v20 T{_OneByteString}, NoStoreBarrier)
ParallelMove  goto:382 B52
B51
ParallelMove r3 <- fp[-1]
ParallelMove  goto:378 B49
B50
ParallelMove r3 <- r0
ParallelMove  goto:374 B49
B49
B52
ParallelMove r1 <- r3, r2 <- C
StaticCall:386( _checkWindowsPathReservedCharacters@0150898<0> v22 T{_GrowableList}, v6)
MoveArgument(sp[0] <- v23)
ParallelMove r1 <- C, r2 <- fp[-1]
v24 <- StaticCall:388( _Uri@0150898.<0> v0, v22 T{_GrowableList}, v23, result_type = T{_Uri}) T{_Uri}
ParallelMove r0 <- r0
DartReturn:390(v24)
B53
ParallelMove r3 <- fp[-2], r1 <- fp[-4]
v661 <- LoadClassId(<non-smi> v10) int64
ParallelMove r0 <- r0, r1 <- r1, r2 <- C
v15 <- DispatchTableCall( cid=v661 String.split<0>, v10, v8) T{List<String>}
ParallelMove r1 <- r0, r2 <- C, r0 <- r0
ParallelMove fp[-1] <- r0
StaticCall:396( _checkWindowsPathReservedCharacters@0150898<0> v15 T{_GrowableList}, v6)
ParallelMove r0 <- fp[-2]
Branch if StrictCompare:400(===, v3 T{bool}, v6) goto (54, 58)
BoolTest
B54
ParallelMove r0 <- fp[-1]
v385 <- LoadField(v15 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
Branch if StrictCompare(!==, v385 T{_Smi}, v29 T{_Smi}) T{bool} goto (55, 59)
B55
ParallelMove r1 <- r0
v18 <- StaticCall:414( get:last<0> v15 T{_GrowableList}, result_type = T{!null}) T{X0}
ParallelMove r0 <- r0
v309 <- LoadField(v18 T{X0} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(!==, v309, v29 T{_Smi}) T{bool} goto (56, 60)
B56
ParallelMove r0 <- fp[-1]
v298 <- LoadField(v15 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v303 <- LoadField(v15 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v304 <- LoadField(v303 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v549 <- UnboxInt64([non-speculative], v298 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-3] <- r2
v550 <- UnboxInt64([non-speculative], v304 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v549 T{_Smi} == v550 T{_Smi}) T{bool} goto (64, 65)
B64
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v15 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B66
B65
B66
v86 <- BinaryInt64Op(+ [tr], v549 T{_Smi}, v560 T{_Smi}) [1, 576460752303423488] int64
v551 <- BoxInt64(v86) [1, 576460752303423488] T{_Smi}
StoreField(v15 T{_GrowableList} . GrowableObjectArray.length = v551, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v86 T{_Smi}, v549 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v89 <- LoadField(v15 T{_GrowableList} . GrowableObjectArray.data) T{_List}
StoreIndexed:40([_List] v89, v549 T{_Smi}, v20 T{_OneByteString}, NoStoreBarrier)
ParallelMove  goto:446 B61
B60
ParallelMove r2 <- fp[-1]
ParallelMove  goto:442 B57
B59
ParallelMove r2 <- r0
ParallelMove  goto:438 B57
B58
ParallelMove r2 <- fp[-1]
ParallelMove  goto:434 B57
B57
B61
ParallelMove r1 <- C, r2 <- r2
v16 <- StaticCall:450( _Uri@0150898.<0> v0, v15 T{_GrowableList}, result_type = T{_Uri}) T{_Uri}
ParallelMove r0 <- r0
DartReturn:452(v16)
B9
B10
B11
B8
v69 <- AllocateObject:84(cls=ArgumentError, <not-aliased>) T{ArgumentError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v69 T{ArgumentError} . name = v56 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v69 T{ArgumentError} . message = v70 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-6]
StoreField(v69 T{ArgumentError} . invalidValue = v61 T{String}, NoStoreBarrier)
ParallelMove r2 <- C
StoreField(v69 T{ArgumentError} . _hasValue@0150898 = v6 T{bool}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:88(v69)
B20
ParallelMove r2 <- C, r1 <- fp[-4], r0 <- C
ParallelMove  goto:162 B19
B21
ParallelMove r2 <- C, r1 <- r0, r0 <- C
ParallelMove  goto:166 B19
B19
v55 <- AllocateObject:168(cls=ArgumentError, <not-aliased>) T{ArgumentError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v55 T{ArgumentError} . name = v56 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v55 T{ArgumentError} . message = v57 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-4]
StoreField(v55 T{ArgumentError} . invalidValue = v10 T{String}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v55 T{ArgumentError} . _hasValue@0150898 = v6 T{bool}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:172(v55)
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r0 <- r2, fp[-1] <- r2
v6 <- LoadField(v4 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v8 <- BinarySmiOp:4(- [tr], v6, v7) [-2, 4611686018427387901] T{_Smi}
Branch if RelationalOp:6(<=, v9, v8) T{bool} goto (2, 3)
B2
v28 <- LoadIndexedUnsafe(fp[v8 T{_Smi} + 8]) [-9223372036854775808, 9223372036854775807] T{int}
v150 <- UnboxInt64([non-speculative], v28) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r3 goto:20 B5
B3
ParallelMove r2 <- C goto:18 B5
B5
CheckStackOverflow:26(stack=0, loop=0)
ParallelMove r1 <- r1, r2 <- r2
v14 <- StaticCall:28( skip<0> v2, v13, using unchecked entrypoint, result_type = T{SubListIterable}) T{SubListIterable}
ParallelMove r1 <- r0
v15 <- StaticCall:30( get:iterator<0> v14, result_type = T{ListIterator}) T{ListIterator}
ParallelMove r1 <- r0
ParallelMove fp[-5] <- r1
v69 <- LoadField:88(v15 T{ListIterator} . _iterable@9040228 {final}) T{Iterable<X0>}
ParallelMove fp[-4] <- r2
v71 <- LoadField:88(v15 T{ListIterator} . _length@9040228 {final}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-3] <- r3
v50 <- LoadField:88(v15 T{ListIterator} . :type_arguments {final}) T{TypeArguments}
ParallelMove fp[-2] <- r4
ParallelMove  goto:88 B12
B12
  Loop 0
  Loop Header
CheckStackOverflow:92(stack=0, loop=1)
v179 <- LoadClassId(<non-smi> v69) int64
MoveArgument(sp[0] <- v69)
ParallelMove r0 <- r0
v70 <- DispatchTableCall( cid=v179 Iterable.length<0>, v69) T{int}
ParallelMove r0 <- r0
v152 <- UnboxInt64([non-speculative], v70 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[-3]
Branch if EqualityCompare(v71 != v152 T{int}) T{bool} goto (32, 33)
B33
  Loop 0
ParallelMove r4 <- fp[-5]
v74 <- LoadField(v15 T{ListIterator} . _index@9040228) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>=, v74, v152 T{int}) T{bool} goto (7, 6)
B6
  Loop 0
ParallelMove r5 <- fp[-4]
v180 <- LoadClassId(<non-smi> v69 T{Iterable<X0>}) int64
ParallelMove r0 <- r0, r1 <- r5, r2 <- r2
v78 <- DispatchTableCall( cid=v180 Iterable.elementAt<0>, v69 T{Iterable<X0>}, v74 T{int}) T{*?}
ParallelMove r0 <- r0, r4 <- r0, r3 <- fp[-5]
ParallelMove fp[-6] <- r4
StoreField(v15 T{ListIterator} . _current@9040228 = v78 T{X0?})
v79 <- LoadField(v15 T{ListIterator} . _index@9040228) [-9223372036854775808, 9223372036854775807] int64
v81 <- BinaryInt64Op(+ [tr], v79, v156 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v15 T{ListIterator} . _index@9040228 = v81 T{int} <int64>)
Branch if StrictCompare:12(===, v78 T{X0?}, v0 T{Null?}) goto (25, 26)
B25
  Loop 0
ParallelMove r0 <- r4, r2 <- fp[-2], r1 <- C
t0 <- AssertAssignable:18(v78 T{X0?}, v56 T{_TypeParameter}, ' in type cast', instantiator_type_args(v50), function_type_args(v0 T{Null?})) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove  goto:24 B27
B26
B27
  Loop 0
MoveArgument(sp[5] <- v0 T{Null?})
MoveArgument(sp[4] <- v19 T{_OneByteString})
MoveArgument(sp[3] <- v41 T{bool})
MoveArgument(sp[2] <- v11 T{bool})
MoveArgument(sp[1] <- v41 T{bool})
MoveArgument(sp[0] <- v41 T{bool})
v64 <- StaticCall:10( _RegExp@0150898.<0> v0 T{Null?}, v19 T{_OneByteString}, v41 T{bool}, v11 T{bool}, v41 T{bool}, v41 T{bool}, result_type = T{_RegExp}) T{_RegExp}
ParallelMove r0 <- r0, r3 <- fp[-6]
v181 <- LoadClassId(<non-smi> v78 T{X0}) int64
ParallelMove r0 <- r1, r1 <- r3, r2 <- r0
v21 <- DispatchTableCall( cid=v181 String.contains<0>, v78 T{X0}, v64) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:52(===, v21 T{bool}, v11) goto (8, 11)
BoolTest
B11
  Loop 0
ParallelMove r1 <- fp[-5], r4 <- fp[-2], r2 <- fp[-4], r3 <- fp[-3] goto:90 B12
B7
ParallelMove r0 <- r4
StoreField(v15 T{ListIterator} . _current@9040228 = v0 T{Null?})
ParallelMove r0 <- C
DartReturn:94(v0)
B8
ParallelMove r0 <- fp[-1]
Branch if StrictCompare:60(===, v3 T{bool}, v11) goto (9, 10)
BoolTest
B9
v26 <- AllocateObject:66(cls=ArgumentError, <not-aliased>) T{ArgumentError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v26 T{ArgumentError} . message = v27 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v26 T{ArgumentError} . _hasValue@0150898 = v41 T{bool}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:70(v26)
B10
ParallelMove r0 <- fp[-6]
ParallelMove r1 <- C, r2 <- C
v23 <- CreateArray:76(v0, v7) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v23, v12, v24, NoStoreBarrier)
ParallelMove r1 <- fp[-6]
StoreIndexed([_List] v23, v9, v78 T{X0}, NoStoreBarrier)
MoveArgument(sp[0] <- v23)
v25 <- StaticCall:78( _interpolate@0150898<0> v23, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
v22 <- AllocateObject:74(cls=UnsupportedError, <not-aliased>) T{UnsupportedError}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v22 T{UnsupportedError} . message = v25 T{String}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:82(v22)
B32
ParallelMove r0 <- fp[-4]
v83 <- AllocateObject:26(cls=ConcurrentModificationError, <not-aliased>) T{ConcurrentModificationError}
ParallelMove r1 <- r0, r0 <- fp[-4]
StoreField(v83 T{ConcurrentModificationError} . modifiedObject = v69 T{Iterable<X0>}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:32(v83)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r2 <- r1, r3 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r1 <- r1
v5 <- AllocateObject:10(cls=SubListIterable, v4) T{SubListIterable}
ParallelMove r1 <- r0, r2 <- fp[-1], r3 <- fp[-2], r5 <- C, r0 <- r0
ParallelMove fp[-1] <- r0
StaticCall:12( SubListIterable.<0> v5, v2, v3, v0)
ParallelMove r0 <- fp[-1]
DartReturn:14(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r2, r4 <- r3, r3 <- r5, fp[-1] <- r3, fp[-2] <- r5
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- r0
StoreField(v2 . _iterable@9040228 = v3)
StoreField(v2 . _start@9040228 = v4 <int64>)
ParallelMove r0 <- r3
StoreField(v2 . _endOrLength@9040228 = v5)
ParallelMove r1 <- r4, r2 <- C
StaticCall:14( checkNotNegative<0> v4 T{int}, v7) int64
ParallelMove r0 <- fp[-2]
Branch if StrictCompare:18(!==, v5 T{int??}, v0) goto (3, 6)
B3
ParallelMove r3 <- fp[-1]
v35 <- UnboxInt64([non-speculative], v5 T{int?}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r4, r2 <- C, fp[-3] <- r4
StaticCall:24( checkNotNegative<0> v35 T{int?}, v9) int64
ParallelMove r2 <- fp[-1], r0 <- fp[-3]
Branch if RelationalOp(>, v4 T{int}, v35 T{int?}) T{bool} goto (4, 5)
B5
B6
B7
ParallelMove r0 <- C
DartReturn:56(v0)
B4
v37 <- BoxInt64(v4 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
ParallelMove fp[-4] <- r0
v13 <- AllocateObject:38(cls=RangeError) T{RangeError}
ParallelMove r0 <- r0
ParallelMove fp[-5] <- r0
MoveArgument(sp[4] <- v13)
MoveArgument(sp[3] <- v37 T{int})
MoveArgument(sp[2] <- v15)
MoveArgument(sp[1] <- v5 T{int?})
MoveArgument(sp[0] <- v7)
StaticCall:42( RangeError.range<0> v13, v37 T{int}, v15, v5 T{int?}, v7)
ParallelMove r0 <- fp[-5]
Throw:44(v13)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1
CheckStackOverflow:8(stack=0, loop=0)
Branch if RelationalOp(<=, v66 T{_Smi}, v2) T{bool} goto (3, 6)
B3
Branch if RelationalOp(<=, v2, v67 T{_Smi}) T{bool} goto (9, 7)
B9
B7
B6
B5
Branch if RelationalOp(<=, v68 T{_Smi}, v2) T{bool} goto (4, 12)
B4
Branch if RelationalOp(<=, v2, v69 T{_Smi}) T{bool} goto (10, 13)
B10
B8
ParallelMove r0 <- C
DartReturn:66(v0)
B13
B12
B11
Branch if StrictCompare:80(===, v3 T{bool}, v6) goto (14, 15)
BoolTest
B14
ParallelMove r1 <- C, r2 <- r0
v14 <- StaticCall:88( String.fromCharCode<0> v0, v2, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
MoveArgument(sp[1] <- v10)
MoveArgument(sp[0] <- v14)
v15 <- StaticCall:90( +<0> v10, v14, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
v13 <- AllocateObject:86(cls=ArgumentError) T{ArgumentError}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v13 T{ArgumentError} . message = v15 T{String}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v13 T{ArgumentError} . _hasValue@0150898 = v32 T{bool}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:94(v13)
B15
ParallelMove r1 <- C, r2 <- r0
v11 <- StaticCall:100( String.fromCharCode<0> v0, v2, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
MoveArgument(sp[1] <- v10)
MoveArgument(sp[0] <- v11)
v12 <- StaticCall:102( +<0> v10, v11, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
v9 <- AllocateObject:98(cls=UnsupportedError) T{UnsupportedError}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v9 T{UnsupportedError} . message = v12 T{String}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:106(v9)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, r3 <- r2, r0 <- r3, fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v6 <- StaticCall:10( _GrowableList@0150898.<0> v0, v241 T{_Smi}, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r3 <- r0, r0 <- fp[-3]
ParallelMove fp[-4] <- r3
v141 <- LoadField(v4 T{_OneByteString} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v221 <- UnboxInt64([non-speculative], v141 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove fp[-11] <- r4
Branch if EqualityCompare(v221 T{_Smi} == v241 T{_Smi}) T{bool} goto (3, 7)
B3
ParallelMove r1 <- fp[-2], r2 <- fp[-1]
v35 <- StaticCall:24( allMatches<0> v3, v2, using unchecked entrypoint, result_type = T{_StringAllMatchesIterable}) T{_StringAllMatchesIterable}
ParallelMove r0 <- r0
v133 <- LoadField(v35 T{_StringAllMatchesIterable} . _input@0150898 {final}) T{String}
ParallelMove fp[-6] <- r1
v134 <- LoadField(v35 T{_StringAllMatchesIterable} . _pattern@0150898 {final}) T{String}
ParallelMove fp[-5] <- r2
v136 <- AllocateObject:16(cls=_StringAllMatchesIterator) T{_StringAllMatchesIterator}
ParallelMove r2 <- r0, r0 <- fp[-6]
ParallelMove fp[-9] <- r2
StoreField(v136 T{_StringAllMatchesIterator} . _input@0150898 = v133 T{String}, NoStoreBarrier)
ParallelMove r0 <- fp[-5]
StoreField(v136 T{_StringAllMatchesIterator} . _pattern@0150898 = v134 T{String}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v136 T{_StringAllMatchesIterator} . _index@0150898 = v241 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r3 <- C, r0 <- C goto:52 B6
B6
  Loop 1
  Loop Header
ParallelMove fp[-7] <- r3, fp[-8] <- r0
CheckStackOverflow:56(stack=0, loop=1)
ParallelMove r1 <- r2
v39 <- StaticCall:28( moveNext<0> v136, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:32(===, v39 T{bool}, v9) goto (4, 5)
BoolTest
B4
  Loop 1
ParallelMove r3 <- fp[-9]
v113 <- LoadField(v136 T{_StringAllMatchesIterator} . _current@0150898) T{_StringMatch?}
ParallelMove fp[-5] <- r4
Branch if StrictCompare:12(===, v113, v0 T{Null?}) goto (50, 51)
B50
  Loop 1
ParallelMove r0 <- r4, r2 <- C, r1 <- C
t0 <- AssertAssignable:18(v113 T{_StringMatch?}, v80 T{_Type}, ' in type cast', instantiator_type_args(v0 T{Null?}), function_type_args(v0 T{Null?})) T{Match}
AssertAssignable for compile-time type
TTSCall
ParallelMove  goto:24 B52
B51
B52
  Loop 1
v41 <- LoadField(v113 T{_StringMatch} . start {final}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-4], r2 <- fp[-7], r3 <- r5, fp[-10] <- r5
v42 <- StaticCall:44( _addReplaceSlice@0150898<0> v6, v37, v41, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r0, r0 <- fp[-8]
v43 <- BinaryInt64Op(+ [tr], v38, v42) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-5]
v126 <- LoadField(v113 T{_StringMatch} . pattern {final}) T{String}
v162 <- LoadField(v126 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v222 <- UnboxInt64([non-speculative], v162 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove r0 <- fp[-10]
v128 <- BinaryInt64Op(+ [tr], v41 T{int}, v222 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r3, r0 <- r2, r2 <- fp[-9] goto:54 B6
B5
ParallelMove r0 <- fp[-8]
ParallelMove r2 <- fp[-7], r0 <- r0, r6 <- fp[-4] goto:100 B11
B7
ParallelMove r1 <- fp[-2], r2 <- fp[-1]
v10 <- StaticCall:60( allMatches<0> v3, v2, using unchecked entrypoint, result_type = T{_StringAllMatchesIterable}) T{_StringAllMatchesIterable}
ParallelMove r1 <- r0
v11 <- StaticCall:62( get:iterator<0> v10, result_type = T{_StringAllMatchesIterator}) T{_StringAllMatchesIterator}
ParallelMove r0 <- r0
ParallelMove fp[-2] <- r0
ParallelMove r5 <- C, r4 <- C, r3 <- fp[-4], r2 <- fp[-11] goto:92 B10
B10
  Loop 0
  Loop Header
ParallelMove fp[-7] <- r5, fp[-8] <- r4
CheckStackOverflow:96(stack=0, loop=1)
ParallelMove r1 <- r0
v14 <- StaticCall:64( moveNext<0> v11, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:68(===, v14 T{bool}, v9) goto (8, 9)
BoolTest
B8
  Loop 0
ParallelMove r3 <- fp[-2]
v72 <- LoadField(v11 T{_StringAllMatchesIterator} . _current@0150898) T{_StringMatch?}
ParallelMove fp[-5] <- r4
Branch if StrictCompare:12(===, v72, v0 T{Null?}) goto (34, 35)
B34
  Loop 0
ParallelMove r0 <- r4, r2 <- C, r1 <- C
t0 <- AssertAssignable:18(v72 T{_StringMatch?}, v80 T{_Type}, ' in type cast', instantiator_type_args(v0 T{Null?}), function_type_args(v0 T{Null?})) T{Match}
AssertAssignable for compile-time type
TTSCall
ParallelMove  goto:24 B36
B35
B36
  Loop 0
v16 <- LoadField(v72 T{_StringMatch} . start {final}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r4, r2 <- fp[-7], r3 <- r6, fp[-10] <- r6
v17 <- StaticCall:80( _addReplaceSlice@0150898<0> v6, v12, v16, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r0, r0 <- fp[-8]
v18 <- BinaryInt64Op(+ [tr], v13, v17) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-4], fp[-13] <- r2
v146 <- LoadField(v6 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v151 <- LoadField(v6 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v152 <- LoadField(v151 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v225 <- UnboxInt64([non-speculative], v146 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-12] <- r3
v226 <- UnboxInt64([non-speculative], v152 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v225 T{_Smi} == v226 T{_Smi}) T{bool} goto (39, 40)
B39
  Loop 0
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v6 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B41
B40
B41
  Loop 0
v92 <- BinaryInt64Op(+ [tr], v225 T{_Smi}, v242 T{_Smi}) [1, 576460752303423488] int64
v227 <- BoxInt64(v92) [1, 576460752303423488] T{_Smi}
StoreField(v6 T{_GrowableList} . GrowableObjectArray.length = v227, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v92 T{_Smi}, v225 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v95 <- LoadField(v6 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-3]
StoreIndexed:40([_List] v95, v225 T{_Smi}, v4 T{_OneByteString})
v19 <- BinaryInt64Op(+ [tr], v18, v221 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v106 <- LoadField(v72 T{_StringMatch} . pattern {final}) T{String}
v157 <- LoadField(v106 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v230 <- UnboxInt64([non-speculative], v157 T{_Smi}) [0, 2305843009213693951] int64
v108 <- BinaryInt64Op(+ [tr], v16 T{int}, v230 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r2, r4 <- r0, r3 <- r6, r0 <- fp[-2], r2 <- r7 goto:94 B10
B9
ParallelMove r6 <- fp[-4], r0 <- fp[-8]
ParallelMove r2 <- fp[-7], r0 <- r0 goto:102 B11
B11
ParallelMove fp[-7] <- r0
Branch if EqualityCompare(v21 == v241 T{_Smi}) T{bool} goto (12, 15)
B12
Branch if EqualityCompare(v22 == v241 T{_Smi}) T{bool} goto (13, 16)
B13
ParallelMove r0 <- fp[-1]
DartReturn:124(v2)
B16
B15
B17
v58 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v231 <- UnboxInt64([non-speculative], v58 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove r1 <- r6, r2 <- r2, r3 <- r3
v26 <- StaticCall:138( _addReplaceSlice@0150898<0> v6, v21, v231 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r0, r0 <- fp[-7]
v27 <- BinaryInt64Op(+ [tr], v22, v26) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v27, v243 T{_Smi}) T{bool} goto (18, 22)
B18
ParallelMove r2 <- fp[-1]
v52 <- LoadClassId(v2 T{_StringBase}) [93, 94] T{_Smi}
Branch if StrictCompare(===, v52 T{_Smi}, v53 T{_Smi}) T{bool} goto (19, 23)
B19
ParallelMove r1 <- r2, r2 <- fp[-4], r3 <- r3
v33 <- StaticCall:172( _joinReplaceAllOneByteResult@0150898<0> v2, v6, v27, result_type = T{_OneByteString}) T{_OneByteString}
ParallelMove r0 <- r0
DartReturn:174(v33)
B23
B22
ParallelMove r2 <- fp[-1]
ParallelMove  goto:184 B20
B20
v232 <- BoxInt64(v27) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[3] <- v2)
MoveArgument(sp[2] <- v6)
MoveArgument(sp[1] <- v232 T{int})
MoveArgument(sp[0] <- v9 T{bool})
v29 <- StaticCall:190( _joinReplaceAllResult@0150898<0> v2, v6, v232 T{int}, v9 T{bool}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:192(v29)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v167 <- BoxInt64(v4 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v167 T{int})
v132 <- StaticCall:10( allocateOneByteString<0> v167 T{int}, recognized_kind = AllocateOneByteString, result_type = T{_OneByteString}) T{_OneByteString}
ParallelMove r3 <- r0, r0 <- fp[-2]
ParallelMove fp[-10] <- r3
v127 <- LoadField:142(v3 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v168 <- UnboxInt64:142([non-speculative], v127 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-9] <- r4
v57 <- LoadField:142(v3 . GrowableObjectArray.data) T{_List}
ParallelMove r6 <- fp[-1], fp[-8] <- r5
v104 <- LoadField:142(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v178 <- UnboxInt64:142([non-speculative], v104) [0, 2305843009213693951] int64
ParallelMove fp[-7] <- r7
v106 <- LoadClassId:142(v2 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove fp[-6] <- r8
ParallelMove r11 <- C, r10 <- C goto:142 B17
B17
  Loop 2
  Loop Header
ParallelMove fp[-5] <- r11, fp[-12] <- r10
CheckStackOverflow:146(stack=0, loop=1)
Branch if RelationalOp(<, v8, v168 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 2
ParallelMove r0 <- r4, r1 <- r10
GenericCheckBound:28(v168 T{_Smi}, v8) [-9223372036854775808, 9223372036854775807] int64
v193 <- LoadIndexed:28([_List] v57, v8 T{int}) T{*?}
ParallelMove fp[-11] <- r12
v65 <- LoadClassId(v193 T{*?}) [1, 600] int64
Branch if EqualityCompare(v65 == v66) T{bool} goto (5, 12)
B5
  Loop 2
v172 <- UnboxInt64([non-speculative], v193 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove fp[-4] <- r13
Branch if RelationalOp(<, v172 T{_Smi}, v192 T{_Smi}) T{bool} goto (6, 7)
B6
  Loop 2
v49 <- UnaryInt64Op(unary-, v172 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r0
v234 <- IntConverter(int64->uint32[tr], v49) uint32
v51 <- BinaryUint32Op(& [tr], v234 T{int}, v236 T{_Smi}) [0, 2047] uint32
v53 <- ShiftInt64Op(>> [tr], v49, v195 T{_Smi}) [-4503599627370496, 4503599627370495] int64
ParallelMove r2 <- r2
v235 <- IntConverter(uint32->int64, v51) int64
v54 <- BinaryInt64Op(+ [tr], v53, v235 T{_Smi}) [-4503599627370496, 4503599627372542] int64
ParallelMove r3 <- r10, r0 <- r1, r2 <- r0 goto:68 B8
B7
  Loop 2
v36 <- BinaryInt64Op(+ [tr], v8 T{int}, v196 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r4, r1 <- r12, fp[-3] <- r12
GenericCheckBound:62(v168 T{_Smi}, v36) [-9223372036854775808, 9223372036854775807] int64
v197 <- LoadIndexed:62([_List] v57 T{_List}, v36 T{int}) T{*?}
ParallelMove r0 <- r10, r2 <- C, r1 <- C, fp[-2] <- r10
t0 <- AssertAssignable:64(v197 T{*?}, v38, '', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-2]
v176 <- UnboxInt64([non-speculative], v197 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[-3], r0 <- fp[-4], r2 <- r1 goto:70 B8
B8
  Loop 2
ParallelMove r8 <- fp[-5], r7 <- r0, r5 <- fp[-1], r6 <- fp[-6], r4 <- fp[-10] goto:94 B11
B11
  Loop 1
  Loop 2
  Loop Header
CheckStackOverflow:98(stack=0, loop=2)
Branch if RelationalOp(<, v44, v42) T{bool} goto (9, 10)
B9
  Loop 1
  Loop 2
v46 <- BinaryInt64Op(+ [tr], v43, v196 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-7], r1 <- r7
t0 <- GenericCheckBound:88(v178 T{_Smi}, v44 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:88(===, v106, v83 T{_Smi}) goto (33, 34)
B33
  Loop 1
  Loop 2
v110 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v44 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:88 B32
B34
  Loop 1
  Loop 2
v108 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v44 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:88 B32
B32
  Loop 1
  Loop 2
StoreIndexed:10([_OneByteString] v132 T{_OneByteString}, v43 T{int}, v109, NoStoreBarrier)
v48 <- BinaryInt64Op(+ [tr], v44 T{int}, v196 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r8 <- r9, r7 <- r0 goto:96 B11
B10
  Loop 2
ParallelMove r11 <- r8, r1 <- r3, r0 <- r4 goto:136 B16
B12
  Loop 2
ParallelMove r5 <- r6, r6 <- r8, r4 <- r3
ParallelMove r0 <- r12, r2 <- C, r1 <- C
t0 <- AssertAssignable:102(v193 T{*?}, v19, '', instantiator_type_args(v0), function_type_args(v0)) T{String}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-11]
v97 <- LoadField:128(v193 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v181 <- UnboxInt64:128([non-speculative], v97 T{_Smi}) [0, 2305843009213693951] int64
v75 <- LoadClassId:128(v193 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove r5 <- fp[-5], r4 <- C, r0 <- fp[-10] goto:128 B15
B15
  Loop 0
  Loop 2
  Loop Header
CheckStackOverflow:132(stack=0, loop=2)
Branch if RelationalOp(<, v22, v181 T{_Smi}) T{bool} goto (13, 14)
B13
  Loop 0
  Loop 2
v26 <- BinaryInt64Op(+ [tr], v21, v196 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:122(===, v75, v83 T{_Smi}) goto (23, 24)
B23
  Loop 0
  Loop 2
v79 <- LoadIndexed([_OneByteString] v193 T{_OneByteString}, v22 T{int}) [0, 255] int64
ParallelMove r7 <- r7 goto:122 B22
B24
  Loop 0
  Loop 2
v77 <- LoadIndexed([_TwoByteString] v193 T{_StringBase}, v22 T{int}) [0, 65535] int64
ParallelMove r7 <- r7 goto:122 B22
B22
  Loop 0
  Loop 2
StoreIndexed:10([_OneByteString] v132 T{_OneByteString}, v21 T{int}, v78, NoStoreBarrier)
v28 <- BinaryInt64Op(+ [tr], v22 T{int}, v196 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r6, r4 <- r7 goto:130 B15
B14
  Loop 2
ParallelMove r11 <- r5, r1 <- fp[-12] goto:138 B16
B16
  Loop 2
v34 <- BinaryInt64Op(+ [tr], v30, v196 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r11 <- r11, r10 <- r10, r6 <- fp[-1], r5 <- fp[-8], r8 <- fp[-6], r3 <- r0, r4 <- fp[-9], r7 <- fp[-7] goto:144 B17
B4
ParallelMove r0 <- r3
ParallelMove r0 <- r0
DartReturn:148(v132 T{_OneByteString})
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-4] <- r1, fp[-5] <- r2, fp[-6] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v5 <- BinaryInt64Op(- [tr], v4, v3) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-3] <- r4
Branch if RelationalOp(>, v5, v165 T{_Smi}) T{bool} goto (3, 10)
B3
Branch if RelationalOp(<=, v5, v166 T{_Smi}) T{bool} goto (4, 7)
B4
Branch if RelationalOp(<=, v3, v167 T{_Smi}) T{bool} goto (5, 8)
B5
v14 <- ShiftInt64Op(<< [tr], v3, v168 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v15 <- BinaryInt64Op(| [tr], v14, v5) [-9223372036854775808, 9223372036854775807] int64
v16 <- UnaryInt64Op(unary-, v15) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-2] <- r3
v101 <- LoadField(v2 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v106 <- LoadField(v2 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v107 <- LoadField(v106 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v144 <- UnboxInt64([non-speculative], v101 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-1] <- r2
v145 <- UnboxInt64([non-speculative], v107 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v144 T{_Smi} == v145 T{_Smi}) T{bool} goto (32, 33)
B32
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v2 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B34
B33
B34
v67 <- BinaryInt64Op(+ [tr], v144 T{_Smi}, v169 T{_Smi}) [1, 576460752303423488] int64
v146 <- BoxInt64(v67) [1, 576460752303423488] T{_Smi}
StoreField(v2 T{_GrowableList} . GrowableObjectArray.length = v146, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v67 T{_Smi}, v144 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v70 <- LoadField(v2 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v141 <- BoxInt64(v16 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r5, r0 <- r0
StoreIndexed:40([_List] v70, v144 T{_Smi}, v141 T{int})
ParallelMove  goto:66 B9
B8
ParallelMove r4 <- r0
ParallelMove  goto:58 B6
B7
ParallelMove r4 <- r0
ParallelMove  goto:54 B6
B6
v79 <- LoadField(v2 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v84 <- LoadField(v2 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v85 <- LoadField(v84 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v151 <- UnboxInt64([non-speculative], v79 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-1] <- r6
v152 <- UnboxInt64([non-speculative], v85 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v151 T{_Smi} == v152 T{_Smi}) T{bool} goto (14, 15)
B14
ParallelMove r1 <- r4
StaticCall:26( _growToNextCapacity@0150898<0> v2 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B16
B15
B16
v28 <- BinaryInt64Op(+ [tr], v151 T{_Smi}, v169 T{_Smi}) [1, 576460752303423488] int64
ParallelMove fp[-2] <- r5
v153 <- BoxInt64(v28) [1, 576460752303423488] T{_Smi}
StoreField(v2 T{_GrowableList} . GrowableObjectArray.length = v153, NoStoreBarrier)
ParallelMove r0 <- r5, r1 <- r4
GenericCheckBound:40(v28 T{_Smi}, v151 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v31 <- LoadField(v2 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v139 <- BoxInt64(v3 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r6, r0 <- r0
StoreIndexed:40([_List] v31, v151 T{_Smi}, v139 T{int})
v96 <- LoadField(v31 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v159 <- UnboxInt64([non-speculative], v96 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v28 T{_Smi} == v159 T{_Smi}) T{bool} goto (23, 24)
B23
ParallelMove r1 <- r3
StaticCall:26( _growToNextCapacity@0150898<0> v2 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B25
B24
B25
v48 <- BinaryInt64Op(+ [tr], v28 T{_Smi}, v169 T{_Smi}) [2, 576460752303423489] int64
v160 <- BoxInt64(v48) [2, 576460752303423489] T{_Smi}
StoreField(v2 T{_GrowableList} . GrowableObjectArray.length = v160, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v48 T{_Smi}, v28 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v51 <- LoadField(v2 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v140 <- BoxInt64(v4 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r5, r0 <- r0
StoreIndexed:40([_List] v51, v28 T{_Smi}, v140 T{int})
ParallelMove  goto:68 B9
B9
B10
B11
ParallelMove r0 <- fp[-3]
DartReturn:78(v5)
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r5 <- r1, r4 <- r2, r2 <- r3, r0 <- r5, fp[-2] <- r1, fp[-3] <- r2, fp[-4] <- r5
CheckStackOverflow:8(stack=0, loop=0)
v144 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v301 <- UnboxInt64([non-speculative], v144 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove r1 <- r4, r2 <- r2, r3 <- r6, fp[-1] <- r6
v7 <- StaticCall:12( checkValidRange<0> v3, v4, v301 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0, r2 <- fp[-4]
ParallelMove fp[-8] <- r3
v152 <- LoadClassId(v5 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove fp[-7] <- r4
v332 <- StrictCompare(===, v152 T{_Smi}, v134 T{_Smi}) T{bool}
ParallelMove r5 <- fp[-3], fp[-10] <- r0
Branch if EqualityCompare(v3 == v333 T{_Smi}) T{bool} goto (3, 6)
B3
ParallelMove r6 <- fp[-1]
Branch if EqualityCompare(v7 == v301 T{_Smi}) T{bool} goto (4, 7)
B4
ParallelMove r0 <- r2
DartReturn:36(v5)
B7
B6
ParallelMove r6 <- fp[-1]
ParallelMove  goto:42 B5
B5
v139 <- LoadField(v5 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v13 <- BinaryInt64Op(- [tr], v301 T{_Smi}, v7) [-9223372036854775808, 9223372036854775807] int64
v14 <- BinaryInt64Op(+ [tr], v3, v13) [-9223372036854775808, 9223372036854775807] int64
v304 <- UnboxInt64([non-speculative], v139 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove fp[-6] <- r7
v15 <- BinaryInt64Op(+ [tr], v14, v304 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-9] <- r9
Branch if StrictCompare:58(===, v332 T{bool}, v11) goto (8, 11)
BoolTest
B8
ParallelMove r8 <- fp[-2]
v133 <- LoadClassId(v2 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove fp[-5] <- r10
Branch if StrictCompare(===, v133 T{_Smi}, v134 T{_Smi}) T{bool} goto (9, 12)
B9
v305 <- BoxInt64(v15 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v305 T{int})
v54 <- StaticCall:10( allocateOneByteString<0> v305 T{int}, recognized_kind = AllocateOneByteString, result_type = T{_OneByteString}) T{_OneByteString}
ParallelMove r2 <- r0
ParallelMove r7 <- C, r6 <- C, r4 <- fp[-2], r3 <- fp[-3], r5 <- fp[-5] goto:32 B33
B33
  Loop 2
  Loop Header
CheckStackOverflow:36(stack=0, loop=1)
Branch if RelationalOp(<, v67, v3 T{int}) T{bool} goto (31, 32)
B31
  Loop 2
ParallelMove r0 <- fp[-1], r1 <- r6
t0 <- GenericCheckBound:24(v301 T{_Smi}, v67 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:24(===, v133 T{_Smi}, v134 T{_Smi}) goto (61, 62)
B61
  Loop 2
v176 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v67 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:24 B60
B62
  Loop 2
v174 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v67 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:24 B60
B60
  Loop 2
StoreIndexed:10([_OneByteString] v54 T{_OneByteString}, v66 T{int}, v175, NoStoreBarrier)
v72 <- BinaryInt64Op(+ [tr], v66, v335 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v73 <- BinaryInt64Op(+ [tr], v67 T{int}, v335 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r7 <- r0, r6 <- r1 goto:34 B33
B32
ParallelMove r3 <- r3, r1 <- C, r6 <- fp[-4], r0 <- fp[-7], r7 <- fp[-6] goto:32 B38
B38
  Loop 1
  Loop Header
CheckStackOverflow:36(stack=0, loop=1)
Branch if RelationalOp(<, v91, v304 T{_Smi}) T{bool} goto (36, 37)
B36
  Loop 1
Branch if StrictCompare:24(===, v152 T{_Smi}, v134 T{_Smi}) goto (69, 70)
B69
  Loop 1
v201 <- LoadIndexed([_OneByteString] v5 T{_OneByteString}, v91 T{int}) [0, 255] int64
ParallelMove r8 <- r8 goto:24 B68
B70
  Loop 1
v199 <- LoadIndexed([_TwoByteString] v5 T{_StringBase}, v91 T{int}) [0, 65535] int64
ParallelMove r8 <- r8 goto:24 B68
B68
  Loop 1
StoreIndexed:10([_OneByteString] v54 T{_OneByteString}, v90 T{int}, v200, NoStoreBarrier)
v96 <- BinaryInt64Op(+ [tr], v90, v335 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v97 <- BinaryInt64Op(+ [tr], v91 T{int}, v335 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r8, r1 <- r9 goto:34 B38
B37
ParallelMove r6 <- r3, r3 <- fp[-8], r8 <- fp[-1] goto:32 B43
B43
  Loop 0
  Loop Header
CheckStackOverflow:36(stack=0, loop=1)
Branch if RelationalOp(<, v115, v301 T{_Smi}) T{bool} goto (41, 42)
B41
  Loop 0
ParallelMove r0 <- r8, r1 <- r3
t0 <- GenericCheckBound:24(v301 T{_Smi}, v115 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:24(===, v133 T{_Smi}, v134 T{_Smi}) goto (77, 78)
B77
  Loop 0
v226 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v115 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:24 B76
B78
  Loop 0
v224 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v115 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:24 B76
B76
  Loop 0
StoreIndexed:10([_OneByteString] v54 T{_OneByteString}, v114 T{int}, v225, NoStoreBarrier)
v120 <- BinaryInt64Op(+ [tr], v114, v335 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v121 <- BinaryInt64Op(+ [tr], v115 T{int}, v335 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r0, r3 <- r1 goto:34 B43
B42
ParallelMove r0 <- r2
DartReturn:82(v54 T{_OneByteString})
B12
ParallelMove r4 <- r8, r3 <- r5, r6 <- r2, r8 <- r6
ParallelMove  goto:92 B10
B11
ParallelMove r4 <- fp[-2], r3 <- r5, r6 <- r2, r8 <- r6
ParallelMove  goto:88 B10
B10
ParallelMove r1 <- C, r2 <- C
v16 <- StaticCall:94( _GrowableList@0150898.<0> v0, v333 T{_Smi}, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r1 <- r0, r2 <- C, r3 <- fp[-3], r0 <- r0
ParallelMove fp[-5] <- r0
StaticCall:96( _addReplaceSlice@0150898<0> v16, v333 T{_Smi}, v3) int64
ParallelMove r0 <- fp[-6]
Branch if RelationalOp(>, v304 T{_Smi}, v333 T{_Smi}) T{bool} goto (13, 14)
B13
ParallelMove r0 <- fp[-5]
v157 <- LoadField(v16 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v162 <- LoadField(v16 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v163 <- LoadField(v162 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v320 <- UnboxInt64([non-speculative], v157 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-3] <- r2
v321 <- UnboxInt64([non-speculative], v163 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v320 T{_Smi} == v321 T{_Smi}) T{bool} goto (18, 19)
B18
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v16 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B20
B19
B20
v36 <- BinaryInt64Op(+ [tr], v320 T{_Smi}, v335 T{_Smi}) [1, 576460752303423488] int64
v322 <- BoxInt64(v36) [1, 576460752303423488] T{_Smi}
StoreField(v16 T{_GrowableList} . GrowableObjectArray.length = v322, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r2
GenericCheckBound:40(v36 T{_Smi}, v320 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v39 <- LoadField(v16 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-4]
StoreIndexed:40([_List] v39, v320 T{_Smi}, v5 T{String})
ParallelMove  goto:116 B15
B14
ParallelMove r4 <- fp[-5]
ParallelMove  goto:118 B15
B15
ParallelMove r1 <- r4, r2 <- fp[-8], r3 <- fp[-1]
StaticCall:120( _addReplaceSlice@0150898<0> v16, v7, v301 T{_Smi}) int64
ParallelMove r2 <- fp[-9]
v306 <- BoxInt64(v15) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[3] <- v2)
MoveArgument(sp[2] <- v16)
MoveArgument(sp[1] <- v306 T{int})
MoveArgument(sp[0] <- v332 T{bool})
v19 <- StaticCall:122( _joinReplaceAllResult@0150898<0> v2, v16, v306 T{int}, v332 T{bool}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:124(v19)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
CheckStackOverflow:4(stack=0, loop=0)
v2 <- StaticCall:6( get:_isWindowsPlatform@0150898<0> , result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
DartReturn:8(v2)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
StaticCall:10( _setupNamespace@15069316<0> v2)
ParallelMove r0 <- C
DartReturn:12(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- AllocateObject:10(cls=_NamespaceImpl) T{_NamespaceImpl}
ParallelMove r0 <- r0
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v2)
v4 <- StaticCall:14( _create@15069316<0> v3, v2, result_type = T{_NamespaceImpl}) T{_NamespaceImpl}
ParallelMove r0 <- r0
StoreStaticField(_cachedNamespace@15069316, v4)
ParallelMove r0 <- C
DartReturn:16(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
v13 <- StaticCall:12( _toNullTerminatedUtf8Array@15069316<0> v3, result_type = T{!null}) T{Uint8List}
ParallelMove r1 <- fp[2]
v14 <- StaticCall:14( _toStringFromUtf8Array@15069316<0> v3 T{Uint8List}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
v4 <- AllocateObject:10(cls=_Directory) T{_Directory}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v4 T{_Directory} . _path@15069316 = v14, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:14(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r2 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v68 <- LoadClassId(<non-smi> v2) int64
ParallelMove r0 <- r0, r1 <- r2
v3 <- DispatchTableCall( cid=v68 Iterable.last<0>, v2) T{*?}
ParallelMove r0 <- r0
Branch if StrictCompare(===, v3 T{_Smi}, v4 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r2 <- fp[-1]
v69 <- LoadClassId(<non-smi> v2) int64
ParallelMove r0 <- r0, r1 <- r2
v10 <- DispatchTableCall( cid=v69 TypedData.buffer<0>, v2) T{ByteBuffer}
ParallelMove r2 <- r0, r1 <- fp[-1]
ParallelMove fp[-2] <- r2
v70 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[0] <- v2)
ParallelMove r0 <- r0
v11 <- DispatchTableCall( cid=v70 TypedData.offsetInBytes<0>, v2) T{int}
ParallelMove r1 <- r0, r0 <- fp[-1]
v39 <- LoadField(v2 T{Uint8List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v58 <- UnboxInt64([non-speculative], v39 T{_Smi}) [0, 4611686018427387903] int64
v14 <- BinaryInt64Op(- [tr], v58 T{_Smi}, v61 T{_Smi}) [v58-1, v58-1] int64
v57 <- UnboxInt64([non-speculative], v11 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r1 <- fp[-2]
v71 <- LoadClassId(<non-smi> v10 T{ByteBuffer}) int64
ParallelMove r0 <- r0, r1 <- r1, r2 <- r2, r3 <- r3
v49 <- DispatchTableCall( cid=v71 ByteBuffer.asUint8List<0>, v10 T{ByteBuffer}, v57 T{_Smi}, v14 T{int}) T{Uint8List}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:36 B5
B4
ParallelMove r0 <- fp[-1]
ParallelMove r2 <- r0 goto:38 B5
B5
ParallelMove r1 <- C, r2 <- r2
v27 <- StaticCall:68( convert<0> v33 T{Utf8Decoder}, v7 T{Uint8List}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:42(v27 T{String})
CheckStackOverflowSlowPath
B0
B3
Enter frame
ParallelMove r4 <- r1, r3 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- r3, r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v3, v4, 'codeUnits', instantiator_type_args(v0), function_type_args(v0)) T{List<int>}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
v7 <- LoadField(v2 . _allowMalformed@10003594 {final}) T{bool}
ParallelMove fp[-3] <- r1
v6 <- AllocateObject:12(cls=_Utf8Decoder) T{_Utf8Decoder}
ParallelMove r0 <- r0, r3 <- C
StoreField(v6 T{_Utf8Decoder} . _scanFlags@10003594 = v21 T{_Smi} <int64>, NoStoreBarrier)
StoreField(v6 T{_Utf8Decoder} . _charOrIndex@10003594 = v21 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r1 <- fp[-3]
StoreField(v6 T{_Utf8Decoder} . allowMalformed = v7 T{bool}, NoStoreBarrier)
StoreField(v6 T{_Utf8Decoder} . _state@10003594 = v21 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r1 <- r0, r2 <- fp[-2], r3 <- r3
v9 <- StaticCall:18( convertSingle<0> v6, v3 T{List<int>}, v21 T{_Smi}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:20(v9)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v568 <- LoadClassId(<non-smi> v3) int64
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r0
v6 <- DispatchTableCall( cid=v568 List.length<0>, v3) T{int}
ParallelMove r0 <- r0
v458 <- UnboxInt64([non-speculative], v6 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- C, r3 <- r3
v7 <- StaticCall:12( checkValidRange<0> v478 T{_Smi}, v0, v458 T{_Smi}, result_type = T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r3 <- r0, r0 <- fp[-2]
ParallelMove fp[-3] <- r3
v43 <- LoadClassId(v3) [89, 549] int64
Branch if TestRange(v43 in [115-118]) T{bool} goto (3, 4)
B3
ParallelMove r2 <- r0, r4 <- r3 goto:32 B5
B4
ParallelMove r1 <- r0, r2 <- r3
v11 <- StaticCall:26( _makeUint8List@10003594<0> v3, v7, result_type = T{_Uint8List}) T{_Uint8List}
ParallelMove r0 <- r0
ParallelMove r2 <- r0, r4 <- fp[-3] goto:34 B5
B5
ParallelMove fp[-6] <- r2
Branch if RelationalOp(>=, v7, v277 T{_Smi}) T{bool} goto (78, 83)
B78
v420 <- LoadField(v14 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v460 <- UnboxInt64([non-speculative], v420) [0, 4611686018427387903] int64
ParallelMove r0 <- r3, r1 <- C
GenericCheckBound(v460, v478) [-4611686018427387904, 4611686018427387903] int64
v569 <- LoadField(v14 . PointerBase.data, MayLoadInnerPointer) untagged
v479 <- LoadIndexed:20([_Uint8List] v569 T{Uint8List}, v478 T{_Smi}) [0, 255] int64
Branch if EqualityCompare(v479 T{_Smi} == v480 T{_Smi}) T{bool} goto (79, 84)
B79
ParallelMove r0 <- r3, r1 <- C
GenericCheckBound(v460 T{int}, v275) [-4611686018427387904, 4611686018427387903] int64
v570 <- LoadField(v14 . PointerBase.data, MayLoadInnerPointer) untagged
v481 <- LoadIndexed:34([_Uint8List] v570 T{Uint8List}, v275 T{_Smi}) [0, 255] int64
Branch if EqualityCompare(v481 T{_Smi} == v482 T{_Smi}) T{bool} goto (80, 85)
B80
ParallelMove r0 <- r3, r1 <- C
GenericCheckBound(v460 T{int}, v276) [-4611686018427387904, 4611686018427387903] int64
v571 <- LoadField(v14 . PointerBase.data, MayLoadInnerPointer) untagged
v483 <- LoadIndexed:48([_Uint8List] v571 T{Uint8List}, v276 T{_Smi}) [0, 255] int64
Branch if EqualityCompare(v483 T{_Smi} == v484 T{_Smi}) T{bool} goto (81, 86)
B81
ParallelMove r3 <- C goto:64 B87
B86
B85
B84
B83
B82
ParallelMove r3 <- C goto:84 B87
B87
ParallelMove fp[-5] <- r3
Branch if EqualityCompare(v278 == v7) T{bool} goto (6, 7)
B6
ParallelMove r0 <- C
DartReturn:48(v41)
B7
ParallelMove r0 <- fp[-1], r7 <- C
StoreField(v2 T{_Utf8Decoder} . _scanFlags@10003594 = v478 T{_Smi} <int64>)
ParallelMove r6 <- C, r5 <- r3, r1 <- C goto:36 B74
B74
  Loop 0
  Loop Header
CheckStackOverflow:34(stack=0, loop=1)
v209 <- BinaryInt64Op(- [tr], v7, v208) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>, v209, v485 T{_Smi}) T{bool} goto (73, 75)
B73
  Loop 0
v216 <- BinaryInt64Op(+ [tr], v208, v485 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r12 <- r2, r11 <- r5, r10 <- r8, r9 <- r1
v313 <- Utf8Scan(v2 T{_Utf8Decoder}, v14 T{Uint8List}, v208 T{int}, v216 T{int}, v224 T{_OneByteString}) [0, 4611686018427387903] int64 [_scanFlags@10003594]
v218 <- BinaryInt64Op(+ [tr], v207, v313 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r9, r5 <- r8 goto:32 B74
B75
ParallelMove r10 <- r2, r9 <- r5, r8 <- r4, r5 <- r1
v295 <- Utf8Scan(v2 T{_Utf8Decoder}, v14 T{Uint8List}, v208 T{int}, v7, v224 T{_OneByteString}) [0, 4611686018427387903] int64 [_scanFlags@10003594]
v215 <- BinaryInt64Op(+ [tr], v207, v295 T{int}) [-9223372036854775808, 9223372036854775807] int64
v19 <- LoadField(v2 . _scanFlags@10003594) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v19 == v478 T{_Smi}) T{bool} goto (8, 9)
B8
v473 <- BoxInt64(v215 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
ParallelMove fp[-4] <- r0
MoveArgument(sp[0] <- v473 T{int})
v40 <- StaticCall:66( allocateOneByteString<0> v473 T{int}, recognized_kind = AllocateOneByteString, result_type = T{_OneByteString}) T{_OneByteString}
ParallelMove r0 <- r0, r8 <- fp[-5]
v466 <- BoxInt64(v278) [0, 3] T{_Smi}
ParallelMove r9 <- fp[-6]
v572 <- LoadField(v14 T{Uint8List} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r5 <- fp[-4]
MemoryCopy(v572 T{Uint8List}, v40 T{_OneByteString}, v466 T{_Smi}, v5 T{_Smi}, v473 T{int}, dest_cid=_OneByteString (93), src_cid=_Uint8List (115) [untagged])
Copying until region size is a multiple of chunk size
Copying chunks at a time
ParallelMove r0 <- r0
DartReturn:70(v40)
B9
ParallelMove r9 <- r2, r8 <- r3
Branch if EqualityCompare(v19 == v321) T{bool} goto (10, 11)
B10
ParallelMove r1 <- r0, r2 <- r9, r3 <- r8, r5 <- r4, r6 <- r5
v39 <- StaticCall:86( decode8<0> v2, v14, v278, v7, v215 T{int}, using unchecked entrypoint, result_type = T{_OneByteString}) T{_OneByteString}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:94 B12
B11
ParallelMove r1 <- fp[-1], r2 <- fp[-6], r3 <- fp[-5], r5 <- fp[-3], r6 <- r5
v25 <- StaticCall:90( decode16<0> v2, v14, v278, v7, v215 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:96 B12
B12
v27 <- LoadField(v2 . _state@10003594) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v27 == v478 T{_Smi}) T{bool} goto (13, 14)
B13
ParallelMove r0 <- r0
DartReturn:110(v26)
B14
v29 <- LoadField(v2 . allowMalformed {final}) T{bool}
Branch if StrictCompare:118(!==, v29 T{bool}, v10) goto (15, 19)
BoolTest
B19
ParallelMove r0 <- C
StoreField(v2 T{_Utf8Decoder} . _state@10003594 = v478 T{_Smi} <int64>)
ParallelMove r1 <- r2, r2 <- fp[-6], r3 <- fp[-5], r5 <- fp[-3]
v30 <- StaticCall:166( decodeGeneral<0> v2, v14, v278, v7, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:168(v30)
B15
Branch if TestInt(v27, v275) goto (16, 17)
B16
ParallelMove r0 <- fp[-3], r1 <- C
StoreField(v2 T{_Utf8Decoder} . _state@10003594 = v486 T{_Smi} <int64>)
StoreField(v2 T{_Utf8Decoder} . _charOrIndex@10003594 = v7 <int64>)
ParallelMove r3 <- C goto:144 B18
B17
ParallelMove r3 <- r1 goto:146 B18
B18
Branch if RelationalOp:28(<=, v477 T{int}, v487 T{_Smi}) T{bool} goto (24, 25)
B24
Branch if RelationalOp:50(<=, v477 T{int}, v488 T{_Smi}) T{bool} goto (28, 29)
B28
Branch if RelationalOp:72(<=, v477 T{int}, v489 T{_Smi}) T{bool} goto (32, 33)
B32
v567 <- BoxInt64(v477 T{int})
ParallelMove r0 <- r0
Branch if StrictCompare:94(===, v567 T{int}, v150 T{_Smi}) T{bool} goto (36, 37)
B36
ParallelMove r1 <- C goto:10 B52
B37
B33
Branch if RelationalOp:82(>=, v477 T{int}, v488 T{_Smi}) T{bool} goto (34, 35)
B34
ParallelMove r1 <- C goto:12 B52
B35
B29
Branch if RelationalOp:60(>=, v477 T{int}, v490 T{_Smi}) T{bool} goto (30, 31)
B30
Branch if RelationalOp:106(<=, v477 T{int}, v490 T{_Smi}) T{bool} goto (38, 39)
B38
ParallelMove r1 <- C goto:14 B52
B39
Branch if RelationalOp:116(>=, v477 T{int}, v487 T{_Smi}) T{bool} goto (40, 41)
B40
ParallelMove r1 <- C goto:16 B52
B41
B31
B25
Branch if RelationalOp:38(>=, v477 T{int}, v491 T{_Smi}) T{bool} goto (26, 27)
B26
Branch if RelationalOp:128(<=, v477 T{int}, v492 T{_Smi}) T{bool} goto (42, 43)
B42
Branch if RelationalOp:150(<=, v477 T{int}, v491 T{_Smi}) T{bool} goto (46, 47)
B46
ParallelMove r1 <- C goto:18 B52
B47
Branch if RelationalOp:160(>=, v477 T{int}, v492 T{_Smi}) T{bool} goto (48, 49)
B48
ParallelMove r1 <- C goto:20 B52
B49
B43
Branch if RelationalOp:138(>=, v477 T{int}, v486 T{_Smi}) T{bool} goto (44, 45)
B44
v566 <- BoxInt64(v477 T{int})
ParallelMove r0 <- r0
Branch if StrictCompare:172(===, v566 T{int}, v38 T{_Smi}) T{bool} goto (50, 51)
B50
ParallelMove r1 <- C goto:22 B52
B51
B45
B27
B23
ParallelMove r1 <- C goto:24 B52
B52
ParallelMove fp[-4] <- r1
v36 <- LoadField(v2 . _charOrIndex@10003594) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-3] <- r3
v35 <- AllocateObject:152(cls=FormatException, <not-aliased>) T{FormatException}
ParallelMove r2 <- r0, r0 <- fp[-4]
StoreField(v35 T{FormatException} . message = v153, NoStoreBarrier)
ParallelMove r0 <- fp[-2]
StoreField(v35 T{FormatException} . source = v3 T{List<int>}, NoStoreBarrier)
ParallelMove r3 <- fp[-3]
v476 <- BoxInt64(v36 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v35 T{FormatException} . offset = v476 T{int?}, NoStoreBarrier)
ParallelMove r0 <- r2
Throw:160(v35)
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r2 <- r1, r0 <- r2, r1 <- r3, fp[-3] <- r1, fp[-4] <- r2, fp[-5] <- r3, fp[-6] <- r5
CheckStackOverflow:8(stack=0, loop=0)
v8 <- LoadField(v2 . _state@10003594) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-2] <- r3
v9 <- LoadField(v2 . _charOrIndex@10003594) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-1] <- r4
v10 <- AllocateObject:14(cls=StringBuffer) T{StringBuffer}
ParallelMove r1 <- r0, r0 <- r0
ParallelMove fp[-7] <- r0
StaticCall:16( StringBuffer.<0> v10)
ParallelMove r2 <- fp[-5]
v12 <- BinaryInt64Op(+ [tr], v4, v372 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- fp[-4]
v289 <- LoadField(v3 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v337 <- UnboxInt64([non-speculative], v289) [0, 4611686018427387903] int64
ParallelMove r0 <- r5, r1 <- r2, fp[-9] <- r5
GenericCheckBound(v337, v4) [-9223372036854775808, 9223372036854775807] int64
v460 <- LoadField(v3 . PointerBase.data, MayLoadInnerPointer) untagged
v373 <- LoadIndexed:20([_Uint8List] v460 T{Uint8List}, v4 T{int}) [0, 255] int64
ParallelMove r6 <- fp[-3]
v100 <- LoadField:406(v2 . allowMalformed {final}) T{bool}
ParallelMove fp[-8] <- r7
ParallelMove r13 <- fp[-2], r2 <- fp[-1], r1 <- r3, r0 <- r1, r3 <- fp[-6] goto:406 B54
B54
  Loop 3
  Loop Header
CheckStackOverflow:404(stack=0, loop=1)
ParallelMove r2 <- r13, r1 <- r2, r13 <- r1, r0 <- r0 goto:262 B34
B34
  Loop 2
  Loop 3
  Loop Header
ParallelMove fp[-2] <- r13
CheckStackOverflow:260(stack=0, loop=2)
v375 <- LoadIndexed:34([_OneByteString] v6, v45 T{_Smi}) [0, 255] int64
ParallelMove r14 <- r14
v452 <- IntConverter(int64->uint32[tr], v375) uint32
v81 <- BinaryUint32Op(& [tr], v452 T{_Smi}, v457 T{_Smi}) [0, 31] uint32
Branch if RelationalOp(<=, v42, v377 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 2
  Loop 3
ParallelMove r1 <- r19
v453 <- IntConverter(uint32->int64, v81) int64
v115 <- ShiftUint32Op(>> [tr], v458 T{_Smi}, v453 T{_Smi}) [0, 61694] uint32
ParallelMove r0 <- r0
v451 <- IntConverter(int64->uint32[tr], v45 T{_Smi}) uint32
v116 <- BinaryUint32Op(& [tr], v451 T{_Smi}, v115) [0, 61694] uint32
ParallelMove r20 <- r20
v455 <- IntConverter(uint32->int64, v116) int64
ParallelMove r14 <- r20 goto:62 B5
B4
  Loop 2
  Loop 3
ParallelMove r0 <- r0
v450 <- IntConverter(int64->uint32[tr], v45 T{_Smi}) uint32
v84 <- BinaryUint32Op(& [tr], v450 T{_Smi}, v459 T{_Smi}) [0, 63] uint32
v86 <- ShiftInt64Op(<< [tr], v43, v380 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r14 <- r14
v456 <- IntConverter(uint32->int64, v84) int64
v87 <- BinaryInt64Op(| [tr], v456 T{_Smi}, v86) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r14 <- r1 goto:64 B5
B5
  Loop 2
  Loop 3
ParallelMove fp[-1] <- r14
ParallelMove r19 <- r19
v454 <- IntConverter(uint32->int64, v81) int64
v89 <- BinaryInt64Op(+ [tr], v42, v454 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- C, r1 <- r20
GenericCheckBound:68(v381 T{_Smi}, v89) [-9223372036854775808, 9223372036854775807] int64
v382 <- LoadIndexed:68([_OneByteString] v7, v89 T{int}) [0, 255] int64
ParallelMove fp[-5] <- r19
v124 <- BoxInt64(v382 T{_Smi}) [0, 255] T{_Smi}
Branch if EqualityCompare(v382 == v383 T{_Smi}) T{bool} goto (6, 11)
B11
  Loop 2
  Loop 3
Branch if TestInt(v382, v372) goto (12, 30)
B12
  Loop 2
  Loop 3
Branch if StrictCompare:118(===, v100 T{bool}, v23 T{bool}) goto (13, 29)
BoolTest
B13
  Loop 2
  Loop 3
Branch if RelationalOp:146(<=, v382, v389 T{_Smi}) T{bool} goto (17, 18)
B17
  Loop 2
  Loop 3
Branch if RelationalOp:168(<=, v382, v390 T{_Smi}) T{bool} goto (21, 22)
B21
  Loop 2
  Loop 3
Branch if StrictCompare:190(===, v124, v108) T{bool} goto (25, 26)
B25
  Loop 2
  Loop 3
ParallelMove r1 <- fp[-7], r2 <- C
StaticCall:132( writeCharCode<0> v10, v391 T{_Smi}, using unchecked entrypoint)
ParallelMove r3 <- fp[-2]
v112 <- BinaryInt64Op(- [tr], v44, v372 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r4 goto:136 B14
B26
  Loop 2
  Loop 3
ParallelMove r3 <- r13
ParallelMove  goto:200 B16
B22
  Loop 2
  Loop 3
ParallelMove r3 <- r13
Branch if RelationalOp:178(>=, v382, v389 T{_Smi}) T{bool} goto (23, 24)
B23
B24
B18
  Loop 2
  Loop 3
ParallelMove r3 <- r13
Branch if RelationalOp:156(>=, v382, v392 T{_Smi}) T{bool} goto (19, 20)
B19
  Loop 2
  Loop 3
Branch if StrictCompare:204(===, v124, v104) T{bool} goto (27, 28)
B27
B15
  Loop 2
  Loop 3
ParallelMove r1 <- fp[-7], r2 <- C
StaticCall:124( writeCharCode<0> v10, v391 T{_Smi}, using unchecked entrypoint)
ParallelMove r3 <- fp[-2] goto:128 B14
B28
B20
B16
  Loop 2
  Loop 3
ParallelMove r1 <- fp[-7], r2 <- C
StaticCall:138( writeCharCode<0> v10, v391 T{_Smi}, using unchecked entrypoint)
ParallelMove r1 <- fp[-7], r2 <- C
StaticCall:140( writeCharCode<0> v10, v391 T{_Smi}, using unchecked entrypoint)
ParallelMove r3 <- fp[-2] goto:142 B14
B14
  Loop 2
  Loop 3
ParallelMove r5 <- C, r2 <- r3, r3 <- fp[-3] goto:232 B31
B29
ParallelMove r3 <- r6, r0 <- r13
StoreField(v2 T{_Utf8Decoder} . _state@10003594 = v382 <int64>)
v101 <- BinaryInt64Op(- [tr], v44, v372 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_Utf8Decoder} . _charOrIndex@10003594 = v101 T{int} <int64>)
ParallelMove r0 <- C
DartReturn:226(v38)
B30
  Loop 2
  Loop 3
ParallelMove r3 <- r6, r0 <- r13
ParallelMove r5 <- r19, r2 <- r0 goto:234 B31
B31
  Loop 2
  Loop 3
Branch if EqualityCompare(v96 == v5) T{bool} goto (32, 33)
B33
  Loop 2
  Loop 3
ParallelMove r6 <- fp[-4]
v98 <- BinaryInt64Op(+ [tr], v96, v372 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-9], r1 <- r2
GenericCheckBound(v337 T{int}, v96) [-9223372036854775808, 9223372036854775807] int64
v464 <- LoadField(v3 . PointerBase.data, MayLoadInnerPointer) untagged
v394 <- LoadIndexed:252([_Uint8List] v464 T{Uint8List}, v96 T{int}) [0, 255] int64
ParallelMove r2 <- r5, r1 <- fp[-1], r13 <- r13, r0 <- r7, r6 <- r3, r4 <- r6, r3 <- r4, r12 <- C, r11 <- C, r7 <- fp[-8], r5 <- fp[-9], r10 <- C, r9 <- C, r8 <- C goto:258 B34
B32
ParallelMove r0 <- r5, r3 <- r4 goto:246 B57
B6
  Loop 3
ParallelMove r3 <- r6, r6 <- r4, r4 <- r3, r0 <- r13
ParallelMove r1 <- fp[-7], r2 <- fp[-1]
StaticCall:80( writeCharCode<0> v10, v88, using unchecked entrypoint)
ParallelMove r3 <- fp[-6], r2 <- fp[-2]
Branch if EqualityCompare(v44 == v5) T{bool} goto (7, 10)
B10
  Loop 3
ParallelMove r4 <- fp[-4]
v51 <- BinaryInt64Op(+ [tr], v44, v372 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-9], r1 <- r2
GenericCheckBound(v337 T{int}, v44) [-9223372036854775808, 9223372036854775807] int64
v461 <- LoadField(v3 . PointerBase.data, MayLoadInnerPointer) untagged
v384 <- LoadIndexed:270([_Uint8List] v461 T{Uint8List}, v44 T{int}) [0, 255] int64
Branch if RelationalOp(<, v384 T{_Smi}, v385 T{_Smi}) T{bool} goto (37, 52)
B37
  Loop 3
ParallelMove r5 <- r5, r0 <- r6 goto:320 B42
B42
  Loop 1
  Loop 3
  Loop Header
CheckStackOverflow:318(stack=0, loop=2)
Branch if RelationalOp(<, v59, v5) T{bool} goto (41, 43)
B41
  Loop 1
  Loop 3
v75 <- BinaryInt64Op(+ [tr], v59, v372 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-9], r1 <- r5
GenericCheckBound(v337 T{int}, v59) [-9223372036854775808, 9223372036854775807] int64
v462 <- LoadField(v3 . PointerBase.data, MayLoadInnerPointer) untagged
v386 <- LoadIndexed:292([_Uint8List] v462 T{Uint8List}, v59 T{int}) [0, 255] int64
Branch if RelationalOp(>=, v386 T{_Smi}, v385 T{_Smi}) T{bool} goto (38, 40)
B40
  Loop 1
  Loop 3
ParallelMove r5 <- r6, r0 <- r1 goto:316 B42
B38
  Loop 3
v78 <- BinaryInt64Op(- [tr], v75, v372 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r7 <- r6, r6 <- r1, r5 <- r0 goto:308 B39
B43
  Loop 3
ParallelMove r7 <- r5, r6 <- r0, r5 <- r3 goto:324 B39
B39
  Loop 3
ParallelMove fp[-11] <- r7, fp[-12] <- r6, fp[-13] <- r5
v65 <- BinaryInt64Op(- [tr], v64, v44 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v65, v387 T{_Smi}) T{bool} goto (44, 48)
B44
  Loop 3
ParallelMove r8 <- r2 goto:358 B47
B47
  Loop 0
  Loop 3
  Loop Header
ParallelMove fp[-10] <- r8
CheckStackOverflow:362(stack=0, loop=2)
Branch if RelationalOp(<, v71, v64) T{bool} goto (45, 46)
B45
  Loop 0
  Loop 3
ParallelMove r0 <- fp[-9], r1 <- r8
GenericCheckBound(v337 T{int}, v71) [-9223372036854775808, 9223372036854775807] int64
v463 <- LoadField(v3 . PointerBase.data, MayLoadInnerPointer) untagged
v388 <- LoadIndexed:352([_Uint8List] v463 T{Uint8List}, v71 T{int}) [0, 255] int64
ParallelMove r1 <- fp[-7], r2 <- r2
StaticCall:354( writeCharCode<0> v10, v388 T{_Smi}, using unchecked entrypoint)
ParallelMove r0 <- fp[-10]
v74 <- BinaryInt64Op(+ [tr], v71 T{int}, v372 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r8 <- r8, r4 <- fp[-4], r3 <- fp[-6], r7 <- fp[-11], r6 <- fp[-12], r5 <- fp[-13] goto:360 B47
B46
B48
  Loop 3
ParallelMove r4 <- r5
v358 <- BoxInt64(v64 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- fp[-4], r2 <- r2, r3 <- r0
v157 <- StaticCall:44( createFromCharCodes<0> v3 T{Uint8List}, v44 T{int}, v358 T{int?}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-14] <- r0
v206 <- LoadField(v157 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v206, v91 T{_Smi}) T{bool} goto (81, 82)
B81
B82
  Loop 3
ParallelMove r1 <- fp[-7]
StaticCall:26( _consumeBuffer@0150898<0> v10 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-7], r2 <- fp[-14]
StaticCall:28( _addPart@0150898<0> v10 T{StringBuffer}, v157 T{String}, using unchecked entrypoint)
ParallelMove  goto:30 B83
B83
B49
  Loop 3
Branch if EqualityCompare(v64 == v5) T{bool} goto (50, 51)
B51
  Loop 3
ParallelMove r1 <- fp[-11], r0 <- fp[-12] goto:394 B53
B50
ParallelMove r0 <- fp[-5] goto:386 B57
B52
  Loop 3
ParallelMove r1 <- r5, r0 <- r6 goto:396 B53
B53
  Loop 3
ParallelMove r13 <- fp[-5], r2 <- fp[-1], r1 <- r1, r0 <- r0, r6 <- fp[-3], r4 <- fp[-4], r7 <- fp[-8], r5 <- fp[-9] goto:402 B54
B7
ParallelMove r0 <- fp[-5] goto:94 B57
B57
ParallelMove fp[-2] <- r0
Branch if RelationalOp(>, v26, v377 T{_Smi}) T{bool} goto (58, 61)
B58
ParallelMove r1 <- fp[-8]
Branch if StrictCompare:434(===, v100 T{bool}, v23 T{bool}) goto (59, 60)
BoolTest
B59
ParallelMove r1 <- fp[-7], r2 <- C
StaticCall:440( writeCharCode<0> v10, v391 T{_Smi}, using unchecked entrypoint)
ParallelMove r0 <- fp[-3] goto:462 B64
B60
ParallelMove r0 <- fp[-3], r1 <- C
StoreField(v2 T{_Utf8Decoder} . _state@10003594 = v393 T{_Smi} <int64>)
StoreField(v2 T{_Utf8Decoder} . _charOrIndex@10003594 = v5 T{int} <int64>)
ParallelMove r0 <- C
DartReturn:448(v38)
B61
ParallelMove r0 <- fp[-3]
ParallelMove  goto:464 B64
B64
StoreField(v2 T{_Utf8Decoder} . _state@10003594 = v26 <int64>)
StoreField(v2 T{_Utf8Decoder} . _charOrIndex@10003594 = v88 T{int} <int64>)
MoveArgument(sp[0] <- v10)
v33 <- StaticCall:470( toString<0> v10, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:472(v33)
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path uint32 shift operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove r4 <- r1, r3 <- r2, r2 <- r3, fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3, fp[-4] <- r5
CheckStackOverflow:8(stack=0, loop=0)
v252 <- BoxInt64(v6) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v252 T{int})
v9 <- StaticCall:10( allocateTwoByteString<0> v252 T{int}, recognized_kind = AllocateTwoByteString, result_type = T{_TwoByteString}) T{_TwoByteString}
ParallelMove r3 <- r0, r2 <- fp[-1]
v11 <- LoadField(v2 . _state@10003594) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- fp[-3]
v13 <- BinaryInt64Op(+ [tr], v4, v283 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r7 <- fp[-2]
v204 <- LoadField(v3 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v253 <- UnboxInt64([non-speculative], v204) [0, 4611686018427387903] int64
ParallelMove r0 <- r9, r1 <- r5
GenericCheckBound(v253, v4) [-9223372036854775808, 9223372036854775807] int64
v357 <- LoadField(v3 . PointerBase.data, MayLoadInnerPointer) untagged
v284 <- LoadIndexed:16([_Uint8List] v357 T{Uint8List}, v4 T{int}) [0, 255] int64
ParallelMove r5 <- C
v286 <- LoadIndexed:18([_OneByteString] v7, v284 T{_Smi}) [0, 255] int64
ParallelMove r8 <- r8
v335 <- IntConverter(int64->uint32[tr], v286) uint32
ParallelMove r11 <- C
v17 <- BinaryUint32Op(& [tr], v335 T{_Smi}, v353 T{_Smi}) [0, 31] uint32
Branch if EqualityCompare(v11 == v288 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r13 <- C, r8 <- C
ParallelMove r14 <- r12
v336 <- IntConverter(uint32->int64, v17) int64
v83 <- ShiftUint32Op(>> [tr], v354 T{_Smi}, v336 T{_Smi}) [0, 61694] uint32
ParallelMove r14 <- r10
v334 <- IntConverter(int64->uint32[tr], v284 T{_Smi}) uint32
v84 <- BinaryUint32Op(& [tr], v334 T{_Smi}, v83) [0, 61694] uint32
ParallelMove r14 <- r12
v337 <- IntConverter(uint32->int64, v17) int64
v291 <- LoadIndexed:36([_OneByteString] v8, v337 T{_Smi}) [0, 255] int64
ParallelMove r20 <- r20
v339 <- IntConverter(uint32->int64, v84) int64
ParallelMove r10 <- r19, r4 <- r20, r14 <- C goto:54 B5
B4
ParallelMove r13 <- C, r8 <- C, r14 <- C
ParallelMove r10 <- r10
v333 <- IntConverter(int64->uint32[tr], v284 T{_Smi}) uint32
v21 <- BinaryUint32Op(& [tr], v333 T{_Smi}, v355 T{_Smi}) [0, 63] uint32
v22 <- LoadField(v2 . _charOrIndex@10003594) [-9223372036854775808, 9223372036854775807] int64
v24 <- ShiftInt64Op(<< [tr], v22, v293 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r19 <- r19
v340 <- IntConverter(uint32->int64, v21) int64
v25 <- BinaryInt64Op(| [tr], v340 T{_Smi}, v24) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r12 <- r12
v338 <- IntConverter(uint32->int64, v17) int64
v26 <- BinaryInt64Op(+ [tr], v11, v338 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- C, r1 <- r19
GenericCheckBound:50(v290 T{_Smi}, v26) [-9223372036854775808, 9223372036854775807] int64
v294 <- LoadIndexed:50([_OneByteString] v8, v26 T{int}) [0, 255] int64
ParallelMove r10 <- r4, r4 <- r10 goto:56 B5
B5
ParallelMove r20 <- r6, r19 <- C, r12 <- r10, r10 <- r4, r4 <- fp[-4], r6 <- C goto:174 B15
B15
  Loop 0
  Loop Header
CheckStackOverflow:172(stack=0, loop=1)
Branch if RelationalOp(<, v30, v5) T{bool} goto (14, 16)
B14
  Loop 0
v54 <- BinaryInt64Op(+ [tr], v30, v283 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r9, r1 <- r20
GenericCheckBound(v253 T{int}, v30) [-9223372036854775808, 9223372036854775807] int64
v358 <- LoadField(v3 . PointerBase.data, MayLoadInnerPointer) untagged
v295 <- LoadIndexed:68([_Uint8List] v358 T{Uint8List}, v30 T{int}) [0, 255] int64
v296 <- LoadIndexed:70([_OneByteString] v7, v295 T{_Smi}) [0, 255] int64
ParallelMove r20 <- r20
v345 <- IntConverter(int64->uint32[tr], v296) uint32
v57 <- BinaryUint32Op(& [tr], v345 T{_Smi}, v353 T{_Smi}) [0, 31] uint32
Branch if EqualityCompare(v32 == v288 T{_Smi}) T{bool} goto (6, 10)
B6
  Loop 0
Branch if RelationalOp(>=, v33, v297 T{_Smi}) T{bool} goto (7, 8)
B7
  Loop 0
v77 <- BinaryInt64Op(+ [tr], v31, v283 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v78 <- ShiftInt64Op(>> [tr], v33, v298 T{_Smi}) [-9007199254740992, 9007199254740991] int64
v79 <- BinaryInt64Op(+ [tr], v78, v299 T{_Smi}) [-9007199254685760, 9007199254796223] int64
StoreIndexed:100([_TwoByteString] v9, v31, v79 T{int}, NoStoreBarrier)
v80 <- BinaryInt64Op(+ [tr], v77, v283 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r10
v342 <- IntConverter(int64->uint32[tr], v33) uint32
v81 <- BinaryUint32Op(& [tr], v342 T{int}, v356 T{_Smi}) [0, 1023] uint32
ParallelMove r10 <- r10
v349 <- IntConverter(uint32->int64, v81) int64
v82 <- BinaryInt64Op(+ [tr], v349 T{_Smi}, v301 T{_Smi}) [56320, 57343] int64
StoreIndexed:108([_TwoByteString] v9, v77, v82 T{int}, NoStoreBarrier)
ParallelMove r0 <- r0 goto:118 B9
B8
  Loop 0
v71 <- BinaryInt64Op(+ [tr], v31, v283 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:114([_TwoByteString] v9, v31, v33 T{int}, NoStoreBarrier)
ParallelMove r0 <- r0 goto:120 B9
B9
  Loop 0
ParallelMove r20 <- r24
v346 <- IntConverter(uint32->int64, v57) int64
v74 <- ShiftUint32Op(>> [tr], v354 T{_Smi}, v346 T{_Smi}) [0, 61694] uint32
ParallelMove r20 <- r25
v344 <- IntConverter(int64->uint32[tr], v295 T{_Smi}) uint32
v75 <- BinaryUint32Op(& [tr], v344 T{_Smi}, v74) [0, 61694] uint32
ParallelMove r20 <- r24
v347 <- IntConverter(uint32->int64, v57) int64
v302 <- LoadIndexed:126([_OneByteString] v8, v347 T{_Smi}) [0, 255] int64
ParallelMove r25 <- r25
v350 <- IntConverter(uint32->int64, v75) int64
ParallelMove r19 <- r0, r12 <- r1, r10 <- r25 goto:162 B13
B10
  Loop 0
Branch if TestInt(v32, v283) goto (11, 12)
B12
  Loop 0
ParallelMove r25 <- r25
v343 <- IntConverter(int64->uint32[tr], v295 T{_Smi}) uint32
v60 <- BinaryUint32Op(& [tr], v343 T{_Smi}, v355 T{_Smi}) [0, 63] uint32
v61 <- ShiftInt64Op(<< [tr], v33, v293 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r20 <- r20
v351 <- IntConverter(uint32->int64, v60) int64
v62 <- BinaryInt64Op(| [tr], v351 T{_Smi}, v61) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r24 <- r24
v348 <- IntConverter(uint32->int64, v57) int64
v63 <- BinaryInt64Op(+ [tr], v32, v348 T{_Smi}) [0, 286] int64
ParallelMove r0 <- C, r1 <- r20
GenericCheckBound:158(v290 T{_Smi}, v63) [-9223372036854775808, 9223372036854775807] int64
v304 <- LoadIndexed:158([_OneByteString] v8, v63 T{int}) [0, 255] int64
ParallelMove r19 <- r19, r12 <- r1, r10 <- r10 goto:164 B13
B13
  Loop 0
ParallelMove r20 <- r23, r19 <- r19, r12 <- r12, r10 <- r10 goto:170 B15
B11
StoreField(v2 T{_Utf8Decoder} . _state@10003594 = v32 <int64>)
v66 <- BinaryInt64Op(- [tr], v54, v303 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_Utf8Decoder} . _charOrIndex@10003594 = v66 T{int} <int64>)
ParallelMove r0 <- C
DartReturn:146(v40)
B16
Branch if EqualityCompare(v32 == v288 T{_Smi}) T{bool} goto (17, 21)
B17
Branch if RelationalOp(>=, v33, v297 T{_Smi}) T{bool} goto (18, 19)
B18
v44 <- BinaryInt64Op(+ [tr], v31, v283 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v47 <- ShiftInt64Op(>> [tr], v33, v298 T{_Smi}) [-9007199254740992, 9007199254740991] int64
v48 <- BinaryInt64Op(+ [tr], v47, v299 T{_Smi}) [-9007199254685760, 9007199254796223] int64
StoreIndexed:204([_TwoByteString] v9, v31, v48 T{int}, NoStoreBarrier)
ParallelMove r5 <- r10
v341 <- IntConverter(int64->uint32[tr], v33) uint32
v52 <- BinaryUint32Op(& [tr], v341 T{int}, v356 T{_Smi}) [0, 1023] uint32
ParallelMove r7 <- r7
v352 <- IntConverter(uint32->int64, v52) int64
v53 <- BinaryInt64Op(+ [tr], v352 T{_Smi}, v301 T{_Smi}) [56320, 57343] int64
StoreIndexed:212([_TwoByteString] v9, v44, v53 T{int}, NoStoreBarrier)
ParallelMove  goto:222 B20
B19
StoreIndexed:218([_TwoByteString] v9, v31, v33 T{int}, NoStoreBarrier)
ParallelMove  goto:224 B20
B20
B21
Branch if TestInt(v32, v283) goto (22, 23)
B22
StoreField(v2 T{_Utf8Decoder} . _state@10003594 = v32 <int64>)
v39 <- BinaryInt64Op(- [tr], v5, v283 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_Utf8Decoder} . _charOrIndex@10003594 = v39 T{int} <int64>)
ParallelMove r0 <- C
DartReturn:244(v40)
B23
B24
StoreField(v2 T{_Utf8Decoder} . _state@10003594 = v32 <int64>)
StoreField(v2 T{_Utf8Decoder} . _charOrIndex@10003594 = v33 T{int} <int64>)
ParallelMove r0 <- r3
DartReturn:258(v9)
CheckStackOverflowSlowPath
slow path check bound operation
slow path uint32 shift operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path uint32 shift operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r4 <- r1, r3 <- r2, r2 <- r3, fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3, fp[-4] <- r5
CheckStackOverflow:8(stack=0, loop=0)
v172 <- BoxInt64(v6) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v172 T{int})
v7 <- StaticCall:10( allocateOneByteString<0> v172 T{int}, recognized_kind = AllocateOneByteString, result_type = T{_OneByteString}) T{_OneByteString}
ParallelMove r3 <- r0, r2 <- fp[-1]
v9 <- LoadField(v2 . _state@10003594) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v9 == v185 T{_Smi}) T{bool} goto (3, 6)
B3
ParallelMove r5 <- fp[-2], r4 <- fp[-3]
v50 <- BinaryInt64Op(+ [tr], v4, v115 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v140 <- LoadField(v3 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v173 <- UnboxInt64([non-speculative], v140) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r4
GenericCheckBound(v173, v4) [-9223372036854775808, 9223372036854775807] int64
v216 <- LoadField(v3 . PointerBase.data, MayLoadInnerPointer) untagged
v186 <- LoadIndexed:26([_Uint8List] v216 T{Uint8List}, v4 T{int}) [0, 255] int64
v52 <- BinaryInt64Op(^ [tr], v186 T{_Smi}, v187 T{_Smi}) [0, 255] int64
Branch if RelationalOp(>=, v52, v188 T{_Smi}) T{bool} goto (4, 5)
B4
ParallelMove r8 <- C
StoreField(v2 T{_Utf8Decoder} . _state@10003594 = v189 T{_Smi} <int64>)
v58 <- BinaryInt64Op(- [tr], v50, v115 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_Utf8Decoder} . _charOrIndex@10003594 = v58 T{int} <int64>)
ParallelMove r0 <- C
DartReturn:46(v45)
B5
ParallelMove r8 <- C, r9 <- C
v55 <- LoadField(v2 . _charOrIndex@10003594) [-9223372036854775808, 9223372036854775807] int64
v56 <- ShiftInt64Op(<< [tr], v55, v190 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v57 <- BinaryInt64Op(| [tr], v56, v52) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:58([_OneByteString] v7, v8, v57 T{int}, NoStoreBarrier)
StoreField(v2 T{_Utf8Decoder} . _state@10003594 = v191 T{_Smi} <int64>)
ParallelMove r6 <- r6, r4 <- C goto:66 B7
B6
ParallelMove r5 <- fp[-2], r4 <- fp[-3], r8 <- C
ParallelMove r6 <- r4, r4 <- C goto:68 B7
B7
v143 <- LoadField:184(v3 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v176 <- UnboxInt64:184([non-speculative], v143) [0, 4611686018427387903] int64
ParallelMove r12 <- r6, r11 <- r4, r4 <- fp[-4], r10 <- C, r7 <- C, r6 <- C goto:184 B19
B19
  Loop 0
  Loop Header
CheckStackOverflow:182(stack=0, loop=1)
Branch if RelationalOp(<, v16, v5) T{bool} goto (18, 20)
B18
  Loop 0
v24 <- BinaryInt64Op(+ [tr], v16, v115 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r9, r1 <- r12
GenericCheckBound(v176, v16) [-9223372036854775808, 9223372036854775807] int64
v217 <- LoadField(v3 . PointerBase.data, MayLoadInnerPointer) untagged
v192 <- LoadIndexed:80([_Uint8List] v217 T{Uint8List}, v16 T{int}) [0, 255] int64
Branch if RelationalOp(>=, v192 T{_Smi}, v187 T{_Smi}) T{bool} goto (8, 16)
B8
  Loop 0
Branch if RelationalOp(<, v192 T{_Smi}, v193 T{_Smi}) T{bool} goto (9, 10)
B10
  Loop 0
Branch if EqualityCompare(v24 == v5) T{bool} goto (11, 13)
B13
  Loop 0
v35 <- BinaryInt64Op(+ [tr], v24, v115 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r9, r1 <- r13
GenericCheckBound(v176 T{int}, v24) [-9223372036854775808, 9223372036854775807] int64
v218 <- LoadField(v3 . PointerBase.data, MayLoadInnerPointer) untagged
v196 <- LoadIndexed:136([_Uint8List] v218 T{Uint8List}, v24 T{int}) [0, 255] int64
v37 <- BinaryInt64Op(^ [tr], v196 T{_Smi}, v187 T{_Smi}) [0, 255] int64
Branch if RelationalOp(>=, v37, v188 T{_Smi}) T{bool} goto (14, 15)
B15
  Loop 0
v41 <- ShiftInt64Op(<< [tr], v192 T{_Smi}, v190 T{_Smi}) [0, 16320] int64
v42 <- BinaryInt64Op(| [tr], v41, v37) [0, 16383] int64
ParallelMove r12 <- r12, r1 <- r20 goto:168 B17
B14
StoreField(v2 T{_Utf8Decoder} . _state@10003594 = v189 T{_Smi} <int64>)
v44 <- BinaryInt64Op(- [tr], v35, v115 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_Utf8Decoder} . _charOrIndex@10003594 = v44 T{int} <int64>)
ParallelMove r0 <- C
DartReturn:156(v45)
B11
StoreField(v2 T{_Utf8Decoder} . _state@10003594 = v185 T{_Smi} <int64>)
ParallelMove r1 <- r19
v213 <- IntConverter(int64->uint32[tr], v192 T{_Smi}) uint32
v47 <- BinaryUint32Op(& [tr], v213 T{_Smi}, v215 T{_Smi}) [0, 31] uint32
ParallelMove r12 <- r12
v214 <- IntConverter(uint32->int64, v47) int64
StoreField(v2 T{_Utf8Decoder} . _charOrIndex@10003594 = v214 T{_Smi} <int64>)
ParallelMove  goto:130 B12
B9
StoreField(v2 T{_Utf8Decoder} . _state@10003594 = v194 T{_Smi} <int64>)
v49 <- BinaryInt64Op(- [tr], v24, v115 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_Utf8Decoder} . _charOrIndex@10003594 = v49 T{int} <int64>)
ParallelMove r0 <- C
DartReturn:108(v45)
B16
  Loop 0
ParallelMove r12 <- r13, r1 <- r19 goto:170 B17
B17
  Loop 0
v31 <- BinaryInt64Op(+ [tr], v17, v115 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:174([_OneByteString] v7, v17, v29 T{int}, NoStoreBarrier)
ParallelMove r12 <- r12, r11 <- r0 goto:180 B19
B20
B12
ParallelMove r0 <- r3
DartReturn:190(v7)
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v42 <- BoxInt64(v3) [-4611686018427387904, 4611686018427387903] T{_Smi}
ParallelMove r4 <- r4
v28 <- AllocateTypedData:10(v42 T{_Smi}, <not-aliased>) T{_Uint8List}
ParallelMove r2 <- r0
ParallelMove fp[-4] <- r2
ParallelMove r5 <- C goto:58 B8
B8
  Loop 0
  Loop Header
ParallelMove fp[-3] <- r5
CheckStackOverflow:62(stack=0, loop=1)
Branch if RelationalOp(<, v7, v3) T{bool} goto (3, 4)
B3
  Loop 0
v43 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v53 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v43 T{int})
ParallelMove r0 <- r1
v12 <- DispatchTableCall( cid=v53 List.[]<0>, v2, v43 T{int}) T{*?}
ParallelMove r0 <- r0
v44 <- UnboxInt64([non-speculative], v12 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v44, v33) goto (5, 6)
B5
  Loop 0
ParallelMove r2 <- C goto:50 B7
B6
  Loop 0
ParallelMove r2 <- r1 goto:52 B7
B7
  Loop 0
StoreIndexed:54([_Uint8List] v28 T{_Uint8List}, v7 T{int}, v17 T{int}, NoStoreBarrier)
v19 <- BinaryInt64Op(+ [tr], v7 T{int}, v50 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r5, r2 <- r0 goto:60 B8
B4
ParallelMove r0 <- r2
ParallelMove r0 <- r0
DartReturn:64(v28 T{_Uint8List})
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-4] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v110 <- LoadField(v2 T{Uint8List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove fp[-3] <- r2
v213 <- UnboxInt64([non-speculative], v110 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove fp[-2] <- r3
v49 <- EqualityCompare(v213 T{_Smi} == v224 T{_Smi}) T{bool}
ParallelMove fp[-1] <- r4
Branch if StrictCompare:14(===, v49 T{bool}, v4) goto (6, 4)
BoolTest
B6
ParallelMove r2 <- r3 goto:44 B5
B4
ParallelMove r1 <- r0
v5 <- StaticCall:18( get:isNotEmpty<0> v2, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:22(===, v5 T{bool}, v4) goto (3, 9)
BoolTest
B3
ParallelMove r2 <- fp[-4]
v249 <- LoadClassId(<non-smi> v2) int64
ParallelMove r0 <- r0, r1 <- r2
v6 <- DispatchTableCall( cid=v249 Iterable.last<0>, v2) T{*?}
ParallelMove r0 <- r0
Branch if StrictCompare(!==, v6 T{_Smi}, v7 T{_Smi}) T{bool} goto (7, 10)
B7
ParallelMove r2 <- fp[-2] goto:48 B5
B5
v11 <- BinaryInt64Op(+ [tr], v213 T{_Smi}, v226 T{_Smi}) [v213+1, v213+1] int64
ParallelMove fp[-5] <- r3
v216 <- BoxInt64(v11 T{int}) [v213+1, v213+1] T{int}
ParallelMove r4 <- r0
v24 <- AllocateTypedData:10(v216 T{int}) T{_Uint8List}
ParallelMove r4 <- r0, r0 <- fp[-2]
ParallelMove fp[-6] <- r4
Branch if RelationalOp(>, v224 T{_Smi}, v213 T{_Smi}) T{bool} goto (30, 27)
B30
ParallelMove r3 <- fp[-5] goto:48 B28
B27
ParallelMove r3 <- fp[-5]
Branch if RelationalOp(>, v213 T{_Smi}, v11 T{_Smi}) T{bool} goto (31, 32)
B31
B28
ParallelMove r1 <- C, r2 <- fp[-3], r3 <- r3
StaticCall:56( checkValidRange<0> v224 T{_Smi}, v110 T{_Smi}, v11 T{_Smi}) int64
ParallelMove  goto:62 B36
B32
B36
v250 <- LoadClassId(<non-smi> v2) int64
ParallelMove r0 <- r0, r1 <- r2
v70 <- DispatchTableCall( cid=v250 _TypedListBase.elementSizeInBytes<0>, v2) int64
ParallelMove r0 <- r0
Branch if EqualityCompare(v70 T{_Smi} == v226 T{_Smi}) T{bool} goto (37, 44)
B37
ParallelMove r2 <- fp[-2]
Branch if RelationalOp(<, v213 T{_Smi}, v213 T{_Smi}) T{bool} goto (38, 39)
B39
ParallelMove r0 <- fp[-1]
Branch if StrictCompare:134(===, v49 T{bool}, v4 T{bool}) goto (40, 41)
BoolTest
B40
B41
ParallelMove r0 <- fp[-3]
Branch if RelationalOp:10(<, v110 T{_Smi}, v173 T{_Smi}) T{bool} goto (61, 62)
B61
ParallelMove r5 <- fp[-4], r20 <- fp[-6]
v251 <- LoadField(v2 . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r0
MemoryCopy(v251 T{Uint8List}, v24 T{_Uint8List}, v7 T{_Smi}, v7 T{_Smi}, v110 T{_Smi}, dest_cid=_Int8List (111), src_cid=_Int8List (111) [untagged], can_overlap)
Copying backwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
Copying forwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
ParallelMove  goto:10 B60
B62
ParallelMove r5 <- fp[-4], r20 <- fp[-6]
v162 <- LoadField(v24 T{_Uint8List} . PointerBase.data, MayLoadInnerPointer) untagged
v165 <- LoadField(v2 . PointerBase.data, MayLoadInnerPointer) untagged
v167 <- LoadThread() untagged
v168 <- LoadUntagged(v167, 1536) untagged
ParallelMove r0 <- r0, r1 <- r1, r2 <- r2, r9 <- r9
LeafRuntimeCall(target_address=v168, v162 T{Object}, v165 T{Object}, v213 T{int}) untagged
ParallelMove  goto:10 B60
B60
B44
ParallelMove r5 <- fp[-4], r20 <- fp[-6], r2 <- fp[-2]
ParallelMove r1 <- r20, r2 <- C, r3 <- r2, r5 <- r5, r6 <- C
StaticCall:158( _slowSetRange@7027147<0> v24 T{_Uint8List}, v224 T{_Smi}, v213 T{_Smi}, v2 T{Uint8List}, v224 T{_Smi}, using unchecked entrypoint, result_type = T{Null?})
ParallelMove  goto:160 B45
B45
ParallelMove r0 <- fp[-6]
DartReturn:60(v24 T{_Uint8List})
B10
ParallelMove r5 <- fp[-4]
ParallelMove  goto:70 B8
B9
ParallelMove r5 <- fp[-4]
ParallelMove  goto:66 B8
B8
ParallelMove r0 <- r5
DartReturn:72(v2)
B38
v79 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v79)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v2 <- AllocateObject:10(cls=StateError) T{StateError}
ParallelMove r0 <- r0, r1 <- C
StoreField(v2 T{StateError} . message = v3 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:14(v2)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v44 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
v24 <- LoadStaticField:4(_ioOverridesToken@15069316, CallsInitializer) T{Object}
v4 <- AllocateObject:12(cls=_Directory, <not-aliased>) T{_Directory}
ParallelMove r0 <- r0, r1 <- fp[2]
ParallelMove fp[-1] <- r0
StoreField(v4 T{_Directory} . _path@15069316 = v3, NoStoreBarrier)
ParallelMove r1 <- r1
v17 <- StaticCall:12( _toUtf8Array@15069316<0> v3 T{String}, result_type = T{_Uint8List}) T{_Uint8List}
ParallelMove r0 <- fp[-1]
DartReturn:16(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r2 <- r1
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- r2
v13 <- StaticCall:10( convert<0> v14 T{Utf8Encoder}, v2 T{String}, using unchecked entrypoint, result_type = T{_Uint8List}) T{_Uint8List}
ParallelMove r1 <- r0
v5 <- StaticCall:12( _toNullTerminatedUtf8Array@15069316<0> v13 T{_Uint8List}, result_type = T{_Uint8List}) T{_Uint8List}
ParallelMove r0 <- r0
DartReturn:14(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v2 <- AllocateObject:6(cls=Object) T{Object}
ParallelMove r0 <- r0
DartReturn:10(v2)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v2 <- LoadStaticField(_cachedNamespace@15069316) T{_NamespaceImpl?}
Branch if StrictCompare:10(===, v2, v0) goto (3, 4)
B3
v5 <- StaticCall:20( _getDefault@15069316<0> , result_type = T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
v4 <- AllocateObject:16(cls=_NamespaceImpl) T{_NamespaceImpl}
ParallelMove r0 <- r0
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v5)
v6 <- StaticCall:22( _create@15069316<0> v4, v5, result_type = T{_NamespaceImpl}) T{_NamespaceImpl}
ParallelMove r0 <- r0
StoreStaticField(_cachedNamespace@15069316, v6)
ParallelMove r0 <- r0 goto:28 B5
B4
B5
ParallelMove r0 <- r0
DartReturn:34(v23 T{_NamespaceImpl})
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v18 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
v9 <- LoadStaticField:4(_ioOverridesToken@15069316, CallsInitializer) T{Object}
ParallelMove r0 <- C
DartReturn:16(v0)
CheckStackOverflowSlowPath
B0
B1
ParallelMove r2 <- C, r1 <- C
StoreStaticField(eventHandlerSendData, v2)
StoreStaticField(timerMillisecondClock, v3)
ParallelMove r0 <- C
DartReturn:10(v0)
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v4 <- StaticCall:10( _timerMillisecondClock@15069316<0> ) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
DartReturn:12(v4)
CheckStackOverflowSlowPath
B0
B1
ParallelMove r0 <- r2
StoreField(v2 . end = v3)
ParallelMove r0 <- C
DartReturn:4(v0)
B0
B1
v3 <- LoadField(v2 . end) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
DartReturn:4(v3)
B0
B1
ParallelMove r0 <- r2
StoreField(v2 . start = v3)
ParallelMove r0 <- C
DartReturn:4(v0)
B0
B1
ParallelMove r0 <- r2
StoreField(v2 . data = v3)
ParallelMove r0 <- C
DartReturn:4(v0)
B0
B1
Enter frame
ParallelMove r1 <- C, r0 <- C
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r3 <- fp[4]
StoreField(v2 . _asyncDispatched@15069316 = v5)
StoreField(v2 . _resourceInfo@15069316 = v6)
StoreField(v2 . closed = v5)
ParallelMove r0 <- fp[2]
StoreField(v2 . path = v4)
ParallelMove r0 <- fp[3]
v25 <- UnboxInt64([non-speculative], v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- C, r2 <- r2
v14 <- StaticCall:10( _RandomAccessFileOpsImpl@15069316.<0> v0 T{Null?}, v25 T{int}, result_type = T{_RandomAccessFileOpsImpl}) T{_RandomAccessFileOpsImpl}
ParallelMove r0 <- r0, r1 <- fp[4]
StoreField(v2 . _ops@15069316 = v14)
v8 <- AllocateObject:14(cls=_FileResourceInfo) T{_FileResourceInfo}
ParallelMove r1 <- r0, r0 <- r0
ParallelMove fp[-1] <- r0
StaticCall:16( _FileResourceInfo@15069316.<0> v8)
ParallelMove r0 <- fp[-1], r1 <- fp[4]
StoreField(v2 T{_RandomAccessFile} . _resourceInfo@15069316 = v8 T{_FileResourceInfo})
ParallelMove r0 <- C
DartReturn:22(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- C
ParallelMove r2 <- r1
CheckStackOverflow:8(stack=0, loop=0)
StoreField(v2 T{_FileResourceInfo} . readBytes = v26 T{_Smi} <int64>)
StoreField(v2 T{_FileResourceInfo} . readCount = v26 T{_Smi} <int64>)
v16 <- LoadStaticField(_count@15069316) [-9223372036854775808, 9223372036854775807] T{int}
v24 <- UnboxInt64([non-speculative], v16) [-9223372036854775808, 9223372036854775807] int64
v18 <- BinaryInt64Op(+ [tr], v24 T{int}, v27 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v25 <- BoxInt64(v18) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreStaticField(_count@15069316, v25 T{int})
StoreField(v2 T{_FileResourceInfo} . id = v24 T{int} <int64>)
ParallelMove r1 <- r2
StaticCall:12( fileOpened<0> v2)
ParallelMove r0 <- C
DartReturn:14(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r3 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v7 <- LoadStaticField:4(openFiles, CallsInitializer) T{_Map}
ParallelMove r2 <- r0, r3 <- fp[-1]
v4 <- LoadField(v2 . id {final}) [-9223372036854775808, 9223372036854775807] int64
v8 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r2, r2 <- r0, r3 <- r3
StaticCall:14( []=<0> v7, v8 T{int}, v2, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:16(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:4(stack=0, loop=0)
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v3)
v4 <- StaticCall:6( Map._fromLiteral@0150898<0> v2, v3) T{Map<X0, X1>}
ParallelMove r0 <- r0
DartReturn:8(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v48 <- LoadStaticField:4(_uninitializedIndex@3220832, CallsInitializer) T{_Uint32List}
ParallelMove r1 <- fp[3], r0 <- r0
ParallelMove fp[-1] <- r0
v4 <- AllocateObject:10(cls=_Map, v2) T{_Map}
ParallelMove r1 <- r0, r0 <- fp[-1]
ParallelMove fp[-2] <- r1
StoreField(v4 T{_Map} . LinkedHashBase.index = v48 T{_Uint32List}, NoStoreBarrier)
StoreField(v4 T{_Map} . LinkedHashBase.hash_mask = v41 T{_Smi}, NoStoreBarrier)
v63 <- LoadStaticField:4(_uninitializedData@3220832, CallsInitializer) T{_List}
ParallelMove r0 <- r0, r1 <- fp[-2]
StoreField(v4 T{_Map} . LinkedHashBase.data = v63 T{_List}, NoStoreBarrier)
StoreField(v4 T{_Map} . LinkedHashBase.used_data = v41 T{_Smi}, NoStoreBarrier)
StoreField(v4 T{_Map} . LinkedHashBase.deleted_keys = v41 T{_Smi}, NoStoreBarrier)
ParallelMove r2 <- fp[2]
v111 <- LoadClassId(<non-smi> v3) int64
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r0
v5 <- DispatchTableCall( cid=v111 List.length<0>, v3) T{int}
ParallelMove r0 <- r0
v105 <- UnboxInt64:44([non-speculative], v5 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove fp[-4] <- r2
ParallelMove r4 <- C goto:44 B5
B5
  Loop 0
  Loop Header
ParallelMove fp[-3] <- r4
CheckStackOverflow:48(stack=0, loop=1)
Branch if RelationalOp(<, v7, v105 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 0
v10 <- BinaryInt64Op(- [tr], v7, v109 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v107 <- BoxInt64(v10) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v112 <- LoadClassId(<non-smi> v3) int64
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v107 T{int})
ParallelMove r0 <- r1
v11 <- DispatchTableCall( cid=v112 List.[]<0>, v3, v107 T{int}) T{*?}
ParallelMove r0 <- r0, r2 <- fp[3], r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
t1 <- AssertAssignable:34(v11 T{X0?}, v12, '', instantiator_type_args(v2), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[-3]
v106 <- BoxInt64(v7) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0, r1 <- fp[2]
v113 <- LoadClassId(<non-smi> v3) int64
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v106 T{int})
ParallelMove r0 <- r3
v14 <- DispatchTableCall( cid=v113 List.[]<0>, v3, v106 T{int}) T{*?}
ParallelMove r0 <- r0, r2 <- fp[3], r1 <- C, r3 <- r0
ParallelMove fp[-5] <- r3
t2 <- AssertAssignable:38(v14 T{X0?}, v15, '', instantiator_type_args(v2), function_type_args(v0)) T{X1?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-2], r2 <- fp[-1]
v33 <- StaticCall:14( _hashCode@3220832<0> v4 T{_Map}, v11 T{X0?}, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-2], r2 <- fp[-1], r3 <- fp[-5], r5 <- r0
StaticCall:16( _set@3220832<0> v4 T{_Map}, v11 T{X0?}, v14 T{X1?}, v33, using unchecked entrypoint)
ParallelMove r1 <- fp[-3]
v18 <- BinaryInt64Op(+ [tr], v7, v110 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- r4, r2 <- fp[-4] goto:46 B5
B4
ParallelMove r0 <- fp[-2]
DartReturn:50(v4)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v13 <- BoxInt64(v3) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
v4 <- AllocateObject:10(cls=_RandomAccessFileOpsImpl) T{_RandomAccessFileOpsImpl}
ParallelMove r0 <- r0
ParallelMove fp[-2] <- r0
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v13 T{int})
StaticCall:14( _setPointer@15069316<0> v4, v13 T{int}, using unchecked entrypoint)
ParallelMove r0 <- fp[-2]
DartReturn:16(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v4 <- LoadField(v2 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v6 <- BinarySmiOp:4(- [tr], v4, v5) [-1, 4611686018427387902] T{_Smi}
v7 <- LoadIndexedUnsafe(fp[v6 + 16]) T{*?}
Branch if RelationalOp:6(<=, v5, v6) T{bool} goto (2, 3)
B2
v15 <- LoadIndexedUnsafe(fp[v6 T{_Smi} + 8]) T{String}
Branch if RelationalOp:20(<=, v16, v6 T{_Smi}) T{bool} goto (5, 6)
B5
v18 <- LoadIndexedUnsafe(fp[v6 T{_Smi} + 0]) T{OSError??}
ParallelMove r0 <- r3, r3 <- r4 goto:36 B8
B6
ParallelMove r2 <- r3 goto:30 B4
B3
ParallelMove r2 <- C goto:18 B4
B4
ParallelMove r0 <- r2, r3 <- C goto:34 B8
B8
StoreField(v7 T{TlsException} . type = v14 T{_OneByteString})
ParallelMove r0 <- r0
StoreField(v7 T{TlsException} . message = v12 T{String})
ParallelMove r0 <- r3
StoreField(v7 T{TlsException} . osError = v13 T{OSError?})
ParallelMove r0 <- C
DartReturn:46(v0)
B0
B1
ParallelMove r0 <- C
DartReturn:8(v7 T{_Smi})
B0
B1
ParallelMove r0 <- C
DartReturn:8(v7 T{_Smi})
B0
B1
Enter frame
v2 <- LoadStaticField:4(ENCRYPTED_SIZE, CallsInitializer) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
DartReturn:6(v2)
B0
B1
Enter frame
v2 <- LoadStaticField:4(SIZE, CallsInitializer) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
DartReturn:6(v2)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
v11 <- StaticCall:10( _toNullTerminatedUtf8Array@15069316<0> v3 T{Uint8List}, result_type = T{!null}) T{Uint8List}
ParallelMove r1 <- fp[2]
v12 <- StaticCall:12( _toStringFromUtf8Array@15069316<0> v3 T{Uint8List}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
v4 <- AllocateObject:10(cls=_Link) T{_Link}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v4 T{_Link} . _path@15069316 = v12, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:14(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v34 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
v21 <- LoadStaticField:4(_ioOverridesToken@15069316, CallsInitializer) T{Object}
v4 <- AllocateObject:12(cls=_Link, <not-aliased>) T{_Link}
ParallelMove r0 <- r0, r1 <- fp[2]
ParallelMove fp[-1] <- r0
StoreField(v4 T{_Link} . _path@15069316 = v3 T{String}, NoStoreBarrier)
ParallelMove r1 <- r1
v15 <- StaticCall:10( _toUtf8Array@15069316<0> v3 T{String}, result_type = T{_Uint8List}) T{_Uint8List}
ParallelMove r0 <- fp[-1]
DartReturn:16(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v3 <- AllocateObject:10(cls=_X509CertificateImpl) T{_X509CertificateImpl}
ParallelMove r0 <- r0
DartReturn:14(v3)
B0
B1
ParallelMove r0 <- sp[0], r1 <- sp[1]
StoreField(v2 . _instantiator_type_arguments@0150898 = v3)
ParallelMove r0 <- C
DartReturn:4(v0)
B0
B1
Enter frame
v4 <- LoadField(v2 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v6 <- BinarySmiOp:4(- [tr], v4, v5) [-1, 4611686018427387902] T{_Smi}
v7 <- LoadIndexedUnsafe(fp[v6 + 16]) T{*?}
Branch if RelationalOp:6(<=, v5, v6) T{bool} goto (2, 3)
B2
v15 <- LoadIndexedUnsafe(fp[v6 T{_Smi} + 8]) T{String}
Branch if RelationalOp:20(<=, v16, v6 T{_Smi}) T{bool} goto (5, 6)
B5
v18 <- LoadIndexedUnsafe(fp[v6 T{_Smi} + 0]) T{OSError??}
ParallelMove r0 <- r3, r3 <- r4 goto:36 B8
B6
ParallelMove r2 <- r3 goto:30 B4
B3
ParallelMove r2 <- C goto:18 B4
B4
ParallelMove r0 <- r2, r3 <- C goto:34 B8
B8
StoreField(v7 T{TlsException} . type = v14 T{_OneByteString})
ParallelMove r0 <- r0
StoreField(v7 T{TlsException} . message = v12 T{String})
ParallelMove r0 <- r3
StoreField(v7 T{TlsException} . osError = v13 T{OSError?})
ParallelMove r0 <- C
DartReturn:46(v0)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
v13 <- StaticCall:12( _toNullTerminatedUtf8Array@15069316<0> v3, result_type = T{!null}) T{Uint8List}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
v4 <- AllocateObject:10(cls=_File) T{_File}
ParallelMove r2 <- r0, r0 <- fp[-1]
ParallelMove fp[-2] <- r2
StoreField(v4 T{_File} . _rawPath@15069316 = v13, NoStoreBarrier)
ParallelMove r1 <- fp[2]
v14 <- StaticCall:14( _toStringFromUtf8Array@15069316<0> v3 T{Uint8List}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0, r1 <- fp[-2]
StoreField(v4 T{_File} . _path@15069316 = v14)
ParallelMove r0 <- r1
DartReturn:14(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v44 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
v24 <- LoadStaticField:4(_ioOverridesToken@15069316, CallsInitializer) T{Object}
v4 <- AllocateObject:12(cls=_File, <not-aliased>) T{_File}
ParallelMove r0 <- r0, r1 <- fp[2]
ParallelMove fp[-1] <- r0
StoreField(v4 T{_File} . _path@15069316 = v3, NoStoreBarrier)
ParallelMove r1 <- r1
v17 <- StaticCall:12( _toUtf8Array@15069316<0> v3 T{String}, result_type = T{_Uint8List}) T{_Uint8List}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v4 T{_File} . _rawPath@15069316 = v17)
ParallelMove r0 <- r1
DartReturn:16(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v2 <- AllocateObject:6(cls=_ResourceHandleImpl, <not-aliased>) T{_ResourceHandleImpl}
ParallelMove r0 <- r0, r1 <- C
StoreField(v2 T{_ResourceHandleImpl} . _handle@15069316 = v11 <int64>, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:12(v2)
B0
B1
ParallelMove r1 <- sp[0]
v4 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- sp[1]
StoreField(v2 . _handle@15069316 = v4 T{int} <int64>)
ParallelMove r0 <- C
DartReturn:4(v0)
B0
B1
Enter frame
v2 <- LoadStaticField:4(_sentinel@15069316, CallsInitializer) T{_ResourceHandleImpl}
ParallelMove r0 <- r0
DartReturn:6(v2)
B0
B1
ParallelMove r2 <- sp[0]
v3 <- LoadField(v2 . level {final}) [-9223372036854775808, 9223372036854775807] int64
v4 <- BoxInt64(v3) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
DartReturn:4(v4 T{int})
B0
B1
Enter frame
v4 <- LoadField(v2 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v6 <- BinarySmiOp:4(- [tr], v4, v5) [-1, 4611686018427387902] T{_Smi}
v7 <- LoadIndexedUnsafe(fp[v6 + 16]) T{*?}
Branch if RelationalOp:6(<=, v5, v6) T{bool} goto (2, 3)
B2
v15 <- LoadIndexedUnsafe(fp[v6 T{_Smi} + 8]) T{String}
Branch if RelationalOp:20(<=, v16, v6 T{_Smi}) T{bool} goto (5, 6)
B5
v18 <- LoadIndexedUnsafe(fp[v6 T{_Smi} + 0]) T{OSError??}
ParallelMove r0 <- r3, r3 <- r4 goto:36 B8
B6
ParallelMove r2 <- r3 goto:30 B4
B3
ParallelMove r2 <- C goto:18 B4
B4
ParallelMove r0 <- r2, r3 <- C goto:34 B8
B8
StoreField(v7 T{TlsException} . type = v14 T{_OneByteString})
ParallelMove r0 <- r0
StoreField(v7 T{TlsException} . message = v12 T{String})
ParallelMove r0 <- r3
StoreField(v7 T{TlsException} . osError = v13 T{OSError?})
ParallelMove r0 <- C
DartReturn:46(v0)
B0
B1
ParallelMove r1 <- sp[2]
v6 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- sp[3]
StoreField(v2 . level = v6 T{int} <int64>)
ParallelMove r2 <- sp[1]
v7 <- UnboxInt64([non-speculative], v4) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 . type = v7 T{int} <int64>)
ParallelMove r0 <- sp[0]
StoreField(v2 . data = v5)
ParallelMove r0 <- C
DartReturn:12(v0)
B0
B1
ParallelMove r2 <- sp[0]
v3 <- LoadField(v2 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
v4 <- BoxInt64(v3) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
DartReturn:4(v4 T{int})
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v2 <- LoadStaticField(_receivePort@1026248) T{_RawReceivePort?}
Branch if StrictCompare:10(===, v2, v0) goto (3, 4)
B3
ParallelMove r1 <- C, r2 <- C
v5 <- StaticCall:16( _RawReceivePort@1026248.<0> v0, v4, result_type = T{_RawReceivePort}) T{_RawReceivePort}
ParallelMove r1 <- r0, r0 <- C
StoreField(v5 T{_RawReceivePort} . ReceivePort.handler = v6 T{_Closure})
v20 <- LoadField(v5 T{_RawReceivePort} . ReceivePort.send_port {final}) T{_SendPort?}
StoreStaticField(_sendPort@1026248, v20 T{_SendPort})
StoreStaticField(_receivePort@1026248, v5)
ParallelMove r0 <- C
StoreStaticField(_scheduledWakeupTime@1026248, v8)
ParallelMove  goto:28 B5
B4
MoveArgument(sp[1] <- v2 T{_RawReceivePort})
MoveArgument(sp[0] <- v3)
StaticCall:24( _setActive@1026248<0> v2 T{_RawReceivePort}, v3, using unchecked entrypoint)
ParallelMove  goto:30 B5
B5
StoreStaticField(_receivePortActive@1026248, v3)
ParallelMove r0 <- C
DartReturn:32(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v19 <- LoadStaticField:4(_portMap@1026248, CallsInitializer) T{_Map}
ParallelMove r1 <- r0, r2 <- fp[3]
v5 <- StaticCall:12( []<0> v19, v2, using unchecked entrypoint, result_type = T{_RawReceivePort?}) T{_RawReceivePort?}
ParallelMove r0 <- r0
Branch if StrictCompare:14(===, v5, v0) goto (3, 4)
B3
ParallelMove r0 <- C goto:26 B5
B4
v16 <- LoadField(v5 T{_RawReceivePort} . ReceivePort.handler) T{_Closure?}
ParallelMove r0 <- r1 goto:28 B5
B5
ParallelMove fp[-1] <- r0
Branch if StrictCompare:30(===, v7, v0) goto (6, 7)
B6
ParallelMove r0 <- C
DartReturn:36(v0)
B7
MoveArgument(sp[1] <- v7 T{_Closure})
MoveArgument(sp[0] <- v3)
v8 <- InstanceCall:40( dyn:call<0>, v7 T{_Closure}, v3 IC[0: ]) T{*?}
InstanceCallAOT (non-smi)
StaticCall:42( _runPendingImmediateCallback@1026248<0> )
ParallelMove r0 <- fp[-1]
DartReturn:44(v7 T{_Closure})
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v2 <- LoadStaticField(_pendingImmediateCallback@1026248) T{_Closure?}
Branch if StrictCompare:10(!==, v2, v0) goto (3, 4)
B3
ParallelMove r1 <- C
StoreStaticField(_pendingImmediateCallback@1026248, v0)
MoveArgument(sp[0] <- v2 T{_Closure})
ParallelMove r0 <- r0
v3 <- ClosureCall:18( closure=v2 T{_Closure}<0>, v2 T{_Closure}) T{*?}
ParallelMove  goto:24 B5
B4
B5
ParallelMove r0 <- C
DartReturn:28(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:4(stack=0, loop=0)
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v3)
v4 <- StaticCall:6( Map._fromLiteral@0150898<0> v2, v3) T{Map<X0, X1>}
ParallelMove r0 <- r0
DartReturn:8(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v7 <- LoadStaticField:4(_portMap@1026248, CallsInitializer) T{_Map}
ParallelMove r1 <- r0
v3 <- StaticCall:12( get:values<0> v7, result_type = T{_CompactIterable}) T{_CompactIterable}
ParallelMove r0 <- r0
v12 <- LoadField(v3 T{_CompactIterable} . :type_arguments {final}) T{TypeArguments}
ParallelMove r1 <- r1, r2 <- r0
v26 <- StaticCall:18( _GrowableList@0150898.of<0> v12 T{TypeArguments}, v3 T{_CompactIterable}, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r0 <- r0
DartReturn:16(v26)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, r3 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- r3, r2 <- C, r1 <- C
v5 <- InstanceOf:10(v3 IS EfficientLengthIterable<dynamic>, instantiator_type_args(v0), function_type_args(v0)) T{bool}
InlineInstanceof
InstantiatedTypeWithArgumentsTest
Subtype1TestCacheLookup
BoolTest
ParallelMove r0 <- r0
Branch if StrictCompare:14(===, v5 T{bool}, v6) goto (3, 4)
BoolTest
B3
ParallelMove r1 <- fp[-1], r2 <- fp[-2]
v8 <- StaticCall:20( _GrowableList@0150898._ofEfficientLengthIterable@0150898<0> v2, v3, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r0 <- r0
DartReturn:22(v8)
B4
ParallelMove r1 <- fp[-1], r2 <- fp[-2]
v7 <- StaticCall:26( _GrowableList@0150898._ofOther@0150898<0> v2, v3, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r0 <- r0
DartReturn:28(v7)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r3 <- r1, r0 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r3, r2 <- C
v5 <- StaticCall:10( _GrowableList@0150898.<0> v2, v62 T{_Smi}, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r2 <- r0, r1 <- fp[-2]
ParallelMove fp[-3] <- r2
v70 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r1
v6 <- DispatchTableCall( cid=v70 Iterable.iterator<0>, v3) T{*?}
ParallelMove r2 <- r0
ParallelMove fp[-2] <- r2
ParallelMove r3 <- fp[-3] goto:32 B5
B5
  Loop 0
  Loop Header
CheckStackOverflow:36(stack=0, loop=1)
v71 <- LoadClassId(<non-smi> v6 T{Iterator<X0>}) int64
ParallelMove r0 <- r0, r1 <- r2
v7 <- DispatchTableCall( cid=v71 Iterator.moveNext<0>, v6 T{Iterator<X0>}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:18(===, v7 T{bool}, v8) goto (3, 4)
BoolTest
B3
  Loop 0
ParallelMove r3 <- fp[-3], r2 <- fp[-2]
v72 <- LoadClassId(<non-smi> v6 T{Iterator<X0>}) int64
ParallelMove r0 <- r0, r1 <- r2
v9 <- DispatchTableCall( cid=v72 Iterator.current<0>, v6 T{Iterator<X0>}) T{*?}
ParallelMove r0 <- r0, r2 <- fp[-1], r1 <- C, r3 <- r0
ParallelMove fp[-4] <- r3
t0 <- AssertAssignable:10(v9 T{X0?}, v32 T{_TypeParameter}, 'value', instantiator_type_args(v2 T{TypeArguments}), function_type_args(v0 T{Null?})) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-3]
v38 <- LoadField(v5 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v43 <- LoadField(v5 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v44 <- LoadField(v43 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v57 <- UnboxInt64([non-speculative], v38 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-5] <- r2
v58 <- UnboxInt64([non-speculative], v44 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v57 T{_Smi} == v58 T{_Smi}) T{bool} goto (8, 9)
B8
  Loop 0
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v5 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B10
B9
B10
  Loop 0
v24 <- BinaryInt64Op(+ [tr], v57 T{_Smi}, v63 T{_Smi}) [1, 576460752303423488] int64
v59 <- BoxInt64(v24) [1, 576460752303423488] T{_Smi}
StoreField(v5 T{_GrowableList} . GrowableObjectArray.length = v59, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v24 T{_Smi}, v57 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v27 <- LoadField(v5 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-4]
StoreIndexed:40([_List] v27, v57 T{_Smi}, v9 T{X0?})
ParallelMove r3 <- r2, r2 <- fp[-2] goto:34 B5
B4
ParallelMove r2 <- fp[-3]
ParallelMove r0 <- r2
DartReturn:38(v5)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove r2 <- r1, r1 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v98 <- LoadClassId(<non-smi> v3) int64
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r0
v4 <- DispatchTableCall( cid=v98 EfficientLengthIterable.length<0>, v3) T{int}
ParallelMove r3 <- r0
ParallelMove fp[-5] <- r3
v87 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-4] <- r4
Branch if RelationalOp(>, v87 T{int}, v90 T{_Smi}) T{bool} goto (3, 9)
B3
ParallelMove r5 <- fp[-2]
v47 <- BinaryInt64Op(| [tr], v87 T{int}, v91 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-3] <- r6
v88 <- BoxInt64(v47 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- C, r2 <- r0
v53 <- CreateArray:10(v0 T{Null?}, v88 T{int}, <not-aliased>) T{_List}
ParallelMove r3 <- r0, r2 <- fp[-2]
ParallelMove fp[-6] <- r3
v99 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r2
v11 <- DispatchTableCall( cid=v99 Iterable.iterator<0>, v3) T{*?}
ParallelMove r2 <- r0
ParallelMove fp[-8] <- r2
ParallelMove r3 <- C goto:48 B6
B6
  Loop 0
  Loop Header
ParallelMove fp[-7] <- r3
CheckStackOverflow:52(stack=0, loop=1)
v100 <- LoadClassId(<non-smi> v11 T{Iterator<X0>}) int64
ParallelMove r0 <- r0, r1 <- r2
v13 <- DispatchTableCall( cid=v100 Iterator.moveNext<0>, v11 T{Iterator<X0>}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:32(===, v13 T{bool}, v7) goto (4, 5)
BoolTest
B4
  Loop 0
ParallelMove r2 <- fp[-8], r3 <- fp[-7]
v101 <- LoadClassId(<non-smi> v11 T{Iterator<X0>}) int64
ParallelMove r0 <- r0, r1 <- r2
v17 <- DispatchTableCall( cid=v101 Iterator.current<0>, v11 T{Iterator<X0>}) T{*?}
ParallelMove r3 <- r0, r2 <- fp[-7]
v19 <- BinaryInt64Op(+ [tr], v12, v91 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-3], r1 <- r2
GenericCheckBound:44(v47 T{_Smi}, v12) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-6], r0 <- r3
StoreIndexed:44([_List] v53 T{_List}, v12 T{int}, v17 T{X0?})
ParallelMove r3 <- r4, r2 <- fp[-8] goto:50 B6
B5
ParallelMove r2 <- fp[-7], r0 <- fp[-4]
Branch if EqualityCompare(v12 != v87 T{int}) T{bool} goto (7, 8)
B8
ParallelMove r2 <- fp[-5], r0 <- fp[-6]
ParallelMove r1 <- fp[-1]
v34 <- AllocateObject:10(cls=_GrowableList, v2 T{*?}, <not-aliased>) T{_GrowableList}
ParallelMove r1 <- r0, r0 <- fp[-6]
StoreField(v34 . GrowableObjectArray.data = v53 T{_List}, NoStoreBarrier)
ParallelMove r0 <- fp[-5]
StoreField(v34 T{_GrowableList} . GrowableObjectArray.length = v4 T{int}, NoStoreBarrier)
ParallelMove r0 <- r1
DartReturn:76(v34 T{_GrowableList})
B9
v56 <- LoadStaticField:4(_emptyList@0150898, CallsInitializer) T{_List}
ParallelMove r1 <- fp[-1], r0 <- r0
ParallelMove fp[-1] <- r0
v63 <- AllocateObject:10(cls=_GrowableList, v2 T{*?}, <not-aliased>) T{_GrowableList}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v63 . GrowableObjectArray.data = v56 T{_List}, NoStoreBarrier)
StoreField(v63 . GrowableObjectArray.length = v5 T{_Smi}, NoStoreBarrier)
ParallelMove r0 <- r1
DartReturn:82(v63 T{_GrowableList})
B7
ParallelMove r0 <- fp[-2]
v16 <- AllocateObject:64(cls=ConcurrentModificationError, <not-aliased>) T{ConcurrentModificationError}
ParallelMove r1 <- r0, r0 <- fp[-2]
StoreField(v16 T{ConcurrentModificationError} . modifiedObject = v3 T{EfficientLengthIterable<X0>}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:68(v16)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
v3 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r2 <- r2, r1 <- C, r3 <- C
v5 <- InstantiateTypeArguments:10(v4, instantiator_type_args(v3), function_type_args(v0), instantiator_class(Library:'dart:collection' Class: __Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin@3220832)) T{*?}
ParallelMove r1 <- r0
v6 <- AllocateObject:12(cls=_CompactIterable, v5, <not-aliased>) T{_CompactIterable}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v6 T{_CompactIterable} . _table@3220832 = v2 T{_Map}, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v6 T{_CompactIterable} . _offset@3220832 = v23 <int64>, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v6 T{_CompactIterable} . _step@3220832 = v25 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:18(v6)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v15 <- LoadStaticField:4(_portMap@1026248, CallsInitializer) T{_Map}
ParallelMove r1 <- r0, r2 <- fp[2], r0 <- r0
ParallelMove fp[-1] <- r0
v22 <- StaticCall:10( _getValueOrData@3220832<0> v15 T{_Map}, v2 T{int}, using unchecked entrypoint) T{Object??}
ParallelMove r0 <- r0, r1 <- fp[-1]
v29 <- LoadField(v15 T{_Map} . LinkedHashBase.data) T{_List}
Branch if StrictCompare:14(===, v29 T{_List}, v22) goto (11, 12)
B11
ParallelMove r1 <- C goto:24 B13
B12
ParallelMove r1 <- r0 goto:26 B13
B13
Branch if StrictCompare:14(===, v24 T{_RawReceivePort?}, v0) goto (3, 4)
B3
ParallelMove r0 <- C goto:26 B5
B4
v12 <- LoadField(v24 T{_RawReceivePort} . ReceivePort.handler) T{_Closure?}
ParallelMove r0 <- r2 goto:28 B5
B5
ParallelMove r0 <- r0
DartReturn:30(v6)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r3 <- r1, r0 <- r2, fp[-3] <- r1, fp[-4] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v93 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.index) T{_Uint32List}
v98 <- LoadField(v93 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v171 <- UnboxInt64([non-speculative], v98 T{_Smi}) [0, 4611686018427387903] int64
v7 <- BinaryInt64Op(- [tr], v171 T{_Smi}, v187 T{_Smi}) [v171-1, v171-1] int64
ParallelMove fp[-2] <- r4
v8 <- ShiftInt64Op(>> [tr], v171 T{_Smi}, v187 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove r1 <- r3, r2 <- r0, fp[-1] <- r5
v9 <- StaticCall:18( _hashCode@3220832<0> v2, v3, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0, r2 <- fp[-3]
v103 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.hash_mask) [0, 4611686018427387903] T{_Smi}
v172 <- UnboxInt64([non-speculative], v103 T{_Smi}) [0, 4611686018427387903] int64
v112 <- BinaryInt64Op(& [tr], v9 T{int}, v172 T{_Smi}) [0, 4611686018427387903] int64
Branch if EqualityCompare(v112 == v188 T{_Smi}) T{bool} goto (38, 39)
B38
ParallelMove r5 <- fp[-1], r3 <- fp[-1] goto:32 B40
B39
ParallelMove r3 <- fp[-1]
v118 <- BinaryInt64Op(* [tr], v112, v8 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r4 goto:34 B40
B40
ParallelMove fp[-7] <- r5
v131 <- BinaryInt64Op(& [tr], v9 T{int}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v133 <- ShiftInt64Op(<< [tr], v131, v187 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v134 <- BinaryInt64Op(+ [tr], v133, v131) [-9223372036854775808, 9223372036854775807] int64
v135 <- BinaryInt64Op(& [tr], v134, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v140 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.index) T{_Uint32List}
v39 <- LoadField(v140 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v173 <- UnboxInt64([non-speculative], v39) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r7
GenericCheckBound:28(v173 T{_Smi}, v135 T{int}) [-9223372036854775808, 9223372036854775807] int64
v189 <- LoadIndexed:28([_Uint32List] v140 T{_Uint32List}, v135 T{int}) [0, 4294967295] uint32
ParallelMove r7 <- r7, r0 <- r0 goto:116 B12
B12
  Loop 0
  Loop Header
ParallelMove fp[-6] <- r7
CheckStackOverflow:114(stack=0, loop=1)
ParallelMove r0 <- r0
v177 <- IntConverter(uint32->int64, v16) [0, 4294967295] int64
Branch if EqualityCompare(v177 T{_Smi} != v188 T{_Smi}) T{bool} goto (11, 13)
B11
  Loop 0
Branch if EqualityCompare(v177 T{_Smi} != v187 T{_Smi}) T{bool} goto (3, 9)
B3
  Loop 0
v29 <- BinaryInt64Op(^ [tr], v119 T{int}, v177 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v29, v8) T{bool} goto (4, 7)
B4
  Loop 0
v32 <- ShiftInt64Op(<< [tr], v29, v187 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-5] <- r8
v79 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.data) T{_List}
v42 <- LoadField(v79 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v178 <- UnboxInt64([non-speculative], v42) [0, 576460752303423487] int64
ParallelMove r0 <- r1, r1 <- r8
GenericCheckBound:64(v178 T{_Smi}, v32) [-9223372036854775808, 9223372036854775807] int64
v190 <- LoadIndexed:64([_List] v79 T{_List}, v32 T{int}) T{*?}
v217 <- LoadClassId(v3 T{Object??}) int64
MoveArgument(sp[1] <- v3 T{Object??})
MoveArgument(sp[0] <- v190 T{Object??})
ParallelMove r0 <- r1
v88 <- DispatchTableCall( cid=v217 Object.==<0>, v3 T{Object??}, v190 T{Object??}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:70(===, v88 T{bool}, v21) goto (5, 6)
BoolTest
B6
  Loop 0
ParallelMove r2 <- fp[-3] goto:90 B8
B5
ParallelMove r2 <- fp[-3], r3 <- fp[-5]
v74 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.data) T{_List}
v37 <- BinaryInt64Op(+ [tr], v32 T{int}, v187 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v45 <- LoadField(v74 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v180 <- UnboxInt64([non-speculative], v45) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- r2
GenericCheckBound:80(v180 T{_Smi}, v37) [-9223372036854775808, 9223372036854775807] int64
v191 <- LoadIndexed:80([_List] v74 T{_List}, v37 T{int}) T{*?}
ParallelMove r0 <- r0
DartReturn:82(v191 T{*?})
B7
B8
B9
B10
  Loop 0
v63 <- BinaryInt64Op(+ [tr], v15 T{int}, v187 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v64 <- BinaryInt64Op(& [tr], v63, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v69 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.index) T{_Uint32List}
v48 <- LoadField(v69 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v182 <- UnboxInt64([non-speculative], v48) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r4
GenericCheckBound:106(v182 T{_Smi}, v64 T{int}) [-9223372036854775808, 9223372036854775807] int64
v192 <- LoadIndexed:106([_Uint32List] v69 T{_Uint32List}, v64 T{int}) [0, 4294967295] uint32
ParallelMove r7 <- r4, r0 <- r0, r4 <- r3, r3 <- fp[-1], r5 <- fp[-7] goto:112 B12
B13
v55 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.data) T{_List}
ParallelMove r0 <- r0
DartReturn:122(v55 T{_List})
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[1] <- v0)
MoveArgument(sp[0] <- v3)
v4 <- StaticCall:10( _RawReceivePort@1026248._@1026248<0> v0, v3, result_type = T{_RawReceivePort}) T{_RawReceivePort}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
v9 <- LoadStaticField:4(_portMap@1026248, CallsInitializer) T{_Map}
ParallelMove r0 <- r0
ParallelMove fp[-2] <- r0
MoveArgument(sp[0] <- v4)
v6 <- StaticCall:14( _get_id@1026248<0> v4, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- fp[-2], r2 <- r0, r3 <- fp[-1]
StaticCall:16( []=<0> v9, v6, v4, using unchecked entrypoint)
ParallelMove r0 <- fp[-1]
DartReturn:18(v4)
CheckStackOverflowSlowPath
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
v5 <- StaticCall:10( _handleMessage@1026248<0> v3) T{void?}
ParallelMove r0 <- r0
DartReturn:12(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v18 <- LoadClassId(v2) int64
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r0
v4 <- DispatchTableCall( cid=v18 Object.==<0>, v2, v3) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:14(===, v4 T{bool}, v5) goto (3, 4)
BoolTest
B3
v9 <- StaticCall:20( _queueFromZeroEvent@1026248<0> , result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r0 <- r0
ParallelMove r1 <- r0 goto:28 B5
B4
ParallelMove r0 <- C
StoreStaticField(_scheduledWakeupTime@1026248, v6)
v7 <- StaticCall:24( _queueFromTimeoutEvent@1026248<0> , result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r0 <- r0
ParallelMove r1 <- r0 goto:30 B5
B5
ParallelMove r1 <- r1
StaticCall:32( _runTimers@1026248<0> v8)
StaticCall:34( _notifyEventHandler@1026248<0> )
ParallelMove r0 <- C
DartReturn:36(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v4 <- StaticCall:10( _GrowableList@0150898.<0> v2, v267 T{_Smi}, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r0 <- r0
ParallelMove fp[-2] <- r0
v5 <- LoadStaticField(_firstZeroTimer@1026248) T{_Timer?}
ParallelMove fp[-1] <- r1
Branch if StrictCompare:12(!==, v5, v0) goto (3, 10)
B3
B6
  Loop 1
  Loop Header
CheckStackOverflow:56(stack=0, loop=1)
v143 <- LoadStaticField:4(_heap@1026248, CallsInitializer) T{_TimerHeap}
ParallelMove r2 <- r0
v148 <- LoadField(v143 T{_TimerHeap} . _used@1026248) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v148 != v267 T{_Smi}) T{bool} goto (4, 8)
B4
  Loop 1
ParallelMove r3 <- fp[-1]
v115 <- LoadField(v143 T{_TimerHeap} . _list@1026248) T{_List}
v118 <- LoadField(v115 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v240 <- UnboxInt64([non-speculative], v118) [0, 576460752303423487] int64
ParallelMove r0 <- r1, r1 <- C
GenericCheckBound:12(v240 T{_Smi}, v267 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v268 <- LoadIndexed:12([_List] v115, v267 T{_Smi}) T{_Timer}
ParallelMove fp[-3] <- r0
v127 <- LoadField(v268 T{_Timer} . _wakeupTime@1026248) [-9223372036854775808, 9223372036854775807] int64
v128 <- LoadField(v5 T{_Timer} . _wakeupTime@1026248) [-9223372036854775808, 9223372036854775807] int64
v129 <- BinaryInt64Op(- [tr], v127, v128) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v129 != v267 T{_Smi}) T{bool} goto (56, 57)
B56
  Loop 1
ParallelMove r1 <- r5 goto:26 B58
B57
  Loop 1
v133 <- LoadField(v268 T{_Timer} . _id@1026248) [-9223372036854775808, 9223372036854775807] int64
v134 <- LoadField(v5 T{_Timer} . _id@1026248) [-9223372036854775808, 9223372036854775807] int64
v135 <- BinaryInt64Op(- [tr], v133, v134) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r5 goto:36 B58
B58
  Loop 1
Branch if RelationalOp(<, v140 T{int}, v267 T{_Smi}) T{bool} goto (5, 9)
B5
  Loop 1
ParallelMove r4 <- fp[-2]
ParallelMove r1 <- r2, r2 <- r0
StaticCall:12( remove<0> v143 T{_TimerHeap}, v268 T{_Timer}, using unchecked entrypoint)
ParallelMove r0 <- fp[-2]
v192 <- LoadField(v4 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v197 <- LoadField(v4 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v198 <- LoadField(v197 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v246 <- UnboxInt64([non-speculative], v192 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-4] <- r2
v247 <- UnboxInt64([non-speculative], v198 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v246 T{_Smi} == v247 T{_Smi}) T{bool} goto (43, 44)
B43
  Loop 1
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v4 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B45
B44
B45
  Loop 1
v100 <- BinaryInt64Op(+ [tr], v246 T{_Smi}, v270 T{_Smi}) [1, 576460752303423488] int64
v248 <- BoxInt64(v100) [1, 576460752303423488] T{_Smi}
StoreField(v4 T{_GrowableList} . GrowableObjectArray.length = v248, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v100 T{_Smi}, v246 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v103 <- LoadField(v4 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-3]
StoreIndexed:40([_List] v103, v246 T{_Smi}, v268 T{_Timer})
ParallelMove r0 <- r2, r1 <- fp[-1] goto:54 B6
B9
ParallelMove r2 <- fp[-2]
ParallelMove  goto:68 B7
B8
ParallelMove r2 <- fp[-2]
ParallelMove  goto:64 B7
B7
B10
ParallelMove r2 <- r0
v80 <- LoadStaticField:4(timerMillisecondClock, CallsInitializer) T{(dynamic) => int}
v156 <- StaticCall:10( _timerMillisecondClock@15069316<0> ) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v251 <- UnboxInt64:118([non-speculative], v156) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-4] <- r1
ParallelMove r0 <- fp[-2] goto:118 B13
B13
  Loop 0
  Loop Header
CheckStackOverflow:116(stack=0, loop=1)
v70 <- LoadStaticField:4(_heap@1026248, CallsInitializer) T{_TimerHeap}
ParallelMove r2 <- r0
v75 <- LoadField(v70 T{_TimerHeap} . _used@1026248) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v75 != v267 T{_Smi}) T{bool} goto (11, 15)
B11
  Loop 0
ParallelMove r3 <- fp[-4]
v62 <- LoadField(v70 T{_TimerHeap} . _list@1026248) T{_List}
v65 <- LoadField(v62 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v252 <- UnboxInt64([non-speculative], v65) [0, 576460752303423487] int64
ParallelMove r0 <- r1, r1 <- C
GenericCheckBound:12(v252 T{_Smi}, v267 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v271 <- LoadIndexed:12([_List] v62, v267 T{_Smi}) T{_Timer}
ParallelMove fp[-1] <- r0
v13 <- LoadField(v271 T{_Timer} . _wakeupTime@1026248) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<=, v13, v251 T{int}) T{bool} goto (12, 16)
B12
  Loop 0
ParallelMove r4 <- fp[-2]
ParallelMove r1 <- r2, r2 <- r0
StaticCall:12( remove<0> v70 T{_TimerHeap}, v271 T{_Timer}, using unchecked entrypoint)
ParallelMove r0 <- fp[-2]
v171 <- LoadField(v4 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v176 <- LoadField(v4 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v177 <- LoadField(v176 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v258 <- UnboxInt64([non-speculative], v171 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-5] <- r2
v259 <- UnboxInt64([non-speculative], v177 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v258 T{_Smi} == v259 T{_Smi}) T{bool} goto (23, 24)
B23
  Loop 0
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v4 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B25
B24
B25
  Loop 0
v46 <- BinaryInt64Op(+ [tr], v258 T{_Smi}, v270 T{_Smi}) [1, 576460752303423488] int64
v260 <- BoxInt64(v46) [1, 576460752303423488] T{_Smi}
StoreField(v4 T{_GrowableList} . GrowableObjectArray.length = v260, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v46 T{_Smi}, v258 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v49 <- LoadField(v4 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-1]
StoreIndexed:40([_List] v49, v258 T{_Smi}, v271 T{_Timer})
ParallelMove r0 <- r2, r1 <- fp[-4] goto:114 B13
B16
ParallelMove r2 <- fp[-2]
ParallelMove  goto:128 B14
B15
ParallelMove r2 <- fp[-2]
ParallelMove  goto:124 B14
B14
B17
ParallelMove r0 <- r2
DartReturn:136(v4)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path late initialization error operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r3 <- r1, fp[-2] <- r2, fp[-6] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v2 . _used@1026248) [-9223372036854775808, 9223372036854775807] int64
v6 <- BinaryInt64Op(- [tr], v4, v114 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_TimerHeap} . _used@1026248 = v6 T{int} <int64>)
Branch if EqualityCompare(v6 T{int} == v115 T{_Smi}) T{bool} goto (3, 4)
B3
v22 <- LoadField(v2 . _list@1026248) T{_List}
ParallelMove fp[-1] <- r1
v69 <- LoadStaticField:4(_sentinelTimer@1026248, CallsInitializer) T{_Timer}
ParallelMove r3 <- r0, r2 <- fp[-1]
v24 <- LoadField(v22 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v105 <- UnboxInt64([non-speculative], v24) [0, 576460752303423487] int64
ParallelMove r0 <- r1, r1 <- C
GenericCheckBound:30(v105 T{_Smi}, v115 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r1 <- r2, r0 <- r3
StoreIndexed:30([_List] v22, v115 T{_Smi}, v69 T{_Timer})
ParallelMove r5 <- fp[-2]
StoreField(v3 T{_Timer} . _indexOrNext@1026248 = v0 T{Null?})
ParallelMove r0 <- C
DartReturn:34(v0)
B4
ParallelMove r5 <- r2
v9 <- LoadField(v2 . _list@1026248) T{_List}
ParallelMove fp[-5] <- r6
v26 <- LoadField(v9 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v107 <- UnboxInt64([non-speculative], v26) [0, 576460752303423487] int64
ParallelMove r0 <- r7, r1 <- r4, fp[-4] <- r7
GenericCheckBound:42(v107 T{_Smi}, v6 T{int}) [-9223372036854775808, 9223372036854775807] int64
v116 <- LoadIndexed:42([_List] v9, v6 T{int}) T{_Timer}
ParallelMove fp[-3] <- r8
Branch if StrictCompare:44(!==, v116 T{_Timer}, v3) goto (5, 9)
B5
v15 <- LoadField(v3 . _indexOrNext@1026248) T{Object??}
ParallelMove r0 <- r4, r2 <- C, r1 <- C, fp[-1] <- r4
t0 <- AssertAssignable:52(v15, v16, ' in type cast', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1], r2 <- fp[-3]
StoreField(v116 T{_Timer} . _indexOrNext@1026248 = v15 T{int})
ParallelMove r0 <- fp[-1]
v109 <- UnboxInt64([non-speculative], v15 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-4], r1 <- r3
GenericCheckBound:58(v107 T{_Smi}, v109 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-5], r0 <- r2
StoreIndexed:58([_List] v9 T{_List}, v109 T{int}, v116 T{_Timer})
v53 <- LoadField(v116 T{_Timer} . _wakeupTime@1026248) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[-2]
v54 <- LoadField(v3 T{_Timer} . _wakeupTime@1026248) [-9223372036854775808, 9223372036854775807] int64
v55 <- BinaryInt64Op(- [tr], v53, v54) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v55 != v115 T{_Smi}) T{bool} goto (20, 21)
B20
ParallelMove r0 <- r4 goto:26 B22
B21
v59 <- LoadField(v116 T{_Timer} . _id@1026248) [-9223372036854775808, 9223372036854775807] int64
v60 <- LoadField(v3 T{_Timer} . _id@1026248) [-9223372036854775808, 9223372036854775807] int64
v61 <- BinaryInt64Op(- [tr], v59, v60) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r4 goto:36 B22
B22
Branch if RelationalOp(<, v66 T{int}, v115 T{_Smi}) T{bool} goto (6, 7)
B6
ParallelMove r1 <- fp[-6], r2 <- r2
StaticCall:72( _bubbleUp@1026248<0> v2, v116 T{_Timer}, using unchecked entrypoint)
ParallelMove  goto:80 B8
B7
ParallelMove r1 <- fp[-6], r2 <- r2
StaticCall:76( _bubbleDown@1026248<0> v2, v116 T{_Timer}, using unchecked entrypoint)
ParallelMove  goto:82 B8
B8
B9
B10
v12 <- LoadField(v2 . _list@1026248) T{_List}
ParallelMove fp[-1] <- r2
v13 <- LoadField(v2 . _used@1026248) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-4] <- r3
v35 <- LoadStaticField:4(_sentinelTimer@1026248, CallsInitializer) T{_Timer}
ParallelMove r3 <- r0, r2 <- fp[-1]
v31 <- LoadField(v12 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v112 <- UnboxInt64([non-speculative], v31) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- fp[-4]
GenericCheckBound:98(v112 T{_Smi}, v13) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r2, r0 <- r3, r2 <- fp[-4]
StoreIndexed:98([_List] v12, v13 T{int}, v35 T{_Timer})
ParallelMove r1 <- fp[-2]
StoreField(v3 T{_Timer} . _indexOrNext@1026248 = v0 T{Null?})
ParallelMove r0 <- C
DartReturn:102(v0)
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r3 <- r2, fp[-9] <- r2
v18 <- LoadField:146(v2 . _used@1026248) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-8] <- r4
v62 <- LoadField:146(v2 T{_TimerHeap} . _list@1026248) T{_List}
ParallelMove fp[-7] <- r5
v64 <- LoadField:146(v62 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v176 <- UnboxInt64:146([non-speculative], v64) [0, 576460752303423487] int64
ParallelMove fp[-6] <- r6
v170 <- UnboxInt64:146([non-speculative], v64 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-5] <- r7
v166 <- UnboxInt64:146([non-speculative], v64 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-4] <- r8
v95 <- LoadField:146(v3 T{_Timer} . _wakeupTime@1026248) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-3] <- r9
v101 <- LoadField:146(v3 T{_Timer} . _id@1026248) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-2] <- r10
ParallelMove  goto:146 B18
B18
  Loop 0
  Loop Header
CheckStackOverflow:144(stack=0, loop=1)
v11 <- LoadField(v3 . _indexOrNext@1026248) T{Object??}
ParallelMove r0 <- r11, r2 <- C, r1 <- C, fp[-1] <- r11
t0 <- AssertAssignable:18(v11, v12, ' in type cast', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r3 <- fp[-1]
v164 <- UnboxInt64([non-speculative], v11 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-12] <- r4
v117 <- ShiftInt64Op(<< [tr], v164 T{int}, v120) [-9223372036854775808, 9223372036854775807] int64
v115 <- BinaryInt64Op(+ [tr], v117 T{int}, v120 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v127 <- BinaryInt64Op(+ [tr], v117 T{int}, v180 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- fp[-8]
Branch if RelationalOp(<, v115 T{int}, v18) T{bool} goto (3, 6)
B3
  Loop 0
ParallelMove r7 <- fp[-7], r8 <- fp[-3]
ParallelMove r0 <- fp[-4], r1 <- r2
GenericCheckBound:40(v166 T{_Smi}, v115 T{int}) [-9223372036854775808, 9223372036854775807] int64
v181 <- LoadIndexed:40([_List] v62 T{_List}, v115 T{int}) T{_Timer}
v94 <- LoadField(v181 T{_Timer} . _wakeupTime@1026248) [-9223372036854775808, 9223372036854775807] int64
v96 <- BinaryInt64Op(- [tr], v94, v95) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v96 != v182 T{_Smi}) T{bool} goto (36, 37)
B36
  Loop 0
ParallelMove r2 <- r2, r9 <- fp[-2] goto:26 B38
B37
  Loop 0
ParallelMove r9 <- fp[-2]
v100 <- LoadField(v181 T{_Timer} . _id@1026248) [-9223372036854775808, 9223372036854775807] int64
v102 <- BinaryInt64Op(- [tr], v100, v101) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r10 goto:36 B38
B38
  Loop 0
Branch if RelationalOp(<, v107 T{int}, v182 T{_Smi}) T{bool} goto (4, 7)
B4
  Loop 0
ParallelMove r10 <- r0, r2 <- r1 goto:72 B8
B7
B6
  Loop 0
ParallelMove r7 <- fp[-7], r8 <- fp[-3], r9 <- fp[-2]
ParallelMove  goto:64 B5
B5
  Loop 0
ParallelMove r10 <- fp[-9], r2 <- r8 goto:74 B8
B8
  Loop 0
Branch if RelationalOp(<, v127 T{int}, v18 T{int}) T{bool} goto (9, 12)
B9
  Loop 0
ParallelMove r0 <- fp[-5], r1 <- r5
GenericCheckBound:88(v170 T{_Smi}, v127 T{int}) [-9223372036854775808, 9223372036854775807] int64
v184 <- LoadIndexed:88([_List] v62 T{_List}, v127 T{int}) T{_Timer}
v74 <- LoadField(v184 T{_Timer} . _wakeupTime@1026248) [-9223372036854775808, 9223372036854775807] int64
v76 <- BinaryInt64Op(- [tr], v74, v198 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v76 != v182 T{_Smi}) T{bool} goto (31, 32)
B31
  Loop 0
ParallelMove r1 <- r5 goto:26 B33
B32
  Loop 0
v80 <- LoadField(v184 T{_Timer} . _id@1026248) [-9223372036854775808, 9223372036854775807] int64
v81 <- LoadField(v20 T{_Timer} . _id@1026248) [-9223372036854775808, 9223372036854775807] int64
v82 <- BinaryInt64Op(- [tr], v80, v81) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r5 goto:36 B33
B33
  Loop 0
Branch if RelationalOp(<, v87 T{int}, v182 T{_Smi}) T{bool} goto (10, 13)
B10
  Loop 0
ParallelMove r10 <- r0 goto:120 B14
B13
B12
B11
B14
  Loop 0
ParallelMove fp[-11] <- r10
Branch if StrictCompare:124(===, v23, v3) goto (16, 17)
B17
  Loop 0
v60 <- LoadField(v23 T{_Timer} . _indexOrNext@1026248) T{Object??}
ParallelMove r0 <- r11, r2 <- C, r1 <- C, fp[-10] <- r11
t0 <- AssertAssignable:16(v60, v12 T{_Type}, ' in type cast', instantiator_type_args(v0 T{Null?}), function_type_args(v0 T{Null?})) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1], r2 <- fp[-11]
StoreField(v23 T{_Timer} . _indexOrNext@1026248 = v11 T{int})
ParallelMove r0 <- fp[-10], r3 <- fp[-9]
StoreField(v3 T{_Timer} . _indexOrNext@1026248 = v60 T{int})
ParallelMove r0 <- fp[-6], r1 <- fp[-12]
GenericCheckBound:24(v176 T{_Smi}, v164 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-7], r0 <- r2, r2 <- fp[-12]
StoreIndexed:24([_List] v62, v164 T{int}, v23 T{_Timer})
ParallelMove r2 <- fp[-10]
v175 <- UnboxInt64([non-speculative], v60 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-6], r1 <- r4
GenericCheckBound:28(v176 T{_Smi}, v175 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-7], r0 <- r3
StoreIndexed:28([_List] v62 T{_List}, v175 T{int}, v3 T{_Timer})
ParallelMove r4 <- fp[-8], r5 <- fp[-7], r9 <- fp[-3], r10 <- fp[-2], r8 <- fp[-4], r7 <- fp[-5], r6 <- fp[-6] goto:142 B18
B16
ParallelMove r0 <- C
DartReturn:152(v0)
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r2 <- r1, r1 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove  goto:48 B7
B7
  Loop 0
  Loop Header
CheckStackOverflow:46(stack=0, loop=1)
v73 <- LoadField(v3 T{_Timer} . _indexOrNext@1026248) T{Object??}
v139 <- LoadClassId(v73) int64
MoveArgument(sp[1] <- v73)
MoveArgument(sp[0] <- v10 T{_Smi})
ParallelMove r0 <- r3
v75 <- DispatchTableCall( cid=v139 Object.==<0>, v73, v10 T{_Smi}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:14(!==, v75 T{bool}, v6) goto (6, 8)
BoolTest
B6
  Loop 0
ParallelMove r4 <- fp[-1], r3 <- fp[-2]
v38 <- LoadField(v2 T{_TimerHeap} . _list@1026248) T{_List}
ParallelMove fp[-4] <- r5
v39 <- LoadField(v3 T{_Timer} . _indexOrNext@1026248) T{Object??}
ParallelMove r0 <- r6, r2 <- C, r1 <- C, fp[-3] <- r6
t1 <- AssertAssignable:14(v39, v31 T{_Type}, ' in type cast', instantiator_type_args(v0 T{Null?}), function_type_args(v0 T{Null?})) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r3 <- fp[-3]
v114 <- UnboxInt64([non-speculative], v39 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-8] <- r4
v93 <- BinaryInt64Op(- [tr], v114 T{int}, v123 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- C
v95 <- BinaryInt64Op(~/ [tr], v93, v124 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- fp[-4]
v44 <- LoadField(v38 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v115 <- UnboxInt64([non-speculative], v44) [0, 576460752303423487] int64
ParallelMove r0 <- r7, r1 <- r2, fp[-7] <- r7
GenericCheckBound:18(v115 T{_Smi}, v95 T{int}) [-9223372036854775808, 9223372036854775807] int64
v125 <- LoadIndexed:18([_List] v38, v95 T{int}) T{_Timer}
ParallelMove r9 <- fp[-2], fp[-6] <- r8
v53 <- LoadField(v3 T{_Timer} . _wakeupTime@1026248) [-9223372036854775808, 9223372036854775807] int64
v54 <- LoadField(v125 T{_Timer} . _wakeupTime@1026248) [-9223372036854775808, 9223372036854775807] int64
v55 <- BinaryInt64Op(- [tr], v53, v54) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v55 != v126 T{_Smi}) T{bool} goto (18, 19)
B18
  Loop 0
ParallelMove r0 <- r2 goto:26 B20
B19
  Loop 0
v59 <- LoadField(v3 T{_Timer} . _id@1026248) [-9223372036854775808, 9223372036854775807] int64
v60 <- LoadField(v125 T{_Timer} . _id@1026248) [-9223372036854775808, 9223372036854775807] int64
v61 <- BinaryInt64Op(- [tr], v59, v60) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r2 goto:36 B20
B20
  Loop 0
Branch if RelationalOp(<, v66 T{int}, v126 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 0
v20 <- LoadField(v125 T{_Timer} . _indexOrNext@1026248) T{Object??}
ParallelMove r0 <- r10, r2 <- C, r1 <- C, fp[-5] <- r10
t0 <- AssertAssignable:12(v20, v31 T{_Type}, ' in type cast', instantiator_type_args(v0 T{Null?}), function_type_args(v0 T{Null?})) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-5], r2 <- fp[-2]
StoreField(v3 T{_Timer} . _indexOrNext@1026248 = v20 T{int})
ParallelMove r0 <- fp[-3], r3 <- fp[-6]
StoreField(v125 T{_Timer} . _indexOrNext@1026248 = v39 T{int})
ParallelMove r4 <- fp[-5]
v117 <- UnboxInt64([non-speculative], v20 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-7], r1 <- r5
GenericCheckBound:24(v115 T{_Smi}, v117 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-4], r0 <- r2
StoreIndexed:24([_List] v38 T{_List}, v117 T{int}, v3 T{_Timer})
ParallelMove r0 <- fp[-7], r1 <- fp[-8]
GenericCheckBound:28(v115 T{_Smi}, v114 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-4], r0 <- r3, r3 <- fp[-8]
StoreIndexed:28([_List] v38 T{_List}, v114 T{int}, v125 T{_Timer})
ParallelMove r2 <- fp[-1], r1 <- r2 goto:44 B7
B4
B8
B5
ParallelMove r0 <- C
DartReturn:54(v0)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
v2 <- AllocateObject:6(cls=_Timer, <not-aliased>) T{_Timer}
ParallelMove r0 <- r0, r1 <- C
StoreField(v2 T{_Timer} . _tick@1026248 = v18 T{_Smi} <int64>, NoStoreBarrier)
StoreField(v2 T{_Timer} . _wakeupTime@1026248 = v18 T{_Smi} <int64>, NoStoreBarrier)
StoreField(v2 T{_Timer} . _milliSeconds@1026248 = v18 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v2 T{_Timer} . _repeating@1026248 = v13 T{bool}, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v2 T{_Timer} . _id@1026248 = v14 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:10(v2)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v4 <- StaticCall:10( _GrowableList@0150898.<0> v2, v195 T{_Smi}, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r0 <- r0
ParallelMove fp[-2] <- r0
v5 <- LoadStaticField(_firstZeroTimer@1026248) T{_Timer?}
ParallelMove fp[-1] <- r1
Branch if StrictCompare:12(!==, v5, v0) goto (3, 10)
B3
B6
  Loop 0
  Loop Header
CheckStackOverflow:56(stack=0, loop=1)
v106 <- LoadStaticField:4(_heap@1026248, CallsInitializer) T{_TimerHeap}
ParallelMove r2 <- r0
v111 <- LoadField(v106 T{_TimerHeap} . _used@1026248) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v111 != v195 T{_Smi}) T{bool} goto (4, 8)
B4
  Loop 0
ParallelMove r3 <- fp[-1]
v78 <- LoadField(v106 T{_TimerHeap} . _list@1026248) T{_List}
v81 <- LoadField(v78 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v176 <- UnboxInt64([non-speculative], v81) [0, 576460752303423487] int64
ParallelMove r0 <- r1, r1 <- C
GenericCheckBound:12(v176 T{_Smi}, v195 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v196 <- LoadIndexed:12([_List] v78, v195 T{_Smi}) T{_Timer}
ParallelMove fp[-3] <- r0
v90 <- LoadField(v196 T{_Timer} . _wakeupTime@1026248) [-9223372036854775808, 9223372036854775807] int64
v91 <- LoadField(v5 T{_Timer} . _wakeupTime@1026248) [-9223372036854775808, 9223372036854775807] int64
v92 <- BinaryInt64Op(- [tr], v90, v91) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v92 != v195 T{_Smi}) T{bool} goto (40, 41)
B40
  Loop 0
ParallelMove r1 <- r5 goto:26 B42
B41
  Loop 0
v96 <- LoadField(v196 T{_Timer} . _id@1026248) [-9223372036854775808, 9223372036854775807] int64
v97 <- LoadField(v5 T{_Timer} . _id@1026248) [-9223372036854775808, 9223372036854775807] int64
v98 <- BinaryInt64Op(- [tr], v96, v97) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r5 goto:36 B42
B42
  Loop 0
Branch if RelationalOp(<, v103 T{int}, v195 T{_Smi}) T{bool} goto (5, 9)
B5
  Loop 0
ParallelMove r4 <- fp[-2]
ParallelMove r1 <- r2, r2 <- r0
StaticCall:12( remove<0> v106 T{_TimerHeap}, v196 T{_Timer}, using unchecked entrypoint)
ParallelMove r0 <- fp[-2]
v139 <- LoadField(v4 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v144 <- LoadField(v4 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v145 <- LoadField(v144 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v182 <- UnboxInt64([non-speculative], v139 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-4] <- r2
v183 <- UnboxInt64([non-speculative], v145 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v182 T{_Smi} == v183 T{_Smi}) T{bool} goto (27, 28)
B27
  Loop 0
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v4 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B29
B28
B29
  Loop 0
v63 <- BinaryInt64Op(+ [tr], v182 T{_Smi}, v198 T{_Smi}) [1, 576460752303423488] int64
v184 <- BoxInt64(v63) [1, 576460752303423488] T{_Smi}
StoreField(v4 T{_GrowableList} . GrowableObjectArray.length = v184, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r2
GenericCheckBound:40(v63 T{_Smi}, v182 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v66 <- LoadField(v4 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-3]
StoreIndexed:40([_List] v66, v182 T{_Smi}, v196 T{_Timer})
ParallelMove r0 <- r3, r1 <- fp[-1] goto:54 B6
B9
ParallelMove r3 <- fp[-2]
ParallelMove  goto:68 B7
B8
ParallelMove r3 <- fp[-2]
ParallelMove  goto:64 B7
B7
v9 <- LoadField(v5 T{_Timer} . _indexOrNext@1026248) T{Object??}
ParallelMove r0 <- r5, r2 <- C, r1 <- C, fp[-3] <- r5
t0 <- AssertAssignable:72(v9, v10, ' in type cast', instantiator_type_args(v0), function_type_args(v0)) T{_Timer?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-3]
StoreStaticField(_firstZeroTimer@1026248, v9 T{_Timer?})
ParallelMove r0 <- fp[-1]
StoreField(v5 T{_Timer} . _indexOrNext@1026248 = v0 T{Null?})
ParallelMove r2 <- fp[-2]
v118 <- LoadField(v4 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v123 <- LoadField(v4 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v124 <- LoadField(v123 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v189 <- UnboxInt64([non-speculative], v118 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-4] <- r3
v190 <- UnboxInt64([non-speculative], v124 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v189 T{_Smi} == v190 T{_Smi}) T{bool} goto (15, 16)
B15
ParallelMove r1 <- r2
StaticCall:26( _growToNextCapacity@0150898<0> v4 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B17
B16
B17
v35 <- BinaryInt64Op(+ [tr], v189 T{_Smi}, v198 T{_Smi}) [1, 576460752303423488] int64
v191 <- BoxInt64(v35) [1, 576460752303423488] T{_Smi}
StoreField(v4 T{_GrowableList} . GrowableObjectArray.length = v191, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v35 T{_Smi}, v189 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v38 <- LoadField(v4 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-1]
StoreIndexed:40([_List] v38, v189 T{_Smi}, v5 T{_Timer})
ParallelMove  goto:82 B11
B10
ParallelMove r2 <- r0
ParallelMove  goto:84 B11
B11
ParallelMove r0 <- r2
DartReturn:86(v4)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r0 <- C
CheckStackOverflow:8(stack=0, loop=0)
StoreStaticField(_scheduledWakeupTime@1026248, v2)
v3 <- LoadStaticField(_receivePort@1026248) T{_RawReceivePort?}
CheckNull:10(v3, CastError) T{_RawReceivePort}
MoveArgument(sp[1] <- v3 T{_RawReceivePort})
MoveArgument(sp[0] <- v4)
StaticCall:12( _setActive@1026248<0> v3 T{_RawReceivePort}, v4, using unchecked entrypoint)
ParallelMove r1 <- C
StoreStaticField(_receivePortActive@1026248, v4)
ParallelMove r0 <- C
DartReturn:14(v0)
CheckStackOverflowSlowPath
slow path check null (cast) operation
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v2 <- LoadStaticField(_sendPort@1026248) T{_SendPort?}
Branch if StrictCompare:10(!==, v2, v0) goto (3, 4)
B3
v13 <- LoadStaticField:4(eventHandlerSendData, CallsInitializer) T{(dynamic, Object?, SendPort, int) => void}
MoveArgument(sp[2] <- v0 T{Null?})
MoveArgument(sp[1] <- v2 T{_SendPort})
MoveArgument(sp[0] <- v5 T{_Smi})
v24 <- StaticCall:10( _sendData@15069316<0> v0 T{Null?}, v2 T{_SendPort}, v5 T{_Smi}) T{void?}
ParallelMove r1 <- C
StoreStaticField(_scheduledWakeupTime@1026248, v7)
ParallelMove  goto:28 B5
B4
B5
ParallelMove r0 <- C
DartReturn:32(v0)
CheckStackOverflowSlowPath
slow path late initialization error operation
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v3 . _indexOrNext@1026248) T{Object??}
v7 <- LoadClassId(v4) int64
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v5)
ParallelMove r0 <- r1
v6 <- DispatchTableCall( cid=v7 Object.==<0>, v4, v5) T{bool}
ParallelMove r0 <- r0
DartReturn:14(v6 T{bool})
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r2 <- r1, r0 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v2 . _used@1026248) [-9223372036854775808, 9223372036854775807] int64
v5 <- LoadField(v2 . _list@1026248) T{_List}
v31 <- LoadField(v5 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v37 <- UnboxInt64([non-speculative], v31 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v4 == v37 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r1 <- r2
StaticCall:26( _resize@1026248<0> v2, using unchecked entrypoint)
ParallelMove  goto:32 B5
B4
B5
v9 <- LoadField(v2 . _used@1026248) [-9223372036854775808, 9223372036854775807] int64
v11 <- BinaryInt64Op(+ [tr], v9, v41 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_TimerHeap} . _used@1026248 = v11 T{int} <int64>)
v38 <- BoxInt64(v9 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v3 T{_Timer} . _indexOrNext@1026248 = v38 T{int})
v12 <- LoadField(v2 . _list@1026248) T{_List}
v13 <- LoadField(v12 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v39 <- UnboxInt64([non-speculative], v13) [0, 576460752303423487] int64
ParallelMove r0 <- r1, r1 <- r4
GenericCheckBound:46(v39 T{_Smi}, v9) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r5, r0 <- r2
StoreIndexed:46([_List] v12, v9 T{int}, v3)
ParallelMove r1 <- r3, r2 <- r2
StaticCall:48( _bubbleUp@1026248<0> v2, v3, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:50(v0)
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v2 . _list@1026248) T{_List}
v19 <- LoadField(v4 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v81 <- UnboxInt64([non-speculative], v19 T{_Smi}) [0, 576460752303423487] int64
v72 <- ShiftInt64Op(<< [tr], v81 T{_Smi}, v71) [0, 1152921504606846974] int64
v9 <- BinaryInt64Op(+ [tr], v72 T{int}, v71 T{_Smi}) [1, 1152921504606846975] int64
ParallelMove fp[-1] <- r0
v22 <- LoadStaticField:4(_sentinelTimer@1026248, CallsInitializer) T{_Timer}
ParallelMove r3 <- r0, r0 <- fp[-1]
ParallelMove fp[-3] <- r3
v82 <- BoxInt64(v9 T{int}) [1, 1152921504606846975] T{_Smi}
ParallelMove r1 <- C, r2 <- r2
v70 <- CreateArray:10(v3 T{TypeArguments}, v82) T{_List}
ParallelMove r4 <- r0
ParallelMove fp[-4] <- r4
ParallelMove r3 <- C, r2 <- fp[-1] goto:38 B11
B11
  Loop 0
  Loop Header
CheckStackOverflow:42(stack=0, loop=1)
Branch if RelationalOp(<, v34, v9 T{_Smi}) T{bool} goto (9, 13)
B9
  Loop 0
ParallelMove r1 <- r4, r0 <- fp[-3]
StoreIndexed:34([_List] v70 T{_List}, v34 T{int}, v22)
v39 <- BinaryInt64Op(+ [tr], v34 T{int}, v71 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:40 B11
B13
ParallelMove r0 <- fp[-2]
v13 <- LoadField(v2 . _used@1026248) [-9223372036854775808, 9223372036854775807] int64
v14 <- LoadField(v2 . _list@1026248) T{_List}
ParallelMove r1 <- r4, r2 <- C, r3 <- r3, r5 <- r5
StaticCall:26( setRange<0> v70 T{_List}, v87 T{_Smi}, v13, v14, using unchecked entrypoint)
ParallelMove r0 <- fp[-4], r1 <- fp[-2]
StoreField(v2 T{_TimerHeap} . _list@1026248 = v70 T{_List})
ParallelMove r0 <- C
DartReturn:30(v0)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B6
Enter frame
ParallelMove r6 <- r1, fp[-6] <- r1, fp[-7] <- r3, fp[-9] <- r5
CheckStackOverflow:26(stack=0, loop=0)
v223 <- LoadField(v2 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
ParallelMove fp[-10] <- r0
v266 <- UnboxInt64([non-speculative], v223 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-5] <- r4
Branch if RelationalOp(>, v286 T{_Smi}, v266 T{_Smi}) T{bool} goto (7, 10)
B10
Branch if RelationalOp(<, v4, v286 T{_Smi}) T{bool} goto (13, 11)
B11
Branch if RelationalOp(>, v4, v266 T{_Smi}) T{bool} goto (14, 15)
B15
Branch if EqualityCompare(v4 T{int} == v286 T{_Smi}) T{bool} goto (16, 17)
B16
ParallelMove r0 <- C
DartReturn:120(v0)
B17
Branch if StrictCompare:124(===, v2, v5) goto (18, 20)
B18
v191 <- LoadField:82(v2 . Array.type_arguments {final}) T{TypeArguments?}
ParallelMove fp[-4] <- r5
ParallelMove r8 <- C, r7 <- C goto:82 B64
B64
  Loop 1
  Loop Header
ParallelMove fp[-2] <- r8, fp[-3] <- r7
CheckStackOverflow:86(stack=0, loop=1)
Branch if RelationalOp(<, v160, v4 T{int}) T{bool} goto (62, 65)
B62
  Loop 1
ParallelMove r0 <- r4, r1 <- r8
GenericCheckBound:76(v266 T{_Smi}, v160) [-9223372036854775808, 9223372036854775807] int64
v287 <- LoadIndexed:76([_List] v2, v160 T{int}) T{X0?}
ParallelMove r0 <- r9, r2 <- r5, r1 <- C, fp[-1] <- r9
AssertAssignable:78(v287 T{X0?}, v89, 'value', instantiator_type_args(v191), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-5], r1 <- fp[-3]
GenericCheckBound:78(v266 T{_Smi}, v161) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-6], r0 <- fp[-1], r2 <- fp[-3]
StoreIndexed:78([_List] v2, v161 T{int}, v287 T{X0?})
ParallelMove r0 <- fp[-2]
v166 <- BinaryInt64Op(+ [tr], v160 T{int}, v288 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v167 <- BinaryInt64Op(+ [tr], v161 T{int}, v288 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r8 <- r8, r7 <- r7, r6 <- fp[-6], r3 <- fp[-7], r5 <- fp[-4], r4 <- fp[-5] goto:84 B64
B65
B20
ParallelMove r3 <- r6
v131 <- LoadField:82(v5 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v272 <- UnboxInt64:82([non-speculative], v131) [0, 576460752303423487] int64
ParallelMove fp[-8] <- r4
v134 <- LoadField:82(v2 . Array.type_arguments {final}) T{TypeArguments?}
ParallelMove fp[-4] <- r6
ParallelMove r9 <- C, r8 <- C goto:82 B49
B49
  Loop 0
  Loop Header
ParallelMove fp[-2] <- r9, fp[-3] <- r8
CheckStackOverflow:86(stack=0, loop=1)
Branch if RelationalOp(<, v103, v4 T{int}) T{bool} goto (47, 22)
B47
  Loop 0
ParallelMove r0 <- r4, r1 <- r9
GenericCheckBound:76(v272 T{_Smi}, v103) [-9223372036854775808, 9223372036854775807] int64
v289 <- LoadIndexed:76([_List] v5 T{_List}, v103 T{int}) T{*?}
ParallelMove r0 <- r10, r2 <- r6, r1 <- C, fp[-1] <- r10
AssertAssignable:78(v289 T{*?}, v89, 'value', instantiator_type_args(v134), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-5], r1 <- fp[-3]
GenericCheckBound:78(v266 T{_Smi}, v104) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-6], r0 <- fp[-1], r2 <- fp[-3]
StoreIndexed:78([_List] v2, v104 T{int}, v289 T{X0?})
ParallelMove r0 <- fp[-2]
v109 <- BinaryInt64Op(+ [tr], v103 T{int}, v288 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v110 <- BinaryInt64Op(+ [tr], v104 T{int}, v288 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r9 <- r9, r8 <- r8, r3 <- fp[-6], r5 <- fp[-9], r6 <- fp[-4], r4 <- fp[-8] goto:84 B49
B22
B23
ParallelMove r0 <- C
DartReturn:164(v0)
B7
v28 <- AllocateObject:58(cls=RangeError) T{RangeError}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
MoveArgument(sp[3] <- v28)
MoveArgument(sp[2] <- v14)
MoveArgument(sp[1] <- v14)
MoveArgument(sp[0] <- v223 T{_Smi})
StaticCall:62( RangeError.range<0> v28, v14, v14, v223 T{_Smi})
ParallelMove r0 <- fp[-1]
Throw:64(v28)
B13
B14
B12
v265 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
v26 <- AllocateObject:98(cls=RangeError) T{RangeError}
ParallelMove r0 <- r0
ParallelMove fp[-4] <- r0
MoveArgument(sp[3] <- v26)
MoveArgument(sp[2] <- v265 T{int})
MoveArgument(sp[1] <- v14)
MoveArgument(sp[0] <- v223 T{_Smi})
StaticCall:102( RangeError.range<0> v26, v265 T{int}, v14, v223 T{_Smi})
ParallelMove r0 <- fp[-4]
Throw:104(v26)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v2 <- LoadStaticField(_receivePortActive@1026248) T{bool}
Branch if StrictCompare:12(!==, v2 T{bool}, v3) goto (3, 4)
BoolTest
B3
StaticCall:18( _createTimerHandler@1026248<0> )
ParallelMove  goto:24 B5
B4
B5
v4 <- LoadStaticField(_sendPort@1026248) T{_SendPort?}
CheckNull:28(v4, CastError) T{_SendPort}
MoveArgument(sp[1] <- v4 T{_SendPort})
MoveArgument(sp[0] <- v5 T{_Smi})
StaticCall:10( _sendInternal@1026248<0> v4 T{_SendPort}, v5 T{_Smi}, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:32(v0)
CheckStackOverflowSlowPath
slow path check null (cast) operation
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v3)
StaticCall:10( _sendInternal@1026248<0> v2, v3, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:12(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:4(stack=0, loop=0)
v5 <- LoadStaticField:4(_sentinelTimer@1026248, CallsInitializer) T{_Timer}
ParallelMove r0 <- r0
DartReturn:8(v5 T{_Timer})
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:4(stack=0, loop=0)
v2 <- AllocateObject:6(cls=_TimerHeap) T{_TimerHeap}
ParallelMove r1 <- r0, r0 <- r0
ParallelMove fp[-1] <- r0
StaticCall:8( _TimerHeap@1026248.<0> v2)
ParallelMove r0 <- fp[-1]
DartReturn:10(v2)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- C
ParallelMove fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
StoreField(v2 . _used@1026248 = v60 T{_Smi} <int64>)
v10 <- LoadStaticField:4(_sentinelTimer@1026248, CallsInitializer) T{_Timer}
ParallelMove r1 <- C, r2 <- C, r0 <- r0
ParallelMove fp[-2] <- r0
v28 <- CreateArray:10(v4 T{TypeArguments}, v5 T{_Smi}) T{_List}
ParallelMove r0 <- r0
ParallelMove r2 <- C, r1 <- fp[-2] goto:38 B10
B10
  Loop 0
  Loop Header
CheckStackOverflow:42(stack=0, loop=1)
Branch if RelationalOp(<, v22, v61 T{_Smi}) T{bool} goto (8, 12)
B8
  Loop 0
StoreIndexed:34([_List] v28, v22 T{int}, v10, NoStoreBarrier)
v27 <- BinaryInt64Op(+ [tr], v22 T{int}, v63 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r3 goto:40 B10
B12
ParallelMove r1 <- fp[-1]
ParallelMove r0 <- r0
StoreField(v2 . _list@1026248 = v28 T{_List})
ParallelMove r0 <- C
DartReturn:16(v0)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
ParallelMove r8 <- C, r7 <- C, r4 <- C
ParallelMove r0 <- r2
StoreField(v2 . _tick@1026248 = v25 T{_Smi} <int64>)
ParallelMove r0 <- r0
StoreField(v2 . _callback@1026248 = v3)
StoreField(v2 . _wakeupTime@1026248 = v4 <int64>)
StoreField(v2 . _milliSeconds@1026248 = v5 <int64>)
StoreField(v2 . _repeating@1026248 = v6)
v11 <- LoadStaticField(_idCount@1026248) [-9223372036854775808, 9223372036854775807] T{int}
v23 <- UnboxInt64([non-speculative], v11 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r3
v30 <- IntConverter(int64->uint32[tr], v23 T{int}) uint32
v14 <- BinaryUint32Op(+ [tr], v30 T{int}, v31 T{_Smi}) [0, 4294967295] uint32
v16 <- BinaryUint32Op(& [tr], v14, v32 T{_Smi}) [0, 536870911] uint32
v24 <- BoxUint32(v16) [0, 536870911] T{_Smi}
StoreStaticField(_idCount@1026248, v24)
StoreField(v2 . _id@1026248 = v23 T{int} <int64>)
ParallelMove r0 <- C
DartReturn:14(v0)
B0
B2
Enter frame
ParallelMove r0 <- fp[3]
v4 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
v5 <- LoadField(v4 . callback) T{(dynamic) => void}
MoveArgument(sp[0] <- v5)
ParallelMove r0 <- r0
v6 <- ClosureCall:12( closure=v5<0>, v5) T{*?}
ParallelMove r0 <- C
DartReturn:14(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r2 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
StoreField(v2 T{_Timer} . _callback@1026248 = v0 T{Null?})
v23 <- LoadField(v2 T{_Timer} . _indexOrNext@1026248) T{Object??}
v26 <- LoadClassId(v23) [1, 600] int64
Branch if TestRange(v26 not in [59-60]) T{bool} goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:22(v0)
B4
v10 <- LoadStaticField:4(_heap@1026248, CallsInitializer) T{_TimerHeap}
ParallelMove r1 <- r0, r2 <- fp[-1], r0 <- r0
ParallelMove fp[-2] <- r0
v6 <- StaticCall:28( isFirst<0> v10 T{_TimerHeap}, v2, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r1 <- fp[-2], r2 <- fp[-1], r0 <- r0
ParallelMove fp[-1] <- r0
StaticCall:32( remove<0> v10 T{_TimerHeap}, v2, using unchecked entrypoint)
ParallelMove r0 <- fp[-1]
Branch if StrictCompare:36(===, v6 T{bool}, v4) goto (5, 6)
BoolTest
B5
StaticCall:42( _notifyEventHandler@1026248<0> )
ParallelMove  goto:48 B7
B6
B7
ParallelMove r0 <- C
DartReturn:52(v0)
CheckStackOverflowSlowPath
B0
B9
Enter frame
ParallelMove r4 <- r1, r3 <- r2, fp[-2] <- r1, fp[-3] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v5 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r3, r2 <- r5, r1 <- C, fp[-1] <- r5
t0 <- AssertAssignable:10(v3, v4, 'value', instantiator_type_args(v5), function_type_args(v0)) T{FutureOr<X0>?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-3], r2 <- fp[-1], r1 <- C
v9 <- InstanceOf:12(v3 T{FutureOr<X0>?} IS Future<X0>, instantiator_type_args(v5 T{TypeArguments}), function_type_args(v0)) T{bool}
InlineInstanceof
UninstantiatedTypeTest
BoolTest
ParallelMove r0 <- r0
Branch if StrictCompare:16(===, v9 T{bool}, v10) goto (3, 7)
BoolTest
B3
ParallelMove r0 <- fp[-3], r2 <- fp[-1], r1 <- C
v14 <- InstanceOf:22(v3 T{_Future} IS _Future@4048458<X0>, instantiator_type_args(v5 T{TypeArguments}), function_type_args(v0)) T{bool}
InlineInstanceof
UninstantiatedTypeTest
BoolTest
ParallelMove r0 <- r0
Branch if StrictCompare:26(===, v14 T{bool}, v10) goto (4, 5)
BoolTest
B4
ParallelMove r1 <- fp[-3], r2 <- fp[-2]
StaticCall:32( _chainCoreFutureSync@4048458<0> v3 T{_Future}, v2)
ParallelMove  goto:40 B6
B5
ParallelMove r1 <- fp[-2], r2 <- fp[-3]
StaticCall:36( _chainForeignFuture@4048458<0> v2, v3 T{_Future}, using unchecked entrypoint)
ParallelMove  goto:42 B6
B6
B7
ParallelMove r1 <- fp[-2]
v11 <- StaticCall:46( _removeListeners@4048458<0> v2, using unchecked entrypoint, result_type = T{_FutureListener?}) T{_FutureListener?}
ParallelMove r1 <- fp[-2], r2 <- fp[-3], r0 <- r0
ParallelMove fp[-1] <- r0
StaticCall:48( _setValue@4048458<0> v2, v3 T{FutureOr<X0>?}, using unchecked entrypoint)
ParallelMove r1 <- fp[-2], r2 <- fp[-1]
StaticCall:50( _propagateToListeners@4048458<0> v2, v11)
ParallelMove  goto:56 B8
B8
ParallelMove r0 <- C
DartReturn:58(v0)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[4]
v5 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
v6 <- LoadField(v5 . this) T{_Future}
ParallelMove r1 <- r0, r2 <- fp[3], r3 <- fp[2]
StaticCall:10( _completeError@4048458<0> v6, v3, v4, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:12(v0)
CheckStackOverflowSlowPath
B0
B1
ParallelMove r0 <- sp[0], r1 <- sp[1]
StoreField(v2 . _function@0150898 = v3)
ParallelMove r0 <- C
DartReturn:4(v0)
B0
B1
ParallelMove r1 <- sp[0]
v4 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- sp[1]
StoreField(v2 . _state@4048458 = v4 T{int} <int64>)
ParallelMove r0 <- C
DartReturn:4(v0)
B0
B1
Enter frame
ParallelMove r4 <- r1, r3 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r3, r2 <- r2, r1 <- C
v6 <- InstanceOf:10(v3 IS _Future@4048458<X0>, instantiator_type_args(v4), function_type_args(v0)) T{bool}
InlineInstanceof
UninstantiatedTypeTest
BoolTest
ParallelMove r0 <- r0
Branch if StrictCompare:14(===, v6, v7) goto (3, 4)
BoolTest
B3
ParallelMove r1 <- fp[-2], r2 <- fp[-1]
StaticCall:20( _chainCoreFutureAsync@4048458<0> v3, v2)
ParallelMove r0 <- C
DartReturn:22(v0)
B4
ParallelMove r1 <- fp[-1], r2 <- fp[-2]
StaticCall:26( _chainForeignFuture@4048458<0> v2, v3, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:28(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, r1 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v4 <- AllocateContext:10(num_variables=2) T{Context}
ParallelMove r3 <- r0, r0 <- fp[-1]
ParallelMove fp[-3] <- r3
StoreField(v4 . source = v2, NoStoreBarrier)
ParallelMove r4 <- fp[-2]
StoreField(v4 . target = v3, NoStoreBarrier)
ParallelMove r2 <- r0 goto:30 B4
B4
  Loop 0
  Loop Header
ParallelMove fp[-4] <- r2
CheckStackOverflow:28(stack=0, loop=1)
v85 <- LoadField(v119 T{_Future} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v85, v121) goto (3, 5)
B3
  Loop 0
v77 <- LoadField(v119 T{_Future} . _resultOrListeners@4048458) T{*?}
ParallelMove r0 <- r5, r2 <- C, r1 <- C, fp[-1] <- r5
t0 <- AssertAssignable:12(v77, v80 T{_Type}, '', instantiator_type_args(v0 T{Null?}), function_type_args(v0 T{Null?})) T{_Future}
AssertAssignable for compile-time type
TTSCall
ParallelMove r3 <- fp[-3], r2 <- fp[-1]
StoreField(v4 . source = v77 T{_Future}, NoStoreBarrier)
ParallelMove r2 <- r2, r4 <- fp[-2] goto:26 B4
B5
ParallelMove r1 <- r4
Branch if StrictCompare:34(===, v119 T{_Future}, v3 T{_Future}) goto (6, 7)
B6
v31 <- AllocateObject:40(cls=ArgumentError) T{ArgumentError}
ParallelMove r1 <- r0, r0 <- C
ParallelMove fp[-1] <- r1
StoreField(v31 T{ArgumentError} . message = v33 T{_OneByteString}, NoStoreBarrier)
ParallelMove r4 <- fp[-4]
StoreField(v31 T{ArgumentError} . invalidValue = v119 T{_Future}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v31 T{ArgumentError} . _hasValue@0150898 = v7 T{bool}, NoStoreBarrier)
v34 <- StaticCall:44( get:current<0> , result_type = T{!null}) T{StackTrace}
ParallelMove r1 <- fp[-2], r2 <- fp[-1], r3 <- r0
StaticCall:46( _asyncCompleteError@4048458<0> v3 T{_Future}, v31, v34, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:48(v0)
B7
ParallelMove r4 <- r2
Branch if TestInt(v85, v64) goto (8, 9)
B8
ParallelMove r5 <- fp[-2]
v24 <- LoadField(v3 T{_Future} . _resultOrListeners@4048458) T{*?}
ParallelMove r0 <- r6, r2 <- C, r1 <- C, fp[-1] <- r6
t0 <- AssertAssignable:64(v24, v25, '', instantiator_type_args(v0), function_type_args(v0)) T{_FutureListener?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-2], r2 <- fp[-4]
StaticCall:66( _setChained@4048458<0> v3 T{_Future}, v119 T{_Future}, using unchecked entrypoint)
ParallelMove r2 <- fp[-3]
v29 <- LoadField(v4 . source) T{_Future}
ParallelMove r1 <- r1, r2 <- fp[-1]
StaticCall:68( _prependListeners@4048458<0> v29, v24 T{_FutureListener?}, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:70(v0)
B9
ParallelMove r2 <- r3
Branch if TestInt(v85, v123) goto (10, 13)
B10
ParallelMove r1 <- fp[-2]
v20 <- LoadField(v3 T{_Future} . _resultOrListeners@4048458) T{*?}
Branch if StrictCompare:84(===, v20, v0) goto (11, 14)
B11
ParallelMove r1 <- r1, r2 <- fp[-4]
StaticCall:92( _cloneResult@4048458<0> v3 T{_Future}, v119 T{_Future}, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:94(v0)
B14
B13
ParallelMove r1 <- fp[-2]
ParallelMove  goto:100 B12
B12
ParallelMove r1 <- r1
StaticCall:106( _setPendingComplete@4048458<0> v3 T{_Future}, using unchecked entrypoint)
ParallelMove r2 <- fp[-3]
v15 <- LoadField(v4 . target) T{_Future}
v16 <- LoadField(v15 . _zone@4048458 {final}) T{_RootZone}
ParallelMove r1 <- C, r2 <- r2, fp[-1] <- r3
v18 <- AllocateClosure:110(v17, v4) T{_Closure}
ParallelMove r1 <- fp[-1], r2 <- r0
StaticCall:112( scheduleMicrotask<0> v16, v18, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:114(v0)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v3 . source) T{_Future}
v5 <- LoadField(v3 . target) T{_Future}
ParallelMove r1 <- r0, r2 <- r2
StaticCall:10( _chainCoreFutureSync@4048458<0> v4, v5)
ParallelMove r0 <- C
DartReturn:12(v0)
CheckStackOverflowSlowPath
B0
B9
Enter frame
ParallelMove r3 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v7 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- C, r2 <- r4, r1 <- C, fp[-1] <- r4
t0 <- AssertAssignable:10(v0, v6, 'value', instantiator_type_args(v7), function_type_args(v0)) T{Null?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-2]
v10 <- LoadField(v2 . future {final}) T{_Future}
ParallelMove fp[-3] <- r3
v30 <- LoadField(v10 T{_Future} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v30, v47) goto (3, 4)
B4
ParallelMove r0 <- C, r2 <- fp[-1], r1 <- C
t1 <- AssertAssignable:34(v0 T{Null?}, v14, '', instantiator_type_args(v7 T{TypeArguments}), function_type_args(v0 T{Null?})) T{FutureOr<X0>?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-3], r2 <- C
StaticCall:36( _complete@4048458<0> v10 T{_Future}, v0, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:38(v0 T{Null?})
B3
v17 <- AllocateObject:24(cls=StateError, <not-aliased>) T{StateError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v17 T{StateError} . message = v18 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:28(v17)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r6 <- r3, r3 <- r6
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r1, r2 <- r2, r3 <- r3, r5 <- r5, r6 <- r6
v7 <- StaticCall:10( _createSubscription@4048458<0> v2, v3, v6, v5, v4, using unchecked entrypoint, result_type = T{!null}) T{StreamSubscription<X0>}
ParallelMove r0 <- r0
DartReturn:14(v7)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v7 <- LoadField(v2 . _controller@4048458) T{_StreamControllerLifecycle<X0>}
v9 <- LoadClassId(<non-smi> v7) int64
ParallelMove r0 <- r1, r1 <- r0, r2 <- r2, r3 <- r3, r5 <- r5, r6 <- r6
v8 <- DispatchTableCall( cid=v9 _StreamControllerLifecycle._subscribe<0>, v7, v3, v4, v5, v6) T{*?}
ParallelMove r0 <- r0
DartReturn:14(v8 T{StreamSubscription<X0>})
CheckStackOverflowSlowPath
B0
B1
ParallelMove r2 <- C
v3 <- LoadField(v2 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r3
v14 <- IntConverter(int64->uint32[tr], v3) uint32
v5 <- BinaryUint32Op(& [tr], v14 T{int}, v16 T{_Smi}) [0, 1] uint32
ParallelMove r1 <- r1
v15 <- IntConverter(uint32->int64, v5) int64
v7 <- EqualityCompare(v15 T{_Smi} != v12 T{_Smi}) T{bool}
ParallelMove r0 <- r0
DartReturn:18(v7 T{bool})
B0
B1
Enter frame
ParallelMove r2 <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _controller@4048458 {final}) T{_StreamControllerLifecycle<X0>}
v4 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r1, r2 <- r2
DispatchTableCall( cid=v4 _StreamControllerLifecycle._recordPause<0>, v3, v2)
ParallelMove r0 <- C
DartReturn:14(v0)
CheckStackOverflowSlowPath
B0
B1
ParallelMove r0 <- r2
StoreField(v2 . next = v3)
ParallelMove r0 <- C
DartReturn:4(v0)
B0
B1
Enter frame
v4 <- AllocateObject:10(cls=StateError) T{StateError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v4 T{StateError} . message = v5 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:14(v4)
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-3] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _table@3220832 {final}) T{_HashBase}
ParallelMove fp[-2] <- r5
v4 <- LoadField(v2 . _data@3220832 {final}) T{_List}
ParallelMove fp[-1] <- r6
v5 <- LoadField(v2 . _checkSum@3220832 {final}) [-9223372036854775808, 9223372036854775807] int64
v100 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r5, r2 <- r6, r3 <- r3
v6 <- DispatchTableCall( cid=v100 _HashBase._isModifiedSince<0>, v3, v4, v5) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:20(===, v6 T{bool}, v7) goto (3, 4)
BoolTest
B4
ParallelMove r2 <- fp[-3], r3 <- fp[-1]
v9 <- LoadField:82(v2 . _step@3220832 {final}) [-9223372036854775808, 9223372036854775807] int64
v12 <- LoadField:82(v2 . _len@3220832 {final}) [-9223372036854775808, 9223372036854775807] int64
v28 <- LoadField:82(v4 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v72 <- UnboxInt64:82([non-speculative], v28) [0, 576460752303423487] int64
ParallelMove  goto:82 B6
B6
  Loop 0
  Loop Header
CheckStackOverflow:76(stack=0, loop=1)
v8 <- LoadField(v2 . _offset@3220832) [-9223372036854775808, 9223372036854775807] int64
v10 <- BinaryInt64Op(+ [tr], v8, v9) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_CompactIterator} . _offset@3220832 = v10 T{int} <int64>)
Branch if RelationalOp(<, v10 T{int}, v12) T{bool} goto (5, 9)
B5
  Loop 0
ParallelMove r0 <- r7, r1 <- r8
GenericCheckBound:62(v72 T{_Smi}, v10 T{int}) [-9223372036854775808, 9223372036854775807] int64
v81 <- LoadIndexed:62([_List] v4 T{_List}, v10 T{int}) T{*?}
Branch if StrictCompare:10(===, v81 T{Object??}, v4 T{_List}) T{bool} goto (7, 10)
B7
B10
B9
B8
Branch if RelationalOp(<, v10 T{int}, v12 T{int}) T{bool} goto (11, 12)
B11
v74 <- UnboxInt64([non-speculative], v28 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- r8
GenericCheckBound:112(v74 T{_Smi}, v10 T{int}) [-9223372036854775808, 9223372036854775807] int64
v82 <- LoadIndexed:112([_List] v4 T{_List}, v10 T{int}) T{*?}
ParallelMove r0 <- r0
StoreField(v2 T{_CompactIterator} . _current@3220832 = v82 T{X0??})
ParallelMove r0 <- C
DartReturn:116(v7)
B12
StoreField(v2 T{_CompactIterator} . _current@3220832 = v0 T{Null?})
ParallelMove r0 <- C
DartReturn:122(v17)
B3
ParallelMove r0 <- fp[-2]
v26 <- AllocateObject:26(cls=ConcurrentModificationError, <not-aliased>) T{ConcurrentModificationError}
ParallelMove r1 <- r0, r0 <- fp[-2]
StoreField(v26 T{ConcurrentModificationError} . modifiedObject = v3 T{_HashBase}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:32(v26)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
B0
B1
ParallelMove r2 <- r1
v3 <- LoadField(v2 . _offset@3220832) [-9223372036854775808, 9223372036854775807] int64
v4 <- LoadField(v2 . _step@3220832 {final}) [-9223372036854775808, 9223372036854775807] int64
v5 <- BinaryInt64Op(+ [tr], v3, v4) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_CompactIteratorImmutable} . _offset@3220832 = v5 T{int} <int64>)
v7 <- LoadField(v2 . _len@3220832 {final}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v5 T{int}, v7) T{bool} goto (3, 4)
B3
v11 <- LoadField(v2 . _data@3220832 {final}) T{_ImmutableList}
v14 <- LoadField(v11 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v34 <- UnboxInt64([non-speculative], v14) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:36(v34 T{_Smi}, v5 T{int}) [-9223372036854775808, 9223372036854775807] int64
v36 <- LoadIndexed:36([_List] v11, v5 T{int}) T{*?}
ParallelMove r0 <- r0
StoreField(v2 T{_CompactIteratorImmutable} . _current@3220832 = v36 T{X0??})
ParallelMove r0 <- C
DartReturn:40(v9)
B4
StoreField(v2 T{_CompactIteratorImmutable} . _current@3220832 = v0 T{Null?})
ParallelMove r0 <- C
DartReturn:46(v10)
slow path check bound operation
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v2 . _map@3220832 {final}) T{_Map}
ParallelMove r1 <- r0, r2 <- r2, fp[-1] <- r0
v12 <- StaticCall:10( _getValueOrData@3220832<0> v4 T{_Map}, v3 T{Object??}, using unchecked entrypoint) T{Object??}
ParallelMove r0 <- r0, r1 <- fp[-1]
v19 <- LoadField(v4 T{_Map} . LinkedHashBase.data) T{_List}
Branch if StrictCompare:14(===, v19 T{_List}, v12) goto (5, 6)
B5
ParallelMove r0 <- C goto:24 B7
B6
B7
ParallelMove r0 <- r0
DartReturn:14(v14 T{X1??})
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _iterable@9040228 {final}) T{Iterable<X0>}
ParallelMove fp[-1] <- r2
v58 <- LoadClassId(<non-smi> v3) int64
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r0
v4 <- DispatchTableCall( cid=v58 Iterable.length<0>, v3) T{int}
ParallelMove r0 <- r0, r3 <- fp[-2]
v5 <- LoadField(v2 . _length@9040228 {final}) [-9223372036854775808, 9223372036854775807] int64
v56 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v5 != v56 T{int}) T{bool} goto (3, 4)
B4
v8 <- LoadField(v2 . _index@9040228) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>=, v8, v56 T{int}) T{bool} goto (5, 6)
B5
StoreField(v2 T{ListIterator} . _current@9040228 = v0 T{Null?})
ParallelMove r0 <- C
DartReturn:50(v16)
B6
ParallelMove r1 <- fp[-1]
v59 <- LoadClassId(<non-smi> v3 T{Iterable<X0>}) int64
ParallelMove r0 <- r2, r1 <- r1, r2 <- r0
v12 <- DispatchTableCall( cid=v59 Iterable.elementAt<0>, v3 T{Iterable<X0>}, v8 T{int}) T{*?}
ParallelMove r0 <- r0, r1 <- fp[-2]
StoreField(v2 T{ListIterator} . _current@9040228 = v12 T{X0?})
v13 <- LoadField(v2 . _index@9040228) [-9223372036854775808, 9223372036854775807] int64
v15 <- BinaryInt64Op(+ [tr], v13, v57 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{ListIterator} . _index@9040228 = v15 T{int} <int64>)
ParallelMove r0 <- C
DartReturn:68(v7)
B3
ParallelMove r1 <- fp[-1]
v17 <- AllocateObject:26(cls=ConcurrentModificationError, <not-aliased>) T{ConcurrentModificationError}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v17 T{ConcurrentModificationError} . modifiedObject = v3 T{Iterable<X0>}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:32(v17)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r2 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _position@7027147) [-9223372036854775808, 9223372036854775807] int64
v5 <- BinaryInt64Op(+ [tr], v3, v38 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-1] <- r3
v6 <- LoadField(v2 . _length@7027147 {final}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v5, v6) T{bool} goto (3, 4)
B3
v11 <- LoadField(v2 . _array@7027147 {final}) T{List<X0>}
v37 <- BoxInt64(v5) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v39 <- LoadClassId(<non-smi> v11) int64
MoveArgument(sp[1] <- v11)
MoveArgument(sp[0] <- v37 T{int})
ParallelMove r0 <- r1
v12 <- DispatchTableCall( cid=v39 List.[]<0>, v11, v37 T{int}) T{*?}
ParallelMove r0 <- r0, r1 <- fp[-2]
StoreField(v2 T{_TypedListIterator} . _current@7027147 = v12 T{X0})
ParallelMove r2 <- fp[-1]
StoreField(v2 T{_TypedListIterator} . _position@7027147 = v5 T{int} <int64>)
ParallelMove r0 <- C
DartReturn:34(v8)
B4
ParallelMove r1 <- r2
StoreField(v2 T{_TypedListIterator} . _position@7027147 = v6 T{int} <int64>)
StoreField(v2 T{_TypedListIterator} . _current@7027147 = v0 T{Null?})
ParallelMove r0 <- C
DartReturn:44(v10)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r0
v5 <- StaticCall:10( get:lengthInBytes<0> v2, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r0, r2 <- fp[-2], r3 <- fp[-3]
StaticCall:14( _rangeCheck@7027147<0> v5, v3, v4 T{int})
ParallelMove r0 <- fp[-1]
v8 <- LoadField(v2 . _data@7027147 {final}) T{_TypedList}
ParallelMove fp[-4] <- r1
v19 <- AllocateObject:18(cls=_Uint8ArrayView) T{_Uint8ArrayView}
ParallelMove r3 <- r0, r2 <- fp[-4]
StoreField(v19 . TypedDataView.typed_data = v8 T{_TypedList}, NoStoreBarrier)
ParallelMove r4 <- fp[-2]
v25 <- BoxInt64(v3 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v19 . TypedDataView.offset_in_bytes = v25 T{int}, NoStoreBarrier)
ParallelMove r5 <- fp[-3]
v26 <- BoxInt64(v4 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v19 . TypedDataBase.length = v26 T{int}, NoStoreBarrier)
v21 <- LoadField(v8 T{_TypedList} . PointerBase.data, MayLoadInnerPointer) untagged
v23 <- CalculateElementAddress(v21, v24 T{_Smi}, v3 T{int}, index_scale=1) untagged
StoreField(v19 . PointerBase.data = v23 <untagged>, NoStoreBarrier, MayStoreInnerPointer)
ParallelMove r0 <- r3
DartReturn:20(v19 T{_Uint8ArrayView})
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-1] <- r3, fp[-2] <- r2
Branch if RelationalOp(<, v4, v84 T{_Smi}) T{bool} goto (3, 4)
B4
Branch if RelationalOp(<, v3, v84 T{_Smi}) T{bool} goto (5, 6)
B6
v9 <- BinaryInt64Op(+ [tr], v3, v4) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-3] <- r0
Branch if RelationalOp(>, v9, v2) T{bool} goto (7, 8)
B8
ParallelMove r0 <- C
DartReturn:68(v0)
B3
v14 <- AllocateObject:20(cls=RangeError) T{RangeError}
ParallelMove r2 <- r0, r0 <- C
StoreField(v14 T{RangeError} . message = v22 T{_OneByteString}, NoStoreBarrier)
ParallelMove r3 <- fp[-1]
v82 <- BoxInt64(v4 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v14 T{RangeError} . invalidValue = v82 T{int}, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v14 T{RangeError} . _hasValue@0150898 = v7 T{bool}, NoStoreBarrier)
ParallelMove r0 <- r2
Throw:24(v14)
B5
ParallelMove r1 <- C, r0 <- C
v13 <- AllocateObject:38(cls=RangeError) T{RangeError}
ParallelMove r2 <- r0, r1 <- C
StoreField(v13 T{RangeError} . message = v22 T{_OneByteString}, NoStoreBarrier)
ParallelMove r3 <- fp[-2]
v81 <- BoxInt64(v3 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v13 T{RangeError} . invalidValue = v81 T{int}, NoStoreBarrier)
ParallelMove r3 <- C
StoreField(v13 T{RangeError} . _hasValue@0150898 = v7 T{bool}, NoStoreBarrier)
ParallelMove r0 <- r2
Throw:42(v13)
B7
ParallelMove r3 <- C, r1 <- C
v11 <- AllocateObject:58(cls=RangeError) T{RangeError}
ParallelMove r2 <- r0, r0 <- C
StoreField(v11 T{RangeError} . message = v22 T{_OneByteString}, NoStoreBarrier)
ParallelMove r3 <- fp[-3]
v83 <- BoxInt64(v9 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v11 T{RangeError} . invalidValue = v83 T{int}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v11 T{RangeError} . _hasValue@0150898 = v7 T{bool}, NoStoreBarrier)
ParallelMove r0 <- r2
Throw:64(v11)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _data@7027147 {final}) T{_TypedList}
v16 <- LoadField(v3 T{_TypedList} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove fp[-1] <- r2
v18 <- LoadClassId(<non-smi> v3 T{_TypedList}) int64
ParallelMove r0 <- r1, r1 <- r0
v10 <- DispatchTableCall( cid=v18 _TypedList.elementSizeInBytes<0>, v3 T{_TypedList}) int64
ParallelMove r0 <- r0, r1 <- fp[-1]
v17 <- UnboxInt64([non-speculative], v16 T{_Smi}) [0, 4611686018427387903] int64
v11 <- BinaryInt64Op(* [tr], v17 T{_Smi}, v10 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r1
DartReturn:14(v11 T{int})
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r2 <- fp[3]
v4 <- LoadField(v2 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[2]
v7 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v8 <- UnboxInt64([non-speculative], v4) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
t0 <- GenericCheckBound:10(v8 T{_Smi}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v12 <- LoadField(v2 . PointerBase.data, MayLoadInnerPointer) untagged
v6 <- LoadIndexed([_Float64x2ArrayView] v12 T{_Float64x2ArrayView}, v7 T{int}) float64x2
v9 <- Box(v6) T{_Float64x2}
ParallelMove r0 <- r0
DartReturn:12(v9 T{_Float64x2})
slow path check bound operation
Box slow path allocation of _Float64x2
B0
B1
Enter frame
ParallelMove r2 <- fp[3]
v4 <- LoadField(v2 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[2]
v7 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v8 <- UnboxInt64([non-speculative], v4) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
t0 <- GenericCheckBound:10(v8 T{_Smi}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v6 <- LoadIndexed([_Float64x2List] v2, v7 T{int}) float64x2
v9 <- Box(v6) T{_Float64x2}
ParallelMove r0 <- r0
DartReturn:12(v9 T{_Float64x2})
slow path check bound operation
Box slow path allocation of _Float64x2
B0
B1
Enter frame
ParallelMove r2 <- fp[3]
v4 <- LoadField(v2 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[2]
v7 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v8 <- UnboxInt64([non-speculative], v4) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
t0 <- GenericCheckBound:10(v8 T{_Smi}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v12 <- LoadField(v2 . PointerBase.data, MayLoadInnerPointer) untagged
v6 <- LoadIndexed([_Int32x4ArrayView] v12 T{_Int32x4ArrayView}, v7 T{int}) int32x4
v9 <- Box(v6) T{_Int32x4}
ParallelMove r0 <- r0
DartReturn:12(v9 T{_Int32x4})
slow path check bound operation
Box slow path allocation of _Int32x4
B0
B1
Enter frame
ParallelMove r2 <- fp[3]
v4 <- LoadField(v2 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[2]
v7 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v8 <- UnboxInt64([non-speculative], v4) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
t0 <- GenericCheckBound:10(v8 T{_Smi}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v6 <- LoadIndexed([_Int32x4List] v2, v7 T{int}) int32x4
v9 <- Box(v6) T{_Int32x4}
ParallelMove r0 <- r0
DartReturn:12(v9 T{_Int32x4})
slow path check bound operation
Box slow path allocation of _Int32x4
B0
B1
Enter frame
ParallelMove r2 <- fp[3]
v4 <- LoadField(v2 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[2]
v7 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v8 <- UnboxInt64([non-speculative], v4) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
t0 <- GenericCheckBound:10(v8 T{_Smi}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v12 <- LoadField(v2 . PointerBase.data, MayLoadInnerPointer) untagged
v6 <- LoadIndexed([_Float32x4ArrayView] v12 T{_Float32x4ArrayView}, v7 T{int}) float32x4
v9 <- Box(v6) T{_Float32x4}
ParallelMove r0 <- r0
DartReturn:12(v9 T{_Float32x4})
slow path check bound operation
Box slow path allocation of _Float32x4
B0
B1
Enter frame
ParallelMove r2 <- fp[3]
v4 <- LoadField(v2 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[2]
v7 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v8 <- UnboxInt64([non-speculative], v4) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
t0 <- GenericCheckBound:10(v8 T{_Smi}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v6 <- LoadIndexed([_Float32x4List] v2, v7 T{int}) float32x4
v9 <- Box(v6) T{_Float32x4}
ParallelMove r0 <- r0
DartReturn:12(v9 T{_Float32x4})
slow path check bound operation
Box slow path allocation of _Float32x4
B0
B1
Enter frame
ParallelMove r2 <- fp[3]
v4 <- LoadField(v2 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[2]
v7 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v8 <- UnboxInt64([non-speculative], v4) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
t0 <- GenericCheckBound:10(v8 T{_Smi}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v12 <- LoadField(v2 . PointerBase.data, MayLoadInnerPointer) untagged
v6 <- LoadIndexed([_Float64ArrayView] v12 T{_Float64ArrayView}, v7 T{int}) double
v9 <- Box(v6) T{_Double}
ParallelMove r0 <- r0
DartReturn:12(v9 T{_Double})
slow path check bound operation
Box slow path allocation of _Double
B0
B1
Enter frame
ParallelMove r2 <- fp[3]
v4 <- LoadField(v2 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[2]
v7 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v8 <- UnboxInt64([non-speculative], v4) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
t0 <- GenericCheckBound:10(v8 T{_Smi}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v6 <- LoadIndexed([_Float64List] v2, v7 T{int}) double
v9 <- Box(v6) T{_Double}
ParallelMove r0 <- r0
DartReturn:12(v9 T{_Double})
slow path check bound operation
Box slow path allocation of _Double
B0
B1
Enter frame
ParallelMove r2 <- fp[3]
v4 <- LoadField(v2 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[2]
v8 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v9 <- UnboxInt64([non-speculative], v4) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
t0 <- GenericCheckBound:10(v9 T{_Smi}, v8 T{int}) [-9223372036854775808, 9223372036854775807] int64
v13 <- LoadField(v2 . PointerBase.data, MayLoadInnerPointer) untagged
v6 <- LoadIndexed([_Float32ArrayView] v13 T{_Float32ArrayView}, v8 T{int}) float
v7 <- FloatToDouble(v6) double
v10 <- Box(v7) T{_Double}
ParallelMove r0 <- r0
DartReturn:12(v10 T{_Double})
slow path check bound operation
Box slow path allocation of _Double
B0
B1
Enter frame
ParallelMove r2 <- fp[3]
v4 <- LoadField(v2 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[2]
v8 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v9 <- UnboxInt64([non-speculative], v4) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
t0 <- GenericCheckBound:10(v9 T{_Smi}, v8 T{int}) [-9223372036854775808, 9223372036854775807] int64
v6 <- LoadIndexed([_Float32List] v2, v8 T{int}) float
v7 <- FloatToDouble(v6) double
v10 <- Box(v7) T{_Double}
ParallelMove r0 <- r0
DartReturn:12(v10 T{_Double})
slow path check bound operation
Box slow path allocation of _Double
B0
B1
Enter frame
ParallelMove r2 <- fp[3]
v4 <- LoadField(v2 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[2]
v7 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v8 <- UnboxInt64([non-speculative], v4) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
t0 <- GenericCheckBound:10(v8 T{_Smi}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v12 <- LoadField(v2 . PointerBase.data, MayLoadInnerPointer) untagged
v6 <- LoadIndexed([_Int64ArrayView] v12 T{_Int64ArrayView}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v9 <- BoxInt64(v6) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
DartReturn:12(v9 T{int})
slow path check bound operation
B0
B1
Enter frame
ParallelMove r2 <- fp[3]
v4 <- LoadField(v2 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[2]
v7 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v8 <- UnboxInt64([non-speculative], v4) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
t0 <- GenericCheckBound:10(v8 T{_Smi}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v6 <- LoadIndexed([_Int64List] v2, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v9 <- BoxInt64(v6) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
DartReturn:12(v9 T{int})
slow path check bound operation
B0
B1
ParallelMove r2 <- sp[1]
v4 <- LoadField(v2 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- sp[0]
v7 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v8 <- UnboxInt64([non-speculative], v4) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
t0 <- GenericCheckBound:10(v8 T{_Smi}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v12 <- LoadField(v2 . PointerBase.data, MayLoadInnerPointer) untagged
v6 <- LoadIndexed([_Uint32ArrayView] v12 T{_Uint32ArrayView}, v7 T{int}) [0, 4294967295] uint32
v9 <- BoxSmallInt(v6) [0, 4294967295] T{_Smi}
ParallelMove r0 <- r0
DartReturn:12(v9 T{_Smi})
slow path check bound operation
B0
B1
ParallelMove r2 <- sp[1]
v4 <- LoadField(v2 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- sp[0]
v7 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v8 <- UnboxInt64([non-speculative], v4) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
t0 <- GenericCheckBound:10(v8 T{_Smi}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v6 <- LoadIndexed([_Uint32List] v2, v7 T{int}) [0, 4294967295] uint32
v9 <- BoxSmallInt(v6) [0, 4294967295] T{_Smi}
ParallelMove r0 <- r0
DartReturn:12(v9 T{_Smi})
slow path check bound operation
B0
B1
ParallelMove r2 <- sp[1]
v4 <- LoadField(v2 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- sp[0]
v7 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v8 <- UnboxInt64([non-speculative], v4) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
t0 <- GenericCheckBound:10(v8 T{_Smi}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v12 <- LoadField(v2 . PointerBase.data, MayLoadInnerPointer) untagged
v6 <- LoadIndexed([_Int32ArrayView] v12 T{_Int32ArrayView}, v7 T{int}) [-2147483648, 2147483647] int32
v9 <- BoxSmallInt(v6) [-2147483648, 2147483647] T{_Smi}
ParallelMove r0 <- r0
DartReturn:12(v9 T{_Smi})
slow path check bound operation
B0
B1
ParallelMove r2 <- sp[1]
v4 <- LoadField(v2 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- sp[0]
v7 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v8 <- UnboxInt64([non-speculative], v4) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
t0 <- GenericCheckBound:10(v8 T{_Smi}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v6 <- LoadIndexed([_Int32List] v2, v7 T{int}) [-2147483648, 2147483647] int32
v9 <- BoxSmallInt(v6) [-2147483648, 2147483647] T{_Smi}
ParallelMove r0 <- r0
DartReturn:12(v9 T{_Smi})
slow path check bound operation
B0
B1
ParallelMove r2 <- sp[1]
v4 <- LoadField(v2 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- sp[0]
v7 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v8 <- UnboxInt64([non-speculative], v4) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
t0 <- GenericCheckBound:10(v8 T{_Smi}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v12 <- LoadField(v2 . PointerBase.data, MayLoadInnerPointer) untagged
v6 <- LoadIndexed([_Uint16ArrayView] v12 T{_Uint16ArrayView}, v7 T{int}) [0, 65535] int64
v9 <- BoxInt64(v6) [0, 65535] T{_Smi}
ParallelMove r0 <- r0
DartReturn:12(v9 T{_Smi})
slow path check bound operation
B0
B1
ParallelMove r2 <- sp[1]
v4 <- LoadField(v2 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- sp[0]
v7 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v8 <- UnboxInt64([non-speculative], v4) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
t0 <- GenericCheckBound:10(v8 T{_Smi}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v6 <- LoadIndexed([_Uint16List] v2, v7 T{int}) [0, 65535] int64
v9 <- BoxInt64(v6) [0, 65535] T{_Smi}
ParallelMove r0 <- r0
DartReturn:12(v9 T{_Smi})
slow path check bound operation
B0
B1
ParallelMove r2 <- sp[1]
v4 <- LoadField(v2 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- sp[0]
v7 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v8 <- UnboxInt64([non-speculative], v4) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
t0 <- GenericCheckBound:10(v8 T{_Smi}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v12 <- LoadField(v2 . PointerBase.data, MayLoadInnerPointer) untagged
v6 <- LoadIndexed([_Int16ArrayView] v12 T{_Int16ArrayView}, v7 T{int}) [-32768, 32767] int64
v9 <- BoxInt64(v6) [-32768, 32767] T{_Smi}
ParallelMove r0 <- r0
DartReturn:12(v9 T{_Smi})
slow path check bound operation
B0
B1
ParallelMove r2 <- sp[1]
v4 <- LoadField(v2 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- sp[0]
v7 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v8 <- UnboxInt64([non-speculative], v4) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
t0 <- GenericCheckBound:10(v8 T{_Smi}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v6 <- LoadIndexed([_Int16List] v2, v7 T{int}) [-32768, 32767] int64
v9 <- BoxInt64(v6) [-32768, 32767] T{_Smi}
ParallelMove r0 <- r0
DartReturn:12(v9 T{_Smi})
slow path check bound operation
B0
B1
ParallelMove r2 <- sp[1]
v4 <- LoadField(v2 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- sp[0]
v7 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v8 <- UnboxInt64([non-speculative], v4) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
t0 <- GenericCheckBound:10(v8 T{_Smi}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v12 <- LoadField(v2 . PointerBase.data, MayLoadInnerPointer) untagged
v6 <- LoadIndexed([_Uint8ArrayView] v12 T{_Uint8ArrayView}, v7 T{int}) [0, 255] int64
v9 <- BoxInt64(v6) [0, 255] T{_Smi}
ParallelMove r0 <- r0
DartReturn:12(v9 T{_Smi})
slow path check bound operation
B0
B1
ParallelMove r2 <- sp[1]
v4 <- LoadField(v2 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- sp[0]
v7 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v8 <- UnboxInt64([non-speculative], v4) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
t0 <- GenericCheckBound:10(v8 T{_Smi}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v6 <- LoadIndexed([_Uint8List] v2, v7 T{int}) [0, 255] int64
v9 <- BoxInt64(v6) [0, 255] T{_Smi}
ParallelMove r0 <- r0
DartReturn:12(v9 T{_Smi})
slow path check bound operation
B0
B1
ParallelMove r2 <- sp[1]
v4 <- LoadField(v2 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- sp[0]
v7 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v8 <- UnboxInt64([non-speculative], v4) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
t0 <- GenericCheckBound:10(v8 T{_Smi}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v12 <- LoadField(v2 . PointerBase.data, MayLoadInnerPointer) untagged
v6 <- LoadIndexed([_Int8ArrayView] v12 T{_Int8ArrayView}, v7 T{int}) [-128, 127] int64
v9 <- BoxInt64(v6) [-128, 127] T{_Smi}
ParallelMove r0 <- r0
DartReturn:12(v9 T{_Smi})
slow path check bound operation
B0
B1
ParallelMove r2 <- sp[1]
v4 <- LoadField(v2 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- sp[0]
v7 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v8 <- UnboxInt64([non-speculative], v4) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
t0 <- GenericCheckBound:10(v8 T{_Smi}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v6 <- LoadIndexed([_Int8List] v2, v7 T{int}) [-128, 127] int64
v9 <- BoxInt64(v6) [-128, 127] T{_Smi}
ParallelMove r0 <- r0
DartReturn:12(v9 T{_Smi})
slow path check bound operation
B0
B1
Enter frame
ParallelMove r3 <- r1, fp[-3] <- r1, fp[-4] <- r2
v6 <- LoadField(v4 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v8 <- BinarySmiOp:4(- [tr], v6, v7) [-2, 4611686018427387901] T{_Smi}
Branch if RelationalOp:6(<=, v9, v8) T{bool} goto (2, 3)
B2
v36 <- LoadIndexedUnsafe(fp[v8 T{_Smi} + 8]) [-9223372036854775808, 9223372036854775807] T{int}
v96 <- UnboxInt64([non-speculative], v36) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- r1 goto:20 B5
B3
ParallelMove r4 <- C goto:18 B5
B5
CheckStackOverflow:26(stack=0, loop=0)
Branch if RelationalOp(<, v13, v110 T{_Smi}) T{bool} goto (8, 6)
B6
v65 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v98 <- UnboxInt64([non-speculative], v65 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove fp[-5] <- r5
Branch if RelationalOp(>, v13, v98 T{_Smi}) T{bool} goto (9, 10)
B10
v39 <- LoadClassId(v3) [78, 94] int64
Branch if TestRange(v39 in [93-94]) T{bool} goto (11, 17)
B11
v55 <- LoadField(v3 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v100 <- UnboxInt64([non-speculative], v55 T{_Smi}) [0, 2305843009213693951] int64
v27 <- BinaryInt64Op(- [tr], v98 T{_Smi}, v100 T{_Smi}) [v98-2305843009213693951, v98] int64
ParallelMove fp[-2] <- r6
ParallelMove r4 <- r4 goto:114 B16
B16
  Loop 1
  Loop Header
ParallelMove fp[-1] <- r4
CheckStackOverflow:118(stack=0, loop=1)
Branch if RelationalOp(<=, v28, v27) T{bool} goto (12, 13)
B12
  Loop 1
v101 <- BoxInt64(v28) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v101 T{int})
MoveArgument(sp[0] <- v3 T{String})
v31 <- StaticCall:98( _substringMatches@0150898<0> v2, v101 T{int}, v3 T{String}, using unchecked entrypoint, recognized_kind = StringBaseSubstringMatches, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:102(===, v31 T{bool}, v11) goto (14, 15)
BoolTest
B15
  Loop 1
ParallelMove r0 <- fp[-1]
v32 <- BinaryInt64Op(+ [tr], v28, v111 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- r4, r3 <- fp[-3], r2 <- fp[-4], r6 <- fp[-2] goto:116 B16
B14
ParallelMove r0 <- fp[-1]
ParallelMove r0 <- r0
DartReturn:108(v28)
B13
ParallelMove r0 <- C
DartReturn:122(v79)
B17
ParallelMove r6 <- r4 goto:156 B22
B22
  Loop 0
  Loop Header
ParallelMove fp[-1] <- r6
CheckStackOverflow:160(stack=0, loop=1)
Branch if RelationalOp(<=, v19, v98 T{_Smi}) T{bool} goto (18, 19)
B18
  Loop 0
v135 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r4, r2 <- fp[-3], r3 <- r6
v23 <- DispatchTableCall( cid=v135 Pattern.matchAsPrefix<0>, v3, v2, v19) T{Match??}
ParallelMove r0 <- r0
Branch if StrictCompare:144(!==, v23 T{Match??}, v0) goto (20, 21)
B21
  Loop 0
ParallelMove r0 <- fp[-1]
v24 <- BinaryInt64Op(+ [tr], v19, v111 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r6, r5 <- fp[-5] goto:158 B22
B20
ParallelMove r0 <- fp[-1]
ParallelMove r0 <- r0
DartReturn:150(v19)
B19
ParallelMove r0 <- C
DartReturn:164(v79)
B8
B9
B7
v60 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
ParallelMove fp[-4] <- r2
v97 <- BoxInt64(v13) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
ParallelMove fp[-3] <- r0
v33 <- AllocateObject:58(cls=RangeError) T{RangeError}
ParallelMove r0 <- r0
ParallelMove fp[-6] <- r0
MoveArgument(sp[4] <- v33)
MoveArgument(sp[3] <- v97 T{int})
MoveArgument(sp[2] <- v12)
MoveArgument(sp[1] <- v60 T{_Smi})
MoveArgument(sp[0] <- v35)
StaticCall:62( RangeError.range<0> v33, v97 T{int}, v12, v60 T{_Smi}, v35)
ParallelMove r0 <- fp[-6]
Throw:64(v33)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r3 <- r1
v6 <- LoadField(v4 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v8 <- BinarySmiOp:4(- [tr], v6, v7) [-2, 4611686018427387901] T{_Smi}
Branch if RelationalOp:6(<=, v9, v8) T{bool} goto (2, 3)
B2
v37 <- LoadIndexedUnsafe(fp[v8 T{_Smi} + 8]) [-9223372036854775808, 9223372036854775807] T{int}
v112 <- UnboxInt64([non-speculative], v37) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- r1 goto:20 B5
B3
ParallelMove r4 <- C goto:18 B5
B5
CheckStackOverflow:26(stack=0, loop=0)
v38 <- LoadClassId(v3) [78, 94] T{_Smi}
v115 <- UnboxInt64([non-speculative], v38) [78, 94] int64
Branch if EqualityCompare(v115 T{_Smi} == v128 T{_Smi}) T{bool} goto (8, 6)
B8
B6
Branch if EqualityCompare(v115 T{_Smi} == v129 T{_Smi}) T{bool} goto (9, 24)
B9
B7
v63 <- LoadField(v2 T{_OneByteString} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v68 <- LoadField(v3 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v118 <- UnboxInt64([non-speculative], v68 T{_Smi}) [0, 2305843009213693951] int64
Branch if EqualityCompare(v118 T{_Smi} == v130 T{_Smi}) T{bool} goto (10, 21)
B10
Branch if RelationalOp(>=, v13, v127 T{_Smi}) T{bool} goto (11, 22)
B11
v117 <- UnboxInt64([non-speculative], v63 T{_Smi}) [0, 2305843009213693951] int64
Branch if RelationalOp(<, v13, v117 T{_Smi}) T{bool} goto (12, 23)
B12
ParallelMove r0 <- r6, r1 <- C
t0 <- GenericCheckBound:92(v118 T{_Smi}, v127 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
Branch if StrictCompare:92(===, v38 T{_Smi}, v15 T{_Smi}) goto (31, 32)
B31
v55 <- LoadIndexed([_OneByteString] v3 T{_OneByteString}, v127 T{_Smi}) [0, 255] int64
ParallelMove r2 <- r0 goto:92 B30
B32
v53 <- LoadIndexed([_TwoByteString] v3 T{_StringBase}, v127 T{_Smi}) [0, 65535] int64
ParallelMove r2 <- r0 goto:92 B30
B30
Branch if RelationalOp(>, v54 T{_Smi}, v131 T{_Smi}) T{bool} goto (13, 14)
B13
ParallelMove r0 <- C
DartReturn:106(v86)
B14
B19
  Loop 0
  Loop Header
CheckStackOverflow:146(stack=0, loop=1)
Branch if RelationalOp(<, v30, v117 T{_Smi}) T{bool} goto (15, 16)
B15
  Loop 0
ParallelMove r0 <- r7, r1 <- r4
GenericCheckBound:124(v117 T{_Smi}, v30) [-9223372036854775808, 9223372036854775807] int64
v132 <- LoadIndexed:124([_OneByteString] v2, v30 T{int}) [0, 255] int64
Branch if EqualityCompare(v132 == v54 T{_Smi}) T{bool} goto (17, 18)
B18
  Loop 0
v35 <- BinaryInt64Op(+ [tr], v30 T{int}, v130 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- r0 goto:144 B19
B17
ParallelMove r0 <- r4
DartReturn:136(v30 T{int})
B16
ParallelMove r0 <- C
DartReturn:150(v86)
B23
B22
B21
B20
B24
B25
v113 <- BoxInt64(v13) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v113 T{int})
ParallelMove r1 <- r3, r2 <- r2
v21 <- StaticCall:174( indexOf<0> v2, v3, v113 T{int}, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0
DartReturn:176(v21)
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
ParallelMove r2 <- sp[1]
v4 <- LoadField(v2 . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
ParallelMove r4 <- sp[0]
v8 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v9 <- UnboxInt64([non-speculative], v4) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- r5
t0 <- GenericCheckBound:10(v9 T{_Smi}, v8 T{int}) [-9223372036854775808, 9223372036854775807] int64
v6 <- LoadField(v2 . GrowableObjectArray.data) T{_List}
v7 <- LoadIndexed([_List] v6, v8 T{int}) T{X0?}
ParallelMove r0 <- r0
DartReturn:12(v7)
slow path check bound operation
B0
B1
ParallelMove r2 <- sp[1]
v4 <- LoadField(v2 . Array.length {final}) [0, 576460752303423487] T{_Smi}
ParallelMove r4 <- sp[0]
v7 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v8 <- UnboxInt64([non-speculative], v4) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- r5
t0 <- GenericCheckBound:10(v8 T{_Smi}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v6 <- LoadIndexed([_List] v2, v7 T{int}) T{*?}
ParallelMove r0 <- r0
DartReturn:12(v6)
slow path check bound operation
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v4 <- StaticCall:10( _throwUnmodifiable@3220832<0> , result_type = T{!null}) T{Never}
ParallelMove r0 <- r0
DartReturn:12(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v2 <- AllocateObject:10(cls=UnsupportedError) T{UnsupportedError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v2 T{UnsupportedError} . message = v3 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:14(v2)
B0
B1
Enter frame
ParallelMove fp[-3] <- r1, fp[-4] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v113 <- LoadField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.index) T{_Uint32List}
v118 <- LoadField(v113 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v206 <- UnboxInt64([non-speculative], v118 T{_Smi}) [0, 4611686018427387903] int64
v7 <- BinaryInt64Op(- [tr], v206 T{_Smi}, v230 T{_Smi}) [v206-1, v206-1] int64
ParallelMove fp[-2] <- r3
v8 <- ShiftInt64Op(>> [tr], v206 T{_Smi}, v230 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove fp[-1] <- r4
MoveArgument(sp[0] <- v3 T{FinalizerEntry})
v179 <- StaticCall:10( _getHash@0150898<0> v3 T{FinalizerEntry}, recognized_kind = Object_getHash, result_type = T{_Smi}) [-4611686018427387904, 4611686018427387903] T{_Smi}
ParallelMove r0 <- r0, r3 <- fp[-3]
v130 <- LoadField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.hash_mask) [0, 4611686018427387903] T{_Smi}
v208 <- UnboxInt64([non-speculative], v179 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v209 <- UnboxInt64([non-speculative], v130 T{_Smi}) [0, 4611686018427387903] int64
v139 <- BinaryInt64Op(& [tr], v208 T{_Smi}, v209 T{_Smi}) [0, 4611686018427387903] int64
Branch if EqualityCompare(v139 == v231 T{_Smi}) T{bool} goto (47, 48)
B47
ParallelMove r6 <- fp[-1], r4 <- fp[-1] goto:32 B49
B48
ParallelMove r4 <- fp[-1]
v145 <- BinaryInt64Op(* [tr], v139, v8 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r0 goto:34 B49
B49
v158 <- BinaryInt64Op(& [tr], v208 T{_Smi}, v7 T{int}) [-4611686018427387904, 4611686018427387903] int64
v160 <- ShiftInt64Op(<< [tr], v158, v230 T{_Smi}) [-9223372036854775808, 9223372036854775806] int64
v161 <- BinaryInt64Op(+ [tr], v160, v158) [-9223372036854775808, 9223372036854775807] int64
v162 <- BinaryInt64Op(& [tr], v161, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v167 <- LoadField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.index) T{_Uint32List}
v36 <- LoadField(v167 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v210 <- UnboxInt64([non-speculative], v36) [0, 4611686018427387903] int64
ParallelMove r0 <- r8, r1 <- r7
GenericCheckBound:28(v210 T{_Smi}, v162 T{int}) [-9223372036854775808, 9223372036854775807] int64
v232 <- LoadIndexed:28([_Uint32List] v167 T{_Uint32List}, v162 T{int}) [0, 4294967295] uint32
v99 <- LoadField:122(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.data) T{_List}
ParallelMove fp[-6] <- r9
v39 <- LoadField:122(v99 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v215 <- UnboxInt64:122([non-speculative], v39) [0, 576460752303423487] int64
ParallelMove r12 <- r7, r0 <- r0, r7 <- fp[-4], r11 <- C goto:122 B12
B12
  Loop 0
  Loop Header
CheckStackOverflow:120(stack=0, loop=1)
ParallelMove r0 <- r0
v214 <- IntConverter(uint32->int64, v16) [0, 4294967295] int64
Branch if EqualityCompare(v214 T{_Smi} != v231 T{_Smi}) T{bool} goto (11, 13)
B11
  Loop 0
Branch if EqualityCompare(v214 T{_Smi} != v230 T{_Smi}) T{bool} goto (3, 9)
B3
  Loop 0
v27 <- BinaryInt64Op(^ [tr], v146 T{int}, v214 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-5] <- r13
Branch if RelationalOp(<, v27, v8) T{bool} goto (4, 7)
B4
  Loop 0
ParallelMove r0 <- r10, r1 <- r13
GenericCheckBound:60(v215 T{_Smi}, v27) [-9223372036854775808, 9223372036854775807] int64
v233 <- LoadIndexed:60([_List] v99 T{_List}, v27 T{int}) T{*?}
Branch if StrictCompare:10(===, v3 T{FinalizerEntry}, v233 T{*?}) T{bool} goto (5, 8)
B8
B5
ParallelMove r0 <- r8, r1 <- r12
GenericCheckBound:76(v210 T{_Smi}, v15) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:76([_Uint32List] v167 T{_Uint32List}, v15 T{int}, v180 T{_Smi}, NoStoreBarrier)
v78 <- LoadField(v99 T{_List} . Array.type_arguments {final}) T{TypeArguments?}
ParallelMove r0 <- r9, r2 <- r2, r1 <- C
AssertAssignable:10(v99 T{_List}, v83 T{_TypeParameter}, 'value', instantiator_type_args(v78), function_type_args(v0 T{Null?})) T{X0}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-6], r0 <- fp[-6], r3 <- fp[-5]
StoreIndexed:10([_List] v99, v27 T{int}, v99)
ParallelMove r3 <- fp[-3]
v88 <- LoadField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.deleted_keys) [0, 4611686018427387903] T{_Smi}
v221 <- UnboxInt64([non-speculative], v88 T{_Smi}) [0, 4611686018427387903] int64
v35 <- BinaryInt64Op(+ [tr], v221 T{_Smi}, v230 T{_Smi}) [1, 4611686018427387904] int64
v222 <- BoxInt64(v35 T{int}) [1, 4611686018427387904] T{int}
ParallelMove r0 <- r0
StoreField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.deleted_keys = v222 T{int}, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:88(v20)
B7
B6
B9
B10
  Loop 0
v55 <- BinaryInt64Op(+ [tr], v15 T{int}, v230 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v56 <- BinaryInt64Op(& [tr], v55, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r8, r1 <- r12
GenericCheckBound:112(v210 T{_Smi}, v56 T{int}) [-9223372036854775808, 9223372036854775807] int64
v234 <- LoadIndexed:112([_Uint32List] v167 T{_Uint32List}, v56 T{int}) [0, 4294967295] uint32
ParallelMove r12 <- r12, r0 <- r0, r9 <- fp[-6] goto:118 B12
B13
ParallelMove r0 <- C
DartReturn:126(v21)
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
ParallelMove r0 <- C
DartReturn:6(v2)
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v4 <- StaticCall:10( _unsupportedUriBase@0150898<0> ) T{Uri}
ParallelMove r0 <- r0
DartReturn:12(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v2 <- AllocateObject:10(cls=UnsupportedError) T{UnsupportedError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v2 T{UnsupportedError} . message = v3 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:14(v2)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[0] <- v2)
v3 <- StaticCall:10( _isLoaded@0150898<0> v2, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:14(!==, v3 T{bool}, v4) goto (3, 4)
BoolTest
B4
ParallelMove r0 <- C
DartReturn:28(v0)
B3
ParallelMove r0 <- fp[2]
v5 <- AllocateObject:20(cls=_DeferredNotLoadedError) T{_DeferredNotLoadedError}
ParallelMove r1 <- r0, r0 <- fp[2]
StoreField(v5 T{_DeferredNotLoadedError} . prefix = v2 T{_LibraryPrefix}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:24(v5)
CheckStackOverflowSlowPath
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[0] <- v3)
v5 <- StaticCall:10( _checkLoaded@0150898<0> v3) T{void?}
ParallelMove r0 <- r0
DartReturn:12(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[3]
v5 <- LoadClassId(v2) int64
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r1
v4 <- DispatchTableCall( cid=v5 Object.noSuchMethod<0>, v2, v3) T{*?}
ParallelMove r0 <- r0
DartReturn:12(v4 T{*})
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v4 <- AllocateContext:10(num_variables=3) T{Context}
ParallelMove r0 <- r0, r1 <- fp[-1]
ParallelMove fp[-3] <- r0
StoreField(v4 . :type_arguments = v2, NoStoreBarrier)
ParallelMove r2 <- fp[-2]
StoreField(v4 . computation = v3, NoStoreBarrier)
ParallelMove r1 <- r1
v6 <- AllocateObject:12(cls=_Future, v2 T{*?}) T{_Future}
ParallelMove r1 <- r0, r0 <- C
ParallelMove fp[-1] <- r1
StoreField(v6 T{_Future} . _state@4048458 = v21 T{_Smi} <int64>, NoStoreBarrier)
v19 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v6 T{_Future} . _zone@4048458 = v19, NoStoreBarrier)
ParallelMove r3 <- fp[-3]
StoreField(v4 . result = v6, NoStoreBarrier)
ParallelMove r1 <- C, r2 <- r3
v8 <- AllocateClosure:16(v7, v4) T{_Closure}
ParallelMove r1 <- r0
StaticCall:18( run<0> v8)
ParallelMove r1 <- fp[-3]
v9 <- LoadField(v4 . result) T{_Future}
ParallelMove r0 <- r0
DartReturn:20(v9)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r3 <- r1
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C, r3 <- r3
StaticCall:10( Timer.<0> v0, v3, v2)
ParallelMove r0 <- C
DartReturn:12(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v15 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r1 <- fp[-1], r2 <- fp[-2], r3 <- fp[-3]
StaticCall:14( _completeError@4048458<0> v2, v3, v4, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:16(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r0
v13 <- AllocateObject:10(cls=_Future, v2 T{TypeArguments}, <not-aliased>) T{_Future}
ParallelMove r1 <- r0, r0 <- C
ParallelMove fp[-2] <- r1
StoreField(v13 T{_Future} . _state@4048458 = v25 T{_Smi} <int64>, NoStoreBarrier)
v23 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r1 <- r0, r0 <- fp[-2]
StoreField(v13 T{_Future} . _zone@4048458 = v23, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
v3 <- AllocateObject:10(cls=_AsyncCompleter, v2, <not-aliased>) T{_AsyncCompleter}
ParallelMove r0 <- r0, r1 <- fp[-2]
StoreField(v3 T{_AsyncCompleter} . future = v13, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:14(v3)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v3 . prefix) T{_LibraryPrefix}
MoveArgument(sp[0] <- v4)
StaticCall:10( _setLoaded@0150898<0> v4, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:12(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:4(stack=0, loop=0)
ParallelMove r1 <- C
v3 <- StaticCall:6( Map.<0> v2, result_type = T{_Map}) T{_Map}
ParallelMove r0 <- r0
DartReturn:8(v3)
CheckStackOverflowSlowPath
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[0] <- v3)
v5 <- StaticCall:10( _loadLibrary@0150898<0> v3) T{_Future}
ParallelMove r0 <- r0
DartReturn:12(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v2 <- LoadStaticField:4(_uriBaseClosure@0150898, CallsInitializer) T{_Closure}
ParallelMove r0 <- r0
DartReturn:6(v2)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
v21 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[0] <- v2)
ParallelMove r0 <- r0
v3 <- DispatchTableCall( cid=v21 List.length<0>, v2) T{int}
ParallelMove r0 <- r0
v17 <- UnboxInt64:32([non-speculative], v3 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove fp[-2] <- r2
ParallelMove r4 <- C goto:32 B5
B5
  Loop 0
  Loop Header
ParallelMove fp[-1] <- r4
CheckStackOverflow:36(stack=0, loop=1)
Branch if RelationalOp(<, v5, v17 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 0
v18 <- BoxInt64(v5) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v22 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v18 T{int})
ParallelMove r0 <- r1
v8 <- DispatchTableCall( cid=v22 List.[]<0>, v2, v18 T{int}) T{*?}
ParallelMove r1 <- r0
StaticCall:28( _rehash@0150898<0> v8 T{X0?}, using unchecked entrypoint)
ParallelMove r1 <- fp[-1]
v10 <- BinaryInt64Op(+ [tr], v5, v20 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- r4, r2 <- fp[-2] goto:34 B5
B4
ParallelMove r0 <- C
DartReturn:38(v0)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-3] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v2 . _data@0150898) T{_List}
ParallelMove fp[-2] <- r3
v115 <- LoadField(v4 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v167 <- UnboxInt64:64([non-speculative], v115 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-1] <- r4
ParallelMove r2 <- C, r1 <- C goto:64 B11
B11
  Loop 1
  Loop Header
CheckStackOverflow:68(stack=0, loop=1)
Branch if RelationalOp(<, v7, v167 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 1
v184 <- LoadIndexed:28([_List] v4, v7 T{int}) T{_WeakProperty?}
Branch if StrictCompare:30(!==, v184 T{_WeakProperty?}, v0) goto (5, 8)
B5
  Loop 1
v110 <- LoadField(v184 T{_WeakProperty} . WeakProperty.key) T{*?}
Branch if StrictCompare:36(!==, v110 T{*?}, v0) goto (6, 9)
B6
  Loop 1
v53 <- BinaryInt64Op(+ [tr], v6, v185 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r5 goto:58 B10
B9
B8
B7
B10
  Loop 1
v51 <- BinaryInt64Op(+ [tr], v7 T{int}, v185 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r2, r1 <- r5 goto:66 B11
B4
v13 <- ShiftInt64Op(>> [tr], v167 T{_Smi}, v186 T{_Smi}) [0, 144115188075855871] int64
Branch if RelationalOp(<=, v6, v13) T{bool} goto (12, 13)
B12
v48 <- ShiftInt64Op(>> [tr], v167 T{_Smi}, v185 T{_Smi}) [0, 288230376151711743] int64
ParallelMove r1 <- r1 goto:112 B17
B13
v16 <- ShiftInt64Op(>> [tr], v167 T{_Smi}, v185 T{_Smi}) [0, 288230376151711743] int64
Branch if RelationalOp(>, v6, v16) T{bool} goto (14, 15)
B14
v19 <- ShiftInt64Op(<< [tr], v167 T{_Smi}, v185 T{_Smi}) [0, 1152921504606846974] int64
ParallelMove r1 <- r1 goto:106 B16
B15
ParallelMove r1 <- r4 goto:108 B16
B16
B17
Branch if RelationalOp(<, v20, v187 T{_Smi}) T{bool} goto (18, 19)
B18
ParallelMove r1 <- C goto:130 B20
B19
B20
v175 <- BoxInt64(v23 T{int}) [0, 1152921504606846974] T{_Smi}
ParallelMove r1 <- C, r2 <- r2
v87 <- CreateArray:10(v24 T{TypeArguments}, v175) T{_List}
ParallelMove r0 <- r0, r3 <- fp[-3]
StoreField(v2 T{Expando} . _data@0150898 = v87 T{_List})
ParallelMove r0 <- C
StoreField(v2 T{Expando} . _used@0150898 = v183 T{_Smi} <int64>)
v46 <- LoadField:210(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove fp[-7] <- r4
ParallelMove r7 <- C goto:210 B32
B32
  Loop 0
  Loop Header
ParallelMove fp[-6] <- r7
CheckStackOverflow:214(stack=0, loop=1)
Branch if RelationalOp(<, v27, v167 T{_Smi}) T{bool} goto (21, 22)
B21
  Loop 0
v188 <- LoadIndexed:156([_List] v4, v27 T{int}) T{_WeakProperty?}
Branch if StrictCompare:158(!==, v188 T{_WeakProperty?}, v0) goto (23, 30)
B23
  Loop 0
v70 <- LoadField(v188 T{_WeakProperty} . WeakProperty.value) T{*?}
ParallelMove fp[-5] <- r8
v75 <- LoadField(v188 T{_WeakProperty} . WeakProperty.key) T{*?}
ParallelMove fp[-4] <- r9
Branch if StrictCompare:168(!==, v75 T{*?}, v0) goto (27, 28)
B27
  Loop 0
ParallelMove r0 <- r8, r2 <- r4, r1 <- C
t2 <- AssertAssignable:188(v70 T{*?}, v45, '', instantiator_type_args(v46), function_type_args(v0)) T{X0??}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-3], r2 <- fp[-4], r3 <- fp[-5]
StaticCall:190( []=<0> v2, v75 T{*}, v70 T{X0??}, using unchecked entrypoint)
ParallelMove  goto:196 B29
B28
B29
B30
B31
  Loop 0
v39 <- BinaryInt64Op(+ [tr], v27 T{int}, v185 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r7 <- r7, r3 <- fp[-3], r4 <- fp[-7] goto:212 B32
B22
ParallelMove r0 <- C
DartReturn:216(v0)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r3 <- r1, r0 <- r3, fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r2
StaticCall:10( checkValidWeakTarget<0> v3)
ParallelMove r1 <- fp[-1]
v120 <- LoadField(v2 T{Expando} . _data@0150898) T{_List}
v126 <- LoadField(v120 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v158 <- UnboxInt64([non-speculative], v126 T{_Smi}) [0, 576460752303423487] int64
v7 <- BinaryInt64Op(- [tr], v158 T{_Smi}, v173 T{_Smi}) [v158-1, v158-1] int64
ParallelMove r3 <- fp[-2], fp[-4] <- r2
v220 <- LoadClassId(v3) int64
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r0
v8 <- DispatchTableCall( cid=v220 Object._identityHashCode<0>, v3) T{int}
ParallelMove r0 <- r0
v159 <- UnboxInt64([non-speculative], v8 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- fp[-4]
v9 <- BinaryInt64Op(& [tr], v159 T{int}, v7) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- fp[-1]
v11 <- LoadField(v2 . _data@0150898) T{_List}
v45 <- LoadField(v11 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v160 <- UnboxInt64([non-speculative], v45) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:24(v160 T{_Smi}, v9) [-9223372036854775808, 9223372036854775807] int64
v174 <- LoadIndexed:24([_List] v11, v9 T{int}) T{_WeakProperty?}
v217 <- UnboxInt64([non-speculative], v45) int64
ParallelMove r8 <- r3, r7 <- C, r6 <- r0, r5 <- r5, r3 <- r1 goto:154 B21
B21
  Loop 0
  Loop Header
ParallelMove fp[-5] <- r8, fp[-6] <- r7, fp[-7] <- r6, fp[-8] <- r5, fp[-9] <- r3
CheckStackOverflow:152(stack=0, loop=1)
Branch if StrictCompare:26(!==, v15, v0) goto (20, 22)
B20
  Loop 0
v115 <- LoadField(v15 T{_WeakProperty} . WeakProperty.key) T{*?}
ParallelMove r0 <- r0, r1 <- fp[-2]
Branch if StrictCompare:32(===, v115 T{*?}, v3, with number check) goto (3, 7)
B7
  Loop 0
ParallelMove r0 <- fp[-6]
v30 <- RelationalOp(<, v14, v175 T{_Smi}) T{bool}
ParallelMove fp[-10] <- r1
Branch if StrictCompare:68(===, v30, v18) goto (8, 11)
BoolTest
B8
  Loop 0
ParallelMove r2 <- fp[-7]
v101 <- LoadStaticField:4(_deletedEntry@0150898, CallsInitializer) T{_WeakProperty}
ParallelMove r0 <- r0, r1 <- fp[-7]
Branch if StrictCompare:74(===, v15 T{_WeakProperty}, v101 T{_WeakProperty}) goto (9, 12)
B9
  Loop 0
ParallelMove r7 <- fp[-5], r2 <- fp[-5] goto:134 B19
B12
B11
  Loop 0
ParallelMove r1 <- fp[-7]
ParallelMove  goto:86 B10
B10
  Loop 0
v98 <- LoadField(v15 T{_WeakProperty} . WeakProperty.key) T{*?}
Branch if StrictCompare:94(===, v98 T{*?}, v0) goto (13, 17)
B13
  Loop 0
ParallelMove r1 <- fp[-1], r2 <- fp[-5], r0 <- fp[-10]
v33 <- LoadField(v2 . _data@0150898) T{_List}
ParallelMove fp[-11] <- r3
v93 <- LoadStaticField:4(_deletedEntry@0150898, CallsInitializer) T{_WeakProperty}
ParallelMove r3 <- r0, r2 <- fp[-11]
v50 <- LoadField(v33 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v164 <- UnboxInt64([non-speculative], v50) [0, 576460752303423487] int64
ParallelMove r0 <- r1, r1 <- fp[-5]
GenericCheckBound:104(v164 T{_Smi}, v13) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r2, r0 <- r3, r2 <- fp[-5]
StoreIndexed:104([_List] v33, v13 T{int}, v93 T{_WeakProperty})
ParallelMove r0 <- fp[-10]
Branch if StrictCompare:110(===, v30 T{bool}, v18) goto (14, 15)
BoolTest
B14
  Loop 0
ParallelMove r0 <- r2 goto:120 B16
B15
  Loop 0
ParallelMove r0 <- fp[-6] goto:122 B16
B16
B17
  Loop 0
ParallelMove r2 <- fp[-5]
ParallelMove r0 <- fp[-6] goto:130 B18
B18
  Loop 0
ParallelMove r7 <- r0 goto:136 B19
B19
  Loop 0
v38 <- BinaryInt64Op(+ [tr], v13, v173 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v39 <- BinaryInt64Op(& [tr], v38, v7) [-9223372036854775808, 9223372036854775807] int64
v40 <- LoadField(v2 . _data@0150898) T{_List}
v52 <- LoadField(v40 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v166 <- UnboxInt64([non-speculative], v52) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- r2
GenericCheckBound:144(v166 T{_Smi}, v39) [-9223372036854775808, 9223372036854775807] int64
v176 <- LoadIndexed:144([_List] v40, v39 T{int}) T{_WeakProperty?}
v219 <- UnboxInt64([non-speculative], v52) int64
ParallelMove r8 <- r2, r7 <- r7, r6 <- r6, r5 <- r5, r3 <- r0, r2 <- r9 goto:150 B21
B3
ParallelMove r0 <- fp[-3], r2 <- fp[-5], r1 <- fp[-7]
Branch if StrictCompare:38(!==, v4, v0) goto (4, 5)
B4
ParallelMove r0 <- r0
StoreField(v15 T{_WeakProperty} . WeakProperty.value = v4 T{X0?})
ParallelMove  goto:56 B6
B5
v104 <- LoadStaticField:4(_deletedEntry@0150898, CallsInitializer) T{_WeakProperty}
ParallelMove r0 <- fp[-9], r1 <- fp[-5], r2 <- r0
GenericCheckBound:52(v181 T{_Smi}, v13) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-8], r0 <- r2, r2 <- fp[-5]
StoreIndexed:52([_List] v170 T{_List}, v13 T{int}, v104 T{_WeakProperty})
ParallelMove  goto:58 B6
B6
ParallelMove r0 <- C
DartReturn:60(v0)
B22
ParallelMove r0 <- fp[-3], r2 <- r8
Branch if StrictCompare:158(===, v4, v0) goto (23, 24)
B23
ParallelMove r0 <- C
DartReturn:164(v0)
B24
ParallelMove r1 <- fp[-6]
Branch if RelationalOp(>=, v14, v175 T{_Smi}) T{bool} goto (25, 26)
B25
v27 <- LoadField(v2 . _used@0150898) [-9223372036854775808, 9223372036854775807] int64
v28 <- BinaryInt64Op(- [tr], v27, v173 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{Expando} . _used@0150898 = v28 T{int} <int64>)
ParallelMove r2 <- r1 goto:188 B27
B26
B27
ParallelMove fp[-5] <- r2
v20 <- LoadField(v2 . _used@0150898) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r4, fp[-4] <- r3
v21 <- StaticCall:194( get:_limit@0150898<0> v2, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r0, r0 <- fp[-4]
Branch if RelationalOp(<, v20, v21) T{bool} goto (28, 29)
B28
ParallelMove r1 <- fp[-1], r2 <- fp[-2], r3 <- fp[-3], r0 <- fp[-5]
v23 <- AllocateObject:206(cls=_WeakProperty) T{_WeakProperty}
ParallelMove r3 <- r0, r2 <- fp[-2]
StoreField(v23 T{_WeakProperty} . WeakProperty.key = v3 T{Object}, NoStoreBarrier)
ParallelMove r0 <- fp[-3]
StoreField(v23 T{_WeakProperty} . WeakProperty.value = v4 T{X0?}, NoStoreBarrier)
ParallelMove r4 <- fp[-1]
v24 <- LoadField(v2 . _data@0150898) T{_List}
v55 <- LoadField(v24 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v168 <- UnboxInt64([non-speculative], v55) [0, 576460752303423487] int64
ParallelMove r0 <- r1, r1 <- fp[-5]
GenericCheckBound:216(v168 T{_Smi}, v19) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r2, r0 <- r3, r2 <- fp[-5]
StoreIndexed:216([_List] v24, v19 T{int}, v23)
v25 <- LoadField(v2 . _used@0150898) [-9223372036854775808, 9223372036854775807] int64
v26 <- BinaryInt64Op(+ [tr], v25, v173 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{Expando} . _used@0150898 = v26 T{int} <int64>)
ParallelMove r0 <- C
DartReturn:224(v0)
B29
ParallelMove r4 <- fp[-1], r2 <- fp[-2], r0 <- fp[-3]
ParallelMove r1 <- r4
StaticCall:228( _rehash@0150898<0> v2, using unchecked entrypoint)
ParallelMove r1 <- fp[-1], r2 <- fp[-2], r3 <- fp[-3]
StaticCall:230( []=<0> v2, v3, v4 T{X0?}, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:232(v0)
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r2 <- C
v12 <- LoadField(v2 T{Expando} . _data@0150898) T{_List}
v18 <- LoadField(v12 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v21 <- UnboxInt64([non-speculative], v18 T{_Smi}) [0, 576460752303423487] int64
v6 <- BinaryInt64Op(~/ [tr], v21 T{_Smi}, v22 T{_Smi}) [0, 144115188075855871] int64
v7 <- BinaryInt64Op(* [tr], v6, v23 T{_Smi}) [0, 432345564227567613] int64
ParallelMove r0 <- r0
DartReturn:16(v7)
B0
B1
Enter frame
ParallelMove fp[-1] <- r1
v23 <- LoadClassId(v2) [1, 600] int64
Branch if EqualityCompare(v23 == v24) T{bool} goto (10, 3)
B3
Branch if TestRange(v23 T{_Smi} in [59-61]) T{bool} goto (11, 4)
B4
Branch if TestRange(v23 T{_Smi} in [93-94]) T{bool} goto (12, 5)
B5
Branch if EqualityCompare(v23 T{_Smi} == v28) T{bool} goto (13, 6)
B6
Branch if EqualityCompare(v23 T{_Smi} == v30) T{bool} goto (14, 17)
B17
ParallelMove r0 <- C
DartReturn:112(v0)
B10
B11
B12
B13
B14
B9
v15 <- AllocateObject:104(cls=ArgumentError) T{ArgumentError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v15 T{ArgumentError} . name = v16 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v15 T{ArgumentError} . message = v17 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
StoreField(v15 T{ArgumentError} . invalidValue = v2 T{*}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v15 T{ArgumentError} . _hasValue@0150898 = v5 T{bool}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:108(v15)
B0
B1
Enter frame
v2 <- AllocateObject:6(cls=_WeakProperty) T{_WeakProperty}
ParallelMove r0 <- r0
DartReturn:10(v2)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[3]
v5 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r1
v4 <- DispatchTableCall( cid=v5 List.[]<0>, v2, v3) T{*?}
ParallelMove r0 <- r0
DartReturn:12(v4 T{X0?})
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[3]
v5 <- LoadClassId(<non-smi> v2) int64
ParallelMove r0 <- r0, r1 <- r1, r2 <- fp[2]
v4 <- DispatchTableCall( cid=v5 Map.[]<0>, v2, v3) T{*?}
ParallelMove r0 <- r0
DartReturn:12(v4 T{X1??})
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[3]
v5 <- LoadClassId(<non-smi> v2) int64
ParallelMove r0 <- r0, r1 <- r1, r2 <- fp[2]
v4 <- DispatchTableCall( cid=v5 Map.containsKey<0>, v2, v3) T{bool}
ParallelMove r0 <- r0
DartReturn:12(v4 T{bool})
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
v24 <- LoadClassId(<non-smi> v2) int64
ParallelMove r0 <- r0, r1 <- r1
v3 <- DispatchTableCall( cid=v24 Map.keys<0>, v2) T{*?}
ParallelMove r0 <- r0
v9 <- LoadField(v3 T{Iterable<X0>} . :type_arguments {final}) T{TypeArguments}
ParallelMove r1 <- r1, r2 <- r0
v23 <- StaticCall:18( _GrowableList@0150898.of<0> v9 T{TypeArguments}, v3 T{Iterable<X0>}, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r0 <- r0
DartReturn:14(v23)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
v4 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[0] <- v2)
ParallelMove r0 <- r1
v3 <- DispatchTableCall( cid=v4 List.length<0>, v2) T{int}
ParallelMove r0 <- r0
DartReturn:12(v3 T{_Smi})
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v31 <- LoadStaticField:4(_loads@0150898, CallsInitializer) T{_Map}
ParallelMove r1 <- r0, r2 <- fp[4], r0 <- r0
ParallelMove fp[-1] <- r0
v38 <- StaticCall:10( _getValueOrData@3220832<0> v31 T{_Map}, v2 T{Object}, using unchecked entrypoint) T{Object??}
ParallelMove r1 <- r0, r0 <- fp[-1]
v45 <- LoadField(v31 T{_Map} . LinkedHashBase.data) T{_List}
Branch if StrictCompare:14(===, v45 T{_List}, v38) goto (20, 21)
B20
ParallelMove r1 <- C goto:24 B22
B21
B22
Branch if StrictCompare:14(===, v40 T{X1??}, v0) goto (3, 4)
B3
ParallelMove r1 <- C
v13 <- StaticCall:22( Completer.<0> v12, result_type = T{_AsyncCompleter}) T{_AsyncCompleter}
ParallelMove r1 <- fp[-1], r2 <- fp[4], r3 <- r0, r0 <- r0
ParallelMove fp[-2] <- r0
StaticCall:24( []=<0> v31 T{_Map}, v2, v13, using unchecked entrypoint)
ParallelMove r3 <- fp[-2] goto:30 B5
B4
ParallelMove r3 <- r1 goto:32 B5
B5
ParallelMove fp[-2] <- r3
Branch if StrictCompare:34(===, v3, v0) goto (6, 7)
B6
v64 <- LoadClassId(<non-smi> v7) int64
ParallelMove r0 <- r0, r1 <- r3, r2 <- C
DispatchTableCall( cid=v64 Completer.complete<0>, v7, v0)
ParallelMove  goto:72 B11
B7
ParallelMove r1 <- fp[2]
Branch if StrictCompare:46(===, v4 T{bool}, v8) goto (8, 9)
BoolTest
B8
ParallelMove r1 <- fp[-1], r2 <- fp[4]
StaticCall:54( remove<0> v31 T{_Map}, v2, using unchecked entrypoint)
ParallelMove  goto:60 B10
B9
B10
v9 <- AllocateObject:64(cls=DeferredLoadException) T{DeferredLoadException}
ParallelMove r1 <- r0, r0 <- fp[3]
StoreField(v9 T{DeferredLoadException} . _message@4048458 = v3 T{String}, NoStoreBarrier)
ParallelMove r1 <- fp[-2], r2 <- r1
StaticCall:68( completeError<0> v7, v9, using unchecked entrypoint)
ParallelMove  goto:74 B11
B11
ParallelMove r0 <- C
DartReturn:76(v0)
CheckStackOverflowSlowPath
B0
B30
Enter frame
ParallelMove fp[-2] <- r1, fp[-3] <- r2
CheckStackOverflow:26(stack=0, loop=0)
v13 <- LoadField(v2 . future {final}) T{_Future}
ParallelMove fp[-1] <- r0
v74 <- LoadField(v13 T{_Future} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v74, v98) goto (6, 7)
B7
v82 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r0 <- fp[-2]
v40 <- LoadClassId(v2) [467, 468] int64
Branch if EqualityCompare:56(v40 == v41) goto (8, 13)
B8
ParallelMove r1 <- fp[-1], r2 <- fp[-3], r3 <- C
StaticCall:12( _completeError@4048458<0> v13 T{_Future}, v3 T{DeferredLoadException}, v16 T{_StringStackTrace}, using unchecked entrypoint)
ParallelMove  goto:14 B14
B13
ParallelMove r1 <- fp[-1], r2 <- fp[-3], r3 <- C
StaticCall:12( _asyncCompleteError@4048458<0> v13 T{_Future}, v3 T{DeferredLoadException}, v16 T{_StringStackTrace}, using unchecked entrypoint)
ParallelMove  goto:14 B14
B14
ParallelMove r0 <- C
DartReturn:58(v0)
B6
v17 <- AllocateObject:42(cls=StateError, <not-aliased>) T{StateError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v17 T{StateError} . message = v18 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:46(v17)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r3 <- r1, r0 <- r2, fp[-3] <- r1, fp[-4] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v148 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.index) T{_Uint32List}
v153 <- LoadField(v148 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v229 <- UnboxInt64([non-speculative], v153 T{_Smi}) [0, 4611686018427387903] int64
v7 <- BinaryInt64Op(- [tr], v229 T{_Smi}, v253 T{_Smi}) [v229-1, v229-1] int64
ParallelMove fp[-2] <- r4
v8 <- ShiftInt64Op(>> [tr], v229 T{_Smi}, v253 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove r1 <- r3, r2 <- r0, fp[-1] <- r5
v9 <- StaticCall:18( _hashCode@3220832<0> v2, v3, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0, r2 <- fp[-3]
v158 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.hash_mask) [0, 4611686018427387903] T{_Smi}
v230 <- UnboxInt64([non-speculative], v158 T{_Smi}) [0, 4611686018427387903] int64
v167 <- BinaryInt64Op(& [tr], v9 T{int}, v230 T{_Smi}) [0, 4611686018427387903] int64
Branch if EqualityCompare(v167 == v254 T{_Smi}) T{bool} goto (53, 54)
B53
ParallelMove r5 <- fp[-1], r3 <- fp[-1] goto:32 B55
B54
ParallelMove r3 <- fp[-1]
v173 <- BinaryInt64Op(* [tr], v167, v8 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r4 goto:34 B55
B55
ParallelMove fp[-7] <- r5
v186 <- BinaryInt64Op(& [tr], v9 T{int}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v188 <- ShiftInt64Op(<< [tr], v186, v253 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v189 <- BinaryInt64Op(+ [tr], v188, v186) [-9223372036854775808, 9223372036854775807] int64
v190 <- BinaryInt64Op(& [tr], v189, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v195 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.index) T{_Uint32List}
v47 <- LoadField(v195 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v231 <- UnboxInt64([non-speculative], v47) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r7
GenericCheckBound:28(v231 T{_Smi}, v190 T{int}) [-9223372036854775808, 9223372036854775807] int64
v255 <- LoadIndexed:28([_Uint32List] v195 T{_Uint32List}, v190 T{int}) [0, 4294967295] uint32
ParallelMove r7 <- r7, r0 <- r0 goto:138 B12
B12
  Loop 0
  Loop Header
ParallelMove fp[-6] <- r7
CheckStackOverflow:136(stack=0, loop=1)
ParallelMove r0 <- r0
v235 <- IntConverter(uint32->int64, v16) [0, 4294967295] int64
Branch if EqualityCompare(v235 T{_Smi} != v254 T{_Smi}) T{bool} goto (11, 13)
B11
  Loop 0
Branch if EqualityCompare(v235 T{_Smi} != v253 T{_Smi}) T{bool} goto (3, 9)
B3
  Loop 0
v28 <- BinaryInt64Op(^ [tr], v174 T{int}, v235 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v28, v8) T{bool} goto (4, 7)
B4
  Loop 0
v31 <- ShiftInt64Op(<< [tr], v28, v253 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-5] <- r8
v134 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.data) T{_List}
v50 <- LoadField(v134 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v236 <- UnboxInt64([non-speculative], v50) [0, 576460752303423487] int64
ParallelMove r0 <- r1, r1 <- r8
GenericCheckBound:64(v236 T{_Smi}, v31) [-9223372036854775808, 9223372036854775807] int64
v256 <- LoadIndexed:64([_List] v134 T{_List}, v31 T{int}) T{*?}
v287 <- LoadClassId(v3 T{Object?}) int64
MoveArgument(sp[1] <- v3 T{Object?})
MoveArgument(sp[0] <- v256 T{Object??})
ParallelMove r0 <- r1
v143 <- DispatchTableCall( cid=v287 Object.==<0>, v3 T{Object?}, v256 T{Object??}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:70(===, v143 T{bool}, v21) goto (5, 6)
BoolTest
B6
  Loop 0
ParallelMove r3 <- fp[-3], r4 <- fp[-6], r2 <- C goto:112 B8
B5
ParallelMove r3 <- fp[-3], r4 <- fp[-6], r5 <- fp[-5], r2 <- C
v80 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.index) T{_Uint32List}
v53 <- LoadField(v80 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v238 <- UnboxInt64([non-speculative], v53) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r4
GenericCheckBound:78(v238 T{_Smi}, v15) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:78([_Uint32List] v80 T{_Uint32List}, v15 T{int}, v196 T{_Smi}, NoStoreBarrier)
v85 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.data) T{_List}
ParallelMove fp[-8] <- r4
v92 <- LoadField(v85 T{_List} . Array.type_arguments {final}) T{TypeArguments?}
ParallelMove r0 <- r4, r2 <- r2, r1 <- C
AssertAssignable:10(v85 T{_List}, v97 T{_TypeParameter}, 'value', instantiator_type_args(v92), function_type_args(v0 T{Null?})) T{X0}
AssertAssignable for compile-time type
TTSCall
ParallelMove r3 <- fp[-8]
v95 <- LoadField(v85 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v240 <- UnboxInt64([non-speculative], v95) [0, 576460752303423487] int64
ParallelMove r0 <- r2, r1 <- fp[-5]
GenericCheckBound:10(v240 T{_Smi}, v31 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r3, r0 <- r3, r4 <- fp[-5]
StoreIndexed:10([_List] v85, v31 T{int}, v85)
v38 <- BinaryInt64Op(+ [tr], v31 T{int}, v253 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r2, r1 <- r5, fp[-10] <- r5
GenericCheckBound:88(v240 T{_Smi}, v38) [-9223372036854775808, 9223372036854775807] int64
v257 <- LoadIndexed:88([_List] v85 T{_List}, v38 T{int}) T{*?}
ParallelMove r6 <- fp[-3], fp[-9] <- r4
v41 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r4, r2 <- r2, r1 <- C
t0 <- AssertAssignable:90(v257 T{*?}, v40, ' in type cast', instantiator_type_args(v41), function_type_args(v0)) T{X1?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-8], r0 <- fp[-8], r3 <- fp[-10]
StoreIndexed:10([_List] v85, v38 T{int}, v85)
ParallelMove r3 <- fp[-3]
v123 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.deleted_keys) [0, 4611686018427387903] T{_Smi}
v246 <- UnboxInt64([non-speculative], v123 T{_Smi}) [0, 4611686018427387903] int64
v46 <- BinaryInt64Op(+ [tr], v246 T{_Smi}, v253 T{_Smi}) [1, 4611686018427387904] int64
v247 <- BoxInt64(v46 T{int}) [1, 4611686018427387904] T{int}
ParallelMove r0 <- r0
StoreField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.deleted_keys = v247 T{int}, NoStoreBarrier)
ParallelMove r0 <- fp[-9]
DartReturn:104(v257 T{X1?})
B7
  Loop 0
ParallelMove r3 <- r2, r4 <- r7, r2 <- C
ParallelMove  goto:114 B8
B8
B9
  Loop 0
ParallelMove r3 <- r2, r4 <- r7, r2 <- C
ParallelMove  goto:122 B10
B10
  Loop 0
v69 <- BinaryInt64Op(+ [tr], v15 T{int}, v253 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v70 <- BinaryInt64Op(& [tr], v69, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v75 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.index) T{_Uint32List}
v59 <- LoadField(v75 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v248 <- UnboxInt64([non-speculative], v59) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r4
GenericCheckBound:128(v248 T{_Smi}, v70 T{int}) [-9223372036854775808, 9223372036854775807] int64
v258 <- LoadIndexed:128([_Uint32List] v75 T{_Uint32List}, v70 T{int}) [0, 4294967295] uint32
ParallelMove r7 <- r4, r0 <- r0, r2 <- r3, r4 <- r5, r3 <- fp[-1], r5 <- fp[-7] goto:134 B12
B13
ParallelMove r0 <- C
DartReturn:142(v0)
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[2] <- v3)
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v5)
v7 <- StaticCall:10( _completeLoads@0150898<0> v3, v4, v5) T{void?}
ParallelMove r0 <- r0
DartReturn:12(v7)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
v4 <- LoadClassId(v2) int64
MoveArgument(sp[0] <- v2)
ParallelMove r0 <- r1
v3 <- DispatchTableCall( cid=v4 Object._identityHashCode<0>, v2) T{int}
ParallelMove r0 <- r0
DartReturn:12(v3 T{int})
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[4]
v5 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v4)
ParallelMove r0 <- r1
DispatchTableCall( cid=v5 List.[]=<0>, v2, v3, v4)
ParallelMove r0 <- C
DartReturn:12(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v21 <- LoadField(v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin&_UnmodifiableMapMixin&_ImmutableLinkedHashMapMixin<X0, X1>} . ImmutableLinkedHashBase.index) T{_Uint32List?}
Branch if StrictCompare:12(===, v21, v0) goto (3, 4)
B3
ParallelMove r1 <- r0
StaticCall:18( _createIndex@3220832<0> v2, using unchecked entrypoint)
ParallelMove  goto:24 B5
B4
B5
ParallelMove r1 <- r0, r2 <- fp[-2]
v14 <- StaticCall:10( _getValueOrData@3220832<0> v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin&_UnmodifiableMapMixin&_ImmutableLinkedHashMapMixin<X0, X1>}, v3 T{Object??}, using unchecked e
ParallelMove r0 <- r0, r1 <- fp[-1]
v26 <- LoadField(v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin&_UnmodifiableMapMixin&_ImmutableLinkedHashMapMixin<X0, X1>} . ImmutableLinkedHashBase.data {final}) T{_ImmutableList}
Branch if StrictCompare:14(===, v26 T{_ImmutableList}, v14) goto (8, 9)
B8
ParallelMove r0 <- C goto:24 B10
B9
B10
ParallelMove r0 <- r0
DartReturn:30(v16 T{X1??})
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r3 <- r1, r0 <- r2, fp[-3] <- r1, fp[-4] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v147 <- LoadField(v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin<X0, X1>} . ImmutableLinkedHashBase.index) T{_Uint32List?}
CheckNull:12(v147, CastError) T{_Uint32List}
v94 <- LoadField(v147 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v189 <- UnboxInt64([non-speculative], v94 T{_Smi}) [0, 4611686018427387903] int64
v7 <- BinaryInt64Op(- [tr], v189 T{_Smi}, v205 T{_Smi}) [v189-1, v189-1] int64
ParallelMove fp[-2] <- r4
v8 <- ShiftInt64Op(>> [tr], v189 T{_Smi}, v205 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove r1 <- r3, r2 <- r0, fp[-1] <- r5
v9 <- StaticCall:18( _hashCode@3220832<0> v2, v3, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0, r2 <- fp[-3]
v99 <- LoadField(v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.hash_mask) [0, 4611686018427387903] T{_Smi}
v190 <- UnboxInt64([non-speculative], v99 T{_Smi}) [0, 4611686018427387903] int64
v108 <- BinaryInt64Op(& [tr], v9 T{int}, v190 T{_Smi}) [0, 4611686018427387903] int64
Branch if EqualityCompare(v108 == v206 T{_Smi}) T{bool} goto (36, 37)
B36
ParallelMove r5 <- fp[-1], r3 <- fp[-1] goto:32 B38
B37
ParallelMove r3 <- fp[-1]
v114 <- BinaryInt64Op(* [tr], v108, v8 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r4 goto:34 B38
B38
ParallelMove fp[-9] <- r5
v127 <- BinaryInt64Op(& [tr], v9 T{int}, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v129 <- ShiftInt64Op(<< [tr], v127, v205 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v130 <- BinaryInt64Op(+ [tr], v129, v127) [-9223372036854775808, 9223372036854775807] int64
v131 <- BinaryInt64Op(& [tr], v130, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v152 <- LoadField(v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin<X0, X1>} . ImmutableLinkedHashBase.index) T{_Uint32List?}
CheckNull:12(v152, CastError) T{_Uint32List}
v153 <- LoadField(v152 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v191 <- UnboxInt64([non-speculative], v153) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r7
GenericCheckBound:28(v191 T{_Smi}, v131) [-9223372036854775808, 9223372036854775807] int64
v207 <- LoadIndexed:28([_Uint32List] v152 T{_Uint32List}, v131 T{int}) [0, 4294967295] uint32
v74 <- LoadField:116(v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin<X0, X1>} . ImmutableLinkedHashBase.data {final}) T{_ImmutableList}
ParallelMove fp[-8] <- r6
v39 <- LoadField:116(v74 T{_ImmutableList} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v196 <- UnboxInt64:116([non-speculative], v39) [0, 576460752303423487] int64
ParallelMove fp[-7] <- r8
ParallelMove r9 <- r7, r0 <- r0 goto:116 B12
B12
  Loop 0
  Loop Header
ParallelMove fp[-6] <- r9
CheckStackOverflow:114(stack=0, loop=1)
ParallelMove r0 <- r0
v195 <- IntConverter(uint32->int64, v16) [0, 4294967295] int64
Branch if EqualityCompare(v195 T{_Smi} != v206 T{_Smi}) T{bool} goto (11, 13)
B11
  Loop 0
Branch if EqualityCompare(v195 T{_Smi} != v205 T{_Smi}) T{bool} goto (3, 9)
B3
  Loop 0
v29 <- BinaryInt64Op(^ [tr], v115 T{int}, v195 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v29, v8) T{bool} goto (4, 7)
B4
  Loop 0
v32 <- ShiftInt64Op(<< [tr], v29, v205 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r8, r1 <- r10, fp[-5] <- r10
GenericCheckBound:64(v196 T{_Smi}, v32) [-9223372036854775808, 9223372036854775807] int64
v208 <- LoadIndexed:64([_List] v74 T{_ImmutableList}, v32 T{int}) T{*?}
v237 <- LoadClassId(v3 T{Object??}) int64
MoveArgument(sp[1] <- v3 T{Object??})
MoveArgument(sp[0] <- v208 T{Object??})
ParallelMove r0 <- r1
v83 <- DispatchTableCall( cid=v237 Object.==<0>, v3 T{Object??}, v208 T{Object??}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:70(===, v83 T{bool}, v21) goto (5, 6)
BoolTest
B6
  Loop 0
ParallelMove r2 <- fp[-8] goto:90 B8
B5
ParallelMove r3 <- fp[-5], r2 <- fp[-8]
v37 <- BinaryInt64Op(+ [tr], v32 T{int}, v205 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-7], r1 <- r4
GenericCheckBound:80(v196 T{_Smi}, v37) [-9223372036854775808, 9223372036854775807] int64
v209 <- LoadIndexed:80([_List] v74 T{_ImmutableList}, v37 T{int}) T{*?}
ParallelMove r0 <- r0
DartReturn:82(v209 T{*?})
B7
  Loop 0
ParallelMove r2 <- r6
ParallelMove  goto:92 B8
B8
B9
  Loop 0
ParallelMove r2 <- r6
ParallelMove  goto:100 B10
B10
  Loop 0
v57 <- BinaryInt64Op(+ [tr], v15 T{int}, v205 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v58 <- BinaryInt64Op(& [tr], v57, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
v142 <- LoadField(v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin<X0, X1>} . ImmutableLinkedHashBase.index) T{_Uint32List?}
CheckNull:12(v142, CastError) T{_Uint32List}
v156 <- LoadField(v142 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v200 <- UnboxInt64([non-speculative], v156) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:106(v200 T{_Smi}, v58) [-9223372036854775808, 9223372036854775807] int64
v210 <- LoadIndexed:106([_Uint32List] v142 T{_Uint32List}, v58 T{int}) [0, 4294967295] uint32
ParallelMove r9 <- r5, r0 <- r0, r2 <- r3, r3 <- fp[-1], r6 <- r2, r5 <- fp[-9], r8 <- fp[-7] goto:112 B12
B13
ParallelMove r2 <- r6
ParallelMove r0 <- r2
DartReturn:122(v74 T{_ImmutableList})
CheckStackOverflowSlowPath
slow path check null (cast) operation
slow path check null (cast) operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check null (cast) operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v12 <- LoadClassId(v3) [1, 600] T{_Smi}
v26 <- UnboxInt64([non-speculative], v12) [1, 600] int64
ParallelMove fp[-1] <- r1
Branch if RelationalOp(<, v26 T{_Smi}, v30 T{_Smi}) T{bool} goto (5, 3)
B5
ParallelMove r0 <- r2 goto:36 B4
B3
v15 <- LoadStaticField:4(cidSymbol, CallsInitializer) [-4611686018427387904, 4611686018427387903] T{_Smi}
ParallelMove r0 <- r0
v27 <- UnboxInt64([non-speculative], v15 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r0 <- fp[-1]
Branch if EqualityCompare(v26 T{_Smi} == v27 T{_Smi}) T{bool} goto (6, 7)
B6
ParallelMove r0 <- fp[-2] goto:40 B4
B4
v31 <- LoadClassId(v3) int64
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r1
v11 <- DispatchTableCall( cid=v31 Object.hashCode<0>, v3) T{int}
ParallelMove r0 <- r0
v28 <- UnboxInt64([non-speculative], v11 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r1
DartReturn:44(v28 T{int})
B7
ParallelMove r0 <- fp[-2]
MoveArgument(sp[0] <- v3)
v10 <- StaticCall:48( identityHashCode<0> v3, result_type = T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v29 <- UnboxInt64([non-speculative], v10) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r1
DartReturn:50(v29 T{int})
CheckStackOverflowSlowPath
B0
B1
ParallelMove r0 <- C
DartReturn:8(v5 T{_Smi})
B0
B39
Enter frame
ParallelMove fp[-4] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v102 <- LoadField(v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin&_UnmodifiableMapMixin&_ImmutableLinkedHashMapMixin<X0, X1>} . ImmutableLinkedHashBase.data {final}) T{_ImmutableList}
ParallelMove fp[-3] <- r0
v107 <- LoadField(v102 T{_ImmutableList} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v218 <- UnboxInt64([non-speculative], v107 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-2] <- r3
Branch if RelationalOp(>, v218 T{_Smi}, v234 T{_Smi}) T{bool} goto (40, 41)
B40
ParallelMove r2 <- r3 goto:48 B49
B41
Branch if RelationalOp(<, v218 T{_Smi}, v234 T{_Smi}) T{bool} goto (42, 46)
B42
ParallelMove r2 <- C goto:62 B49
B46
ParallelMove r2 <- r3 goto:98 B49
B49
v144 <- BinaryInt64Op(- [tr], v138 T{_Smi}, v235 T{_Smi}) [-1, 576460752303423486] int64
v145 <- ShiftInt64Op(>> [tr], v144, v235 T{_Smi}) [-1, 288230376151711743] int64
v146 <- BinaryInt64Op(| [tr], v144, v145) [-576460752303423488, 576460752303423487] int64
v148 <- ShiftInt64Op(>> [tr], v146, v236 T{_Smi}) [-144115188075855872, 144115188075855871] int64
v149 <- BinaryInt64Op(| [tr], v146, v148) [-576460752303423488, 576460752303423487] int64
v151 <- ShiftInt64Op(>> [tr], v149, v237 T{_Smi}) [-36028797018963968, 36028797018963967] int64
v152 <- BinaryInt64Op(| [tr], v149, v151) [-576460752303423488, 576460752303423487] int64
v154 <- ShiftInt64Op(>> [tr], v152, v234 T{_Smi}) [-2251799813685248, 2251799813685247] int64
v155 <- BinaryInt64Op(| [tr], v152, v154) [-576460752303423488, 576460752303423487] int64
v157 <- ShiftInt64Op(>> [tr], v155, v238 T{_Smi}) [-8796093022208, 8796093022207] int64
v158 <- BinaryInt64Op(| [tr], v155, v157) [-576460752303423488, 576460752303423487] int64
v160 <- ShiftInt64Op(>> [tr], v158, v239 T{_Smi}) [-134217728, 134217727] int64
v161 <- BinaryInt64Op(| [tr], v158, v160) [-576460752303423488, 576460752303423487] int64
v162 <- BinaryInt64Op(+ [tr], v161, v235 T{_Smi}) [-576460752303423487, 576460752303423488] int64
ParallelMove fp[-1] <- r2
v221 <- BoxInt64(v162 T{int}) [-576460752303423487, 576460752303423488] T{_Smi}
ParallelMove r4 <- r4
v171 <- AllocateTypedData:10(v221) T{_Uint32List}
ParallelMove r1 <- fp[-1], r0 <- r0
ParallelMove fp[-5] <- r0
v10 <- StaticCall:20( _indexSizeToHashMask@3220832<0> v162 T{int}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- r0, r3 <- fp[-4]
ParallelMove fp[-9] <- r4
v19 <- LoadField:60(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove fp[-8] <- r5
ParallelMove r9 <- C, r7 <- fp[-5] goto:60 B5
B5
  Loop 0
  Loop Header
ParallelMove fp[-7] <- r9
CheckStackOverflow:64(stack=0, loop=1)
v97 <- LoadField(v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin&_UnmodifiableMapMixin&_ImmutableLinkedHashMapMixin<X0, X1>} . LinkedHashBase.used_data) [0, 4611686018427387903] T{_Smi}
v222 <- UnboxInt64([non-speculative], v97 T{_Smi}) [0, 4611686018427387903] int64
Branch if RelationalOp(<, v12, v222 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 0
ParallelMove r0 <- fp[-2], r1 <- r9
GenericCheckBound:40(v218 T{_Smi}, v12) [-9223372036854775808, 9223372036854775807] int64
v241 <- LoadIndexed:40([_List] v102 T{_ImmutableList}, v12 T{int}) T{*?}
ParallelMove r0 <- r10, r2 <- r5, r1 <- C, fp[-6] <- r10
t0 <- AssertAssignable:42(v241 T{*?}, v18, ' in type cast', instantiator_type_args(v19), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[-6]
v61 <- LoadClassId(v241 T{X0?}) [1, 600] T{_Smi}
v226 <- UnboxInt64([non-speculative], v61) [1, 600] int64
ParallelMove fp[-10] <- r1
Branch if RelationalOp(<, v226 T{_Smi}, v242 T{_Smi}) T{bool} goto (16, 14)
B16
B14
  Loop 0
v174 <- LoadStaticField:4(cidSymbol, CallsInitializer) [-4611686018427387904, 4611686018427387903] T{_Smi}
ParallelMove r0 <- r0
v227 <- UnboxInt64([non-speculative], v174 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r0 <- fp[-10]
Branch if EqualityCompare(v226 T{_Smi} == v227 T{_Smi}) T{bool} goto (17, 18)
B17
  Loop 0
ParallelMove r2 <- fp[-6] goto:40 B15
B15
  Loop 0
v255 <- LoadClassId(v241 T{X0?}) int64
MoveArgument(sp[0] <- v241 T{X0?})
ParallelMove r0 <- r0
v60 <- DispatchTableCall( cid=v255 Object.hashCode<0>, v241 T{X0?}) T{int}
ParallelMove r0 <- r0
v228 <- UnboxInt64([non-speculative], v60 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r1 goto:44 B20
B18
  Loop 0
MoveArgument(sp[0] <- v241 T{X0?})
v59 <- StaticCall:48( identityHashCode<0> v241 T{X0?}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v229 <- UnboxInt64([non-speculative], v59) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r1 goto:50 B20
B20
  Loop 0
v80 <- BinaryInt64Op(& [tr], v71 T{int}, v10 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v80 == v240 T{_Smi}) T{bool} goto (23, 24)
B23
  Loop 0
ParallelMove r4 <- fp[-1]
v88 <- ShiftInt64Op(>> [tr], v162 T{int}, v235 T{_Smi}) [-288230376151711744, 288230376151711744] int64
ParallelMove r10 <- r1 goto:32 B25
B24
  Loop 0
ParallelMove r4 <- fp[-1]
v85 <- ShiftInt64Op(>> [tr], v162 T{int}, v235 T{_Smi}) [-288230376151711744, 288230376151711744] int64
v86 <- BinaryInt64Op(* [tr], v80, v85) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r10 <- r5 goto:34 B25
B25
  Loop 0
ParallelMove r1 <- fp[-4], r2 <- fp[-6], r3 <- r3, r5 <- r10, r6 <- r4, r7 <- r8, fp[-10] <- r10
v23 <- StaticCall:48( _findValueOrInsertPoint@3220832<0> v2, v241 T{X0?}, v71 T{int}, v87 T{int}, v162 T{int}, v171 T{_Uint32List}, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0
v24 <- UnaryInt64Op(unary-, v23) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[-7]
v26 <- ShiftInt64Op(>> [tr], v12 T{int}, v235 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r5 <- fp[-10]
v27 <- BinaryInt64Op(| [tr], v87 T{int}, v26) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-1], r1 <- r2
GenericCheckBound:56(v162 T{_Smi}, v24) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r6
v243 <- IntConverter(int64->uint32[tr], v27) [0, 4294967295] uint32
ParallelMove r0 <- fp[-5]
StoreIndexed:56([_Uint32List] v171 T{_Uint32List}, v24 T{int}, v243 T{_Smi}, NoStoreBarrier)
v29 <- BinaryInt64Op(+ [tr], v12 T{int}, v236 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r9 <- r9, r3 <- fp[-4], r4 <- fp[-9], r5 <- fp[-8], r7 <- r0 goto:62 B5
B4
ParallelMove r1 <- r3, r0 <- r7
ParallelMove r0 <- r0
StoreField(v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin&_UnmodifiableMapMixin&_ImmutableLinkedHashMapMixin<X0, X1>} . ImmutableLinkedHashBase.index = v171 T{_Uint32List})
ParallelMove r0 <- C
DartReturn:68(v0)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-9] <- r2, fp[-10] <- r5, fp[-11] <- r7
CheckStackOverflow:8(stack=0, loop=0)
v9 <- BinaryInt64Op(- [tr], v6, v126 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-8] <- r8
v10 <- ShiftInt64Op(>> [tr], v6, v126 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove fp[-7] <- r9
v80 <- BinaryInt64Op(& [tr], v4 T{int}, v9 T{int}) [-9223372036854775808, 9223372036854775807] int64
v82 <- ShiftInt64Op(<< [tr], v80, v126 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v83 <- BinaryInt64Op(+ [tr], v82, v80) [-9223372036854775808, 9223372036854775807] int64
v84 <- BinaryInt64Op(& [tr], v83, v9 T{int}) [-9223372036854775808, 9223372036854775807] int64
v42 <- LoadField(v7 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v116 <- UnboxInt64([non-speculative], v42) [0, 4611686018427387903] int64
ParallelMove r0 <- r3, r1 <- r6, fp[-6] <- r3
GenericCheckBound:18(v116 T{_Smi}, v84 T{int}) [-9223372036854775808, 9223372036854775807] int64
v127 <- LoadIndexed:18([_Uint32List] v7, v84 T{int}) [0, 4294967295] uint32
v64 <- LoadField:118(v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin<X0, X1>} . ImmutableLinkedHashBase.data {final}) T{_ImmutableList}
ParallelMove fp[-5] <- r10
v45 <- LoadField:118(v64 T{_ImmutableList} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v121 <- UnboxInt64:118([non-speculative], v45) [0, 576460752303423487] int64
ParallelMove fp[-4] <- r4
ParallelMove r11 <- r6, r6 <- C, r0 <- r0 goto:118 B15
B15
  Loop 0
  Loop Header
ParallelMove fp[-2] <- r11, fp[-3] <- r6
CheckStackOverflow:116(stack=0, loop=1)
ParallelMove r0 <- r0
v120 <- IntConverter(uint32->int64, v16) [0, 4294967295] int64
Branch if EqualityCompare(v120 T{_Smi} != v128 T{_Smi}) T{bool} goto (14, 16)
B14
  Loop 0
Branch if EqualityCompare(v120 T{_Smi} == v126 T{_Smi}) T{bool} goto (3, 7)
B3
  Loop 0
Branch if RelationalOp(<, v15, v128 T{_Smi}) T{bool} goto (4, 5)
B4
  Loop 0
ParallelMove r1 <- r11 goto:52 B6
B5
  Loop 0
ParallelMove r1 <- r6 goto:54 B6
B6
  Loop 0
ParallelMove r6 <- r1, r2 <- r7, r3 <- r8, r4 <- r11 goto:102 B13
B7
  Loop 0
v27 <- BinaryInt64Op(^ [tr], v5, v120 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v27, v10) T{bool} goto (8, 11)
B8
  Loop 0
v30 <- ShiftInt64Op(<< [tr], v27, v126 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r4, r1 <- r12, fp[-1] <- r12
GenericCheckBound:74(v121 T{_Smi}, v30) [-9223372036854775808, 9223372036854775807] int64
v129 <- LoadIndexed:74([_List] v64 T{_ImmutableList}, v30 T{int}) T{*?}
v149 <- LoadClassId(v3 T{X0?}) int64
MoveArgument(sp[1] <- v3 T{X0?})
MoveArgument(sp[0] <- v129 T{Object??})
ParallelMove r0 <- r1
v73 <- DispatchTableCall( cid=v149 Object.==<0>, v3 T{X0?}, v129 T{Object??}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:80(===, v73 T{bool}, v21) goto (9, 10)
BoolTest
B10
B9
ParallelMove r2 <- fp[-1]
v34 <- BinaryInt64Op(+ [tr], v30 T{int}, v126 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0
DartReturn:88(v34)
B11
B12
  Loop 0
ParallelMove r6 <- fp[-3], r2 <- fp[-11], r3 <- fp[-8], r4 <- fp[-2] goto:104 B13
B13
  Loop 0
v58 <- BinaryInt64Op(+ [tr], v14 T{int}, v126 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v59 <- BinaryInt64Op(& [tr], v58, v9 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-6], r1 <- r4
GenericCheckBound:108(v116 T{_Smi}, v59 T{int}) [-9223372036854775808, 9223372036854775807] int64
v130 <- LoadIndexed:108([_Uint32List] v7, v59 T{int}) [0, 4294967295] uint32
ParallelMove r11 <- r4, r6 <- r6, r0 <- r0, r2 <- fp[-9], r5 <- fp[-10], r7 <- r2, r8 <- r3, r9 <- fp[-7], r10 <- fp[-5], r3 <- fp[-6], r4 <- fp[-4] goto:114 B15
B16
ParallelMove r4 <- r11, r1 <- r6
Branch if RelationalOp(>=, v15, v128 T{_Smi}) T{bool} goto (17, 18)
B17
v25 <- UnaryInt64Op(unary-, v15) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r2 goto:140 B19
B18
v23 <- UnaryInt64Op(unary-, v14) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r1 goto:142 B19
B19
ParallelMove r0 <- r0
DartReturn:144(v24)
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r2 <- r1
CheckStackOverflow:8(stack=0, loop=0)
Branch if EqualityCompare(v2 == v35 T{_Smi}) T{bool} goto (3, 7)
B3
ParallelMove r0 <- C
DartReturn:20(v36 T{_Smi})
B7
v33 <- BoxInt64(v2) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v41 <- LoadClassId(v33 T{int}) int64
MoveArgument(sp[0] <- v33 T{int})
ParallelMove r0 <- r1
v6 <- DispatchTableCall( cid=v41 int.bitLength<0>, v33 T{int}) T{int}
ParallelMove r0 <- r0
v34 <- UnboxInt64([non-speculative], v6 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v8 <- BinaryInt64Op(- [tr], v34 T{_Smi}, v37 T{_Smi}) [-4611686018427387906, 4611686018427387901] int64
ParallelMove r1 <- C
v16 <- BinaryInt64Op(- [tr], v38 T{_Smi}, v8) [-4611686018427387869, 4611686018427387938] int64
ParallelMove r1 <- C
v17 <- ShiftInt64Op(<< [tr], v35 T{_Smi}, v16) [-9223372036854775808, 9223372036854775807] int64
v18 <- BinaryInt64Op(- [tr], v17, v35 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0
DartReturn:58(v18 T{int})
CheckStackOverflowSlowPath
slow path int64 shift operation
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r0, r2 <- r2
v4 <- StaticCall:10( _getValueOrData@3220832<0> v2, v3, using unchecked entrypoint) T{Object??}
ParallelMove r0 <- r0, r1 <- fp[-1]
v11 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.data) T{_List}
Branch if StrictCompare:14(===, v11 T{_List}, v4) goto (3, 4)
B3
ParallelMove r0 <- C goto:24 B5
B4
B5
ParallelMove r0 <- r0
DartReturn:28(v6)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r1
v3 <- StaticCall:10( get:isEmpty<0> v2, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
v4 <- BooleanNegate(v3 T{bool}) T{bool}
ParallelMove r0 <- r1
DartReturn:14(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v6 <- LoadClassId(<non-smi> v2) int64
ParallelMove r0 <- r0, r1 <- r1
v3 <- DispatchTableCall( cid=v6 Iterable.iterator<0>, v2) T{*?}
ParallelMove r0 <- r0
v7 <- LoadClassId(<non-smi> v3 T{Iterator<X0>}) int64
ParallelMove r0 <- r1, r1 <- r0
v4 <- DispatchTableCall( cid=v7 Iterator.moveNext<0>, v3 T{Iterator<X0>}) T{bool}
ParallelMove r0 <- r0
v5 <- BooleanNegate(v4 T{bool}) T{bool}
ParallelMove r0 <- r1
DartReturn:16(v5)
CheckStackOverflowSlowPath
B0
B1
v17 <- LoadField(v2 T{_TypedListBase} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v21 <- StrictCompare(!==, v17 T{_Smi}, v12 T{_Smi}) T{bool}
ParallelMove r0 <- r0
DartReturn:14(v21 T{bool})
B0
B6
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r3 <- fp[3]
v5 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- fp[2], r2 <- r2, r1 <- C
t0 <- AssertAssignable:10(v3, v4, 'value', instantiator_type_args(v5), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[3]
v20 <- LoadField(v2 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v25 <- LoadField(v2 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v26 <- LoadField(v25 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v34 <- UnboxInt64([non-speculative], v20 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-1] <- r2
v35 <- UnboxInt64([non-speculative], v26 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v34 T{_Smi} == v35 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v2, using unchecked entrypoint)
ParallelMove  goto:32 B5
B4
B5
v12 <- BinaryInt64Op(+ [tr], v34 T{_Smi}, v39 T{_Smi}) [1, 576460752303423488] int64
v36 <- BoxInt64(v12) [1, 576460752303423488] T{_Smi}
StoreField(v2 . GrowableObjectArray.length = v36, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v12 T{_Smi}, v34 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v15 <- LoadField(v2 . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[2]
StoreIndexed:40([_List] v15, v34 T{_Smi}, v3 T{X0?})
ParallelMove r0 <- C
DartReturn:42(v0)
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v14 <- LoadField(v2 T{__Float64x2ArrayView&_TypedListView&_Float64x2ListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v189 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v190 <- UnboxInt64([non-speculative], v14 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v196 T{_Smi}, v189 T{int}, v190 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0
ParallelMove fp[-4] <- r2
v194 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0, r0 <- r0
ParallelMove fp[-3] <- r0
v40 <- AllocateTypedData:10(v194 T{int}) T{_Float64x2List}
ParallelMove r4 <- r0, r0 <- fp[-4]
ParallelMove fp[-5] <- r4
Branch if RelationalOp(>, v196 T{_Smi}, v7 T{int}) T{bool} goto (20, 17)
B20
B17
Branch if RelationalOp(>, v7 T{int}, v7 T{_Smi}) T{bool} goto (21, 22)
B21
B18
ParallelMove r1 <- C, r2 <- fp[-3], r3 <- r0
StaticCall:56( checkValidRange<0> v196 T{_Smi}, v194 T{int}, v7 T{_Smi}) int64
ParallelMove  goto:62 B27
B22
B27
Branch if RelationalOp(<, v190 T{_Smi}, v7 T{int}) T{bool} goto (28, 29)
B29
Branch if EqualityCompare(v7 T{int} == v196 T{_Smi}) T{bool} goto (30, 31)
B30
ParallelMove r20 <- fp[-5] goto:140 B35
B31
ParallelMove r1 <- fp[-3]
Branch if RelationalOp:10(<, v194 T{int}, v167 T{_Smi}) T{bool} goto (51, 52)
B51
ParallelMove r2 <- fp[-2], r20 <- fp[-5]
v201 <- LoadField(v2 T{__Float64x2ArrayView&_TypedListView&_Float64x2ListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r1
MemoryCopy(v201 T{__Float64x2ArrayView&_TypedListView&_Float64x2ListMixin}, v40 T{_Float64x2List}, v5 T{_Smi}, v5 T{_Smi}, v194 T{int}, dest_cid=_Int32x4List (159), src_cid=_Int32x4List (159) [untagged], element_size=16, can_overlap)
Copying backwards
Copying chunks at a time
Copying forwards
Copying chunks at a time
ParallelMove  goto:10 B50
B52
ParallelMove r2 <- fp[-2], r20 <- fp[-5]
v162 <- SpeculativeShiftInt64Op:24(<< [tr], v7 T{int}, v168) [-9223372036854775808, 9223372036854775807] int64
v154 <- LoadField(v40 T{_Float64x2List} . PointerBase.data, MayLoadInnerPointer) untagged
v157 <- LoadField(v2 T{__Float64x2ArrayView&_TypedListView&_Float64x2ListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v159 <- LoadThread() untagged
v160 <- LoadUntagged(v159, 1536) untagged
ParallelMove r0 <- r0, r1 <- r3, r2 <- r1, r9 <- r9
LeafRuntimeCall(target_address=v160, v154 T{Object}, v157 T{Object}, v162 T{int}) untagged
ParallelMove  goto:10 B50
B50
B35
ParallelMove r0 <- r20
DartReturn:20(v40 T{_Float64x2List})
B28
v70 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v70)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v33 <- LoadField(v2 T{__Float64x2List&_TypedList&_Float64x2ListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v224 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v225 <- UnboxInt64([non-speculative], v33 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v235 T{_Smi}, v224 T{int}, v225 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0, r2 <- fp[-2]
ParallelMove fp[-3] <- r3
v26 <- LoadClassId(v2) [163, 165] int64
Branch if EqualityCompare:16(v26 == v27) goto (3, 8)
B3
v230 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v52 <- AllocateTypedData:10(v230 T{int}) T{_Float64x2List}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B8
ParallelMove r2 <- r3
v229 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v58 <- AllocateTypedData:10(v229 T{int}) T{_Float64x2List}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B9
ParallelMove fp[-4] <- r5
Branch if RelationalOp(>, v235 T{_Smi}, v7 T{int}) T{bool} goto (27, 24)
B27
B24
v161 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v231 <- UnboxInt64([non-speculative], v161 T{_Smi}) [0, 4611686018427387903] int64
Branch if RelationalOp(>, v7 T{int}, v231 T{_Smi}) T{bool} goto (28, 29)
B28
B25
v156 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v228 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v232 <- UnboxInt64([non-speculative], v156 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r3
StaticCall:56( checkValidRange<0> v235 T{_Smi}, v228 T{int}, v232 T{_Smi}) int64
ParallelMove  goto:62 B34
B29
B34
Branch if RelationalOp(<, v225 T{_Smi}, v7 T{int}) T{bool} goto (35, 36)
B36
Branch if EqualityCompare(v7 T{int} == v235 T{_Smi}) T{bool} goto (37, 38)
B37
ParallelMove r20 <- fp[-4] goto:140 B42
B38
v227 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
Branch if RelationalOp:10(<, v227 T{int}, v194 T{_Smi}) T{bool} goto (63, 64)
B63
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v245 <- LoadField(v2 T{__Float64x2List&_TypedList&_Float64x2ListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r0
MemoryCopy(v245 T{__Float64x2List&_TypedList&_Float64x2ListMixin}, v28 T{_Float64x2List}, v5 T{_Smi}, v5 T{_Smi}, v227 T{int}, dest_cid=_Int32x4List (159), src_cid=_Int32x4List (159) [untagged], element_size=16, can_overlap)
Copying backwards
Copying chunks at a time
Copying forwards
Copying chunks at a time
ParallelMove  goto:10 B62
B64
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v189 <- SpeculativeShiftInt64Op:24(<< [tr], v7 T{int}, v195) [-9223372036854775808, 9223372036854775807] int64
v181 <- LoadField(v28 T{_Float64x2List} . PointerBase.data, MayLoadInnerPointer) untagged
v184 <- LoadField(v2 T{__Float64x2List&_TypedList&_Float64x2ListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v186 <- LoadThread() untagged
v187 <- LoadUntagged(v186, 1536) untagged
ParallelMove r0 <- r2, r1 <- r3, r2 <- r0, r9 <- r9
LeafRuntimeCall(target_address=v187, v181 T{Object}, v184 T{Object}, v189 T{int}) untagged
ParallelMove  goto:10 B62
B62
B42
ParallelMove r0 <- r20
DartReturn:20(v28)
B35
v88 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v88)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v14 <- LoadField(v2 T{__Int32x4ArrayView&_TypedListView&_Int32x4ListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v189 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v190 <- UnboxInt64([non-speculative], v14 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v196 T{_Smi}, v189 T{int}, v190 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0
ParallelMove fp[-4] <- r2
v194 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0, r0 <- r0
ParallelMove fp[-3] <- r0
v40 <- AllocateTypedData:10(v194 T{int}) T{_Int32x4List}
ParallelMove r4 <- r0, r0 <- fp[-4]
ParallelMove fp[-5] <- r4
Branch if RelationalOp(>, v196 T{_Smi}, v7 T{int}) T{bool} goto (20, 17)
B20
B17
Branch if RelationalOp(>, v7 T{int}, v7 T{_Smi}) T{bool} goto (21, 22)
B21
B18
ParallelMove r1 <- C, r2 <- fp[-3], r3 <- r0
StaticCall:56( checkValidRange<0> v196 T{_Smi}, v194 T{int}, v7 T{_Smi}) int64
ParallelMove  goto:62 B27
B22
B27
Branch if RelationalOp(<, v190 T{_Smi}, v7 T{int}) T{bool} goto (28, 29)
B29
Branch if EqualityCompare(v7 T{int} == v196 T{_Smi}) T{bool} goto (30, 31)
B30
ParallelMove r20 <- fp[-5] goto:140 B35
B31
ParallelMove r1 <- fp[-3]
Branch if RelationalOp:10(<, v194 T{int}, v167 T{_Smi}) T{bool} goto (51, 52)
B51
ParallelMove r2 <- fp[-2], r20 <- fp[-5]
v201 <- LoadField(v2 T{__Int32x4ArrayView&_TypedListView&_Int32x4ListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r1
MemoryCopy(v201 T{__Int32x4ArrayView&_TypedListView&_Int32x4ListMixin}, v40 T{_Int32x4List}, v5 T{_Smi}, v5 T{_Smi}, v194 T{int}, dest_cid=_Int32x4List (159), src_cid=_Int32x4List (159) [untagged], element_size=16, can_overlap)
Copying backwards
Copying chunks at a time
Copying forwards
Copying chunks at a time
ParallelMove  goto:10 B50
B52
ParallelMove r2 <- fp[-2], r20 <- fp[-5]
v162 <- SpeculativeShiftInt64Op:24(<< [tr], v7 T{int}, v168) [-9223372036854775808, 9223372036854775807] int64
v154 <- LoadField(v40 T{_Int32x4List} . PointerBase.data, MayLoadInnerPointer) untagged
v157 <- LoadField(v2 T{__Int32x4ArrayView&_TypedListView&_Int32x4ListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v159 <- LoadThread() untagged
v160 <- LoadUntagged(v159, 1536) untagged
ParallelMove r0 <- r0, r1 <- r3, r2 <- r1, r9 <- r9
LeafRuntimeCall(target_address=v160, v154 T{Object}, v157 T{Object}, v162 T{int}) untagged
ParallelMove  goto:10 B50
B50
B35
ParallelMove r0 <- r20
DartReturn:20(v40 T{_Int32x4List})
B28
v70 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v70)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v33 <- LoadField(v2 T{__Int32x4List&_TypedList&_Int32x4ListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v224 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v225 <- UnboxInt64([non-speculative], v33 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v235 T{_Smi}, v224 T{int}, v225 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0, r2 <- fp[-2]
ParallelMove fp[-3] <- r3
v26 <- LoadClassId(v2) [159, 161] int64
Branch if EqualityCompare:16(v26 == v27) goto (3, 8)
B3
v230 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v52 <- AllocateTypedData:10(v230 T{int}) T{_Int32x4List}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B8
ParallelMove r2 <- r3
v229 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v58 <- AllocateTypedData:10(v229 T{int}) T{_Int32x4List}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B9
ParallelMove fp[-4] <- r5
Branch if RelationalOp(>, v235 T{_Smi}, v7 T{int}) T{bool} goto (27, 24)
B27
B24
v161 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v231 <- UnboxInt64([non-speculative], v161 T{_Smi}) [0, 4611686018427387903] int64
Branch if RelationalOp(>, v7 T{int}, v231 T{_Smi}) T{bool} goto (28, 29)
B28
B25
v156 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v228 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v232 <- UnboxInt64([non-speculative], v156 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r3
StaticCall:56( checkValidRange<0> v235 T{_Smi}, v228 T{int}, v232 T{_Smi}) int64
ParallelMove  goto:62 B34
B29
B34
Branch if RelationalOp(<, v225 T{_Smi}, v7 T{int}) T{bool} goto (35, 36)
B36
Branch if EqualityCompare(v7 T{int} == v235 T{_Smi}) T{bool} goto (37, 38)
B37
ParallelMove r20 <- fp[-4] goto:140 B42
B38
v227 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
Branch if RelationalOp:10(<, v227 T{int}, v194 T{_Smi}) T{bool} goto (63, 64)
B63
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v245 <- LoadField(v2 T{__Int32x4List&_TypedList&_Int32x4ListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r0
MemoryCopy(v245 T{__Int32x4List&_TypedList&_Int32x4ListMixin}, v28 T{_Int32x4List}, v5 T{_Smi}, v5 T{_Smi}, v227 T{int}, dest_cid=_Int32x4List (159), src_cid=_Int32x4List (159) [untagged], element_size=16, can_overlap)
Copying backwards
Copying chunks at a time
Copying forwards
Copying chunks at a time
ParallelMove  goto:10 B62
B64
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v189 <- SpeculativeShiftInt64Op:24(<< [tr], v7 T{int}, v195) [-9223372036854775808, 9223372036854775807] int64
v181 <- LoadField(v28 T{_Int32x4List} . PointerBase.data, MayLoadInnerPointer) untagged
v184 <- LoadField(v2 T{__Int32x4List&_TypedList&_Int32x4ListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v186 <- LoadThread() untagged
v187 <- LoadUntagged(v186, 1536) untagged
ParallelMove r0 <- r2, r1 <- r3, r2 <- r0, r9 <- r9
LeafRuntimeCall(target_address=v187, v181 T{Object}, v184 T{Object}, v189 T{int}) untagged
ParallelMove  goto:10 B62
B62
B42
ParallelMove r0 <- r20
DartReturn:20(v28)
B35
v88 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v88)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v14 <- LoadField(v2 T{__Float32x4ArrayView&_TypedListView&_Float32x4ListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v189 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v190 <- UnboxInt64([non-speculative], v14 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v196 T{_Smi}, v189 T{int}, v190 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0
ParallelMove fp[-4] <- r2
v194 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0, r0 <- r0
ParallelMove fp[-3] <- r0
v40 <- AllocateTypedData:10(v194 T{int}) T{_Float32x4List}
ParallelMove r4 <- r0, r0 <- fp[-4]
ParallelMove fp[-5] <- r4
Branch if RelationalOp(>, v196 T{_Smi}, v7 T{int}) T{bool} goto (20, 17)
B20
B17
Branch if RelationalOp(>, v7 T{int}, v7 T{_Smi}) T{bool} goto (21, 22)
B21
B18
ParallelMove r1 <- C, r2 <- fp[-3], r3 <- r0
StaticCall:56( checkValidRange<0> v196 T{_Smi}, v194 T{int}, v7 T{_Smi}) int64
ParallelMove  goto:62 B27
B22
B27
Branch if RelationalOp(<, v190 T{_Smi}, v7 T{int}) T{bool} goto (28, 29)
B29
Branch if EqualityCompare(v7 T{int} == v196 T{_Smi}) T{bool} goto (30, 31)
B30
ParallelMove r20 <- fp[-5] goto:140 B35
B31
ParallelMove r1 <- fp[-3]
Branch if RelationalOp:10(<, v194 T{int}, v167 T{_Smi}) T{bool} goto (51, 52)
B51
ParallelMove r2 <- fp[-2], r20 <- fp[-5]
v201 <- LoadField(v2 T{__Float32x4ArrayView&_TypedListView&_Float32x4ListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r1
MemoryCopy(v201 T{__Float32x4ArrayView&_TypedListView&_Float32x4ListMixin}, v40 T{_Float32x4List}, v5 T{_Smi}, v5 T{_Smi}, v194 T{int}, dest_cid=_Int32x4List (159), src_cid=_Int32x4List (159) [untagged], element_size=16, can_overlap)
Copying backwards
Copying chunks at a time
Copying forwards
Copying chunks at a time
ParallelMove  goto:10 B50
B52
ParallelMove r2 <- fp[-2], r20 <- fp[-5]
v162 <- SpeculativeShiftInt64Op:24(<< [tr], v7 T{int}, v168) [-9223372036854775808, 9223372036854775807] int64
v154 <- LoadField(v40 T{_Float32x4List} . PointerBase.data, MayLoadInnerPointer) untagged
v157 <- LoadField(v2 T{__Float32x4ArrayView&_TypedListView&_Float32x4ListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v159 <- LoadThread() untagged
v160 <- LoadUntagged(v159, 1536) untagged
ParallelMove r0 <- r0, r1 <- r3, r2 <- r1, r9 <- r9
LeafRuntimeCall(target_address=v160, v154 T{Object}, v157 T{Object}, v162 T{int}) untagged
ParallelMove  goto:10 B50
B50
B35
ParallelMove r0 <- r20
DartReturn:20(v40 T{_Float32x4List})
B28
v70 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v70)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v33 <- LoadField(v2 T{__Float32x4List&_TypedList&_Float32x4ListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v224 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v225 <- UnboxInt64([non-speculative], v33 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v235 T{_Smi}, v224 T{int}, v225 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0, r2 <- fp[-2]
ParallelMove fp[-3] <- r3
v26 <- LoadClassId(v2) [155, 157] int64
Branch if EqualityCompare:16(v26 == v27) goto (3, 8)
B3
v230 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v52 <- AllocateTypedData:10(v230 T{int}) T{_Float32x4List}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B8
ParallelMove r2 <- r3
v229 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v58 <- AllocateTypedData:10(v229 T{int}) T{_Float32x4List}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B9
ParallelMove fp[-4] <- r5
Branch if RelationalOp(>, v235 T{_Smi}, v7 T{int}) T{bool} goto (27, 24)
B27
B24
v161 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v231 <- UnboxInt64([non-speculative], v161 T{_Smi}) [0, 4611686018427387903] int64
Branch if RelationalOp(>, v7 T{int}, v231 T{_Smi}) T{bool} goto (28, 29)
B28
B25
v156 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v228 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v232 <- UnboxInt64([non-speculative], v156 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r3
StaticCall:56( checkValidRange<0> v235 T{_Smi}, v228 T{int}, v232 T{_Smi}) int64
ParallelMove  goto:62 B34
B29
B34
Branch if RelationalOp(<, v225 T{_Smi}, v7 T{int}) T{bool} goto (35, 36)
B36
Branch if EqualityCompare(v7 T{int} == v235 T{_Smi}) T{bool} goto (37, 38)
B37
ParallelMove r20 <- fp[-4] goto:140 B42
B38
v227 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
Branch if RelationalOp:10(<, v227 T{int}, v194 T{_Smi}) T{bool} goto (63, 64)
B63
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v245 <- LoadField(v2 T{__Float32x4List&_TypedList&_Float32x4ListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r0
MemoryCopy(v245 T{__Float32x4List&_TypedList&_Float32x4ListMixin}, v28 T{_Float32x4List}, v5 T{_Smi}, v5 T{_Smi}, v227 T{int}, dest_cid=_Int32x4List (159), src_cid=_Int32x4List (159) [untagged], element_size=16, can_overlap)
Copying backwards
Copying chunks at a time
Copying forwards
Copying chunks at a time
ParallelMove  goto:10 B62
B64
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v189 <- SpeculativeShiftInt64Op:24(<< [tr], v7 T{int}, v195) [-9223372036854775808, 9223372036854775807] int64
v181 <- LoadField(v28 T{_Float32x4List} . PointerBase.data, MayLoadInnerPointer) untagged
v184 <- LoadField(v2 T{__Float32x4List&_TypedList&_Float32x4ListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v186 <- LoadThread() untagged
v187 <- LoadUntagged(v186, 1536) untagged
ParallelMove r0 <- r2, r1 <- r3, r2 <- r0, r9 <- r9
LeafRuntimeCall(target_address=v187, v181 T{Object}, v184 T{Object}, v189 T{int}) untagged
ParallelMove  goto:10 B62
B62
B42
ParallelMove r0 <- r20
DartReturn:20(v28)
B35
v88 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v88)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v14 <- LoadField(v2 T{__Float64ArrayView&_TypedListView&_DoubleListMixin&_TypedDoubleListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v189 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v190 <- UnboxInt64([non-speculative], v14 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v196 T{_Smi}, v189 T{int}, v190 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0
ParallelMove fp[-4] <- r2
v194 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0, r0 <- r0
ParallelMove fp[-3] <- r0
v40 <- AllocateTypedData:10(v194 T{int}) T{_Float64List}
ParallelMove r4 <- r0, r0 <- fp[-4]
ParallelMove fp[-5] <- r4
Branch if RelationalOp(>, v196 T{_Smi}, v7 T{int}) T{bool} goto (20, 17)
B20
B17
Branch if RelationalOp(>, v7 T{int}, v7 T{_Smi}) T{bool} goto (21, 22)
B21
B18
ParallelMove r1 <- C, r2 <- fp[-3], r3 <- r0
StaticCall:56( checkValidRange<0> v196 T{_Smi}, v194 T{int}, v7 T{_Smi}) int64
ParallelMove  goto:62 B27
B22
B27
Branch if RelationalOp(<, v190 T{_Smi}, v7 T{int}) T{bool} goto (28, 29)
B29
Branch if EqualityCompare(v7 T{int} == v196 T{_Smi}) T{bool} goto (30, 31)
B30
ParallelMove r20 <- fp[-5] goto:140 B35
B31
ParallelMove r1 <- fp[-3]
Branch if RelationalOp:10(<, v194 T{int}, v167 T{_Smi}) T{bool} goto (51, 52)
B51
ParallelMove r2 <- fp[-2], r20 <- fp[-5]
v201 <- LoadField(v2 T{__Float64ArrayView&_TypedListView&_DoubleListMixin&_TypedDoubleListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r1
MemoryCopy(v201 T{__Float64ArrayView&_TypedListView&_DoubleListMixin&_TypedDoubleListMixin}, v40 T{_Float64List}, v5 T{_Smi}, v5 T{_Smi}, v194 T{int}, dest_cid=_Int64List (139), src_cid=_Int64List (139) [untagged], element_size=8, can_overlap)
Copying backwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
Copying forwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
ParallelMove  goto:10 B50
B52
ParallelMove r2 <- fp[-2], r20 <- fp[-5]
v162 <- SpeculativeShiftInt64Op:24(<< [tr], v7 T{int}, v168) [-9223372036854775808, 9223372036854775807] int64
v154 <- LoadField(v40 T{_Float64List} . PointerBase.data, MayLoadInnerPointer) untagged
v157 <- LoadField(v2 T{__Float64ArrayView&_TypedListView&_DoubleListMixin&_TypedDoubleListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v159 <- LoadThread() untagged
v160 <- LoadUntagged(v159, 1536) untagged
ParallelMove r0 <- r0, r1 <- r3, r2 <- r1, r9 <- r9
LeafRuntimeCall(target_address=v160, v154 T{Object}, v157 T{Object}, v162 T{int}) untagged
ParallelMove  goto:10 B50
B50
B35
ParallelMove r0 <- r20
DartReturn:20(v40 T{_Float64List})
B28
v70 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v70)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v33 <- LoadField(v2 T{__Float64List&_TypedList&_DoubleListMixin&_TypedDoubleListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v224 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v225 <- UnboxInt64([non-speculative], v33 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v235 T{_Smi}, v224 T{int}, v225 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0, r2 <- fp[-2]
ParallelMove fp[-3] <- r3
v26 <- LoadClassId(v2) [151, 153] int64
Branch if EqualityCompare:16(v26 == v27) goto (3, 8)
B3
v230 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v52 <- AllocateTypedData:10(v230 T{int}) T{_Float64List}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B8
ParallelMove r2 <- r3
v229 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v58 <- AllocateTypedData:10(v229 T{int}) T{_Float64List}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B9
ParallelMove fp[-4] <- r5
Branch if RelationalOp(>, v235 T{_Smi}, v7 T{int}) T{bool} goto (27, 24)
B27
B24
v161 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v231 <- UnboxInt64([non-speculative], v161 T{_Smi}) [0, 4611686018427387903] int64
Branch if RelationalOp(>, v7 T{int}, v231 T{_Smi}) T{bool} goto (28, 29)
B28
B25
v156 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v228 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v232 <- UnboxInt64([non-speculative], v156 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r3
StaticCall:56( checkValidRange<0> v235 T{_Smi}, v228 T{int}, v232 T{_Smi}) int64
ParallelMove  goto:62 B34
B29
B34
Branch if RelationalOp(<, v225 T{_Smi}, v7 T{int}) T{bool} goto (35, 36)
B36
Branch if EqualityCompare(v7 T{int} == v235 T{_Smi}) T{bool} goto (37, 38)
B37
ParallelMove r20 <- fp[-4] goto:140 B42
B38
v227 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
Branch if RelationalOp:10(<, v227 T{int}, v194 T{_Smi}) T{bool} goto (63, 64)
B63
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v245 <- LoadField(v2 T{__Float64List&_TypedList&_DoubleListMixin&_TypedDoubleListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r0
MemoryCopy(v245 T{__Float64List&_TypedList&_DoubleListMixin&_TypedDoubleListMixin}, v28, v5 T{_Smi}, v5 T{_Smi}, v227 T{int}, dest_cid=_Int64List (139), src_cid=_Int64List (139) [untagged], element_size=8, can_overlap)
Copying backwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
Copying forwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
ParallelMove  goto:10 B62
B64
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v189 <- SpeculativeShiftInt64Op:24(<< [tr], v7 T{int}, v195) [-9223372036854775808, 9223372036854775807] int64
v181 <- LoadField(v28 . PointerBase.data, MayLoadInnerPointer) untagged
v184 <- LoadField(v2 T{__Float64List&_TypedList&_DoubleListMixin&_TypedDoubleListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v186 <- LoadThread() untagged
v187 <- LoadUntagged(v186, 1536) untagged
ParallelMove r0 <- r2, r1 <- r3, r2 <- r0, r9 <- r9
LeafRuntimeCall(target_address=v187, v181 T{Object}, v184 T{Object}, v189 T{int}) untagged
ParallelMove  goto:10 B62
B62
B42
ParallelMove r0 <- r20
DartReturn:20(v28)
B35
v88 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v88)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v14 <- LoadField(v2 T{__Float32ArrayView&_TypedListView&_DoubleListMixin&_TypedDoubleListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v189 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v190 <- UnboxInt64([non-speculative], v14 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v196 T{_Smi}, v189 T{int}, v190 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0
ParallelMove fp[-4] <- r2
v194 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0, r0 <- r0
ParallelMove fp[-3] <- r0
v40 <- AllocateTypedData:10(v194 T{int}) T{_Float32List}
ParallelMove r4 <- r0, r0 <- fp[-4]
ParallelMove fp[-5] <- r4
Branch if RelationalOp(>, v196 T{_Smi}, v7 T{int}) T{bool} goto (20, 17)
B20
B17
Branch if RelationalOp(>, v7 T{int}, v7 T{_Smi}) T{bool} goto (21, 22)
B21
B18
ParallelMove r1 <- C, r2 <- fp[-3], r3 <- r0
StaticCall:56( checkValidRange<0> v196 T{_Smi}, v194 T{int}, v7 T{_Smi}) int64
ParallelMove  goto:62 B27
B22
B27
Branch if RelationalOp(<, v190 T{_Smi}, v7 T{int}) T{bool} goto (28, 29)
B29
Branch if EqualityCompare(v7 T{int} == v196 T{_Smi}) T{bool} goto (30, 31)
B30
ParallelMove r20 <- fp[-5] goto:140 B35
B31
ParallelMove r1 <- fp[-3]
Branch if RelationalOp:10(<, v194 T{int}, v167 T{_Smi}) T{bool} goto (51, 52)
B51
ParallelMove r2 <- fp[-2], r20 <- fp[-5]
v201 <- LoadField(v2 T{__Float32ArrayView&_TypedListView&_DoubleListMixin&_TypedDoubleListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r1
MemoryCopy(v201 T{__Float32ArrayView&_TypedListView&_DoubleListMixin&_TypedDoubleListMixin}, v40 T{_Float32List}, v5 T{_Smi}, v5 T{_Smi}, v194 T{int}, dest_cid=_Int32List (131), src_cid=_Int32List (131) [untagged], element_size=4, can_overlap)
Copying backwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
Copying forwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
ParallelMove  goto:10 B50
B52
ParallelMove r2 <- fp[-2], r20 <- fp[-5]
v162 <- SpeculativeShiftInt64Op:24(<< [tr], v7 T{int}, v168) [-9223372036854775808, 9223372036854775807] int64
v154 <- LoadField(v40 T{_Float32List} . PointerBase.data, MayLoadInnerPointer) untagged
v157 <- LoadField(v2 T{__Float32ArrayView&_TypedListView&_DoubleListMixin&_TypedDoubleListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v159 <- LoadThread() untagged
v160 <- LoadUntagged(v159, 1536) untagged
ParallelMove r0 <- r0, r1 <- r3, r2 <- r1, r9 <- r9
LeafRuntimeCall(target_address=v160, v154 T{Object}, v157 T{Object}, v162 T{int}) untagged
ParallelMove  goto:10 B50
B50
B35
ParallelMove r0 <- r20
DartReturn:20(v40 T{_Float32List})
B28
v70 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v70)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v33 <- LoadField(v2 T{__Float32List&_TypedList&_DoubleListMixin&_TypedDoubleListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v224 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v225 <- UnboxInt64([non-speculative], v33 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v235 T{_Smi}, v224 T{int}, v225 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0, r2 <- fp[-2]
ParallelMove fp[-3] <- r3
v26 <- LoadClassId(v2) [147, 149] int64
Branch if EqualityCompare:16(v26 == v27) goto (3, 8)
B3
v230 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v52 <- AllocateTypedData:10(v230 T{int}) T{_Float32List}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B8
ParallelMove r2 <- r3
v229 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v58 <- AllocateTypedData:10(v229 T{int}) T{_Float32List}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B9
ParallelMove fp[-4] <- r5
Branch if RelationalOp(>, v235 T{_Smi}, v7 T{int}) T{bool} goto (27, 24)
B27
B24
v161 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v231 <- UnboxInt64([non-speculative], v161 T{_Smi}) [0, 4611686018427387903] int64
Branch if RelationalOp(>, v7 T{int}, v231 T{_Smi}) T{bool} goto (28, 29)
B28
B25
v156 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v228 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v232 <- UnboxInt64([non-speculative], v156 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r3
StaticCall:56( checkValidRange<0> v235 T{_Smi}, v228 T{int}, v232 T{_Smi}) int64
ParallelMove  goto:62 B34
B29
B34
Branch if RelationalOp(<, v225 T{_Smi}, v7 T{int}) T{bool} goto (35, 36)
B36
Branch if EqualityCompare(v7 T{int} == v235 T{_Smi}) T{bool} goto (37, 38)
B37
ParallelMove r20 <- fp[-4] goto:140 B42
B38
v227 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
Branch if RelationalOp:10(<, v227 T{int}, v194 T{_Smi}) T{bool} goto (63, 64)
B63
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v245 <- LoadField(v2 T{__Float32List&_TypedList&_DoubleListMixin&_TypedDoubleListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r0
MemoryCopy(v245 T{__Float32List&_TypedList&_DoubleListMixin&_TypedDoubleListMixin}, v28, v5 T{_Smi}, v5 T{_Smi}, v227 T{int}, dest_cid=_Int32List (131), src_cid=_Int32List (131) [untagged], element_size=4, can_overlap)
Copying backwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
Copying forwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
ParallelMove  goto:10 B62
B64
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v189 <- SpeculativeShiftInt64Op:24(<< [tr], v7 T{int}, v195) [-9223372036854775808, 9223372036854775807] int64
v181 <- LoadField(v28 . PointerBase.data, MayLoadInnerPointer) untagged
v184 <- LoadField(v2 T{__Float32List&_TypedList&_DoubleListMixin&_TypedDoubleListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v186 <- LoadThread() untagged
v187 <- LoadUntagged(v186, 1536) untagged
ParallelMove r0 <- r2, r1 <- r3, r2 <- r0, r9 <- r9
LeafRuntimeCall(target_address=v187, v181 T{Object}, v184 T{Object}, v189 T{int}) untagged
ParallelMove  goto:10 B62
B62
B42
ParallelMove r0 <- r20
DartReturn:20(v28)
B35
v88 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v88)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v14 <- LoadField(v2 T{__Uint64ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v189 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v190 <- UnboxInt64([non-speculative], v14 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v196 T{_Smi}, v189 T{int}, v190 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0
ParallelMove fp[-4] <- r2
v194 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0, r0 <- r0
ParallelMove fp[-3] <- r0
v40 <- AllocateTypedData:10(v194 T{int}) T{_Uint64List}
ParallelMove r4 <- r0, r0 <- fp[-4]
ParallelMove fp[-5] <- r4
Branch if RelationalOp(>, v196 T{_Smi}, v7 T{int}) T{bool} goto (20, 17)
B20
B17
Branch if RelationalOp(>, v7 T{int}, v7 T{_Smi}) T{bool} goto (21, 22)
B21
B18
ParallelMove r1 <- C, r2 <- fp[-3], r3 <- r0
StaticCall:56( checkValidRange<0> v196 T{_Smi}, v194 T{int}, v7 T{_Smi}) int64
ParallelMove  goto:62 B27
B22
B27
Branch if RelationalOp(<, v190 T{_Smi}, v7 T{int}) T{bool} goto (28, 29)
B29
Branch if EqualityCompare(v7 T{int} == v196 T{_Smi}) T{bool} goto (30, 31)
B30
ParallelMove r20 <- fp[-5] goto:140 B35
B31
ParallelMove r1 <- fp[-3]
Branch if RelationalOp:10(<, v194 T{int}, v167 T{_Smi}) T{bool} goto (51, 52)
B51
ParallelMove r2 <- fp[-2], r20 <- fp[-5]
v201 <- LoadField(v2 T{__Uint64ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r1
MemoryCopy(v201 T{__Uint64ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin}, v40 T{_Uint64List}, v5 T{_Smi}, v5 T{_Smi}, v194 T{int}, dest_cid=_Int64List (139), src_cid=_Int64List (139) [untagged], element_size=8, can_overlap)
Copying backwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
Copying forwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
ParallelMove  goto:10 B50
B52
ParallelMove r2 <- fp[-2], r20 <- fp[-5]
v162 <- SpeculativeShiftInt64Op:24(<< [tr], v7 T{int}, v168) [-9223372036854775808, 9223372036854775807] int64
v154 <- LoadField(v40 T{_Uint64List} . PointerBase.data, MayLoadInnerPointer) untagged
v157 <- LoadField(v2 T{__Uint64ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v159 <- LoadThread() untagged
v160 <- LoadUntagged(v159, 1536) untagged
ParallelMove r0 <- r0, r1 <- r3, r2 <- r1, r9 <- r9
LeafRuntimeCall(target_address=v160, v154 T{Object}, v157 T{Object}, v162 T{int}) untagged
ParallelMove  goto:10 B50
B50
B35
ParallelMove r0 <- r20
DartReturn:20(v40 T{_Uint64List})
B28
v70 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v70)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v33 <- LoadField(v2 T{__Uint64List&_TypedList&_IntListMixin&_TypedIntListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v224 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v225 <- UnboxInt64([non-speculative], v33 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v235 T{_Smi}, v224 T{int}, v225 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0, r2 <- fp[-2]
ParallelMove fp[-3] <- r3
v26 <- LoadClassId(v2) [143, 145] int64
Branch if EqualityCompare:16(v26 == v27) goto (3, 8)
B3
v230 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v52 <- AllocateTypedData:10(v230 T{int}) T{_Uint64List}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B8
ParallelMove r2 <- r3
v229 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v58 <- AllocateTypedData:10(v229 T{int}) T{_Uint64List}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B9
ParallelMove fp[-4] <- r5
Branch if RelationalOp(>, v235 T{_Smi}, v7 T{int}) T{bool} goto (27, 24)
B27
B24
v161 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v231 <- UnboxInt64([non-speculative], v161 T{_Smi}) [0, 4611686018427387903] int64
Branch if RelationalOp(>, v7 T{int}, v231 T{_Smi}) T{bool} goto (28, 29)
B28
B25
v156 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v228 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v232 <- UnboxInt64([non-speculative], v156 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r3
StaticCall:56( checkValidRange<0> v235 T{_Smi}, v228 T{int}, v232 T{_Smi}) int64
ParallelMove  goto:62 B34
B29
B34
Branch if RelationalOp(<, v225 T{_Smi}, v7 T{int}) T{bool} goto (35, 36)
B36
Branch if EqualityCompare(v7 T{int} == v235 T{_Smi}) T{bool} goto (37, 38)
B37
ParallelMove r20 <- fp[-4] goto:140 B42
B38
v227 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
Branch if RelationalOp:10(<, v227 T{int}, v194 T{_Smi}) T{bool} goto (63, 64)
B63
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v245 <- LoadField(v2 T{__Uint64List&_TypedList&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r0
MemoryCopy(v245 T{__Uint64List&_TypedList&_IntListMixin&_TypedIntListMixin}, v28, v5 T{_Smi}, v5 T{_Smi}, v227 T{int}, dest_cid=_Int64List (139), src_cid=_Int64List (139) [untagged], element_size=8, can_overlap)
Copying backwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
Copying forwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
ParallelMove  goto:10 B62
B64
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v189 <- SpeculativeShiftInt64Op:24(<< [tr], v7 T{int}, v195) [-9223372036854775808, 9223372036854775807] int64
v181 <- LoadField(v28 . PointerBase.data, MayLoadInnerPointer) untagged
v184 <- LoadField(v2 T{__Uint64List&_TypedList&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v186 <- LoadThread() untagged
v187 <- LoadUntagged(v186, 1536) untagged
ParallelMove r0 <- r2, r1 <- r3, r2 <- r0, r9 <- r9
LeafRuntimeCall(target_address=v187, v181 T{Object}, v184 T{Object}, v189 T{int}) untagged
ParallelMove  goto:10 B62
B62
B42
ParallelMove r0 <- r20
DartReturn:20(v28)
B35
v88 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v88)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v14 <- LoadField(v2 T{__Int64ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v189 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v190 <- UnboxInt64([non-speculative], v14 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v196 T{_Smi}, v189 T{int}, v190 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0
ParallelMove fp[-4] <- r2
v194 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0, r0 <- r0
ParallelMove fp[-3] <- r0
v40 <- AllocateTypedData:10(v194 T{int}) T{_Int64List}
ParallelMove r4 <- r0, r0 <- fp[-4]
ParallelMove fp[-5] <- r4
Branch if RelationalOp(>, v196 T{_Smi}, v7 T{int}) T{bool} goto (20, 17)
B20
B17
Branch if RelationalOp(>, v7 T{int}, v7 T{_Smi}) T{bool} goto (21, 22)
B21
B18
ParallelMove r1 <- C, r2 <- fp[-3], r3 <- r0
StaticCall:56( checkValidRange<0> v196 T{_Smi}, v194 T{int}, v7 T{_Smi}) int64
ParallelMove  goto:62 B27
B22
B27
Branch if RelationalOp(<, v190 T{_Smi}, v7 T{int}) T{bool} goto (28, 29)
B29
Branch if EqualityCompare(v7 T{int} == v196 T{_Smi}) T{bool} goto (30, 31)
B30
ParallelMove r20 <- fp[-5] goto:140 B35
B31
ParallelMove r1 <- fp[-3]
Branch if RelationalOp:10(<, v194 T{int}, v167 T{_Smi}) T{bool} goto (51, 52)
B51
ParallelMove r2 <- fp[-2], r20 <- fp[-5]
v201 <- LoadField(v2 T{__Int64ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r1
MemoryCopy(v201 T{__Int64ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin}, v40 T{_Int64List}, v5 T{_Smi}, v5 T{_Smi}, v194 T{int}, dest_cid=_Int64List (139), src_cid=_Int64List (139) [untagged], element_size=8, can_overlap)
Copying backwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
Copying forwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
ParallelMove  goto:10 B50
B52
ParallelMove r2 <- fp[-2], r20 <- fp[-5]
v162 <- SpeculativeShiftInt64Op:24(<< [tr], v7 T{int}, v168) [-9223372036854775808, 9223372036854775807] int64
v154 <- LoadField(v40 T{_Int64List} . PointerBase.data, MayLoadInnerPointer) untagged
v157 <- LoadField(v2 T{__Int64ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v159 <- LoadThread() untagged
v160 <- LoadUntagged(v159, 1536) untagged
ParallelMove r0 <- r0, r1 <- r3, r2 <- r1, r9 <- r9
LeafRuntimeCall(target_address=v160, v154 T{Object}, v157 T{Object}, v162 T{int}) untagged
ParallelMove  goto:10 B50
B50
B35
ParallelMove r0 <- r20
DartReturn:20(v40 T{_Int64List})
B28
v70 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v70)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v33 <- LoadField(v2 T{__Int64List&_TypedList&_IntListMixin&_TypedIntListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v224 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v225 <- UnboxInt64([non-speculative], v33 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v235 T{_Smi}, v224 T{int}, v225 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0, r2 <- fp[-2]
ParallelMove fp[-3] <- r3
v26 <- LoadClassId(v2) [139, 141] int64
Branch if EqualityCompare:16(v26 == v27) goto (3, 8)
B3
v230 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v52 <- AllocateTypedData:10(v230 T{int}) T{_Int64List}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B8
ParallelMove r2 <- r3
v229 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v58 <- AllocateTypedData:10(v229 T{int}) T{_Int64List}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B9
ParallelMove fp[-4] <- r5
Branch if RelationalOp(>, v235 T{_Smi}, v7 T{int}) T{bool} goto (27, 24)
B27
B24
v161 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v231 <- UnboxInt64([non-speculative], v161 T{_Smi}) [0, 4611686018427387903] int64
Branch if RelationalOp(>, v7 T{int}, v231 T{_Smi}) T{bool} goto (28, 29)
B28
B25
v156 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v228 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v232 <- UnboxInt64([non-speculative], v156 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r3
StaticCall:56( checkValidRange<0> v235 T{_Smi}, v228 T{int}, v232 T{_Smi}) int64
ParallelMove  goto:62 B34
B29
B34
Branch if RelationalOp(<, v225 T{_Smi}, v7 T{int}) T{bool} goto (35, 36)
B36
Branch if EqualityCompare(v7 T{int} == v235 T{_Smi}) T{bool} goto (37, 38)
B37
ParallelMove r20 <- fp[-4] goto:140 B42
B38
v227 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
Branch if RelationalOp:10(<, v227 T{int}, v194 T{_Smi}) T{bool} goto (63, 64)
B63
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v245 <- LoadField(v2 T{__Int64List&_TypedList&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r0
MemoryCopy(v245 T{__Int64List&_TypedList&_IntListMixin&_TypedIntListMixin}, v28, v5 T{_Smi}, v5 T{_Smi}, v227 T{int}, dest_cid=_Int64List (139), src_cid=_Int64List (139) [untagged], element_size=8, can_overlap)
Copying backwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
Copying forwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
ParallelMove  goto:10 B62
B64
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v189 <- SpeculativeShiftInt64Op:24(<< [tr], v7 T{int}, v195) [-9223372036854775808, 9223372036854775807] int64
v181 <- LoadField(v28 . PointerBase.data, MayLoadInnerPointer) untagged
v184 <- LoadField(v2 T{__Int64List&_TypedList&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v186 <- LoadThread() untagged
v187 <- LoadUntagged(v186, 1536) untagged
ParallelMove r0 <- r2, r1 <- r3, r2 <- r0, r9 <- r9
LeafRuntimeCall(target_address=v187, v181 T{Object}, v184 T{Object}, v189 T{int}) untagged
ParallelMove  goto:10 B62
B62
B42
ParallelMove r0 <- r20
DartReturn:20(v28)
B35
v88 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v88)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v14 <- LoadField(v2 T{__Uint32ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v189 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v190 <- UnboxInt64([non-speculative], v14 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v196 T{_Smi}, v189 T{int}, v190 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0
ParallelMove fp[-4] <- r2
v194 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0, r0 <- r0
ParallelMove fp[-3] <- r0
v40 <- AllocateTypedData:10(v194 T{int}) T{_Uint32List}
ParallelMove r4 <- r0, r0 <- fp[-4]
ParallelMove fp[-5] <- r4
Branch if RelationalOp(>, v196 T{_Smi}, v7 T{int}) T{bool} goto (20, 17)
B20
B17
Branch if RelationalOp(>, v7 T{int}, v7 T{_Smi}) T{bool} goto (21, 22)
B21
B18
ParallelMove r1 <- C, r2 <- fp[-3], r3 <- r0
StaticCall:56( checkValidRange<0> v196 T{_Smi}, v194 T{int}, v7 T{_Smi}) int64
ParallelMove  goto:62 B27
B22
B27
Branch if RelationalOp(<, v190 T{_Smi}, v7 T{int}) T{bool} goto (28, 29)
B29
Branch if EqualityCompare(v7 T{int} == v196 T{_Smi}) T{bool} goto (30, 31)
B30
ParallelMove r20 <- fp[-5] goto:140 B35
B31
ParallelMove r1 <- fp[-3]
Branch if RelationalOp:10(<, v194 T{int}, v167 T{_Smi}) T{bool} goto (51, 52)
B51
ParallelMove r2 <- fp[-2], r20 <- fp[-5]
v201 <- LoadField(v2 T{__Uint32ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r1
MemoryCopy(v201 T{__Uint32ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin}, v40 T{_Uint32List}, v5 T{_Smi}, v5 T{_Smi}, v194 T{int}, dest_cid=_Int32List (131), src_cid=_Int32List (131) [untagged], element_size=4, can_overlap)
Copying backwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
Copying forwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
ParallelMove  goto:10 B50
B52
ParallelMove r2 <- fp[-2], r20 <- fp[-5]
v162 <- SpeculativeShiftInt64Op:24(<< [tr], v7 T{int}, v168) [-9223372036854775808, 9223372036854775807] int64
v154 <- LoadField(v40 T{_Uint32List} . PointerBase.data, MayLoadInnerPointer) untagged
v157 <- LoadField(v2 T{__Uint32ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v159 <- LoadThread() untagged
v160 <- LoadUntagged(v159, 1536) untagged
ParallelMove r0 <- r0, r1 <- r3, r2 <- r1, r9 <- r9
LeafRuntimeCall(target_address=v160, v154 T{Object}, v157 T{Object}, v162 T{int}) untagged
ParallelMove  goto:10 B50
B50
B35
ParallelMove r0 <- r20
DartReturn:20(v40 T{_Uint32List})
B28
v70 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v70)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v33 <- LoadField(v2 T{__Uint32List&_TypedList&_IntListMixin&_TypedIntListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v224 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v225 <- UnboxInt64([non-speculative], v33 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v235 T{_Smi}, v224 T{int}, v225 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0, r2 <- fp[-2]
ParallelMove fp[-3] <- r3
v26 <- LoadClassId(v2) [135, 137] int64
Branch if EqualityCompare:16(v26 == v27) goto (3, 8)
B3
v230 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v52 <- AllocateTypedData:10(v230 T{int}) T{_Uint32List}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B8
ParallelMove r2 <- r3
v229 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v58 <- AllocateTypedData:10(v229 T{int}) T{_Uint32List}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B9
ParallelMove fp[-4] <- r5
Branch if RelationalOp(>, v235 T{_Smi}, v7 T{int}) T{bool} goto (27, 24)
B27
B24
v161 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v231 <- UnboxInt64([non-speculative], v161 T{_Smi}) [0, 4611686018427387903] int64
Branch if RelationalOp(>, v7 T{int}, v231 T{_Smi}) T{bool} goto (28, 29)
B28
B25
v156 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v228 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v232 <- UnboxInt64([non-speculative], v156 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r3
StaticCall:56( checkValidRange<0> v235 T{_Smi}, v228 T{int}, v232 T{_Smi}) int64
ParallelMove  goto:62 B34
B29
B34
Branch if RelationalOp(<, v225 T{_Smi}, v7 T{int}) T{bool} goto (35, 36)
B36
Branch if EqualityCompare(v7 T{int} == v235 T{_Smi}) T{bool} goto (37, 38)
B37
ParallelMove r20 <- fp[-4] goto:140 B42
B38
v227 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
Branch if RelationalOp:10(<, v227 T{int}, v194 T{_Smi}) T{bool} goto (63, 64)
B63
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v245 <- LoadField(v2 T{__Uint32List&_TypedList&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r0
MemoryCopy(v245 T{__Uint32List&_TypedList&_IntListMixin&_TypedIntListMixin}, v28, v5 T{_Smi}, v5 T{_Smi}, v227 T{int}, dest_cid=_Int32List (131), src_cid=_Int32List (131) [untagged], element_size=4, can_overlap)
Copying backwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
Copying forwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
ParallelMove  goto:10 B62
B64
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v189 <- SpeculativeShiftInt64Op:24(<< [tr], v7 T{int}, v195) [-9223372036854775808, 9223372036854775807] int64
v181 <- LoadField(v28 . PointerBase.data, MayLoadInnerPointer) untagged
v184 <- LoadField(v2 T{__Uint32List&_TypedList&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v186 <- LoadThread() untagged
v187 <- LoadUntagged(v186, 1536) untagged
ParallelMove r0 <- r2, r1 <- r3, r2 <- r0, r9 <- r9
LeafRuntimeCall(target_address=v187, v181 T{Object}, v184 T{Object}, v189 T{int}) untagged
ParallelMove  goto:10 B62
B62
B42
ParallelMove r0 <- r20
DartReturn:20(v28)
B35
v88 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v88)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v14 <- LoadField(v2 T{__Int32ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v189 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v190 <- UnboxInt64([non-speculative], v14 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v196 T{_Smi}, v189 T{int}, v190 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0
ParallelMove fp[-4] <- r2
v194 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0, r0 <- r0
ParallelMove fp[-3] <- r0
v40 <- AllocateTypedData:10(v194 T{int}) T{_Int32List}
ParallelMove r4 <- r0, r0 <- fp[-4]
ParallelMove fp[-5] <- r4
Branch if RelationalOp(>, v196 T{_Smi}, v7 T{int}) T{bool} goto (20, 17)
B20
B17
Branch if RelationalOp(>, v7 T{int}, v7 T{_Smi}) T{bool} goto (21, 22)
B21
B18
ParallelMove r1 <- C, r2 <- fp[-3], r3 <- r0
StaticCall:56( checkValidRange<0> v196 T{_Smi}, v194 T{int}, v7 T{_Smi}) int64
ParallelMove  goto:62 B27
B22
B27
Branch if RelationalOp(<, v190 T{_Smi}, v7 T{int}) T{bool} goto (28, 29)
B29
Branch if EqualityCompare(v7 T{int} == v196 T{_Smi}) T{bool} goto (30, 31)
B30
ParallelMove r20 <- fp[-5] goto:140 B35
B31
ParallelMove r1 <- fp[-3]
Branch if RelationalOp:10(<, v194 T{int}, v167 T{_Smi}) T{bool} goto (51, 52)
B51
ParallelMove r2 <- fp[-2], r20 <- fp[-5]
v201 <- LoadField(v2 T{__Int32ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r1
MemoryCopy(v201 T{__Int32ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin}, v40 T{_Int32List}, v5 T{_Smi}, v5 T{_Smi}, v194 T{int}, dest_cid=_Int32List (131), src_cid=_Int32List (131) [untagged], element_size=4, can_overlap)
Copying backwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
Copying forwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
ParallelMove  goto:10 B50
B52
ParallelMove r2 <- fp[-2], r20 <- fp[-5]
v162 <- SpeculativeShiftInt64Op:24(<< [tr], v7 T{int}, v168) [-9223372036854775808, 9223372036854775807] int64
v154 <- LoadField(v40 T{_Int32List} . PointerBase.data, MayLoadInnerPointer) untagged
v157 <- LoadField(v2 T{__Int32ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v159 <- LoadThread() untagged
v160 <- LoadUntagged(v159, 1536) untagged
ParallelMove r0 <- r0, r1 <- r3, r2 <- r1, r9 <- r9
LeafRuntimeCall(target_address=v160, v154 T{Object}, v157 T{Object}, v162 T{int}) untagged
ParallelMove  goto:10 B50
B50
B35
ParallelMove r0 <- r20
DartReturn:20(v40 T{_Int32List})
B28
v70 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v70)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v33 <- LoadField(v2 T{__Int32List&_TypedList&_IntListMixin&_TypedIntListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v224 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v225 <- UnboxInt64([non-speculative], v33 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v235 T{_Smi}, v224 T{int}, v225 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0, r2 <- fp[-2]
ParallelMove fp[-3] <- r3
v26 <- LoadClassId(v2) [131, 133] int64
Branch if EqualityCompare:16(v26 == v27) goto (3, 8)
B3
v230 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v52 <- AllocateTypedData:10(v230 T{int}) T{_Int32List}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B8
ParallelMove r2 <- r3
v229 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v58 <- AllocateTypedData:10(v229 T{int}) T{_Int32List}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B9
ParallelMove fp[-4] <- r5
Branch if RelationalOp(>, v235 T{_Smi}, v7 T{int}) T{bool} goto (27, 24)
B27
B24
v161 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v231 <- UnboxInt64([non-speculative], v161 T{_Smi}) [0, 4611686018427387903] int64
Branch if RelationalOp(>, v7 T{int}, v231 T{_Smi}) T{bool} goto (28, 29)
B28
B25
v156 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v228 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v232 <- UnboxInt64([non-speculative], v156 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r3
StaticCall:56( checkValidRange<0> v235 T{_Smi}, v228 T{int}, v232 T{_Smi}) int64
ParallelMove  goto:62 B34
B29
B34
Branch if RelationalOp(<, v225 T{_Smi}, v7 T{int}) T{bool} goto (35, 36)
B36
Branch if EqualityCompare(v7 T{int} == v235 T{_Smi}) T{bool} goto (37, 38)
B37
ParallelMove r20 <- fp[-4] goto:140 B42
B38
v227 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
Branch if RelationalOp:10(<, v227 T{int}, v194 T{_Smi}) T{bool} goto (63, 64)
B63
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v245 <- LoadField(v2 T{__Int32List&_TypedList&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r0
MemoryCopy(v245 T{__Int32List&_TypedList&_IntListMixin&_TypedIntListMixin}, v28, v5 T{_Smi}, v5 T{_Smi}, v227 T{int}, dest_cid=_Int32List (131), src_cid=_Int32List (131) [untagged], element_size=4, can_overlap)
Copying backwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
Copying forwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
ParallelMove  goto:10 B62
B64
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v189 <- SpeculativeShiftInt64Op:24(<< [tr], v7 T{int}, v195) [-9223372036854775808, 9223372036854775807] int64
v181 <- LoadField(v28 . PointerBase.data, MayLoadInnerPointer) untagged
v184 <- LoadField(v2 T{__Int32List&_TypedList&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v186 <- LoadThread() untagged
v187 <- LoadUntagged(v186, 1536) untagged
ParallelMove r0 <- r2, r1 <- r3, r2 <- r0, r9 <- r9
LeafRuntimeCall(target_address=v187, v181 T{Object}, v184 T{Object}, v189 T{int}) untagged
ParallelMove  goto:10 B62
B62
B42
ParallelMove r0 <- r20
DartReturn:20(v28)
B35
v88 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v88)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v14 <- LoadField(v2 T{__Uint16ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v200 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v201 <- UnboxInt64([non-speculative], v14 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v207 T{_Smi}, v200 T{int}, v201 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0
ParallelMove fp[-4] <- r2
v205 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0, r0 <- r0
ParallelMove fp[-3] <- r0
v39 <- AllocateTypedData:10(v205 T{int}) T{_Uint16List}
ParallelMove r4 <- r0, r0 <- fp[-4]
ParallelMove fp[-5] <- r4
Branch if RelationalOp(>, v207 T{_Smi}, v7 T{int}) T{bool} goto (25, 22)
B25
B22
Branch if RelationalOp(>, v7 T{int}, v7 T{_Smi}) T{bool} goto (26, 27)
B26
B23
ParallelMove r1 <- C, r2 <- fp[-3], r3 <- r0
StaticCall:56( checkValidRange<0> v207 T{_Smi}, v205 T{int}, v7 T{_Smi}) int64
ParallelMove  goto:62 B32
B27
B32
Branch if RelationalOp(<, v201 T{_Smi}, v7 T{int}) T{bool} goto (33, 34)
B34
Branch if EqualityCompare(v7 T{int} == v207 T{_Smi}) T{bool} goto (35, 36)
B35
ParallelMove r20 <- fp[-5] goto:140 B40
B36
ParallelMove r1 <- fp[-3]
Branch if RelationalOp:10(<, v205 T{int}, v178 T{_Smi}) T{bool} goto (56, 57)
B56
ParallelMove r2 <- fp[-2], r20 <- fp[-5]
v212 <- LoadField(v2 T{__Uint16ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r1
MemoryCopy(v212 T{__Uint16ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin}, v39 T{_Uint16List}, v5 T{_Smi}, v5 T{_Smi}, v205 T{int}, dest_cid=_Int16List (123), src_cid=_Int16List (123) [untagged], element_size=2, can_overlap)
Copying backwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
Copying forwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
ParallelMove  goto:10 B55
B57
ParallelMove r2 <- fp[-2], r20 <- fp[-5]
v173 <- SpeculativeShiftInt64Op:24(<< [tr], v7 T{int}, v179) [-9223372036854775808, 9223372036854775807] int64
v165 <- LoadField(v39 T{_Uint16List} . PointerBase.data, MayLoadInnerPointer) untagged
v168 <- LoadField(v2 T{__Uint16ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v170 <- LoadThread() untagged
v171 <- LoadUntagged(v170, 1536) untagged
ParallelMove r0 <- r0, r1 <- r3, r2 <- r1, r9 <- r9
LeafRuntimeCall(target_address=v171, v165 T{Object}, v168 T{Object}, v173 T{int}) untagged
ParallelMove  goto:10 B55
B55
B40
ParallelMove r0 <- r20
DartReturn:20(v39 T{_Uint16List})
B33
v81 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v81)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v33 <- LoadField(v2 T{__Uint16List&_TypedList&_IntListMixin&_TypedIntListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v235 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v236 <- UnboxInt64([non-speculative], v33 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v246 T{_Smi}, v235 T{int}, v236 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0, r2 <- fp[-2]
ParallelMove fp[-3] <- r3
v26 <- LoadClassId(v2) [127, 129] int64
Branch if EqualityCompare:16(v26 == v27) goto (3, 8)
B3
v241 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v51 <- AllocateTypedData:10(v241 T{int}) T{_Uint16List}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B8
ParallelMove r2 <- r3
v240 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v57 <- AllocateTypedData:10(v240 T{int}) T{_Uint16List}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B9
ParallelMove fp[-4] <- r5
Branch if RelationalOp(>, v246 T{_Smi}, v7 T{int}) T{bool} goto (32, 29)
B32
B29
v172 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v242 <- UnboxInt64([non-speculative], v172 T{_Smi}) [0, 4611686018427387903] int64
Branch if RelationalOp(>, v7 T{int}, v242 T{_Smi}) T{bool} goto (33, 34)
B33
B30
v167 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v239 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v243 <- UnboxInt64([non-speculative], v167 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r3
StaticCall:56( checkValidRange<0> v246 T{_Smi}, v239 T{int}, v243 T{_Smi}) int64
ParallelMove  goto:62 B39
B34
B39
Branch if RelationalOp(<, v236 T{_Smi}, v7 T{int}) T{bool} goto (40, 41)
B41
Branch if EqualityCompare(v7 T{int} == v246 T{_Smi}) T{bool} goto (42, 43)
B42
ParallelMove r20 <- fp[-4] goto:140 B47
B43
v238 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
Branch if RelationalOp:10(<, v238 T{int}, v205 T{_Smi}) T{bool} goto (68, 69)
B68
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v256 <- LoadField(v2 T{__Uint16List&_TypedList&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r0
MemoryCopy(v256 T{__Uint16List&_TypedList&_IntListMixin&_TypedIntListMixin}, v28, v5 T{_Smi}, v5 T{_Smi}, v238 T{int}, dest_cid=_Int16List (123), src_cid=_Int16List (123) [untagged], element_size=2, can_overlap)
Copying backwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
Copying forwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
ParallelMove  goto:10 B67
B69
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v200 <- SpeculativeShiftInt64Op:24(<< [tr], v7 T{int}, v206) [-9223372036854775808, 9223372036854775807] int64
v192 <- LoadField(v28 . PointerBase.data, MayLoadInnerPointer) untagged
v195 <- LoadField(v2 T{__Uint16List&_TypedList&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v197 <- LoadThread() untagged
v198 <- LoadUntagged(v197, 1536) untagged
ParallelMove r0 <- r2, r1 <- r3, r2 <- r0, r9 <- r9
LeafRuntimeCall(target_address=v198, v192 T{Object}, v195 T{Object}, v200 T{int}) untagged
ParallelMove  goto:10 B67
B67
B47
ParallelMove r0 <- r20
DartReturn:20(v28)
B40
v99 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v99)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v14 <- LoadField(v2 T{__Int16ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v200 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v201 <- UnboxInt64([non-speculative], v14 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v207 T{_Smi}, v200 T{int}, v201 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0
ParallelMove fp[-4] <- r2
v205 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0, r0 <- r0
ParallelMove fp[-3] <- r0
v39 <- AllocateTypedData:10(v205 T{int}) T{_Int16List}
ParallelMove r4 <- r0, r0 <- fp[-4]
ParallelMove fp[-5] <- r4
Branch if RelationalOp(>, v207 T{_Smi}, v7 T{int}) T{bool} goto (25, 22)
B25
B22
Branch if RelationalOp(>, v7 T{int}, v7 T{_Smi}) T{bool} goto (26, 27)
B26
B23
ParallelMove r1 <- C, r2 <- fp[-3], r3 <- r0
StaticCall:56( checkValidRange<0> v207 T{_Smi}, v205 T{int}, v7 T{_Smi}) int64
ParallelMove  goto:62 B32
B27
B32
Branch if RelationalOp(<, v201 T{_Smi}, v7 T{int}) T{bool} goto (33, 34)
B34
Branch if EqualityCompare(v7 T{int} == v207 T{_Smi}) T{bool} goto (35, 36)
B35
ParallelMove r20 <- fp[-5] goto:140 B40
B36
ParallelMove r1 <- fp[-3]
Branch if RelationalOp:10(<, v205 T{int}, v178 T{_Smi}) T{bool} goto (56, 57)
B56
ParallelMove r2 <- fp[-2], r20 <- fp[-5]
v212 <- LoadField(v2 T{__Int16ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r1
MemoryCopy(v212 T{__Int16ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin}, v39 T{_Int16List}, v5 T{_Smi}, v5 T{_Smi}, v205 T{int}, dest_cid=_Int16List (123), src_cid=_Int16List (123) [untagged], element_size=2, can_overlap)
Copying backwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
Copying forwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
ParallelMove  goto:10 B55
B57
ParallelMove r2 <- fp[-2], r20 <- fp[-5]
v173 <- SpeculativeShiftInt64Op:24(<< [tr], v7 T{int}, v179) [-9223372036854775808, 9223372036854775807] int64
v165 <- LoadField(v39 T{_Int16List} . PointerBase.data, MayLoadInnerPointer) untagged
v168 <- LoadField(v2 T{__Int16ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v170 <- LoadThread() untagged
v171 <- LoadUntagged(v170, 1536) untagged
ParallelMove r0 <- r0, r1 <- r3, r2 <- r1, r9 <- r9
LeafRuntimeCall(target_address=v171, v165 T{Object}, v168 T{Object}, v173 T{int}) untagged
ParallelMove  goto:10 B55
B55
B40
ParallelMove r0 <- r20
DartReturn:20(v39 T{_Int16List})
B33
v81 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v81)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v33 <- LoadField(v2 T{__Int16List&_TypedList&_IntListMixin&_TypedIntListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v235 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v236 <- UnboxInt64([non-speculative], v33 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v246 T{_Smi}, v235 T{int}, v236 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0, r2 <- fp[-2]
ParallelMove fp[-3] <- r3
v26 <- LoadClassId(v2) [123, 125] int64
Branch if EqualityCompare:16(v26 == v27) goto (3, 8)
B3
v241 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v51 <- AllocateTypedData:10(v241 T{int}) T{_Int16List}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B8
ParallelMove r2 <- r3
v240 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v57 <- AllocateTypedData:10(v240 T{int}) T{_Int16List}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B9
ParallelMove fp[-4] <- r5
Branch if RelationalOp(>, v246 T{_Smi}, v7 T{int}) T{bool} goto (32, 29)
B32
B29
v172 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v242 <- UnboxInt64([non-speculative], v172 T{_Smi}) [0, 4611686018427387903] int64
Branch if RelationalOp(>, v7 T{int}, v242 T{_Smi}) T{bool} goto (33, 34)
B33
B30
v167 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v239 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v243 <- UnboxInt64([non-speculative], v167 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r3
StaticCall:56( checkValidRange<0> v246 T{_Smi}, v239 T{int}, v243 T{_Smi}) int64
ParallelMove  goto:62 B39
B34
B39
Branch if RelationalOp(<, v236 T{_Smi}, v7 T{int}) T{bool} goto (40, 41)
B41
Branch if EqualityCompare(v7 T{int} == v246 T{_Smi}) T{bool} goto (42, 43)
B42
ParallelMove r20 <- fp[-4] goto:140 B47
B43
v238 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
Branch if RelationalOp:10(<, v238 T{int}, v205 T{_Smi}) T{bool} goto (68, 69)
B68
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v256 <- LoadField(v2 T{__Int16List&_TypedList&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r0
MemoryCopy(v256 T{__Int16List&_TypedList&_IntListMixin&_TypedIntListMixin}, v28, v5 T{_Smi}, v5 T{_Smi}, v238 T{int}, dest_cid=_Int16List (123), src_cid=_Int16List (123) [untagged], element_size=2, can_overlap)
Copying backwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
Copying forwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
ParallelMove  goto:10 B67
B69
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v200 <- SpeculativeShiftInt64Op:24(<< [tr], v7 T{int}, v206) [-9223372036854775808, 9223372036854775807] int64
v192 <- LoadField(v28 . PointerBase.data, MayLoadInnerPointer) untagged
v195 <- LoadField(v2 T{__Int16List&_TypedList&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v197 <- LoadThread() untagged
v198 <- LoadUntagged(v197, 1536) untagged
ParallelMove r0 <- r2, r1 <- r3, r2 <- r0, r9 <- r9
LeafRuntimeCall(target_address=v198, v192 T{Object}, v195 T{Object}, v200 T{int}) untagged
ParallelMove  goto:10 B67
B67
B47
ParallelMove r0 <- r20
DartReturn:20(v28)
B40
v99 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v99)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v14 <- LoadField(v2 T{__Uint8ClampedArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v193 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v194 <- UnboxInt64([non-speculative], v14 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v200 T{_Smi}, v193 T{int}, v194 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0
ParallelMove fp[-4] <- r2
v198 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0, r0 <- r0
ParallelMove fp[-3] <- r0
v40 <- AllocateTypedData:10(v198 T{int}) T{_Uint8ClampedList}
ParallelMove r4 <- r0, r0 <- fp[-4]
ParallelMove fp[-5] <- r4
Branch if RelationalOp(>, v200 T{_Smi}, v7 T{int}) T{bool} goto (20, 17)
B20
B17
Branch if RelationalOp(>, v7 T{int}, v7 T{_Smi}) T{bool} goto (21, 22)
B21
B18
ParallelMove r1 <- C, r2 <- fp[-3], r3 <- r0
StaticCall:56( checkValidRange<0> v200 T{_Smi}, v198 T{int}, v7 T{_Smi}) int64
ParallelMove  goto:62 B27
B22
B27
Branch if RelationalOp(<, v194 T{_Smi}, v7 T{int}) T{bool} goto (28, 29)
B29
Branch if EqualityCompare(v7 T{int} == v200 T{_Smi}) T{bool} goto (30, 31)
B30
ParallelMove r20 <- fp[-5] goto:140 B35
B31
ParallelMove r0 <- fp[-3]
Branch if RelationalOp:20(<, v198 T{int}, v172 T{_Smi}) T{bool} goto (56, 57)
B56
ParallelMove r1 <- fp[-2], r20 <- fp[-5]
v205 <- LoadField(v2 T{__Uint8ClampedArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r0
MemoryCopy(v205 T{__Uint8ClampedArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin}, v40 T{_Uint8ClampedList}, v5 T{_Smi}, v5 T{_Smi}, v198 T{int}, dest_cid=_Int8List (111), src_cid=_Int8List (111) [untagged], can_overlap)
Copying backwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
Copying forwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
ParallelMove  goto:20 B55
B57
ParallelMove r1 <- fp[-2], r20 <- fp[-5]
v161 <- LoadField(v40 T{_Uint8ClampedList} . PointerBase.data, MayLoadInnerPointer) untagged
v164 <- LoadField(v2 T{__Uint8ClampedArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v166 <- LoadThread() untagged
v167 <- LoadUntagged(v166, 1536) untagged
ParallelMove r0 <- r0, r1 <- r3, r2 <- r2, r9 <- r9
LeafRuntimeCall(target_address=v167, v161 T{Object}, v164 T{Object}, v7 T{int}) untagged
ParallelMove  goto:20 B55
B55
B35
ParallelMove r0 <- r20
DartReturn:20(v40 T{_Uint8ClampedList})
B28
v70 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v70)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v33 <- LoadField(v2 T{__Uint8ClampedList&_TypedList&_IntListMixin&_TypedIntListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v238 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v239 <- UnboxInt64([non-speculative], v33 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v249 T{_Smi}, v238 T{int}, v239 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0, r2 <- fp[-2]
ParallelMove fp[-3] <- r3
v26 <- LoadClassId(v2) [119, 121] int64
Branch if EqualityCompare:16(v26 == v27) goto (3, 8)
B3
v244 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v52 <- AllocateTypedData:10(v244 T{int}) T{_Uint8ClampedList}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B8
ParallelMove r2 <- r3
v243 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v58 <- AllocateTypedData:10(v243 T{int}) T{_Uint8ClampedList}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B9
ParallelMove fp[-4] <- r5
Branch if RelationalOp(>, v249 T{_Smi}, v7 T{int}) T{bool} goto (27, 24)
B27
B24
v163 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v245 <- UnboxInt64([non-speculative], v163 T{_Smi}) [0, 4611686018427387903] int64
Branch if RelationalOp(>, v7 T{int}, v245 T{_Smi}) T{bool} goto (28, 29)
B28
B25
v158 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v242 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v246 <- UnboxInt64([non-speculative], v158 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r3
StaticCall:56( checkValidRange<0> v249 T{_Smi}, v242 T{int}, v246 T{_Smi}) int64
ParallelMove  goto:62 B34
B29
B34
Branch if RelationalOp(<, v239 T{_Smi}, v7 T{int}) T{bool} goto (35, 36)
B36
Branch if EqualityCompare(v7 T{int} == v249 T{_Smi}) T{bool} goto (37, 69)
B37
ParallelMove r20 <- fp[-4] goto:140 B42
B69
v241 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
Branch if RelationalOp:20(<, v241 T{int}, v207 T{_Smi}) T{bool} goto (73, 74)
B73
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v260 <- LoadField(v2 T{__Uint8ClampedList&_TypedList&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r0
MemoryCopy(v260 T{__Uint8ClampedList&_TypedList&_IntListMixin&_TypedIntListMixin}, v28, v5 T{_Smi}, v5 T{_Smi}, v241 T{int}, dest_cid=_Int8List (111), src_cid=_Int8List (111) [untagged], can_overlap)
Copying backwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
Copying forwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
ParallelMove  goto:20 B72
B74
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v196 <- LoadField(v28 . PointerBase.data, MayLoadInnerPointer) untagged
v199 <- LoadField(v2 T{__Uint8ClampedList&_TypedList&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v201 <- LoadThread() untagged
v202 <- LoadUntagged(v201, 1536) untagged
ParallelMove r0 <- r0, r1 <- r3, r2 <- r2, r9 <- r9
LeafRuntimeCall(target_address=v202, v196 T{Object}, v199 T{Object}, v7 T{int}) untagged
ParallelMove  goto:20 B72
B72
B42
ParallelMove r0 <- r20
DartReturn:20(v28)
B35
v88 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v88)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v14 <- LoadField(v2 T{__Uint8ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v186 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v187 <- UnboxInt64([non-speculative], v14 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v193 T{_Smi}, v186 T{int}, v187 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0
ParallelMove fp[-4] <- r2
v191 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0, r0 <- r0
ParallelMove fp[-3] <- r0
v40 <- AllocateTypedData:10(v191 T{int}) T{_Uint8List}
ParallelMove r4 <- r0, r0 <- fp[-4]
ParallelMove fp[-5] <- r4
Branch if RelationalOp(>, v193 T{_Smi}, v7 T{int}) T{bool} goto (20, 17)
B20
B17
Branch if RelationalOp(>, v7 T{int}, v7 T{_Smi}) T{bool} goto (21, 22)
B21
B18
ParallelMove r1 <- C, r2 <- fp[-3], r3 <- r0
StaticCall:56( checkValidRange<0> v193 T{_Smi}, v191 T{int}, v7 T{_Smi}) int64
ParallelMove  goto:62 B27
B22
B27
Branch if RelationalOp(<, v187 T{_Smi}, v7 T{int}) T{bool} goto (28, 29)
B29
Branch if EqualityCompare(v7 T{int} == v193 T{_Smi}) T{bool} goto (30, 31)
B30
ParallelMove r20 <- fp[-5] goto:140 B35
B31
ParallelMove r0 <- fp[-3]
Branch if RelationalOp:10(<, v191 T{int}, v165 T{_Smi}) T{bool} goto (51, 52)
B51
ParallelMove r1 <- fp[-2], r20 <- fp[-5]
v198 <- LoadField(v2 T{__Uint8ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r0
MemoryCopy(v198 T{__Uint8ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin}, v40 T{_Uint8List}, v5 T{_Smi}, v5 T{_Smi}, v191 T{int}, dest_cid=_Int8List (111), src_cid=_Int8List (111) [untagged], can_overlap)
Copying backwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
Copying forwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
ParallelMove  goto:10 B50
B52
ParallelMove r1 <- fp[-2], r20 <- fp[-5]
v154 <- LoadField(v40 T{_Uint8List} . PointerBase.data, MayLoadInnerPointer) untagged
v157 <- LoadField(v2 T{__Uint8ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v159 <- LoadThread() untagged
v160 <- LoadUntagged(v159, 1536) untagged
ParallelMove r0 <- r0, r1 <- r3, r2 <- r2, r9 <- r9
LeafRuntimeCall(target_address=v160, v154 T{Object}, v157 T{Object}, v7 T{int}) untagged
ParallelMove  goto:10 B50
B50
B35
ParallelMove r0 <- r20
DartReturn:20(v40 T{_Uint8List})
B28
v70 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v70)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v33 <- LoadField(v2 T{__Uint8List&_TypedList&_IntListMixin&_TypedIntListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v221 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v222 <- UnboxInt64([non-speculative], v33 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v232 T{_Smi}, v221 T{int}, v222 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0, r2 <- fp[-2]
ParallelMove fp[-3] <- r3
v26 <- LoadClassId(v2) [115, 117] int64
Branch if EqualityCompare:16(v26 == v27) goto (3, 8)
B3
v227 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v52 <- AllocateTypedData:10(v227 T{int}) T{_Uint8List}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B8
ParallelMove r2 <- r3
v226 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v58 <- AllocateTypedData:10(v226 T{int}) T{_Uint8List}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B9
ParallelMove fp[-4] <- r5
Branch if RelationalOp(>, v232 T{_Smi}, v7 T{int}) T{bool} goto (27, 24)
B27
B24
v161 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v228 <- UnboxInt64([non-speculative], v161 T{_Smi}) [0, 4611686018427387903] int64
Branch if RelationalOp(>, v7 T{int}, v228 T{_Smi}) T{bool} goto (28, 29)
B28
B25
v156 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v225 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v229 <- UnboxInt64([non-speculative], v156 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r3
StaticCall:56( checkValidRange<0> v232 T{_Smi}, v225 T{int}, v229 T{_Smi}) int64
ParallelMove  goto:62 B34
B29
B34
Branch if RelationalOp(<, v222 T{_Smi}, v7 T{int}) T{bool} goto (35, 36)
B36
Branch if EqualityCompare(v7 T{int} == v232 T{_Smi}) T{bool} goto (37, 38)
B37
ParallelMove r20 <- fp[-4] goto:140 B42
B38
v224 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
Branch if RelationalOp:10(<, v224 T{int}, v192 T{_Smi}) T{bool} goto (63, 64)
B63
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v242 <- LoadField(v2 T{__Uint8List&_TypedList&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r0
MemoryCopy(v242 T{__Uint8List&_TypedList&_IntListMixin&_TypedIntListMixin}, v28, v5 T{_Smi}, v5 T{_Smi}, v224 T{int}, dest_cid=_Int8List (111), src_cid=_Int8List (111) [untagged], can_overlap)
Copying backwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
Copying forwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
ParallelMove  goto:10 B62
B64
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v181 <- LoadField(v28 . PointerBase.data, MayLoadInnerPointer) untagged
v184 <- LoadField(v2 T{__Uint8List&_TypedList&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v186 <- LoadThread() untagged
v187 <- LoadUntagged(v186, 1536) untagged
ParallelMove r0 <- r0, r1 <- r3, r2 <- r2, r9 <- r9
LeafRuntimeCall(target_address=v187, v181 T{Object}, v184 T{Object}, v7 T{int}) untagged
ParallelMove  goto:10 B62
B62
B42
ParallelMove r0 <- r20
DartReturn:20(v28)
B35
v88 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v88)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v14 <- LoadField(v2 T{__Int8ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v186 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v187 <- UnboxInt64([non-speculative], v14 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v193 T{_Smi}, v186 T{int}, v187 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0
ParallelMove fp[-4] <- r2
v191 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0, r0 <- r0
ParallelMove fp[-3] <- r0
v40 <- AllocateTypedData:10(v191 T{int}) T{_Int8List}
ParallelMove r4 <- r0, r0 <- fp[-4]
ParallelMove fp[-5] <- r4
Branch if RelationalOp(>, v193 T{_Smi}, v7 T{int}) T{bool} goto (20, 17)
B20
B17
Branch if RelationalOp(>, v7 T{int}, v7 T{_Smi}) T{bool} goto (21, 22)
B21
B18
ParallelMove r1 <- C, r2 <- fp[-3], r3 <- r0
StaticCall:56( checkValidRange<0> v193 T{_Smi}, v191 T{int}, v7 T{_Smi}) int64
ParallelMove  goto:62 B27
B22
B27
Branch if RelationalOp(<, v187 T{_Smi}, v7 T{int}) T{bool} goto (28, 29)
B29
Branch if EqualityCompare(v7 T{int} == v193 T{_Smi}) T{bool} goto (30, 31)
B30
ParallelMove r20 <- fp[-5] goto:140 B35
B31
ParallelMove r0 <- fp[-3]
Branch if RelationalOp:10(<, v191 T{int}, v165 T{_Smi}) T{bool} goto (51, 52)
B51
ParallelMove r1 <- fp[-2], r20 <- fp[-5]
v198 <- LoadField(v2 T{__Int8ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r0
MemoryCopy(v198 T{__Int8ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin}, v40 T{_Int8List}, v5 T{_Smi}, v5 T{_Smi}, v191 T{int}, dest_cid=_Int8List (111), src_cid=_Int8List (111) [untagged], can_overlap)
Copying backwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
Copying forwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
ParallelMove  goto:10 B50
B52
ParallelMove r1 <- fp[-2], r20 <- fp[-5]
v154 <- LoadField(v40 T{_Int8List} . PointerBase.data, MayLoadInnerPointer) untagged
v157 <- LoadField(v2 T{__Int8ArrayView&_TypedListView&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v159 <- LoadThread() untagged
v160 <- LoadUntagged(v159, 1536) untagged
ParallelMove r0 <- r0, r1 <- r3, r2 <- r2, r9 <- r9
LeafRuntimeCall(target_address=v160, v154 T{Object}, v157 T{Object}, v7 T{int}) untagged
ParallelMove  goto:10 B50
B50
B35
ParallelMove r0 <- r20
DartReturn:20(v40 T{_Int8List})
B28
v70 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v70)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v33 <- LoadField(v2 T{__Int8List&_TypedList&_IntListMixin&_TypedIntListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v221 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v222 <- UnboxInt64([non-speculative], v33 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v232 T{_Smi}, v221 T{int}, v222 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0, r2 <- fp[-2]
ParallelMove fp[-3] <- r3
v26 <- LoadClassId(v2) [111, 113] int64
Branch if EqualityCompare:16(v26 == v27) goto (3, 8)
B3
v227 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v52 <- AllocateTypedData:10(v227 T{int}) T{_Int8List}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B8
ParallelMove r2 <- r3
v226 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v58 <- AllocateTypedData:10(v226 T{int}) T{_Int8List}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:12 B9
B9
ParallelMove fp[-4] <- r5
Branch if RelationalOp(>, v232 T{_Smi}, v7 T{int}) T{bool} goto (27, 24)
B27
B24
v161 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v228 <- UnboxInt64([non-speculative], v161 T{_Smi}) [0, 4611686018427387903] int64
Branch if RelationalOp(>, v7 T{int}, v228 T{_Smi}) T{bool} goto (28, 29)
B28
B25
v156 <- LoadField(v28 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v225 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v229 <- UnboxInt64([non-speculative], v156 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r3
StaticCall:56( checkValidRange<0> v232 T{_Smi}, v225 T{int}, v229 T{_Smi}) int64
ParallelMove  goto:62 B34
B29
B34
Branch if RelationalOp(<, v222 T{_Smi}, v7 T{int}) T{bool} goto (35, 36)
B36
Branch if EqualityCompare(v7 T{int} == v232 T{_Smi}) T{bool} goto (37, 38)
B37
ParallelMove r20 <- fp[-4] goto:140 B42
B38
v224 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
Branch if RelationalOp:10(<, v224 T{int}, v192 T{_Smi}) T{bool} goto (63, 64)
B63
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v242 <- LoadField(v2 T{__Int8List&_TypedList&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r3 <- r0
MemoryCopy(v242 T{__Int8List&_TypedList&_IntListMixin&_TypedIntListMixin}, v28, v5 T{_Smi}, v5 T{_Smi}, v224 T{int}, dest_cid=_Int8List (111), src_cid=_Int8List (111) [untagged], can_overlap)
Copying backwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
Copying forwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
ParallelMove  goto:10 B62
B64
ParallelMove r1 <- fp[-2], r20 <- fp[-4]
v181 <- LoadField(v28 . PointerBase.data, MayLoadInnerPointer) untagged
v184 <- LoadField(v2 T{__Int8List&_TypedList&_IntListMixin&_TypedIntListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v186 <- LoadThread() untagged
v187 <- LoadUntagged(v186, 1536) untagged
ParallelMove r0 <- r0, r1 <- r3, r2 <- r2, r9 <- r9
LeafRuntimeCall(target_address=v187, v181 T{Object}, v184 T{Object}, v7 T{int}) untagged
ParallelMove  goto:10 B62
B62
B42
ParallelMove r0 <- r20
DartReturn:20(v28)
B35
v88 <- StaticCall:124( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:126(v88)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v46 <- LoadField(v2 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v60 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v61 <- UnboxInt64([non-speculative], v46 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r3
v7 <- StaticCall:12( checkValidRange<0> v67 T{_Smi}, v60 T{int}, v61 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0
ParallelMove fp[-3] <- r3
Branch if EqualityCompare(v7 T{int} == v67 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r4 <- fp[-1]
v20 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r1 <- r1, r2 <- C
v21 <- StaticCall:26( _GrowableList@0150898.<0> v20, v67 T{_Smi}, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r0 <- r0
DartReturn:28(v21)
B4
ParallelMove r4 <- fp[-1]
v62 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- C, r2 <- r0, r0 <- r0
ParallelMove fp[-2] <- r0
v41 <- CreateArray:10(v0 T{Null?}, v62 T{int}, <not-aliased>) T{_List}
ParallelMove r3 <- r0, r2 <- fp[-1]
ParallelMove fp[-4] <- r3
v22 <- LoadField:56(v2 . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v64 <- UnboxInt64:56([non-speculative], v22) [0, 576460752303423487] int64
v24 <- LoadField:56(v2 . GrowableObjectArray.data) T{_List}
ParallelMove r7 <- C, r6 <- fp[-3] goto:56 B7
B7
  Loop 0
  Loop Header
CheckStackOverflow:60(stack=0, loop=1)
Branch if RelationalOp(<, v12, v7 T{int}) T{bool} goto (5, 6)
B5
  Loop 0
ParallelMove r0 <- r4, r1 <- r7
GenericCheckBound:50(v64 T{_Smi}, v12 T{int}) [-9223372036854775808, 9223372036854775807] int64
v68 <- LoadIndexed:50([_List] v24, v12 T{int}) T{X0?}
ParallelMove r1 <- r3, r0 <- r0
StoreIndexed:52([_List] v41 T{_List}, v12 T{int}, v68 T{X0?})
v19 <- BinaryInt64Op(+ [tr], v12 T{int}, v69 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r7 <- r0 goto:58 B7
B6
ParallelMove r0 <- fp[-2]
v14 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r1 <- r1
v34 <- AllocateObject:10(cls=_GrowableList, v14 T{TypeArguments}, <not-aliased>) T{_GrowableList}
ParallelMove r0 <- r0, r1 <- fp[-4]
StoreField(v34 . GrowableObjectArray.data = v41 T{_List}, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreField(v34 T{_GrowableList} . GrowableObjectArray.length = v62 T{int}, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:66(v34 T{_GrowableList})
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove r5 <- r1, r4 <- r3, fp[-1] <- r1, fp[-2] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v29 <- LoadClassId(v2) [89, 549] int64
Branch if TestRange:10(v29 in [89-90]) goto (3, 10)
B3
v14 <- LoadField(v2 T{_Array<X0>} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v41 <- UnboxInt64([non-speculative], v14) [0, 576460752303423487] int64
ParallelMove r3 <- r1 goto:10 B12
B10
Branch if EqualityCompare:10(v29 == v30) goto (5, 11)
B5
v20 <- LoadField(v2 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v42 <- UnboxInt64([non-speculative], v20) [0, 576460752303423487] int64
ParallelMove r3 <- r1 goto:10 B12
B11
v26 <- LoadField(v2 T{CodeUnits} . _string@9040228 {final}) T{String}
v36 <- LoadField(v26 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v43 <- UnboxInt64([non-speculative], v36 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove r3 <- r0 goto:14 B12
B12
v40 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- C, r2 <- r0, r3 <- r3
StaticCall:12( checkValidRange<0> v44 T{_Smi}, v40 T{int}, v31 T{_Smi}) int64
ParallelMove r1 <- fp[-1]
v7 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r1 <- r1, r2 <- fp[-2], fp[-3] <- r0
v8 <- StaticCall:14( getRange<0> v2, v4, using unchecked entrypoint, result_type = T{SubListIterable}) T{SubListIterable}
ParallelMove r1 <- fp[-3], r2 <- r0
v9 <- StaticCall:16( List.from<0> v7, v8, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r0 <- r0
DartReturn:18(v9)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r5 <- r1, r3 <- r2, fp[-2] <- r1, fp[-3] <- r2
v6 <- LoadField(v4 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v13 <- LoadIndexed([_List] v4, v11 T{_Smi}) T{*?}
Branch if StrictCompare:16(===, v13, v14) goto (2, 3)
B2
v29 <- LoadIndexed([_List] v4, v27 T{_Smi}) T{*?}
v30 <- BinarySmiOp:10(- [tr], v6, v29) [-4611686018427387903, 4611686018427387903] T{_Smi}
v31 <- LoadIndexedUnsafe(fp[v30 + 8]) T{bool}
ParallelMove r4 <- r0 goto:26 B5
B3
ParallelMove r4 <- C goto:28 B5
B5
ParallelMove fp[-1] <- r4
CheckStackOverflow:34(stack=0, loop=0)
ParallelMove r0 <- r3, r2 <- r5, r1 <- C
v18 <- InstanceOf:36(v3 IS Iterable<X0>, instantiator_type_args(v2), function_type_args(v0)) T{bool}
InlineInstanceof
UninstantiatedTypeTest
BoolTest
ParallelMove r0 <- r0
Branch if StrictCompare:40(===, v18 T{bool}, v15) goto (6, 7)
BoolTest
B6
ParallelMove r0 <- fp[-1]
Branch if StrictCompare:12(===, v16 T{bool}, v15 T{bool}) goto (36, 37)
BoolTest
B36
ParallelMove r1 <- fp[-2], r2 <- fp[-3]
v111 <- StaticCall:18( _GrowableList@0150898.of<0> v2 T{*?}, v3 T{Iterable<X0>}, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:26 B38
B37
ParallelMove r1 <- fp[-2], r2 <- fp[-3]
v109 <- StaticCall:22( _List@0150898.of<0> v2 T{*?}, v3 T{Iterable<X0>}, result_type = T{_List}) T{_List}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:28 B38
B38
ParallelMove r0 <- r0
DartReturn:48(v110 T{List<X0>})
B7
ParallelMove r3 <- fp[-3], r0 <- fp[-1]
ParallelMove r1 <- fp[-2], r2 <- C
v19 <- StaticCall:52( _GrowableList@0150898.<0> v2, v196 T{_Smi}, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r2 <- r0, r1 <- fp[-3]
ParallelMove fp[-4] <- r2
v226 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r1
v20 <- DispatchTableCall( cid=v226 Iterable.iterator<0>, v3) T{*?}
ParallelMove r1 <- r0
ParallelMove fp[-7] <- r1
v74 <- LoadField:76(v20 T{ListIterator} . _iterable@9040228 {final}) T{Iterable<X0>}
ParallelMove fp[-6] <- r2
v76 <- LoadField:76(v20 T{ListIterator} . _length@9040228 {final}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-5] <- r3
v42 <- LoadField:76(v20 T{ListIterator} . :type_arguments {final}) T{TypeArguments}
ParallelMove fp[-3] <- r4
ParallelMove r5 <- fp[-4] goto:76 B10
B10
  Loop 0
  Loop Header
CheckStackOverflow:80(stack=0, loop=1)
v227 <- LoadClassId(<non-smi> v74) int64
MoveArgument(sp[0] <- v74)
ParallelMove r0 <- r0
v75 <- DispatchTableCall( cid=v227 Iterable.length<0>, v74) T{int}
ParallelMove r0 <- r0
v186 <- UnboxInt64([non-speculative], v75 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[-5]
Branch if EqualityCompare(v76 != v186 T{int}) T{bool} goto (29, 30)
B30
  Loop 0
ParallelMove r4 <- fp[-7]
v79 <- LoadField(v20 T{ListIterator} . _index@9040228) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>=, v79, v186 T{int}) T{bool} goto (9, 8)
B8
  Loop 0
ParallelMove r5 <- fp[-6]
v228 <- LoadClassId(<non-smi> v74 T{Iterable<X0>}) int64
ParallelMove r0 <- r0, r1 <- r5, r2 <- r2
v83 <- DispatchTableCall( cid=v228 Iterable.elementAt<0>, v74 T{Iterable<X0>}, v79 T{int}) T{*?}
ParallelMove r0 <- r0, r4 <- r0, r3 <- fp[-7]
ParallelMove fp[-8] <- r4
StoreField(v20 T{ListIterator} . _current@9040228 = v83 T{X0?})
v84 <- LoadField(v20 T{ListIterator} . _index@9040228) [-9223372036854775808, 9223372036854775807] int64
v86 <- BinaryInt64Op(+ [tr], v84, v197 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v20 T{ListIterator} . _index@9040228 = v86 T{int} <int64>)
Branch if StrictCompare:12(===, v83 T{X0?}, v0 T{Null?}) goto (15, 16)
B15
  Loop 0
ParallelMove r0 <- r4, r2 <- fp[-3], r1 <- C
t0 <- AssertAssignable:18(v83 T{X0?}, v24 T{_TypeParameter}, ' in type cast', instantiator_type_args(v42), function_type_args(v0 T{Null?})) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove  goto:24 B17
B16
B17
  Loop 0
ParallelMove r0 <- fp[-8], r2 <- fp[-2], r1 <- C
t0 <- AssertAssignable:70(v83 T{X0?}, v24, '', instantiator_type_args(v2), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-4]
v120 <- LoadField(v19 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v125 <- LoadField(v19 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v126 <- LoadField(v125 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v189 <- UnboxInt64([non-speculative], v120 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-9] <- r2
v190 <- UnboxInt64([non-speculative], v126 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v189 T{_Smi} == v190 T{_Smi}) T{bool} goto (20, 21)
B20
  Loop 0
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v19 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B22
B21
B22
  Loop 0
v62 <- BinaryInt64Op(+ [tr], v189 T{_Smi}, v197 T{_Smi}) [1, 576460752303423488] int64
v191 <- BoxInt64(v62) [1, 576460752303423488] T{_Smi}
StoreField(v19 T{_GrowableList} . GrowableObjectArray.length = v191, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v62 T{_Smi}, v189 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v65 <- LoadField(v19 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-8]
StoreIndexed:40([_List] v65, v189 T{_Smi}, v83 T{X0?})
ParallelMove r5 <- r2, r1 <- fp[-7], r4 <- fp[-3], r2 <- fp[-6], r3 <- fp[-5] goto:78 B10
B9
ParallelMove r1 <- fp[-1], r2 <- fp[-4], r0 <- r4
StoreField(v20 T{ListIterator} . _current@9040228 = v0 T{Null?})
Branch if StrictCompare:84(===, v16 T{bool}, v15) goto (11, 12)
BoolTest
B11
ParallelMove r0 <- r2
DartReturn:90(v19)
B12
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v19)
v22 <- StaticCall:94( makeListFixedLength<1> v2, v19, result_type = T{_List}) T{_List}
ParallelMove r0 <- r0
DartReturn:96(v22)
B29
ParallelMove r0 <- fp[-6]
v88 <- AllocateObject:26(cls=ConcurrentModificationError, <not-aliased>) T{ConcurrentModificationError}
ParallelMove r1 <- r0, r0 <- fp[-6]
StoreField(v88 T{ConcurrentModificationError} . modifiedObject = v74 T{Iterable<X0>}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:32(v88)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove r3 <- r1, r0 <- r2, fp[-2] <- r2, fp[-3] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v14 <- LoadClassId(v3) [87, 549] int64
Branch if EqualityCompare(v14 == v15) T{bool} goto (3, 4)
B3
v53 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
ParallelMove r1 <- r3, r2 <- r4, fp[-1] <- r4
v60 <- CreateArray:10(v2 T{*?}, v53 T{_Smi}, <not-aliased>) T{_List}
ParallelMove r2 <- r0, r0 <- fp[-1]
v80 <- UnboxInt64([non-speculative], v53 T{_Smi}) [0, 576460752303423487] int64
Branch if RelationalOp(>, v80 T{_Smi}, v86 T{_Smi}) T{bool} goto (9, 13)
B9
ParallelMove r4 <- fp[-2]
v35 <- LoadField:44(v3 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r4 <- C goto:44 B12
B12
  Loop 0
  Loop Header
CheckStackOverflow:48(stack=0, loop=1)
Branch if RelationalOp(<, v28, v80 T{_Smi}) T{bool} goto (10, 11)
B10
  Loop 0
v87 <- LoadIndexed:38([_List] v35, v28 T{int}) T{X0?}
ParallelMove r1 <- r2, r0 <- r0
StoreIndexed:40([_List] v60 T{_List}, v28 T{int}, v87 T{X0?})
v32 <- BinaryInt64Op(+ [tr], v28 T{int}, v88 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- r0 goto:46 B12
B11
B13
B14
ParallelMove r0 <- r2
DartReturn:22(v60 T{_List})
B4
ParallelMove r4 <- r0
ParallelMove r0 <- r4, r2 <- C, r1 <- C
v8 <- InstanceOf:26(v3 IS EfficientLengthIterable<dynamic>, instantiator_type_args(v0), function_type_args(v0)) T{bool}
InlineInstanceof
InstantiatedTypeWithArgumentsTest
Subtype1TestCacheLookup
BoolTest
ParallelMove r0 <- r0
Branch if StrictCompare:30(===, v8 T{bool}, v6) goto (5, 6)
BoolTest
B5
ParallelMove r1 <- fp[-3], r2 <- fp[-2]
v10 <- StaticCall:36( _List@0150898._ofEfficientLengthIterable@0150898<0> v2, v3, result_type = T{_List}) T{_List}
ParallelMove r0 <- r0
DartReturn:38(v10)
B6
ParallelMove r1 <- fp[-3], r2 <- fp[-2]
v9 <- StaticCall:42( _List@0150898._ofOther@0150898<0> v2, v3, result_type = T{_List}) T{_List}
ParallelMove r0 <- r0
DartReturn:44(v9)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r0, r2 <- r2
v4 <- StaticCall:10( _GrowableList@0150898._ofOther@0150898<0> v2, v3, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r0 <- r0
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v4)
v5 <- StaticCall:12( makeListFixedLength<1> v2, v4, result_type = T{_List}) T{_List}
ParallelMove r0 <- r0
DartReturn:14(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r2 <- r1, r1 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v153 <- LoadClassId(<non-smi> v3) int64
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r0
v4 <- DispatchTableCall( cid=v153 EfficientLengthIterable.length<0>, v3) T{int}
ParallelMove r1 <- fp[-1], r2 <- r0, r0 <- r0
ParallelMove fp[-3] <- r0
v79 <- CreateArray:10(v2 T{*?}, v4 T{_Smi}, <not-aliased>) T{_List}
ParallelMove r2 <- r0, r0 <- fp[-3]
ParallelMove fp[-5] <- r2
v135 <- UnboxInt64([non-speculative], v4 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove fp[-4] <- r3
Branch if RelationalOp(>, v135 T{_Smi}, v141 T{_Smi}) T{bool} goto (3, 9)
B3
ParallelMove r4 <- fp[-2]
v154 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r4
v11 <- DispatchTableCall( cid=v154 Iterable.iterator<0>, v3) T{*?}
ParallelMove r1 <- r0
ParallelMove fp[-9] <- r1
v47 <- LoadField:46(v11 T{ListIterator} . _iterable@9040228 {final}) T{Iterable<X0>}
ParallelMove fp[-8] <- r2
v49 <- LoadField:46(v11 T{ListIterator} . _length@9040228 {final}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-7] <- r3
v37 <- LoadField:46(v11 T{ListIterator} . :type_arguments {final}) T{TypeArguments}
ParallelMove fp[-3] <- r4
ParallelMove r5 <- C goto:46 B6
B6
  Loop 0
  Loop Header
ParallelMove fp[-6] <- r5
CheckStackOverflow:50(stack=0, loop=1)
v155 <- LoadClassId(<non-smi> v47) int64
MoveArgument(sp[0] <- v47)
ParallelMove r0 <- r0
v48 <- DispatchTableCall( cid=v155 Iterable.length<0>, v47) T{int}
ParallelMove r0 <- r0
v137 <- UnboxInt64([non-speculative], v48 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[-7]
Branch if EqualityCompare(v49 != v137 T{int}) T{bool} goto (21, 22)
B22
  Loop 0
ParallelMove r4 <- fp[-9]
v52 <- LoadField(v11 T{ListIterator} . _index@9040228) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>=, v52, v137 T{int}) T{bool} goto (5, 4)
B4
  Loop 0
ParallelMove r5 <- fp[-8]
v156 <- LoadClassId(<non-smi> v47 T{Iterable<X0>}) int64
ParallelMove r0 <- r0, r1 <- r5, r2 <- r2
v56 <- DispatchTableCall( cid=v156 Iterable.elementAt<0>, v47 T{Iterable<X0>}, v52 T{int}) T{*?}
ParallelMove r0 <- r0, r4 <- r0, r3 <- fp[-9]
ParallelMove fp[-10] <- r4
StoreField(v11 T{ListIterator} . _current@9040228 = v56 T{X0?})
v57 <- LoadField(v11 T{ListIterator} . _index@9040228) [-9223372036854775808, 9223372036854775807] int64
v59 <- BinaryInt64Op(+ [tr], v57, v142 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v11 T{ListIterator} . _index@9040228 = v59 T{int} <int64>)
Branch if StrictCompare:12(===, v56 T{X0?}, v0 T{Null?}) goto (16, 17)
B16
  Loop 0
ParallelMove r0 <- r4, r2 <- fp[-3], r1 <- C
t0 <- AssertAssignable:18(v56 T{X0?}, v20 T{_TypeParameter}, ' in type cast', instantiator_type_args(v37), function_type_args(v0 T{Null?})) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove  goto:24 B18
B17
B18
  Loop 0
v18 <- BinaryInt64Op(+ [tr], v12, v142 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-10], r2 <- fp[-1], r1 <- C, fp[-11] <- r5
AssertAssignable:42(v56 T{X0?}, v20, 'value', instantiator_type_args(v2 T{TypeArguments?}), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-4], r1 <- fp[-6]
GenericCheckBound:42(v135 T{_Smi}, v12) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-5], r0 <- fp[-10], r2 <- fp[-6]
StoreIndexed:42([_List] v79 T{_List}, v12 T{int}, v56 T{X0?})
ParallelMove r5 <- fp[-11], r1 <- fp[-9], r4 <- fp[-3], r2 <- fp[-8], r3 <- fp[-7] goto:48 B6
B5
ParallelMove r0 <- r4, r2 <- fp[-6], r1 <- fp[-4]
StoreField(v11 T{ListIterator} . _current@9040228 = v0 T{Null?})
Branch if EqualityCompare(v12 != v135 T{_Smi}) T{bool} goto (7, 8)
B8
B9
B10
ParallelMove r0 <- fp[-5]
DartReturn:78(v79 T{_List})
B7
ParallelMove r0 <- fp[-2]
v15 <- AllocateObject:62(cls=ConcurrentModificationError, <not-aliased>) T{ConcurrentModificationError}
ParallelMove r1 <- r0, r0 <- fp[-2]
StoreField(v15 T{ConcurrentModificationError} . modifiedObject = v3 T{EfficientLengthIterable<X0>}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:66(v15)
B21
ParallelMove r0 <- fp[-8]
v61 <- AllocateObject:26(cls=ConcurrentModificationError, <not-aliased>) T{ConcurrentModificationError}
ParallelMove r1 <- r0, r0 <- fp[-8]
StoreField(v61 T{ConcurrentModificationError} . modifiedObject = v47 T{Iterable<X0>}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:32(v61)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v27 <- LoadClassId(v2) [89, 549] int64
Branch if TestRange:10(v27 in [89-90]) goto (3, 10)
B3
v12 <- LoadField(v2 T{_Array<X0>} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v41 <- UnboxInt64([non-speculative], v12) [0, 576460752303423487] int64
ParallelMove r3 <- r1 goto:10 B12
B10
Branch if EqualityCompare:10(v27 == v28) goto (5, 11)
B5
v18 <- LoadField(v2 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v42 <- UnboxInt64([non-speculative], v18) [0, 576460752303423487] int64
ParallelMove r3 <- r1 goto:10 B12
B11
v24 <- LoadField(v2 T{CodeUnits} . _string@9040228 {final}) T{String}
v34 <- LoadField(v24 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v43 <- UnboxInt64([non-speculative], v34 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove r3 <- r0 goto:14 B12
B12
v40 <- BoxInt64(v3) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- C, r2 <- r0, r3 <- r3, r0 <- r0
ParallelMove fp[-1] <- r0
StaticCall:12( checkValidRange<0> v44 T{_Smi}, v40 T{int}, v29 T{_Smi}) int64
ParallelMove r2 <- fp[-2]
v6 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r1 <- r1
v7 <- AllocateObject:14(cls=SubListIterable, v6) T{SubListIterable}
ParallelMove r1 <- r0, r2 <- fp[-2], r3 <- C, r5 <- fp[-1], r0 <- r0
ParallelMove fp[-1] <- r0
StaticCall:16( SubListIterable.<0> v7, v2, v44 T{_Smi}, v40 T{int})
ParallelMove r0 <- fp[-1]
DartReturn:18(v7)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v66 <- LoadField(v2 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v96 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v97 <- UnboxInt64([non-speculative], v66 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r1 <- C, r2 <- r0, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v108 T{_Smi}, v96 T{int}, v97 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0
ParallelMove fp[-4] <- r3
Branch if EqualityCompare(v7 T{int} == v108 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r4 <- fp[-2]
v14 <- LoadField(v2 . Array.type_arguments {final}) T{TypeArguments?}
ParallelMove r1 <- r1, r2 <- C
v15 <- StaticCall:26( _GrowableList@0150898.<0> v14, v108 T{_Smi}, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r0 <- r0
DartReturn:28(v15)
B4
ParallelMove r4 <- fp[-2]
v11 <- LoadField(v2 . Array.type_arguments {final}) T{TypeArguments?}
ParallelMove fp[-3] <- r5
Branch if RelationalOp(<=, v7 T{int}, v109 T{_Smi}) T{bool} goto (11, 15)
B11
v98 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- C, r2 <- r0
v77 <- CreateArray:10(v0 T{Null?}, v98 T{int}) T{_List}
ParallelMove r2 <- r0
ParallelMove r5 <- C, r4 <- fp[-2], r3 <- fp[-4] goto:64 B14
B14
  Loop 0
  Loop Header
CheckStackOverflow:68(stack=0, loop=1)
Branch if RelationalOp(<, v29, v7 T{_Smi}) T{bool} goto (12, 13)
B12
  Loop 0
ParallelMove r0 <- fp[-1], r1 <- r5
GenericCheckBound:58(v97 T{_Smi}, v29 T{int}) [-9223372036854775808, 9223372036854775807] int64
v110 <- LoadIndexed:58([_List] v2 T{_List}, v29 T{int}) T{X0?}
ParallelMove r1 <- r2, r0 <- r0
StoreIndexed:60([_List] v77 T{_List}, v29 T{int}, v110 T{X0?})
v35 <- BinaryInt64Op(+ [tr], v29 T{int}, v111 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:66 B14
B13
ParallelMove r2 <- r2, r0 <- r3 goto:70 B18
B15
v99 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[3] <- v2 T{_List})
MoveArgument(sp[2] <- v5 T{_Smi})
MoveArgument(sp[1] <- v99 T{int})
MoveArgument(sp[0] <- v51 T{bool})
v27 <- StaticCall:74( _sliceInternal@0150898<0> v2 T{_List}, v5 T{_Smi}, v99 T{int}, v51 T{bool}, using unchecked entrypoint, result_type = T{_List}) T{_List}
ParallelMove r0 <- r0
ParallelMove r2 <- r0, r0 <- fp[-4] goto:76 B18
B18
ParallelMove r1 <- fp[-3], fp[-2] <- r2
v60 <- AllocateObject:10(cls=_GrowableList, v11 T{*?}, <not-aliased>) T{_GrowableList}
ParallelMove r3 <- r0, r2 <- fp[-2]
StoreField(v60 . GrowableObjectArray.data = v53 T{_List}, NoStoreBarrier)
ParallelMove r2 <- fp[-4]
v100 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v60 T{_GrowableList} . GrowableObjectArray.length = v100 T{int}, NoStoreBarrier)
ParallelMove r0 <- r3
DartReturn:38(v60 T{_GrowableList})
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
ParallelMove r0 <- C
DartReturn:10(v3)
B0
B1
ParallelMove r1 <- C
v9 <- HashIntegerOp(smi v3 T{_Smi}) [-4611686018427387904, 4611686018427387903] T{_Smi}
ParallelMove r0 <- r0
DartReturn:14(v9)
B0
B1
Enter frame
ParallelMove r1 <- fp[2]
v3 <- LoadField:4(v2 . hashCode, CallsInitializer) [-4611686018427387904, 4611686018427387903] T{_Smi}
ParallelMove r0 <- r0
DartReturn:6(v3)
B0
B1
Enter frame
CheckStackOverflow:4(stack=0, loop=0)
ParallelMove r1 <- fp[2]
v9 <- LoadField:4(v2 T{_Uri} . _text@0150898, CallsInitializer) T{String}
ParallelMove r0 <- r0
v10 <- LoadClassId(<non-smi> v9 T{String}) int64
MoveArgument(sp[0] <- v9 T{String})
ParallelMove r0 <- r1
v4 <- DispatchTableCall( cid=v10 String.hashCode<0>, v9 T{String}) T{int}
ParallelMove r0 <- r0
DartReturn:10(v4 T{_Smi})
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:4(stack=0, loop=0)
ParallelMove r1 <- fp[2]
v3 <- StaticCall:6( _initializeText@0150898<0> v2, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:8(v3)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- AllocateObject:10(cls=StringBuffer) T{StringBuffer}
ParallelMove r1 <- r0, r0 <- r0
ParallelMove fp[-2] <- r0
StaticCall:12( StringBuffer.<0> v3)
ParallelMove r0 <- fp[-1]
v4 <- LoadField(v2 . scheme {final}) T{String}
ParallelMove fp[-3] <- r3
v53 <- LoadField(v4 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(!==, v53, v56 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r1 <- fp[-2], r2 <- r3
StaticCall:28( write<0> v3, v4 T{String}, using unchecked entrypoint)
ParallelMove r1 <- fp[-2], r2 <- C
StaticCall:30( write<0> v3, v29, using unchecked entrypoint)
ParallelMove  goto:36 B5
B4
B5
v40 <- LoadField(v2 T{_Uri} . _host@0150898 {final}) T{String??}
Branch if StrictCompare:12(!==, v40, v0 T{Null?}) T{bool} goto (8, 6)
B8
B6
ParallelMove r0 <- fp[-3]
v106 <- LoadClassId(<non-smi> v4 T{String}) int64
MoveArgument(sp[1] <- v4 T{String})
MoveArgument(sp[0] <- v9)
ParallelMove r0 <- r2
v10 <- DispatchTableCall( cid=v106 String.==<0>, v4 T{String}, v9) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:54(===, v10 T{bool}, v6) goto (9, 10)
BoolTest
B9
B7
ParallelMove r1 <- fp[-2], r2 <- C
StaticCall:70( write<0> v3, v27, using unchecked entrypoint)
ParallelMove r1 <- fp[-1], r2 <- fp[-2]
StaticCall:72( _writeAuthority@0150898<0> v2, v3, using unchecked entrypoint)
ParallelMove  goto:78 B11
B10
B11
v11 <- LoadField(v2 . path {final}) T{String}
ParallelMove r1 <- fp[-2], r2 <- r2
StaticCall:84( write<0> v3, v11, using unchecked entrypoint)
ParallelMove r0 <- fp[-1]
v12 <- LoadField(v2 . _query@0150898 {final}) T{String??}
ParallelMove fp[-3] <- r3
Branch if StrictCompare:88(!==, v12, v0) goto (15, 16)
B15
ParallelMove r1 <- fp[-2], r2 <- C
StaticCall:94( write<0> v3, v24, using unchecked entrypoint)
ParallelMove r1 <- fp[-2], r2 <- fp[-3]
StaticCall:112( write<0> v3, v12 T{String?}, using unchecked entrypoint)
ParallelMove  goto:118 B17
B16
B17
v16 <- LoadField(v2 . _fragment@0150898 {final}) T{String??}
ParallelMove fp[-3] <- r3
Branch if StrictCompare:124(!==, v16, v0) goto (21, 22)
B21
ParallelMove r1 <- fp[-2], r2 <- C
StaticCall:130( write<0> v3, v21, using unchecked entrypoint)
ParallelMove r1 <- fp[-2], r2 <- fp[-3]
StaticCall:148( write<0> v3, v16 T{String?}, using unchecked entrypoint)
ParallelMove  goto:154 B23
B22
B23
MoveArgument(sp[0] <- v3)
v20 <- StaticCall:158( toString<0> v3, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:160(v20)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r3 <- r1, r0 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v2 . _userInfo@0150898 {final}) T{String}
v32 <- LoadField(v4 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(!==, v32, v35 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r1 <- r0, r2 <- r2
StaticCall:24( write<0> v3, v4 T{String}, using unchecked entrypoint)
ParallelMove r1 <- fp[-2], r2 <- C
StaticCall:26( write<0> v3, v16, using unchecked entrypoint)
ParallelMove  goto:32 B5
B4
B5
v7 <- LoadField(v2 . _host@0150898 {final}) T{String??}
Branch if StrictCompare:38(!==, v7, v0) goto (9, 10)
B9
ParallelMove r1 <- fp[-2], r2 <- r2
StaticCall:60( write<0> v3, v7 T{String?}, using unchecked entrypoint)
ParallelMove  goto:66 B11
B10
B11
v10 <- LoadField(v2 . _port@0150898) T{int??}
Branch if StrictCompare:72(!==, v10, v0) goto (12, 13)
B12
ParallelMove r1 <- fp[-2], r2 <- C
StaticCall:78( write<0> v3, v11, using unchecked entrypoint)
ParallelMove r0 <- fp[-1]
v12 <- LoadField(v2 . _port@0150898) T{int??}
ParallelMove r1 <- fp[-2], r2 <- r2
StaticCall:82( write<0> v3, v12, using unchecked entrypoint)
ParallelMove  goto:88 B14
B13
B14
ParallelMove r0 <- C
DartReturn:92(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
v3 <- LoadField(v2 . _hashCodeCache@0150898) T{_Smi?}
Branch if StrictCompare:12(===, v3, v0) goto (3, 4)
B3
v5 <- LoadField(v2 . _uri@0150898 {final}) T{String}
v24 <- LoadClassId(<non-smi> v5) int64
MoveArgument(sp[0] <- v5)
ParallelMove r0 <- r2
v6 <- DispatchTableCall( cid=v24 String.hashCode<0>, v5) T{int}
ParallelMove r0 <- r0, r1 <- fp[2]
StoreField(v2 T{_SimpleUri} . _hashCodeCache@0150898 = v6 T{_Smi})
v16 <- UnboxInt64([non-speculative], v6 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r1 <- r1 goto:28 B5
B4
v17 <- UnboxInt64([non-speculative], v3 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r1 <- r1 goto:30 B5
B5
v18 <- BoxInt64(v4) [-4611686018427387904, 4611686018427387903] T{_Smi}
ParallelMove r0 <- r0
DartReturn:32(v18 T{_Smi})
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . _controller@4048458) T{_StreamControllerLifecycle<X0>}
MoveArgument(sp[0] <- v3 T{_StreamControllerLifecycle<X0>})
v11 <- StaticCall:10( _getHash@0150898<0> v3 T{_StreamControllerLifecycle<X0>}, recognized_kind = Object_getHash, result_type = T{_Smi}) [-4611686018427387904, 4611686018427387903] T{_Smi}
ParallelMove r0 <- r0
v13 <- UnboxInt64([non-speculative], v11 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v6 <- BinaryInt64Op(^ [tr], v13 T{_Smi}, v15 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v14 <- BoxInt64(v6) [-4611686018427387904, 4611686018427387903] T{_Smi}
ParallelMove r0 <- r0
DartReturn:16(v14)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r0
v4 <- StaticCall:10( get:_startIndex@9040228<0> v2, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r0, r0 <- fp[-2]
v5 <- BinaryInt64Op(+ [tr], v4, v3) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-3] <- r2
Branch if RelationalOp(<, v3, v47 T{_Smi}) T{bool} goto (5, 3)
B3
ParallelMove r1 <- fp[-1]
v9 <- StaticCall:22( get:_endIndex@9040228<0> v2, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0, r2 <- fp[-3]
Branch if RelationalOp(>=, v5, v9) T{bool} goto (6, 7)
B7
ParallelMove r0 <- fp[-1]
v11 <- LoadField(v2 . _iterable@9040228 {final}) T{Iterable<X0>}
v48 <- LoadClassId(<non-smi> v11) int64
ParallelMove r0 <- r0, r1 <- r1, r2 <- r2
v12 <- DispatchTableCall( cid=v48 Iterable.elementAt<0>, v11, v5) T{*?}
ParallelMove r0 <- r0
DartReturn:58(v12 T{X0?})
B5
ParallelMove r0 <- fp[-1]
ParallelMove  goto:38 B4
B6
ParallelMove r0 <- fp[-1]
ParallelMove  goto:42 B4
B4
MoveArgument(sp[0] <- v2)
v14 <- StaticCall:46( get:length<0> v2, result_type = T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v46 <- UnboxInt64([non-speculative], v14 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-3] <- r1
v13 <- AllocateObject:44(cls=IndexError, <not-aliased>) T{IndexError}
ParallelMove r2 <- r0, r0 <- fp[-3]
StoreField(v13 T{IndexError} . length = v46 T{int} <int64>, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v13 T{IndexError} . name = v25 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v13 T{IndexError} . message = v26 T{_OneByteString}, NoStoreBarrier)
ParallelMove r3 <- fp[-2]
v45 <- BoxInt64(v3 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v13 T{IndexError} . invalidValue = v45 T{int}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v13 T{IndexError} . _hasValue@0150898 = v8 T{bool}, NoStoreBarrier)
ParallelMove r0 <- r2
Throw:50(v13)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _iterable@9040228 {final}) T{Iterable<X0>}
v22 <- LoadClassId(<non-smi> v3) int64
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r2
v4 <- DispatchTableCall( cid=v22 Iterable.length<0>, v3) T{int}
ParallelMove r0 <- r0, r1 <- fp[-1]
v5 <- LoadField(v2 . _endOrLength@9040228 {final}) T{int??}
Branch if StrictCompare:16(===, v5, v0) goto (5, 3)
B5
B3
v15 <- UnboxInt64([non-speculative], v4 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v18 <- UnboxInt64([non-speculative], v5 T{int?}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>, v18 T{int?}, v15 T{_Smi}) T{bool} goto (6, 7)
B6
B4
v16 <- UnboxInt64([non-speculative], v4 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r0 <- r1
DartReturn:40(v16 T{_Smi})
B7
ParallelMove r0 <- r3
DartReturn:44(v18 T{int?})
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _iterable@9040228 {final}) T{Iterable<X0>}
v15 <- LoadClassId(<non-smi> v3) int64
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r2
v4 <- DispatchTableCall( cid=v15 Iterable.length<0>, v3) T{int}
ParallelMove r0 <- r0, r1 <- fp[-1]
v5 <- LoadField(v2 . _start@9040228 {final}) [-9223372036854775808, 9223372036854775807] int64
v13 <- UnboxInt64([non-speculative], v4 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
Branch if RelationalOp(>, v5, v13 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r0 <- r1
DartReturn:26(v13 T{_Smi})
B4
ParallelMove r0 <- r2
DartReturn:32(v5 T{int})
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r3 <- r1
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v2 . _source@9040228 {final}) T{_GrowableList}
v15 <- LoadField(v4 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v19 <- UnboxInt64([non-speculative], v15) [0, 576460752303423487] int64
ParallelMove r0 <- r1, r1 <- r2
GenericCheckBound:10(v19 T{_Smi}, v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
v17 <- LoadField(v4 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v21 <- LoadIndexed:10([_List] v17, v3 T{int}) T{*?}
v6 <- LoadField(v2 . _f@9040228 {final}) T{(dynamic, C1X0) => C1X1}
MoveArgument(sp[1] <- v6)
MoveArgument(sp[0] <- v21 T{X0})
ParallelMove r0 <- r0
v7 <- ClosureCall:18( closure=v6<0>, v6, v21 T{X0}) T{*?}
ParallelMove r0 <- r0
DartReturn:20(v7)
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
v5 <- LoadField(v2 . _name@9040228 {final}) T{String}
v17 <- LoadClassId(<non-smi> v5) int64
MoveArgument(sp[0] <- v5)
ParallelMove r0 <- r0
v6 <- DispatchTableCall( cid=v17 String.hashCode<0>, v5) T{int}
ParallelMove r0 <- r0
v11 <- UnboxUint32([tr], [non-speculative], v6 T{_Smi}) [0, 4294967295] uint32
ParallelMove r2 <- C
v7 <- BinaryUint32Op(* [tr], v11 T{_Smi}, v18 T{_Smi}) [0, 4294967295] uint32
ParallelMove r1 <- C
v8 <- BinaryUint32Op(& [tr], v7, v19 T{_Smi}) [0, 536870911] uint32
v12 <- BoxUint32(v8) [0, 536870911] T{_Smi}
ParallelMove r0 <- r0
DartReturn:18(v12)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r5 <- r1, r4 <- r2, r2 <- r5, fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3, fp[-4] <- r5, fp[-5] <- r6
CheckStackOverflow:8(stack=0, loop=0)
v49 <- LoadClassId(v5) [87, 549] int64
Branch if TestRange(v49 in [111-166]) T{bool} goto (3, 16)
B3
v220 <- LoadClassId(<non-smi> v5) int64
ParallelMove r0 <- r0, r1 <- r2
v18 <- DispatchTableCall( cid=v220 _TypedListBase.buffer<0>, v5) T{_ByteBuffer}
ParallelMove r0 <- r0
v124 <- LoadField(v18 T{_ByteBuffer} . _data@7027147 {final}) T{_TypedList}
ParallelMove r2 <- fp[-1]
Branch if StrictCompare:36(===, v124, v2) T{bool} goto (4, 15)
B4
ParallelMove r7 <- fp[-2], r6 <- fp[-3], r5 <- fp[-4], r3 <- fp[-5]
v21 <- BinaryInt64Op(- [tr], v4, v3) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-6] <- r8
v107 <- LoadField(v5 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v177 <- UnboxInt64([non-speculative], v107 T{_Smi}) [0, 4611686018427387903] int64
v23 <- BinaryInt64Op(- [tr], v177 T{_Smi}, v6) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v23, v21) T{bool} goto (5, 6)
B6
Branch if EqualityCompare(v21 == v194 T{_Smi}) T{bool} goto (7, 8)
B7
ParallelMove r0 <- C
DartReturn:66(v0)
B8
v176 <- BoxInt64(v21 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v134 <- AllocateTypedData:10(v176 T{int}, <not-aliased>) T{_Uint8List}
ParallelMove r2 <- r0
ParallelMove fp[-8] <- r2
ParallelMove r6 <- C goto:94 B11
B11
  Loop 3
  Loop Header
ParallelMove fp[-7] <- r6
CheckStackOverflow:98(stack=0, loop=1)
Branch if RelationalOp(<, v27, v21) T{bool} goto (9, 10)
B9
  Loop 3
v35 <- BinaryInt64Op(+ [tr], v6, v27) [-9223372036854775808, 9223372036854775807] int64
v178 <- BoxInt64(v35) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v221 <- LoadClassId(<non-smi> v5) int64
MoveArgument(sp[1] <- v5)
MoveArgument(sp[0] <- v178 T{int})
ParallelMove r0 <- r1
v36 <- DispatchTableCall( cid=v221 List.[]<0>, v5, v178 T{int}) T{*?}
ParallelMove r0 <- r0
v41 <- UnboxInt64:90([non-speculative], v36 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r0 <- fp[-7], r2 <- fp[-8]
StoreIndexed:90([_Uint8List] v134 T{_Uint8List}, v27 T{int}, v41, NoStoreBarrier)
v37 <- BinaryInt64Op(+ [tr], v27 T{int}, v195 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r6 goto:96 B11
B10
ParallelMove r3 <- fp[-1]
v45 <- LoadField:122(v2 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v181 <- UnboxInt64:122([non-speculative], v45) [0, 4611686018427387903] int64
ParallelMove r7 <- fp[-2], r6 <- fp[-2], r5 <- fp[-3] goto:122 B14
B14
  Loop 2
  Loop Header
CheckStackOverflow:126(stack=0, loop=1)
Branch if RelationalOp(<, v29, v4) T{bool} goto (12, 13)
B12
  Loop 2
v31 <- BinaryInt64Op(- [tr], v29, v3) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-6], r1 <- r8
GenericCheckBound:116(v21 T{_Smi}, v31) [-9223372036854775808, 9223372036854775807] int64
v196 <- LoadIndexed:116([_Uint8List] v134 T{_Uint8List}, v31 T{int}) [0, 255] int64
ParallelMove r0 <- r4, r1 <- r7
GenericCheckBound:118(v181 T{_Smi}, v29) [-9223372036854775808, 9223372036854775807] int64
v227 <- LoadField(v2 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed:118([_Uint8List] v227 T{__Uint8List&_TypedList&_IntListMixin&_TypedIntListMixin}, v29 T{int}, v196 T{_Smi}, NoStoreBarrier)
v34 <- BinaryInt64Op(+ [tr], v29 T{int}, v195 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r7 <- r0 goto:124 B14
B13
ParallelMove r0 <- C
DartReturn:128(v0)
B15
ParallelMove r3 <- r2, r6 <- fp[-2], r5 <- fp[-3]
ParallelMove  goto:136 B17
B16
ParallelMove r3 <- r5, r6 <- r4, r5 <- r3
ParallelMove  goto:138 B17
B17
v11 <- BinaryInt64Op(- [tr], v4, v3) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-6] <- r4
v222 <- LoadClassId(<non-smi> v5) int64
MoveArgument(sp[0] <- v5)
ParallelMove r0 <- r0
v12 <- DispatchTableCall( cid=v222 List.length<0>, v5) T{int}
ParallelMove r0 <- r0
v183 <- UnboxInt64([non-speculative], v12 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r2 <- fp[-5]
v13 <- BinaryInt64Op(- [tr], v183 T{_Smi}, v6) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-6]
Branch if RelationalOp(<, v13, v11) T{bool} goto (18, 19)
B19
Branch if EqualityCompare(v11 == v194 T{_Smi}) T{bool} goto (20, 21)
B20
ParallelMove r0 <- C
DartReturn:172(v0)
B21
ParallelMove r0 <- fp[-2]
Branch if RelationalOp(<, v6 T{int}, v3 T{int}) T{bool} goto (27, 31)
B27
v74 <- BinaryInt64Op(+ [tr], v6 T{int}, v11 T{int}) [-9223372036854775808, 9223372036854775807] int64
v75 <- BinaryInt64Op(- [tr], v74, v195 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v76 <- BinaryInt64Op(+ [tr], v3 T{int}, v11 T{int}) [-9223372036854775808, 9223372036854775807] int64
v77 <- BinaryInt64Op(- [tr], v76, v195 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r4, r5 <- r0 goto:50 B30
B30
  Loop 1
  Loop Header
ParallelMove fp[-3] <- r6, fp[-7] <- r5
CheckStackOverflow:54(stack=0, loop=1)
Branch if RelationalOp(>=, v78, v6 T{int}) T{bool} goto (28, 29)
B28
  Loop 1
v184 <- BoxInt64(v78) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v223 <- LoadClassId(<non-smi> v5 T{List<dynamic>}) int64
MoveArgument(sp[1] <- v5 T{List<dynamic>})
MoveArgument(sp[0] <- v184 T{int})
ParallelMove r0 <- r1
v81 <- DispatchTableCall( cid=v223 List.[]<0>, v5 T{List<dynamic>}, v184 T{int}) T{*?}
ParallelMove r3 <- r0, r2 <- fp[-7]
v185 <- BoxInt64(v79) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0, r1 <- fp[-1]
v224 <- LoadClassId(<non-smi> v2 T{__Uint8List&_TypedList&_IntListMixin&_TypedIntListMixin}) int64
MoveArgument(sp[2] <- v2 T{__Uint8List&_TypedList&_IntListMixin&_TypedIntListMixin})
MoveArgument(sp[1] <- v185 T{int})
MoveArgument(sp[0] <- v81 T{X0?})
ParallelMove r0 <- r4
DispatchTableCall( cid=v224 List.[]=<0>, v2 T{__Uint8List&_TypedList&_IntListMixin&_TypedIntListMixin}, v185 T{int}, v81 T{X0?})
ParallelMove r0 <- fp[-3]
v82 <- BinaryInt64Op(- [tr], v78, v195 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-7]
v83 <- BinaryInt64Op(- [tr], v79, v195 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r6, r5 <- r5, r2 <- fp[-5] goto:52 B30
B29
B31
v66 <- BinaryInt64Op:82(+ [tr], v6 T{int}, v11 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-7] <- r3
ParallelMove r6 <- r2, r5 <- r0 goto:82 B34
B34
  Loop 0
  Loop Header
ParallelMove fp[-2] <- r6, fp[-3] <- r5
CheckStackOverflow:86(stack=0, loop=1)
Branch if RelationalOp(<, v64, v66) T{bool} goto (32, 33)
B32
  Loop 0
v186 <- BoxInt64(v64) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v225 <- LoadClassId(<non-smi> v5 T{List<dynamic>}) int64
MoveArgument(sp[1] <- v5 T{List<dynamic>})
MoveArgument(sp[0] <- v186 T{int})
ParallelMove r0 <- r1
v68 <- DispatchTableCall( cid=v225 List.[]<0>, v5 T{List<dynamic>}, v186 T{int}) T{*?}
ParallelMove r3 <- r0, r2 <- fp[-3]
v187 <- BoxInt64(v65) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0, r1 <- fp[-1]
v226 <- LoadClassId(<non-smi> v2 T{__Uint8List&_TypedList&_IntListMixin&_TypedIntListMixin}) int64
MoveArgument(sp[2] <- v2 T{__Uint8List&_TypedList&_IntListMixin&_TypedIntListMixin})
MoveArgument(sp[1] <- v187 T{int})
MoveArgument(sp[0] <- v68 T{X0?})
ParallelMove r0 <- r4
DispatchTableCall( cid=v226 List.[]=<0>, v2 T{__Uint8List&_TypedList&_IntListMixin&_TypedIntListMixin}, v187 T{int}, v68 T{X0?})
ParallelMove r0 <- fp[-2]
v70 <- BinaryInt64Op(+ [tr], v64, v195 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-3]
v71 <- BinaryInt64Op(+ [tr], v65, v195 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r6, r5 <- r5, r3 <- fp[-7] goto:84 B34
B33
B35
ParallelMove r0 <- C
DartReturn:178(v0)
B5
v38 <- StaticCall:50( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:52(v38)
B18
v17 <- StaticCall:156( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:158(v17)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, r0 <- r2, r2 <- r5, fp[-1] <- r1, fp[-2] <- r3, fp[-3] <- r5
CheckStackOverflow:8(stack=0, loop=0)
v49 <- LoadClassId(v5) [87, 549] int64
Branch if TestRange(v49 in [111-166]) T{bool} goto (3, 16)
B3
v248 <- LoadClassId(<non-smi> v5) int64
ParallelMove r0 <- r0, r1 <- r2
v18 <- DispatchTableCall( cid=v248 _TypedListBase.buffer<0>, v5) T{_ByteBuffer}
ParallelMove r1 <- fp[-1], r0 <- r0
ParallelMove fp[-4] <- r0
v19 <- StaticCall:22( get:buffer<0> v2, result_type = T{_ByteBuffer}) T{_ByteBuffer}
ParallelMove r1 <- r0, r0 <- fp[-4]
v115 <- LoadField(v18 T{_ByteBuffer} . _data@7027147 {final}) T{_TypedList}
v116 <- LoadField(v19 T{_ByteBuffer} . _data@7027147 {final}) T{_TypedList}
Branch if StrictCompare:36(===, v115, v116) T{bool} goto (4, 15)
B4
ParallelMove r3 <- fp[-2], r2 <- fp[-3]
v103 <- LoadField(v5 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v201 <- UnboxInt64([non-speculative], v103) [0, 4611686018427387903] int64
Branch if RelationalOp(<, v201 T{_Smi}, v4 T{int}) T{bool} goto (5, 6)
B6
Branch if EqualityCompare(v4 T{int} == v218 T{_Smi}) T{bool} goto (7, 8)
B7
ParallelMove r0 <- C
DartReturn:66(v0)
B8
v200 <- BoxInt64(v4 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v143 <- AllocateTypedData:10(v200 T{int}, <not-aliased>) T{_Int8List}
ParallelMove r2 <- r0
ParallelMove fp[-4] <- r2
ParallelMove r5 <- C goto:94 B11
B11
  Loop 2
  Loop Header
ParallelMove fp[-5] <- r5
CheckStackOverflow:98(stack=0, loop=1)
Branch if RelationalOp(<, v27, v4 T{int}) T{bool} goto (9, 10)
B9
  Loop 2
v202 <- BoxInt64(v27 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v249 <- LoadClassId(<non-smi> v5) int64
MoveArgument(sp[1] <- v5)
MoveArgument(sp[0] <- v202 T{int})
ParallelMove r0 <- r1
v36 <- DispatchTableCall( cid=v249 List.[]<0>, v5, v202 T{int}) T{*?}
ParallelMove r0 <- r0
v41 <- UnboxInt64:90([non-speculative], v36 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r0 <- fp[-5], r2 <- fp[-4]
StoreIndexed:90([_Int8List] v143 T{_Int8List}, v27 T{int}, v41, NoStoreBarrier)
v37 <- BinaryInt64Op(+ [tr], v27 T{int}, v219 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r5 goto:96 B11
B10
ParallelMove r3 <- fp[-1]
v45 <- LoadField:122(v2 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v205 <- UnboxInt64:122([non-speculative], v45) [0, 4611686018427387903] int64
ParallelMove r6 <- C, r5 <- fp[-2] goto:122 B14
B14
  Loop 1
  Loop Header
CheckStackOverflow:126(stack=0, loop=1)
Branch if RelationalOp(<, v29, v4) T{bool} goto (12, 13)
B12
  Loop 1
v220 <- LoadIndexed:116([_Int8List] v143 T{_Int8List}, v29 T{int}) [-128, 127] int64
ParallelMove r0 <- r4, r1 <- r6
GenericCheckBound:118(v205 T{_Smi}, v29 T{int}) [-9223372036854775808, 9223372036854775807] int64
v253 <- LoadField(v2 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed:118([_Int8List] v253 T{__Int8List&_TypedList&_IntListMixin&_TypedIntListMixin}, v29 T{int}, v220 T{_Smi}, NoStoreBarrier)
v34 <- BinaryInt64Op(+ [tr], v29 T{int}, v219 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r0 goto:124 B14
B13
ParallelMove r0 <- C
DartReturn:128(v0)
B15
ParallelMove r3 <- fp[-1], r5 <- fp[-2]
ParallelMove  goto:136 B17
B16
ParallelMove r3 <- r4, r5 <- r3
ParallelMove  goto:138 B17
B17
v250 <- LoadClassId(<non-smi> v5) int64
MoveArgument(sp[0] <- v5)
ParallelMove r0 <- r0
v13 <- DispatchTableCall( cid=v250 List.length<0>, v5) T{int}
ParallelMove r0 <- r0
v207 <- UnboxInt64([non-speculative], v13 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r2 <- fp[-2]
Branch if RelationalOp(<, v207 T{_Smi}, v4 T{int}) T{bool} goto (18, 19)
B19
Branch if EqualityCompare(v4 T{int} == v218 T{_Smi}) T{bool} goto (20, 21)
B20
ParallelMove r0 <- C
DartReturn:172(v0)
B21
ParallelMove r3 <- fp[-1]
v135 <- LoadClassId:82(v2) [111, 113] int64
ParallelMove fp[-7] <- r4
ParallelMove r7 <- C, r6 <- C goto:82 B34
B34
  Loop 0
  Loop Header
ParallelMove fp[-5] <- r7, fp[-6] <- r6
CheckStackOverflow:86(stack=0, loop=1)
Branch if RelationalOp(<, v63, v4 T{int}) T{bool} goto (32, 35)
B32
  Loop 0
v208 <- BoxInt64(v63) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v251 <- LoadClassId(<non-smi> v5 T{List<dynamic>}) int64
MoveArgument(sp[1] <- v5 T{List<dynamic>})
MoveArgument(sp[0] <- v208 T{int})
ParallelMove r0 <- r1
v67 <- DispatchTableCall( cid=v251 List.[]<0>, v5 T{List<dynamic>}, v208 T{int}) T{*?}
ParallelMove r4 <- r0, r3 <- fp[-7]
ParallelMove fp[-4] <- r4
Branch if EqualityCompare:78(v135 == v136) goto (49, 53)
B49
  Loop 0
ParallelMove r5 <- fp[-1], r6 <- fp[-6]
ParallelMove r0 <- r4, r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v67 T{X0?}, v134 T{_Type}, 'value', instantiator_type_args(v0 T{Null?}), function_type_args(v0 T{Null?})) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[-1]
v148 <- LoadField(v2 T{_ExternalInt8Array} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v210 <- UnboxInt64([non-speculative], v148 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- fp[-6]
GenericCheckBound:14(v210 T{_Smi}, v64 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[-4]
v158 <- UnboxInt64([non-speculative], v67 T{int}) [-9223372036854775808, 9223372036854775807] int64
v159 <- LoadField(v2 T{_ExternalInt8Array} . PointerBase.data {final}) untagged
ParallelMove r4 <- fp[-6]
StoreIndexed([_Int8List] v159 T{_ExternalInt8Array}, v64 T{int}, v158, NoStoreBarrier)
ParallelMove r0 <- r4 goto:18 B54
B53
  Loop 0
ParallelMove r2 <- fp[-1], r4 <- fp[-6], r3 <- r4
v209 <- BoxInt64(v64) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v252 <- LoadClassId(<non-smi> v2 T{__Int8List&_TypedList&_IntListMixin&_TypedIntListMixin}) int64
MoveArgument(sp[2] <- v2 T{__Int8List&_TypedList&_IntListMixin&_TypedIntListMixin})
MoveArgument(sp[1] <- v209 T{int})
MoveArgument(sp[0] <- v67 T{X0?})
ParallelMove r0 <- r1
v137 <- DispatchTableCall( cid=v252 List.[]=<0>, v2 T{__Int8List&_TypedList&_IntListMixin&_TypedIntListMixin}, v209 T{int}, v67 T{X0?})
ParallelMove r0 <- fp[-6] goto:79 B54
B54
  Loop 0
v69 <- BinaryInt64Op(+ [tr], v63, v219 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v70 <- BinaryInt64Op(+ [tr], v64, v219 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r7 <- r7, r6 <- r6, r3 <- fp[-1], r2 <- fp[-2], r4 <- fp[-7] goto:84 B34
B35
ParallelMove r0 <- C
DartReturn:178(v0)
B5
v38 <- StaticCall:50( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:52(v38)
B18
v17 <- StaticCall:156( tooFew<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:158(v17)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
ParallelMove r0 <- C
DartReturn:10(v3)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . _data@7027147 {final}) T{_TypedList}
MoveArgument(sp[0] <- v3 T{_TypedList})
v9 <- StaticCall:10( _getHash@0150898<0> v3 T{_TypedList}, recognized_kind = Object_getHash, result_type = T{_Smi}) [-4611686018427387904, 4611686018427387903] T{_Smi}
ParallelMove r0 <- r0
DartReturn:14(v9 T{_Smi})
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[0] <- v2)
v3 <- StaticCall:10( _get_hashcode@1026248<0> v2, using unchecked entrypoint) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
t0 <- AssertAssignable:12(v3, v4, '', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:14(v3 T{int})
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
v9 <- LoadField(v2 T{_RawReceivePort} . ReceivePort.send_port {final}) T{_SendPort?}
MoveArgument(sp[0] <- v9 T{_SendPort})
v4 <- StaticCall:12( get:hashCode<0> v9 T{_SendPort}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
DartReturn:14(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[0] <- v2)
v3 <- StaticCall:10( _get_hashcode@1026248<0> v2, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
DartReturn:12(v3)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[0] <- v2)
v3 <- StaticCall:10( getHandle<0> v2, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v5 <- LoadClassId(v3) int64
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r1
v4 <- DispatchTableCall( cid=v5 num.hashCode<0>, v3) T{int}
ParallelMove r0 <- r0
DartReturn:14(v4 T{int})
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
v10 <- LoadField(v2 T{Pointer} . PointerBase.data {final}) untagged
ParallelMove r2 <- r1
v11 <- IntConverter(untagged->int64[tr], v10) [-9223372036854775808, 9223372036854775807] int64
v12 <- BoxInt64(v11) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v13 <- LoadClassId(v12 T{int}) int64
MoveArgument(sp[0] <- v12 T{int})
ParallelMove r0 <- r1
v4 <- DispatchTableCall( cid=v13 num.hashCode<0>, v12 T{int}) T{int}
ParallelMove r0 <- r0
DartReturn:14(v4 T{int})
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
v74 <- LoadField(v2 T{_Record} . Record.shape {final}) [0, 4611686018427387903] T{_Smi}
v81 <- BinarySmiOp:10(& [-o], v74 T{_Smi}, v82 T{_Smi}) [0, 65535] T{_Smi}
v101 <- UnboxInt64([non-speculative], v74) [0, 4611686018427387903] int64
v102 <- UnboxInt64:36([non-speculative], v81) [0, 65535] int64
ParallelMove fp[-3] <- r4
ParallelMove r3 <- r3, r2 <- C goto:36 B5
B5
  Loop 0
  Loop Header
ParallelMove fp[-1] <- r3, fp[-2] <- r2
CheckStackOverflow:40(stack=0, loop=1)
Branch if RelationalOp(<, v7, v102 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 0
v108 <- LoadIndexed([_Record] v2 T{_Record}, v7 T{int}) T{*?}
v133 <- LoadClassId(v108 T{Object??}) int64
MoveArgument(sp[0] <- v108 T{Object??})
ParallelMove r0 <- r5
v12 <- DispatchTableCall( cid=v133 Object.hashCode<0>, v108 T{Object??}) T{int}
ParallelMove r0 <- r0
v104 <- UnboxUint32([tr], [non-speculative], v12 T{int}) [0, 4294967295] uint32
ParallelMove r2 <- fp[-1]
v130 <- IntConverter(int64->uint32[tr], v6 T{int}) uint32
v56 <- BinaryUint32Op(+ [tr], v130 T{int}, v104) [0, 4294967295] uint32
ParallelMove r1 <- C
v57 <- BinaryUint32Op(& [tr], v56, v134 T{_Smi}) [0, 536870911] uint32
ParallelMove r0 <- C
v59 <- BinaryUint32Op(& [tr], v57, v135 T{_Smi}) [0, 524287] uint32
v61 <- ShiftUint32Op(<< [tr], v59, v111 T{_Smi}) [0, 536869888] uint32
v62 <- BinaryUint32Op(+ [tr], v57, v61) [0, 1073740799] uint32
v63 <- BinaryUint32Op(& [tr], v62, v134 T{_Smi}) [0, 536870911] uint32
ParallelMove r3 <- r2
v132 <- IntConverter(uint32->int64, v63) int64
v65 <- ShiftInt64Op(>> [tr], v132 T{_Smi}, v112 T{_Smi}) [0, 8388607] int64
ParallelMove r2 <- r2
v131 <- IntConverter(uint32->int64, v63) int64
v66 <- BinaryInt64Op(^ [tr], v131 T{_Smi}, v65) [0, 536870911] int64
ParallelMove r2 <- fp[-2]
v15 <- BinaryInt64Op(+ [tr], v7, v113 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r3, r2 <- r4, r1 <- fp[2], r4 <- fp[-3] goto:38 B5
B4
ParallelMove r1 <- C, r3 <- C, r2 <- C
ParallelMove r4 <- fp[-1]
v129 <- IntConverter(int64->uint32[tr], v6 T{int}) uint32
v22 <- BinaryUint32Op(& [tr], v129 T{int}, v136 T{_Smi}) [0, 67108863] uint32
v24 <- ShiftUint32Op(<< [tr], v22, v115 T{_Smi}) [0, 536870904] uint32
ParallelMove r4 <- fp[-1]
v128 <- IntConverter(int64->uint32[tr], v6 T{int}) uint32
v25 <- BinaryUint32Op(+ [tr], v128 T{int}, v24) [0, 4611686018964258807] uint32
v26 <- BinaryUint32Op(& [tr], v25, v134 T{_Smi}) [0, 536870911] uint32
v28 <- ShiftUint32Op(>> [tr], v26, v116 T{_Smi}) [0, 262143] uint32
v29 <- BinaryUint32Op(^ [tr], v26, v28) [0, 536870911] uint32
v31 <- BinaryUint32Op(& [tr], v29, v137 T{_Smi}) [0, 16383] uint32
v33 <- ShiftUint32Op(<< [tr], v31, v118 T{_Smi}) [0, 536838144] uint32
v34 <- BinaryUint32Op(+ [tr], v29, v33) [0, 1073709055] uint32
v35 <- BinaryUint32Op(& [tr], v34, v134 T{_Smi}) [0, 536870911] uint32
v105 <- BoxUint32(v35) [0, 536870911] T{_Smi}
ParallelMove r0 <- r0
DartReturn:44(v105)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B5
ParallelMove r1 <- sp[0]
v7 <- IfThenElse(===, v2, v3 ? 1231 : 1237) [1231, 1237] T{_Smi}
BoolTest
ParallelMove r0 <- r0
DartReturn:26(v7 T{_Smi})
B0
B1
ParallelMove r1 <- sp[0]
v3 <- Unbox(v2) double
v4 <- HashDoubleOp(v3) [-4611686018427387904, 4611686018427387903] int64
v5 <- BoxInt64(v4) [-4611686018427387904, 4611686018427387903] T{_Smi}
ParallelMove r0 <- r0
DartReturn:10(v5)
B0
B1
ParallelMove r1 <- sp[0]
v3 <- HashIntegerOp(v2) [-4611686018427387904, 4611686018427387903] T{_Smi}
ParallelMove r0 <- r0
DartReturn:10(v3)
B0
B1
ParallelMove r1 <- sp[0]
v3 <- HashIntegerOp(smi v2) [-4611686018427387904, 4611686018427387903] T{_Smi}
ParallelMove r0 <- r0
DartReturn:10(v3)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . _hash@0150898) T{*?}
Branch if StrictCompare:12(===, v3, v0) goto (3, 4)
B3
MoveArgument(sp[0] <- v2)
v8 <- StaticCall:18( _computeHash@0150898<0> v2, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0, r2 <- r0, r1 <- fp[2]
StoreField(v2 T{_Closure} . _hash@0150898 = v8 T{int})
ParallelMove r3 <- r2 goto:26 B5
B4
ParallelMove r3 <- r1 goto:28 B5
B5
ParallelMove r0 <- r3, r2 <- C, r1 <- C, fp[-1] <- r3
t0 <- AssertAssignable:32(v22 T{*}, v6, '', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:34(v22 T{int})
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[0] <- v2)
v3 <- StaticCall:10( _getHash@0150898<0> v2, recognized_kind = Object_getHash, result_type = T{_Smi}) [-4611686018427387904, 4611686018427387903] T{_Smi}
ParallelMove r0 <- r0
DartReturn:12(v3)
CheckStackOverflowSlowPath
B0
B4
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1, fp[-2] <- r5
CheckStackOverflow:8(stack=0, loop=0)
v36 <- LoadField(v2 T{__Int8List&_TypedList&_IntListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v52 <- UnboxInt64([non-speculative], v36 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- C, r2 <- C, r3 <- r3
StaticCall:14( checkValidRange<0> v55 T{_Smi}, v7, v52 T{_Smi}) int64
ParallelMove r2 <- fp[-2]
Branch if StrictCompare:30(===, v5 T{int??}, v0) goto (5, 6)
B6
ParallelMove r4 <- C goto:62 B9
B9
  Loop 0
  Loop Header
ParallelMove fp[-3] <- r4
CheckStackOverflow:66(stack=0, loop=1)
Branch if RelationalOp(<, v15, v56 T{_Smi}) T{bool} goto (7, 8)
B7
  Loop 0
v53 <- BoxInt64(v15) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v63 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v53 T{int})
MoveArgument(sp[0] <- v5 T{int?})
ParallelMove r0 <- r1
DispatchTableCall( cid=v63 List.[]=<0>, v2, v53 T{int}, v5 T{int?})
ParallelMove r0 <- fp[-3]
v18 <- BinaryInt64Op(+ [tr], v15, v57 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- r4, r2 <- fp[-2] goto:64 B9
B8
ParallelMove r0 <- C
DartReturn:68(v0)
B5
v19 <- AllocateObject:36(cls=ArgumentError, <not-aliased>) T{ArgumentError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v19 T{ArgumentError} . name = v29 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v19 T{ArgumentError} . _hasValue@0150898 = v30 T{bool}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v19 T{ArgumentError} . message = v31 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:40(v19)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
ParallelMove r0 <- C
DartReturn:10(v5 T{_Smi})
B0
B1
ParallelMove r0 <- C
DartReturn:10(v5 T{_Smi})
B0
B1
ParallelMove r0 <- C
DartReturn:10(v5 T{_Smi})
B0
B1
ParallelMove r0 <- C
DartReturn:10(v5 T{_Smi})
B0
B1
ParallelMove r0 <- C
DartReturn:10(v5 T{_Smi})
B0
B1
Enter frame
ParallelMove r3 <- r1
v11 <- LoadField(v2 T{_Float64x2ArrayView} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v14 <- UnboxInt64([non-speculative], v11) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r2
t0 <- GenericCheckBound:10(v14 T{_Smi}, v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
v18 <- LoadField(v2 T{_Float64x2ArrayView} . PointerBase.data, MayLoadInnerPointer) untagged
v13 <- LoadIndexed([_Float64x2ArrayView] v18 T{_Float64x2ArrayView}, v3 T{int}) float64x2
v15 <- Box(v13 T{_Float64x2}) T{_Float64x2}
ParallelMove r0 <- r0
DartReturn:12(v15 T{_Float64x2})
slow path check bound operation
Box slow path allocation of _Float64x2
B0
B1
Enter frame
ParallelMove r3 <- r1
v26 <- LoadClassId(v2) [163, 165] int64
Branch if EqualityCompare:10(v26 == v27) goto (3, 8)
B3
v11 <- LoadField(v2 T{_Float64x2List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v31 <- UnboxInt64([non-speculative], v11) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r2
t0 <- GenericCheckBound:10(v31 T{_Smi}, v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
v13 <- LoadIndexed([_Float64x2List] v2 T{_Float64x2List}, v3 T{int}) float64x2
ParallelMove v0 <- v0 goto:12 B9
B8
v21 <- LoadField(v2 T{_ExternalFloat64x2Array} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v32 <- UnboxInt64([non-speculative], v21) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r2
t0 <- GenericCheckBound:10(v32 T{_Smi}, v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
v23 <- LoadField(v2 T{_ExternalFloat64x2Array} . PointerBase.data {final}) untagged
v24 <- LoadIndexed([_ExternalFloat64x2Array] v23, v3 T{int}) float64x2
ParallelMove v0 <- v0 goto:12 B9
B9
v33 <- Box(v28) T{_Float64x2}
ParallelMove r0 <- r0
DartReturn:12(v33 T{_Float64x2})
slow path check bound operation
slow path check bound operation
Box slow path allocation of _Float64x2
B0
B1
Enter frame
ParallelMove r3 <- r1
v11 <- LoadField(v2 T{_Int32x4ArrayView} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v14 <- UnboxInt64([non-speculative], v11) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r2
t0 <- GenericCheckBound:10(v14 T{_Smi}, v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
v18 <- LoadField(v2 T{_Int32x4ArrayView} . PointerBase.data, MayLoadInnerPointer) untagged
v13 <- LoadIndexed([_Int32x4ArrayView] v18 T{_Int32x4ArrayView}, v3 T{int}) int32x4
v15 <- Box(v13 T{_Int32x4}) T{_Int32x4}
ParallelMove r0 <- r0
DartReturn:12(v15 T{_Int32x4})
slow path check bound operation
Box slow path allocation of _Int32x4
B0
B1
Enter frame
ParallelMove r3 <- r1
v26 <- LoadClassId(v2) [159, 161] int64
Branch if EqualityCompare:10(v26 == v27) goto (3, 8)
B3
v11 <- LoadField(v2 T{_Int32x4List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v31 <- UnboxInt64([non-speculative], v11) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r2
t0 <- GenericCheckBound:10(v31 T{_Smi}, v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
v13 <- LoadIndexed([_Int32x4List] v2 T{_Int32x4List}, v3 T{int}) int32x4
ParallelMove v0 <- v0 goto:12 B9
B8
v21 <- LoadField(v2 T{_ExternalInt32x4Array} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v32 <- UnboxInt64([non-speculative], v21) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r2
t0 <- GenericCheckBound:10(v32 T{_Smi}, v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
v23 <- LoadField(v2 T{_ExternalInt32x4Array} . PointerBase.data {final}) untagged
v24 <- LoadIndexed([_ExternalInt32x4Array] v23, v3 T{int}) int32x4
ParallelMove v0 <- v0 goto:12 B9
B9
v33 <- Box(v28) T{_Int32x4}
ParallelMove r0 <- r0
DartReturn:12(v33 T{_Int32x4})
slow path check bound operation
slow path check bound operation
Box slow path allocation of _Int32x4
B0
B1
Enter frame
ParallelMove r3 <- r1
v11 <- LoadField(v2 T{_Float32x4ArrayView} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v14 <- UnboxInt64([non-speculative], v11) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r2
t0 <- GenericCheckBound:10(v14 T{_Smi}, v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
v18 <- LoadField(v2 T{_Float32x4ArrayView} . PointerBase.data, MayLoadInnerPointer) untagged
v13 <- LoadIndexed([_Float32x4ArrayView] v18 T{_Float32x4ArrayView}, v3 T{int}) float32x4
v15 <- Box(v13 T{_Float32x4}) T{_Float32x4}
ParallelMove r0 <- r0
DartReturn:12(v15 T{_Float32x4})
slow path check bound operation
Box slow path allocation of _Float32x4
B0
B1
Enter frame
ParallelMove r3 <- r1
v26 <- LoadClassId(v2) [155, 157] int64
Branch if EqualityCompare:10(v26 == v27) goto (3, 8)
B3
v11 <- LoadField(v2 T{_Float32x4List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v31 <- UnboxInt64([non-speculative], v11) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r2
t0 <- GenericCheckBound:10(v31 T{_Smi}, v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
v13 <- LoadIndexed([_Float32x4List] v2 T{_Float32x4List}, v3 T{int}) float32x4
ParallelMove v0 <- v0 goto:12 B9
B8
v21 <- LoadField(v2 T{_ExternalFloat32x4Array} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v32 <- UnboxInt64([non-speculative], v21) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r2
t0 <- GenericCheckBound:10(v32 T{_Smi}, v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
v23 <- LoadField(v2 T{_ExternalFloat32x4Array} . PointerBase.data {final}) untagged
v24 <- LoadIndexed([_ExternalFloat32x4Array] v23, v3 T{int}) float32x4
ParallelMove v0 <- v0 goto:12 B9
B9
v33 <- Box(v28) T{_Float32x4}
ParallelMove r0 <- r0
DartReturn:12(v33 T{_Float32x4})
slow path check bound operation
slow path check bound operation
Box slow path allocation of _Float32x4
B0
B1
Enter frame
ParallelMove r3 <- r1
v26 <- LoadClassId(v2) [148, 154] int64
Branch if EqualityCompare:10(v26 == v27) goto (5, 10)
B5
B10
Branch if EqualityCompare:10(v26 == v28) goto (11, 6)
B11
B3
v11 <- LoadField(v2 T{__Float32ArrayView&_TypedListView&_DoubleListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v37 <- UnboxInt64([non-speculative], v11) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r2
t0 <- GenericCheckBound:10(v37 T{_Smi}, v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
v51 <- LoadField(v2 T{__Float32ArrayView&_TypedListView&_DoubleListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v13 <- LoadIndexed([_Float32ArrayView] v51 T{__Float32ArrayView&_TypedListView&_DoubleListMixin}, v3 T{int}) float
v14 <- FloatToDouble(v13) double
ParallelMove v0 <- v1 goto:12 B14
B6
v22 <- LoadField(v2 T{__Float32ArrayView&_TypedListView&_DoubleListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v38 <- UnboxInt64([non-speculative], v22) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r2
t0 <- GenericCheckBound:10(v38 T{_Smi}, v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
v52 <- LoadField(v2 T{__Float32ArrayView&_TypedListView&_DoubleListMixin} . PointerBase.data, MayLoadInnerPointer) untagged
v24 <- LoadIndexed([_Float64ArrayView] v52 T{__Float32ArrayView&_TypedListView&_DoubleListMixin}, v3 T{int}) double
ParallelMove v0 <- v0 goto:12 B14
B14
v39 <- Box(v30) T{_Double}
ParallelMove r0 <- r0
DartReturn:12(v39 T{_Double})
slow path check bound operation
slow path check bound operation
Box slow path allocation of _Double
B0
B1
Enter frame
ParallelMove r3 <- r1
v49 <- LoadClassId(v2) [147, 153] int64
Branch if EqualityCompare:10(v49 == v50) goto (3, 12)
B3
v11 <- LoadField(v2 T{_Float32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v60 <- UnboxInt64([non-speculative], v11) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r2
t0 <- GenericCheckBound:10(v60 T{_Smi}, v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
v13 <- LoadIndexed([_Float32List] v2 T{_Float32List}, v3 T{int}) float
v14 <- FloatToDouble(v13) double
ParallelMove v0 <- v1 goto:12 B15
B12
Branch if EqualityCompare:10(v49 == v51) goto (5, 13)
B5
v22 <- LoadField(v2 T{_ExternalFloat32Array} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v61 <- UnboxInt64([non-speculative], v22) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r2
t0 <- GenericCheckBound:10(v61 T{_Smi}, v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
v24 <- LoadField(v2 T{_ExternalFloat32Array} . PointerBase.data {final}) untagged
v25 <- LoadIndexed([_ExternalFloat32Array] v24, v3 T{int}) float
v26 <- FloatToDouble(v25) double
ParallelMove v0 <- v1 goto:12 B15
B13
Branch if EqualityCompare:10(v49 == v52) goto (7, 14)
B7
v34 <- LoadField(v2 T{_Float64List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v62 <- UnboxInt64([non-speculative], v34) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r2
t0 <- GenericCheckBound:10(v62 T{_Smi}, v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
v36 <- LoadIndexed([_Float64List] v2 T{_Float64List}, v3 T{int}) double
ParallelMove v0 <- v0 goto:12 B15
B14
v44 <- LoadField(v2 T{_ExternalFloat64Array} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v63 <- UnboxInt64([non-speculative], v44) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r2
t0 <- GenericCheckBound:10(v63 T{_Smi}, v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
v46 <- LoadField(v2 T{_ExternalFloat64Array} . PointerBase.data {final}) untagged
v47 <- LoadIndexed([_ExternalFloat64Array] v46, v3 T{int}) double
ParallelMove v0 <- v0 goto:12 B15
B15
v64 <- Box(v53) T{_Double}
ParallelMove r0 <- r0
DartReturn:12(v64 T{_Double})
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
Box slow path allocation of _Double
B0
B1
Enter frame
ParallelMove r3 <- r1
CheckStackOverflow:8(stack=0, loop=0)
v5 <- BoxInt64(v3) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v6 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v5 T{int})
ParallelMove r0 <- r1
v4 <- DispatchTableCall( cid=v6 List.[]<0>, v2, v5 T{int}) T{*?}
ParallelMove r0 <- r0
DartReturn:12(v4 T{int})
CheckStackOverflowSlowPath
B0
B1
ParallelMove r3 <- r1
v5 <- LoadField(v2 . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v9 <- UnboxInt64([non-speculative], v5) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- r2
GenericCheckBound:10(v9 T{_Smi}, v3) [-9223372036854775808, 9223372036854775807] int64
v7 <- LoadField(v2 . GrowableObjectArray.data) T{_List}
v11 <- LoadIndexed:10([_List] v7, v3 T{int}) T{X0?}
ParallelMove r0 <- r0
DartReturn:12(v11 T{X0?})
slow path check bound operation
B0
B1
Enter frame
ParallelMove r3 <- r1
v35 <- LoadClassId(v2) [89, 549] int64
Branch if TestRange:10(v35 in [89-90]) goto (3, 10)
B3
v11 <- LoadField(v2 T{_Array<X0>} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v59 <- UnboxInt64([non-speculative], v11) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- r2
t0 <- GenericCheckBound:10(v59 T{_Smi}, v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
v13 <- LoadIndexed([_List] v2 T{_Array<X0>}, v3 T{int}) T{*?}
ParallelMove r0 <- r5 goto:12 B12
B10
Branch if EqualityCompare:10(v35 == v36) goto (5, 11)
B5
v21 <- LoadField(v2 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v60 <- UnboxInt64([non-speculative], v21) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- r2
t0 <- GenericCheckBound:10(v60 T{_Smi}, v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
v23 <- LoadField(v2 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v24 <- LoadIndexed([_List] v23, v3 T{int}) T{X0?}
ParallelMove r0 <- r5 goto:12 B12
B11
v32 <- LoadField(v2 T{CodeUnits} . _string@9040228 {final}) T{String}
v44 <- LoadField(v32 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v61 <- UnboxInt64([non-speculative], v44) [0, 2305843009213693951] int64
ParallelMove r0 <- r0, r1 <- r2
t0 <- GenericCheckBound:12(v61 T{_Smi}, v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
v46 <- LoadClassId(v32 T{_StringBase}) [93, 94] T{_Smi}
Branch if StrictCompare:12(===, v46, v54 T{_Smi}) goto (16, 17)
B16
v50 <- LoadIndexed([_OneByteString] v32 T{_OneByteString}, v3 T{int}) [0, 255] int64
ParallelMove r1 <- r1 goto:12 B15
B17
v48 <- LoadIndexed([_TwoByteString] v32 T{_StringBase}, v3 T{int}) [0, 65535] int64
ParallelMove r1 <- r1 goto:12 B15
B15
v62 <- BoxInt64(v49 T{_Smi}) [0, 65535] T{_Smi}
ParallelMove r0 <- r2 goto:14 B12
B12
ParallelMove r0 <- r0
DartReturn:12(v37 T{X0?})
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . _url@0150898 {final}) T{String??}
ParallelMove fp[-4] <- r3
Branch if StrictCompare:12(===, v3, v0) goto (3, 6)
B3
v33 <- LoadField(v2 . message {final}) T{Object??}
ParallelMove fp[-1] <- r3
Branch if StrictCompare:20(===, v33, v0) goto (4, 13)
B4
v39 <- LoadField(v2 . _failedAssertion@0150898 {final}) T{String}
ParallelMove r1 <- r1
v40 <- StaticCall:28( trim<0> v39, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:30(v40)
B13
ParallelMove r1 <- C, r2 <- C
v34 <- CreateArray:34(v0, v19) T{_List}
ParallelMove r0 <- r0
ParallelMove fp[-2] <- r0
StoreIndexed([_List] v34, v6, v12, NoStoreBarrier)
ParallelMove r4 <- fp[2]
v35 <- LoadField(v2 . _failedAssertion@0150898 {final}) T{String}
ParallelMove r1 <- r1
v36 <- StaticCall:38( trim<0> v35, using unchecked entrypoint) T{String}
ParallelMove r1 <- fp[-2], r0 <- r0
StoreIndexed([_List] v34, v13, v36)
ParallelMove r0 <- fp[-2]
StoreIndexed([_List] v34, v15, v25, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
v57 <- LoadClassId(v33 T{Object?}) [1, 600] int64
Branch if TestRange(v57 in [93-94]) T{bool} goto (14, 15)
B14
ParallelMove r0 <- r1 goto:32 B16
B15
ParallelMove r1 <- r1
v53 <- StaticCall:36( safeToString<0> v33 T{Object?}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:38 B16
B16
ParallelMove r1 <- fp[-2], r0 <- r0
StoreIndexed([_List] v34, v17, v62 T{String})
MoveArgument(sp[0] <- v34)
v38 <- StaticCall:42( _interpolate@0150898<0> v34, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:44(v38)
B6
ParallelMove r4 <- r0
v5 <- LoadField(v2 . _column@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-3] <- r0
Branch if RelationalOp(>, v5, v83 T{_Smi}) T{bool} goto (7, 8)
B7
ParallelMove r1 <- C, r2 <- C
v29 <- CreateArray:60(v0, v15) T{_List}
ParallelMove r2 <- r0
StoreIndexed([_List] v29, v6, v30, NoStoreBarrier)
ParallelMove r3 <- fp[-3]
v80 <- BoxInt64(v5 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreIndexed([_List] v29, v13, v80 T{int}, NoStoreBarrier)
MoveArgument(sp[0] <- v29)
v32 <- StaticCall:64( _interpolate@0150898<0> v29, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
ParallelMove r4 <- r0 goto:70 B9
B8
ParallelMove r4 <- C goto:72 B9
B9
ParallelMove r1 <- C, r2 <- C, fp[-1] <- r4
v11 <- CreateArray:74(v0, v10) T{_List}
ParallelMove r2 <- r0
ParallelMove fp[-2] <- r2
StoreIndexed([_List] v11, v6, v12, NoStoreBarrier)
ParallelMove r0 <- fp[-4]
StoreIndexed([_List] v11, v13, v3 T{String?}, NoStoreBarrier)
StoreIndexed([_List] v11, v15, v16, NoStoreBarrier)
ParallelMove r3 <- fp[2]
v18 <- LoadField(v2 . _line@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
v81 <- BoxInt64(v18) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r2, r0 <- r0
StoreIndexed([_List] v11, v17, v81 T{int})
ParallelMove r1 <- r2, r0 <- fp[-1]
StoreIndexed([_List] v11, v19, v9)
StoreIndexed([_List] v11, v20, v21, NoStoreBarrier)
v23 <- LoadField(v2 . _failedAssertion@0150898 {final}) T{String}
ParallelMove r1 <- r2, r0 <- r0
StoreIndexed([_List] v11, v22, v23)
StoreIndexed([_List] v11, v24, v25, NoStoreBarrier)
ParallelMove r1 <- r3
v27 <- StaticCall:82( get:_messageString@0150898<0> v2) T{String}
ParallelMove r1 <- fp[-2], r0 <- r0
StoreIndexed([_List] v11, v26, v27)
MoveArgument(sp[0] <- v11)
v28 <- StaticCall:84( _interpolate@0150898<0> v11, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:86(v28)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . message {final}) T{Object??}
Branch if StrictCompare:12(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:18(v8)
B4
v11 <- LoadClassId(v3 T{Object?}) [1, 600] int64
Branch if TestRange(v11 in [93-94]) T{bool} goto (5, 6)
B5
ParallelMove r0 <- r0
DartReturn:32(v3 T{String})
B6
ParallelMove r1 <- r0
v7 <- StaticCall:36( safeToString<0> v3 T{Object?}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:38(v7)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v17 <- LoadClassId(v2) [1, 600] int64
Branch if TestRange(v17 in [59-61]) T{bool} goto (6, 3)
B6
B3
Branch if EqualityCompare(v17 T{_Smi} == v19) T{bool} goto (7, 4)
B7
B4
Branch if StrictCompare:28(===, v2, v0) goto (8, 9)
B8
B5
v35 <- LoadClassId(v2) int64
MoveArgument(sp[0] <- v2)
ParallelMove r0 <- r0
v12 <- DispatchTableCall( cid=v35 Object.toString<0>, v2) T{String}
ParallelMove r0 <- r0
DartReturn:50(v12 T{String})
B9
Branch if TestRange(v17 T{_Smi} in [93-94]) T{bool} goto (10, 11)
B10
ParallelMove r1 <- r1
v11 <- StaticCall:64( _stringToSafeString@0150898<0> v2 T{String}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:66(v11)
B11
MoveArgument(sp[0] <- v2 T{Object})
v25 <- StaticCall:10( _toString@0150898<0> v2 T{Object}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:72(v25 T{String})
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r2 <- r1
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- r2
v4 <- StaticCall:10( encode<0> v3, v2, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:12(v4)
CheckStackOverflowSlowPath
B0
B5
Enter frame
ParallelMove r0 <- r1, r1 <- r2
CheckStackOverflow:34(stack=0, loop=0)
ParallelMove r1 <- r1
v35 <- StaticCall:14( stringify<0> v3 T{Object?}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:42(v35 T{String})
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- AllocateObject:10(cls=StringBuffer) T{StringBuffer}
ParallelMove r1 <- r0, r0 <- r0
ParallelMove fp[-2] <- r0
StaticCall:12( StringBuffer.<0> v3)
ParallelMove r1 <- fp[-1], r2 <- fp[-2]
StaticCall:14( printOn<0> v2, v3)
MoveArgument(sp[0] <- v3)
v4 <- StaticCall:16( toString<0> v3, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:18(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v4 <- AllocateObject:10(cls=_JsonStringStringifier) T{_JsonStringStringifier}
ParallelMove r3 <- r0, r0 <- fp[-2]
ParallelMove fp[-3] <- r3
StoreField(v4 T{_JsonStringStringifier} . _sink@10003594 = v3 T{StringBuffer}, NoStoreBarrier)
ParallelMove r1 <- C, r2 <- C
v16 <- StaticCall:10( _GrowableList@0150898.<0> v0 T{Null?}, v21 T{_Smi}, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r0 <- r0, r1 <- fp[-3]
StoreField(v4 T{_JsonStringStringifier} . _seen@10003594 = v16)
ParallelMove r0 <- C
StoreField(v4 T{_JsonStringStringifier} . _toEncodable@10003594 = v19 T{_Closure})
ParallelMove r1 <- r1, r2 <- fp[-1]
StaticCall:14( writeObject<0> v4, v2, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:16(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _sink@10003594 {final}) T{StringBuffer}
MoveArgument(sp[0] <- v3)
v4 <- StaticCall:14( toString<0> v3, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:16(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[0] <- v2)
v3 <- InstanceCall:10( dyn:toJson<0>, v2 IC[0: ], result_type = T{!null}) T{*}
InstanceCallAOT (smiable)
ParallelMove r0 <- r0
DartReturn:12(v3)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-5] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v6 <- LoadField:48(v2 . _seen@10003594 {final}) T{_GrowableList}
ParallelMove fp[-4] <- r3
v49 <- LoadField:48(v6 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v84 <- UnboxInt64:48([non-speculative], v49 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-3] <- r4
v18 <- LoadField:48(v6 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove fp[-2] <- r5
ParallelMove r6 <- C goto:48 B7
B7
  Loop 0
  Loop Header
ParallelMove fp[-1] <- r6
CheckStackOverflow:52(stack=0, loop=1)
Branch if RelationalOp(<, v5, v84 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 0
v95 <- LoadIndexed:30([_List] v18, v5 T{int}) T{*?}
ParallelMove r0 <- r2, r1 <- r1
Branch if StrictCompare:32(===, v3, v95 T{*?}, with number check) goto (5, 6)
B6
  Loop 0
ParallelMove r0 <- fp[-1]
v14 <- BinaryInt64Op(+ [tr], v5 T{int}, v96 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r6, r2 <- fp[-5], r3 <- fp[-4], r5 <- fp[-2], r4 <- fp[-3] goto:50 B7
B4
ParallelMove r1 <- r5, r0 <- r4
v60 <- LoadField(v18 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v90 <- UnboxInt64([non-speculative], v60 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v84 T{_Smi} == v90 T{_Smi}) T{bool} goto (11, 12)
B11
ParallelMove r1 <- fp[-4]
StaticCall:26( _growToNextCapacity@0150898<0> v6 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B13
B12
B13
v31 <- BinaryInt64Op(+ [tr], v84 T{_Smi}, v96 T{_Smi}) [1, 576460752303423488] int64
v91 <- BoxInt64(v31) [1, 576460752303423488] T{_Smi}
StoreField(v6 T{_GrowableList} . GrowableObjectArray.length = v91, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r2
GenericCheckBound:40(v31 T{_Smi}, v84 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v34 <- LoadField(v6 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-5]
StoreIndexed:40([_List] v34, v84 T{_Smi}, v3 T{*})
ParallelMove r0 <- C
DartReturn:58(v0)
B5
ParallelMove r0 <- fp[-5]
v15 <- AllocateObject:38(cls=JsonCyclicError, <not-aliased>) T{JsonCyclicError}
ParallelMove r1 <- r0, r0 <- fp[-5]
StoreField(v15 T{JsonCyclicError} . unsupportedObject = v3 T{Object?}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:42(v15)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove r3 <- r1, r0 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
Branch if StrictCompare:10(===, v3, v4) goto (3, 4)
B3
ParallelMove r1 <- r3, r2 <- C
StaticCall:16( writeString<0> v2, v8, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:18(v4)
B4
Branch if StrictCompare:22(===, v3, v5) goto (5, 6)
B5
ParallelMove r1 <- r3, r2 <- C
StaticCall:28( writeString<0> v2, v7, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:30(v4)
B6
ParallelMove r1 <- r3, r2 <- C
StaticCall:34( writeString<0> v2, v6, using unchecked entrypoint)
ParallelMove r1 <- fp[-1], r2 <- fp[-2]
StaticCall:36( writeStringContent<0> v2, v3, using unchecked entrypoint)
ParallelMove r1 <- fp[-1], r2 <- C
StaticCall:38( writeString<0> v2, v6, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:40(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, r3 <- r2, fp[-6] <- r1, fp[-7] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v395 <- LoadField(v3 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v582 <- UnboxInt64:462([non-speculative], v395 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove fp[-5] <- r5
v383 <- LoadClassId:462(v3 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove fp[-4] <- r6
v98 <- LoadField:462(v2 T{_JsonStringStringifier} . _sink@10003594 {final}) T{StringBuffer}
ParallelMove fp[-3] <- r7
ParallelMove r2 <- C, r9 <- C goto:462 B61
B61
  Loop 0
  Loop Header
ParallelMove fp[-2] <- r9
CheckStackOverflow:466(stack=0, loop=1)
Branch if RelationalOp(<, v8, v582 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 0
Branch if StrictCompare:26(===, v383, v358 T{_Smi}) goto (150, 151)
B150
  Loop 0
v387 <- LoadIndexed([_OneByteString] v3 T{_OneByteString}, v8 T{int}) [0, 255] int64
ParallelMove r10 <- r0 goto:26 B149
B151
  Loop 0
v385 <- LoadIndexed([_TwoByteString] v3 T{_StringBase}, v8 T{int}) [0, 65535] int64
ParallelMove r10 <- r0 goto:26 B149
B149
  Loop 0
ParallelMove fp[-1] <- r10
Branch if RelationalOp(>, v386 T{_Smi}, v601 T{_Smi}) T{bool} goto (5, 29)
B5
  Loop 0
Branch if RelationalOp(>=, v386 T{_Smi}, v602 T{_Smi}) T{bool} goto (6, 26)
B6
  Loop 0
ParallelMove r0 <- r10
v672 <- IntConverter(int64->uint32[tr], v386 T{_Smi}) uint32
v63 <- BinaryUint32Op(& [tr], v672 T{_Smi}, v694 T{_Smi}) [0, 64512] uint32
ParallelMove r0 <- r11
v674 <- IntConverter(uint32->int64, v63) int64
Branch if EqualityCompare(v674 T{_Smi} == v602 T{_Smi}) T{bool} goto (8, 12)
B8
  Loop 0
v86 <- BinaryInt64Op(+ [tr], v8 T{int}, v604 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v86, v582 T{_Smi}) T{bool} goto (7, 15)
B7
  Loop 0
ParallelMove r0 <- r5, r1 <- r12
t0 <- GenericCheckBound:70(v582 T{_Smi}, v86 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:70(===, v383 T{_Smi}, v358 T{_Smi}) goto (145, 146)
B145
  Loop 0
v371 <- LoadIndexed([_OneByteString] v3 T{_OneByteString}, v86 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:70 B144
B146
  Loop 0
v369 <- LoadIndexed([_TwoByteString] v3 T{_StringBase}, v86 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:70 B144
B144
  Loop 0
ParallelMove r0 <- r0
v675 <- IntConverter(int64->uint32[tr], v370 T{_Smi}) uint32
v90 <- BinaryUint32Op(& [tr], v675 T{_Smi}, v694 T{_Smi}) [0, 64512] uint32
ParallelMove r1 <- r1
v676 <- IntConverter(uint32->int64, v90) int64
Branch if EqualityCompare(v676 T{_Smi} == v605 T{_Smi}) T{bool} goto (13, 16)
B13
B16
B15
B12
B11
  Loop 0
ParallelMove r11 <- r11
v673 <- IntConverter(uint32->int64, v63) int64
Branch if EqualityCompare(v673 T{_Smi} == v605 T{_Smi}) T{bool} goto (10, 23)
B10
  Loop 0
v68 <- BinaryInt64Op(- [tr], v8 T{int}, v604 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>=, v68, v600 T{_Smi}) T{bool} goto (9, 17)
B9
  Loop 0
ParallelMove r0 <- r5, r1 <- r11
t0 <- GenericCheckBound:108(v582 T{_Smi}, v68 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:108(===, v383 T{_Smi}, v358 T{_Smi}) goto (140, 141)
B140
  Loop 0
v354 <- LoadIndexed([_OneByteString] v3 T{_OneByteString}, v68 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:108 B139
B141
  Loop 0
v352 <- LoadIndexed([_TwoByteString] v3 T{_StringBase}, v68 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:108 B139
B139
  Loop 0
ParallelMove r0 <- r0
v677 <- IntConverter(int64->uint32[tr], v353 T{_Smi}) uint32
v72 <- BinaryUint32Op(& [tr], v677 T{_Smi}, v694 T{_Smi}) [0, 64512] uint32
ParallelMove r1 <- r1
v678 <- IntConverter(uint32->int64, v72) int64
Branch if EqualityCompare(v678 T{_Smi} == v602 T{_Smi}) T{bool} goto (24, 18)
B24
B18
B17
B14
  Loop 0
Branch if RelationalOp(>, v8 T{int}, v7) T{bool} goto (19, 20)
B19
  Loop 0
v584 <- BoxInt64(v8 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v584 T{int})
ParallelMove r1 <- r3, r2 <- r2
v341 <- StaticCall:12( substring<0> v3 T{String}, v7 T{int}, v584 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r1 <- fp[-3], r2 <- r0
StaticCall:14( write<0> v98 T{StringBuffer}, v341, using unchecked entrypoint)
ParallelMove  goto:168 B21
B20
B21
  Loop 0
v76 <- BinaryInt64Op(+ [tr], v8 T{int}, v604 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-3], r2 <- C, fp[-8] <- r3
StaticCall:12( writeCharCode<0> v98 T{StringBuffer}, v601 T{_Smi}, using unchecked entrypoint)
ParallelMove r1 <- fp[-3], r2 <- C
StaticCall:12( writeCharCode<0> v98 T{StringBuffer}, v606 T{_Smi}, using unchecked entrypoint)
ParallelMove r1 <- fp[-3], r2 <- C
StaticCall:12( writeCharCode<0> v98 T{StringBuffer}, v607 T{_Smi}, using unchecked entrypoint)
ParallelMove r0 <- fp[-1]
v671 <- IntConverter(int64->uint32[tr], v386 T{_Smi}) uint32
v78 <- ShiftUint32Op(>> [tr], v671 T{_Smi}, v608 T{_Smi}) [0, 255] uint32
ParallelMove r0 <- C
v79 <- BinaryUint32Op(& [tr], v78, v695 T{_Smi}) [0, 15] uint32
ParallelMove r1 <- r2
v679 <- IntConverter(uint32->int64, v79) int64
Branch if RelationalOp(<, v679 T{_Smi}, v610 T{_Smi}) T{bool} goto (116, 117)
B116
  Loop 0
ParallelMove r1 <- r2
v681 <- IntConverter(uint32->int64, v79) int64
v272 <- BinaryInt64Op(+ [tr], v681 T{_Smi}, v611 T{_Smi}) [48, 63] int64
ParallelMove r2 <- r3 goto:28 B118
B117
  Loop 0
ParallelMove r2 <- r2
v680 <- IntConverter(uint32->int64, v79) int64
v269 <- BinaryInt64Op(+ [tr], v680 T{_Smi}, v612 T{_Smi}) [87, 102] int64
ParallelMove r2 <- r1 goto:30 B118
B118
  Loop 0
ParallelMove r1 <- fp[-3], r2 <- r2
StaticCall:12( writeCharCode<0> v98 T{StringBuffer}, v270 T{int}, using unchecked entrypoint)
ParallelMove r0 <- fp[-1]
v670 <- IntConverter(int64->uint32[tr], v386 T{_Smi}) uint32
v81 <- ShiftUint32Op(>> [tr], v670 T{_Smi}, v613 T{_Smi}) [0, 4095] uint32
ParallelMove r0 <- C
v82 <- BinaryUint32Op(& [tr], v81, v695 T{_Smi}) [0, 15] uint32
ParallelMove r1 <- r2
v682 <- IntConverter(uint32->int64, v82) int64
Branch if RelationalOp(<, v682 T{_Smi}, v610 T{_Smi}) T{bool} goto (123, 124)
B123
  Loop 0
ParallelMove r1 <- r2
v684 <- IntConverter(uint32->int64, v82) int64
v295 <- BinaryInt64Op(+ [tr], v684 T{_Smi}, v611 T{_Smi}) [48, 63] int64
ParallelMove r2 <- r3 goto:28 B125
B124
  Loop 0
ParallelMove r2 <- r2
v683 <- IntConverter(uint32->int64, v82) int64
v292 <- BinaryInt64Op(+ [tr], v683 T{_Smi}, v612 T{_Smi}) [87, 102] int64
ParallelMove r2 <- r1 goto:30 B125
B125
  Loop 0
ParallelMove r1 <- fp[-3], r2 <- r2
StaticCall:12( writeCharCode<0> v98 T{StringBuffer}, v293 T{int}, using unchecked entrypoint)
ParallelMove r0 <- fp[-1]
v669 <- IntConverter(int64->uint32[tr], v386 T{_Smi}) uint32
ParallelMove r3 <- C
v84 <- BinaryUint32Op(& [tr], v669 T{_Smi}, v695 T{_Smi}) [0, 15] uint32
ParallelMove r0 <- r1
v685 <- IntConverter(uint32->int64, v84) int64
Branch if RelationalOp(<, v685 T{_Smi}, v610 T{_Smi}) T{bool} goto (130, 131)
B130
  Loop 0
ParallelMove r0 <- r1
v687 <- IntConverter(uint32->int64, v84) int64
v318 <- BinaryInt64Op(+ [tr], v687 T{_Smi}, v611 T{_Smi}) [48, 63] int64
ParallelMove r2 <- r1 goto:28 B132
B131
  Loop 0
ParallelMove r1 <- r1
v686 <- IntConverter(uint32->int64, v84) int64
v315 <- BinaryInt64Op(+ [tr], v686 T{_Smi}, v612 T{_Smi}) [87, 102] int64
ParallelMove r2 <- r0 goto:30 B132
B132
  Loop 0
ParallelMove r1 <- fp[-3], r2 <- r2
StaticCall:12( writeCharCode<0> v98 T{StringBuffer}, v316 T{int}, using unchecked entrypoint)
ParallelMove r0 <- fp[-8] goto:214 B25
B23
B22
  Loop 0
ParallelMove r0 <- r2 goto:216 B25
B25
B26
  Loop 0
ParallelMove r0 <- r2 goto:224 B27
B27
  Loop 0
ParallelMove r2 <- r0 goto:228 B28
B29
  Loop 0
ParallelMove r3 <- r10
Branch if RelationalOp(<, v386 T{_Smi}, v614 T{_Smi}) T{bool} goto (30, 50)
B30
  Loop 0
ParallelMove r4 <- fp[-2]
Branch if RelationalOp(>, v8 T{int}, v7) T{bool} goto (31, 32)
B31
  Loop 0
v585 <- BoxInt64(v8 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v585 T{int})
ParallelMove r1 <- fp[-7], r2 <- r2
v239 <- StaticCall:12( substring<0> v3 T{String}, v7 T{int}, v585 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r1 <- fp[-3], r2 <- r0
StaticCall:14( write<0> v98 T{StringBuffer}, v239, using unchecked entrypoint)
ParallelMove  goto:258 B33
B32
B33
  Loop 0
v29 <- BinaryInt64Op(+ [tr], v8 T{int}, v604 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-3], r2 <- C, fp[-8] <- r4
StaticCall:12( writeCharCode<0> v98 T{StringBuffer}, v601 T{_Smi}, using unchecked entrypoint)
ParallelMove r0 <- fp[-1]
Branch if RelationalOp:312(<=, v386 T{_Smi}, v610 T{_Smi}) T{bool} goto (36, 37)
B36
  Loop 0
Branch if RelationalOp:334(<=, v386 T{_Smi}, v615 T{_Smi}) T{bool} goto (40, 41)
B40
  Loop 0
Branch if RelationalOp:344(<=, v386 T{_Smi}, v608 T{_Smi}) T{bool} goto (42, 43)
B42
  Loop 0
v589 <- BoxInt64(v386 T{_Smi}) [0, 65535] T{_Smi}
Branch if StrictCompare:354(===, v589 T{_Smi}, v51) T{bool} goto (44, 45)
B44
  Loop 0
ParallelMove r1 <- fp[-3], r2 <- C
StaticCall:12( writeCharCode<0> v98 T{StringBuffer}, v616 T{_Smi}, using unchecked entrypoint)
ParallelMove  goto:270 B34
B45
B43
  Loop 0
ParallelMove r1 <- fp[-3], r2 <- C
StaticCall:12( writeCharCode<0> v98 T{StringBuffer}, v617 T{_Smi}, using unchecked entrypoint)
ParallelMove  goto:274 B34
B41
  Loop 0
ParallelMove r1 <- fp[-3], r2 <- C
StaticCall:12( writeCharCode<0> v98 T{StringBuffer}, v618 T{_Smi}, using unchecked entrypoint)
ParallelMove  goto:278 B34
B37
  Loop 0
Branch if RelationalOp:322(>=, v386 T{_Smi}, v619 T{_Smi}) T{bool} goto (38, 39)
B38
  Loop 0
Branch if RelationalOp:366(<=, v386 T{_Smi}, v619 T{_Smi}) T{bool} goto (46, 47)
B46
  Loop 0
ParallelMove r1 <- fp[-3], r2 <- C
StaticCall:12( writeCharCode<0> v98 T{StringBuffer}, v620 T{_Smi}, using unchecked entrypoint)
ParallelMove  goto:282 B34
B47
  Loop 0
v588 <- BoxInt64(v386 T{_Smi}) [0, 65535] T{_Smi}
Branch if StrictCompare:376(===, v588 T{_Smi}, v35) T{bool} goto (48, 49)
B48
  Loop 0
ParallelMove r1 <- fp[-3], r2 <- C
StaticCall:12( writeCharCode<0> v98 T{StringBuffer}, v621 T{_Smi}, using unchecked entrypoint)
ParallelMove  goto:286 B34
B49
B39
B35
  Loop 0
ParallelMove r1 <- fp[-3], r2 <- C
StaticCall:12( writeCharCode<0> v98 T{StringBuffer}, v606 T{_Smi}, using unchecked entrypoint)
ParallelMove r1 <- fp[-3], r2 <- C
StaticCall:12( writeCharCode<0> v98 T{StringBuffer}, v611 T{_Smi}, using unchecked entrypoint)
ParallelMove r1 <- fp[-3], r2 <- C
StaticCall:12( writeCharCode<0> v98 T{StringBuffer}, v611 T{_Smi}, using unchecked entrypoint)
ParallelMove r0 <- fp[-1]
v668 <- IntConverter(int64->uint32[tr], v386 T{_Smi}) uint32
v42 <- ShiftUint32Op(>> [tr], v668 T{_Smi}, v613 T{_Smi}) [0, 4095] uint32
ParallelMove r0 <- C
v44 <- BinaryUint32Op(& [tr], v42, v695 T{_Smi}) [0, 15] uint32
ParallelMove r1 <- r2
v688 <- IntConverter(uint32->int64, v44) int64
Branch if RelationalOp(<, v688 T{_Smi}, v610 T{_Smi}) T{bool} goto (82, 83)
B82
  Loop 0
ParallelMove r1 <- r2
v690 <- IntConverter(uint32->int64, v44) int64
v150 <- BinaryInt64Op(+ [tr], v690 T{_Smi}, v611 T{_Smi}) [48, 63] int64
ParallelMove r2 <- r3 goto:28 B84
B83
  Loop 0
ParallelMove r2 <- r2
v689 <- IntConverter(uint32->int64, v44) int64
v147 <- BinaryInt64Op(+ [tr], v689 T{_Smi}, v612 T{_Smi}) [87, 102] int64
ParallelMove r2 <- r1 goto:30 B84
B84
  Loop 0
ParallelMove r1 <- fp[-3], r2 <- r2
StaticCall:12( writeCharCode<0> v98 T{StringBuffer}, v148 T{int}, using unchecked entrypoint)
ParallelMove r0 <- fp[-1]
v667 <- IntConverter(int64->uint32[tr], v386 T{_Smi}) uint32
ParallelMove r3 <- C
v46 <- BinaryUint32Op(& [tr], v667 T{_Smi}, v695 T{_Smi}) [0, 15] uint32
ParallelMove r0 <- r1
v691 <- IntConverter(uint32->int64, v46) int64
Branch if RelationalOp(<, v691 T{_Smi}, v610 T{_Smi}) T{bool} goto (89, 90)
B89
  Loop 0
ParallelMove r0 <- r1
v693 <- IntConverter(uint32->int64, v46) int64
v174 <- BinaryInt64Op(+ [tr], v693 T{_Smi}, v611 T{_Smi}) [48, 63] int64
ParallelMove r2 <- r1 goto:28 B91
B90
  Loop 0
ParallelMove r1 <- r1
v692 <- IntConverter(uint32->int64, v46) int64
v171 <- BinaryInt64Op(+ [tr], v692 T{_Smi}, v612 T{_Smi}) [87, 102] int64
ParallelMove r2 <- r0 goto:30 B91
B91
  Loop 0
ParallelMove r1 <- fp[-3], r2 <- r2
StaticCall:12( writeCharCode<0> v98 T{StringBuffer}, v172 T{int}, using unchecked entrypoint)
ParallelMove  goto:308 B34
B34
  Loop 0
ParallelMove r0 <- fp[-8] goto:454 B60
B50
  Loop 0
Branch if EqualityCompare(v386 T{_Smi} == v622 T{_Smi}) T{bool} goto (53, 51)
B53
B51
  Loop 0
Branch if EqualityCompare(v386 T{_Smi} == v601 T{_Smi}) T{bool} goto (54, 58)
B54
B52
  Loop 0
Branch if RelationalOp(>, v8 T{int}, v7) T{bool} goto (55, 56)
B55
  Loop 0
v586 <- BoxInt64(v8 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v586 T{int})
ParallelMove r1 <- fp[-7], r2 <- r2
v117 <- StaticCall:12( substring<0> v3 T{String}, v7 T{int}, v586 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r1 <- fp[-3], r2 <- r0
StaticCall:14( write<0> v98 T{StringBuffer}, v117, using unchecked entrypoint)
ParallelMove  goto:434 B57
B56
B57
  Loop 0
v25 <- BinaryInt64Op(+ [tr], v8 T{int}, v604 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-3], r2 <- C, fp[-8] <- r3
StaticCall:12( writeCharCode<0> v98, v601 T{_Smi}, using unchecked entrypoint)
ParallelMove r1 <- fp[-3], r2 <- fp[-1]
StaticCall:12( writeCharCode<0> v98 T{StringBuffer}, v386 T{_Smi}, using unchecked entrypoint)
ParallelMove r0 <- fp[-8] goto:448 B59
B58
  Loop 0
ParallelMove r0 <- r2 goto:450 B59
B59
B60
  Loop 0
ParallelMove r2 <- r0 goto:458 B28
B28
  Loop 0
v58 <- BinaryInt64Op(+ [tr], v8 T{int}, v604 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r2, r9 <- r9, r4 <- fp[-6], r3 <- fp[-7], r7 <- fp[-3], r6 <- fp[-4], r5 <- fp[-5] goto:464 B61
B4
Branch if EqualityCompare(v7 == v600 T{_Smi}) T{bool} goto (62, 63)
B62
ParallelMove r1 <- fp[-6], r2 <- fp[-7]
StaticCall:478( writeString<0> v2, v3, using unchecked entrypoint)
ParallelMove  goto:504 B67
B63
ParallelMove r5 <- fp[-5]
Branch if RelationalOp(<, v7, v582 T{_Smi}) T{bool} goto (64, 65)
B64
ParallelMove r1 <- fp[-6], r2 <- fp[-7], r3 <- r2, r5 <- r5
StaticCall:492( writeStringSlice<0> v2, v3, v7, v582 T{_Smi}, using unchecked entrypoint)
ParallelMove  goto:498 B66
B65
B66
B67
ParallelMove r0 <- C
DartReturn:508(v0)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r3 <- r2, r2 <- r3
CheckStackOverflow:8(stack=0, loop=0)
v6 <- LoadField(v2 . _sink@10003594 {final}) T{StringBuffer}
ParallelMove fp[-1] <- r4
v8 <- BoxInt64(v5) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v8 T{int})
ParallelMove r1 <- r3, r2 <- r2
v7 <- StaticCall:12( substring<0> v3, v4, v8 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r1 <- fp[-1], r2 <- r0
StaticCall:14( write<0> v6, v7, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:16(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v2 . _sink@10003594 {final}) T{StringBuffer}
ParallelMove r1 <- r0, r2 <- r2
StaticCall:12( write<0> v4, v3, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:14(v0)
CheckStackOverflowSlowPath
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
v5 <- StaticCall:10( _defaultToEncodable@10003594<0> v3) T{*?}
ParallelMove r0 <- r0
DartReturn:12(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v19 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
ParallelMove r1 <- r0, fp[-1] <- r2
v4 <- StaticCall:12( _firstNonWhitespace@0150898<0> v2, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0, r0 <- fp[-1]
ParallelMove fp[-4] <- r2
v35 <- UnboxInt64([non-speculative], v19 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove fp[-3] <- r3
Branch if EqualityCompare(v35 T{_Smi} == v4) T{bool} goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:24(v14)
B4
ParallelMove r1 <- fp[-2]
v7 <- StaticCall:28( _lastNonWhitespace@0150898<0> v2, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0
v9 <- BinaryInt64Op(+ [tr], v7, v36 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- fp[-4]
Branch if EqualityCompare(v4 == v37 T{_Smi}) T{bool} goto (5, 8)
B5
ParallelMove r0 <- fp[-3]
Branch if EqualityCompare(v9 == v35 T{_Smi}) T{bool} goto (6, 9)
B6
ParallelMove r0 <- fp[-2]
DartReturn:52(v2)
B9
B8
B7
ParallelMove r1 <- fp[-2], r2 <- r2, r3 <- r3
v12 <- StaticCall:64( _substringUnchecked@0150898<0> v2, v4, v9, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:66(v12)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . _invocation@0150898 {final}) T{_InvocationMirror}
ParallelMove r1 <- r2, fp[-1] <- r2
v5 <- StaticCall:14( get:memberName<0> v3, result_type = T{Symbol}) T{Symbol}
ParallelMove r1 <- r0
v6 <- StaticCall:16( computeUnmangledName<0> v5, result_type = T{!null}) T{String}
ParallelMove r3 <- r0, r0 <- fp[-1]
ParallelMove fp[-2] <- r3
v7 <- LoadField(v3 . _type@0150898) [-9223372036854775808, 9223372036854775807] int64
v9 <- ShiftInt64Op(>> [tr], v7, v538 T{_Smi}) [-1152921504606846976, 1152921504606846975] int64
ParallelMove r2 <- r2
v617 <- IntConverter(int64->uint32[tr], v9) uint32
ParallelMove r4 <- C
v11 <- BinaryUint32Op(& [tr], v617 T{int}, v642 T{_Smi}) [0, 7] uint32
ParallelMove fp[-4] <- r5
ParallelMove r1 <- r1
v616 <- IntConverter(int64->uint32[tr], v7 T{int}) uint32
v13 <- BinaryUint32Op(& [tr], v616 T{int}, v642 T{_Smi}) [0, 7] uint32
ParallelMove fp[-3] <- r2
ParallelMove r1 <- r2
v627 <- IntConverter(uint32->int64, v13) int64
Branch if EqualityCompare(v627 T{_Smi} == v540 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r1 <- C, r2 <- C
v181 <- CreateArray:38(v0, v8) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v181, v19, v182, NoStoreBarrier)
ParallelMove r3 <- fp[-2]
StoreIndexed([_List] v181, v49, v6, NoStoreBarrier)
StoreIndexed([_List] v181, v43, v51, NoStoreBarrier)
MoveArgument(sp[0] <- v181)
v183 <- StaticCall:40( _interpolate@0150898<0> v181, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:42(v183)
B4
ParallelMove r1 <- r0
v17 <- StaticCall:46( get:typeArguments<0> v3, result_type = T{!null}) T{List<Type>}
ParallelMove r1 <- r0
ParallelMove fp[-5] <- r1
v632 <- LoadClassId(<non-smi> v17) int64
MoveArgument(sp[0] <- v17)
ParallelMove r0 <- r0
v18 <- DispatchTableCall( cid=v632 List.length<0>, v17) T{int}
ParallelMove r0 <- r0
v516 <- UnboxInt64([non-speculative], v18 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
Branch if RelationalOp(>, v516 T{_Smi}, v541 T{_Smi}) T{bool} goto (5, 12)
B5
v171 <- AllocateObject:60(cls=StringBuffer) T{StringBuffer}
ParallelMove r1 <- r0, r0 <- r0
ParallelMove fp[-6] <- r0
StaticCall:62( StringBuffer.<0> v171)
ParallelMove r1 <- fp[-6], r2 <- C
StaticCall:64( write<0> v171, v172, using unchecked entrypoint)
ParallelMove r2 <- C goto:110 B11
B11
  Loop 1
  Loop Header
ParallelMove fp[-7] <- r2
CheckStackOverflow:114(stack=0, loop=1)
v633 <- LoadClassId(<non-smi> v17) int64
MoveArgument(sp[0] <- v17)
ParallelMove r0 <- r0
v174 <- DispatchTableCall( cid=v633 List.length<0>, v17) T{int}
ParallelMove r0 <- r0
v518 <- UnboxInt64([non-speculative], v174 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r0 <- fp[-7]
Branch if RelationalOp(<, v173, v518 T{_Smi}) T{bool} goto (6, 7)
B6
  Loop 1
Branch if RelationalOp(>, v173, v541 T{_Smi}) T{bool} goto (127, 9)
B127
  Loop 1
ParallelMove r1 <- fp[-6]
StaticCall:26( _consumeBuffer@0150898<0> v171 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-6], r2 <- C
StaticCall:28( _addPart@0150898<0> v171 T{StringBuffer}, v170 T{_OneByteString}, using unchecked entrypoint)
ParallelMove  goto:98 B10
B9
B10
  Loop 1
v517 <- BoxInt64(v173) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v634 <- LoadClassId(<non-smi> v17) int64
MoveArgument(sp[1] <- v17)
MoveArgument(sp[0] <- v517 T{int})
ParallelMove r0 <- r1
v178 <- DispatchTableCall( cid=v634 List.[]<0>, v17, v517 T{int}) T{*?}
ParallelMove r0 <- r0
v286 <- LoadClassId(v178 T{X0}) [1, 600] int64
Branch if TestRange(v286 in [59-61]) T{bool} goto (111, 108)
B111
B108
  Loop 1
Branch if EqualityCompare(v286 T{_Smi} == v240) T{bool} goto (112, 114)
B112
B110
  Loop 1
v635 <- LoadClassId(v178 T{X0}) int64
MoveArgument(sp[0] <- v178 T{X0})
ParallelMove r0 <- r1
v281 <- DispatchTableCall( cid=v635 Object.toString<0>, v178 T{X0}) T{String}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:50 B117
B114
  Loop 1
Branch if TestRange(v286 T{_Smi} in [93-94]) T{bool} goto (115, 116)
B115
  Loop 1
ParallelMove r1 <- r0
v280 <- StaticCall:64( _stringToSafeString@0150898<0> v178 T{X0}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:66 B117
B116
  Loop 1
MoveArgument(sp[0] <- v178 T{X0})
v354 <- StaticCall:10( _toString@0150898<0> v178 T{X0}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:72 B117
B117
  Loop 1
ParallelMove fp[-8] <- r2
v368 <- LoadField(v293 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v368, v19 T{_Smi}) T{bool} goto (120, 121)
B120
B121
  Loop 1
ParallelMove r1 <- fp[-6]
StaticCall:26( _consumeBuffer@0150898<0> v171 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-6], r2 <- fp[-8]
StaticCall:28( _addPart@0150898<0> v171 T{StringBuffer}, v293 T{String}, using unchecked entrypoint)
ParallelMove  goto:30 B122
B122
  Loop 1
v180 <- BinaryInt64Op(+ [tr], v173, v542 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r2 goto:112 B11
B7
ParallelMove r1 <- fp[-6], r2 <- C
StaticCall:116( write<0> v171, v176, using unchecked entrypoint)
ParallelMove r2 <- fp[-6] goto:122 B13
B12
ParallelMove r2 <- C goto:124 B13
B13
ParallelMove fp[-5] <- r2
v24 <- AllocateObject:126(cls=StringBuffer) T{StringBuffer}
ParallelMove r1 <- r0, r0 <- r0
ParallelMove fp[-6] <- r0
StaticCall:128( StringBuffer.<0> v24)
v4 <- AllocateContext:12(num_variables=2) T{Context}
ParallelMove r2 <- r0, r0 <- fp[-6]
ParallelMove fp[-8] <- r2
StoreField(v4 . argumentsBuf = v24, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
v25 <- StaticCall:130( get:positionalArguments<0> v3, result_type = T{!null}) T{List<dynamic>}
ParallelMove r1 <- r0, r2 <- fp[-8]
ParallelMove fp[-6] <- r1
StoreField(v4 . argumentCount = v19)
ParallelMove r3 <- C goto:176 B19
B19
  Loop 0
  Loop Header
ParallelMove fp[-7] <- r3
CheckStackOverflow:180(stack=0, loop=1)
v636 <- LoadClassId(<non-smi> v25) int64
MoveArgument(sp[0] <- v25)
ParallelMove r0 <- r0
v27 <- DispatchTableCall( cid=v636 List.length<0>, v25) T{int}
ParallelMove r0 <- r0
v520 <- UnboxInt64([non-speculative], v27 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r0 <- fp[-7]
Branch if RelationalOp(<, v537 T{int}, v520 T{_Smi}) T{bool} goto (14, 15)
B14
  Loop 0
ParallelMove r2 <- fp[-8]
v161 <- LoadField(v4 . argumentCount) [-9223372036854775808, 9223372036854775807] T{int}
v521 <- UnboxInt64([non-speculative], v161) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>, v521 T{int}, v541 T{_Smi}) T{bool} goto (105, 17)
B105
  Loop 0
v169 <- LoadField(v4 . argumentsBuf) T{StringBuffer}
ParallelMove r1 <- r0, fp[-9] <- r0
StaticCall:26( _consumeBuffer@0150898<0> v169 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-9], r2 <- C
StaticCall:28( _addPart@0150898<0> v169 T{StringBuffer}, v170 T{_OneByteString}, using unchecked entrypoint)
ParallelMove  goto:164 B18
B17
B18
  Loop 0
v163 <- LoadField(v4 . argumentsBuf) T{StringBuffer}
ParallelMove fp[-9] <- r3
v164 <- LoadField(v4 . argumentCount) [-9223372036854775808, 9223372036854775807] T{int}
v637 <- LoadClassId(<non-smi> v25) int64
MoveArgument(sp[1] <- v25)
MoveArgument(sp[0] <- v164)
ParallelMove r0 <- r4
v165 <- DispatchTableCall( cid=v637 List.[]<0>, v25, v164) T{*?}
ParallelMove r0 <- r0
v229 <- LoadClassId(v165 T{X0?}) [1, 600] int64
Branch if TestRange(v229 in [59-61]) T{bool} goto (89, 86)
B89
B86
  Loop 0
Branch if EqualityCompare(v229 T{_Smi} == v240) T{bool} goto (90, 87)
B90
B87
  Loop 0
Branch if StrictCompare:28(===, v165 T{X0?}, v0 T{Null?}) goto (91, 92)
B91
B88
  Loop 0
v638 <- LoadClassId(v165 T{X0?}) int64
MoveArgument(sp[0] <- v165 T{X0?})
ParallelMove r0 <- r1
v224 <- DispatchTableCall( cid=v638 Object.toString<0>, v165 T{X0?}) T{String}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:50 B95
B92
  Loop 0
Branch if TestRange(v229 T{_Smi} in [93-94]) T{bool} goto (93, 94)
B93
  Loop 0
ParallelMove r1 <- r0
v223 <- StaticCall:64( _stringToSafeString@0150898<0> v165 T{X0}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:66 B95
B94
  Loop 0
MoveArgument(sp[0] <- v165 T{X0})
v324 <- StaticCall:10( _toString@0150898<0> v165 T{X0}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:72 B95
B95
  Loop 0
ParallelMove fp[-10] <- r2
v338 <- LoadField(v241 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v338, v19 T{_Smi}) T{bool} goto (98, 99)
B98
B99
  Loop 0
ParallelMove r1 <- fp[-9]
StaticCall:26( _consumeBuffer@0150898<0> v163 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-9], r2 <- fp[-10]
StaticCall:28( _addPart@0150898<0> v163 T{StringBuffer}, v241 T{String}, using unchecked entrypoint)
ParallelMove  goto:30 B100
B100
  Loop 0
v167 <- LoadField(v4 . argumentCount) [-9223372036854775808, 9223372036854775807] T{int}
v522 <- UnboxInt64([non-speculative], v167) [-9223372036854775808, 9223372036854775807] int64
v168 <- BinaryInt64Op(+ [tr], v522 T{int}, v542 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v523 <- BoxInt64(v168) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v4 . argumentCount = v523 T{int})
ParallelMove r3 <- r3, r1 <- fp[-6] goto:178 B19
B15
ParallelMove r3 <- fp[2], r0 <- fp[-1], r2 <- fp[-8]
ParallelMove r1 <- r0
v29 <- StaticCall:182( get:namedArguments<0> v3, result_type = T{!null}) T{Map<Symbol, dynamic>}
ParallelMove r1 <- C, r2 <- fp[-8], r0 <- r0
ParallelMove fp[-6] <- r0
v31 <- AllocateClosure:184(v30, v4) T{_Closure}
ParallelMove r0 <- r0, r1 <- fp[-6]
v639 <- LoadClassId(<non-smi> v29) int64
ParallelMove r0 <- r2, r1 <- r1, r2 <- r0
DispatchTableCall( cid=v639 Map.forEach<0>, v29, v31)
ParallelMove r0 <- fp[2]
v32 <- LoadField(v2 . _receiver@0150898 {final}) T{Object??}
ParallelMove r0 <- fp[-1], fp[-6] <- r2
v33 <- LoadField(v3 . _type@0150898) [-9223372036854775808, 9223372036854775807] int64
v524 <- BoxInt64(v33) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[2] <- v32 T{Object??})
MoveArgument(sp[1] <- v6)
MoveArgument(sp[0] <- v524 T{int})
v34 <- StaticCall:192( _existingMethodSignature@0150898<0> v32 T{Object??}, v6, v524 T{int}) T{String??}
ParallelMove r2 <- r0
ParallelMove fp[-10] <- r2
Branch if StrictCompare:194(!==, v34, v0) goto (20, 21)
B20
ParallelMove r3 <- C goto:204 B22
B21
ParallelMove r3 <- C goto:206 B22
B22
ParallelMove fp[-9] <- r3
ParallelMove r0 <- fp[-3]
v626 <- IntConverter(uint32->int64, v13) int64
Branch if RelationalOp(>=, v626 T{_Smi}, v541 T{_Smi}) T{bool} goto (23, 26)
B23
ParallelMove r0 <- fp[-3]
v625 <- IntConverter(uint32->int64, v13) int64
Branch if RelationalOp(<, v625 T{_Smi}, v543 T{_Smi}) T{bool} goto (24, 27)
B24
ParallelMove r4 <- C
ParallelMove r5 <- fp[-3]
v628 <- IntConverter(uint32->int64, v13) int64
ParallelMove r0 <- C, r1 <- r5
GenericCheckBound:228(v543 T{_Smi}, v628 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v544 <- LoadIndexed:228([_List] v158, v628 T{_Smi}) T{String}
ParallelMove r0 <- r0 goto:242 B28
B27
B26
B25
ParallelMove r0 <- C goto:244 B28
B28
ParallelMove fp[-1] <- r0
v40 <- AllocateObject:246(cls=StringBuffer) T{StringBuffer}
ParallelMove r0 <- r0
ParallelMove fp[-11] <- r0
MoveArgument(sp[0] <- v41)
ParallelMove r1 <- r0
StaticCall:248( StringBuffer.<0> v40, v41)
ParallelMove r0 <- fp[-4]
v622 <- IntConverter(uint32->int64, v11) int64
Branch if RelationalOp:430(<=, v622 T{_Smi}, v545 T{_Smi}) T{bool} goto (46, 47)
B46
ParallelMove r0 <- fp[-4]
v621 <- IntConverter(uint32->int64, v11) int64
Branch if RelationalOp:440(<=, v621 T{_Smi}, v542 T{_Smi}) T{bool} goto (48, 49)
B48
ParallelMove r0 <- fp[-4]
v620 <- IntConverter(uint32->int64, v11) int64
Branch if RelationalOp:450(<=, v620 T{_Smi}, v541 T{_Smi}) T{bool} goto (50, 51)
B50
ParallelMove r0 <- fp[-4]
v514 <- BoxUint32(v11) [0, 7] T{_Smi}
Branch if StrictCompare:460(===, v514, v19) T{bool} goto (52, 53)
B52
ParallelMove r3 <- fp[-6]
Branch if StrictCompare:252(===, v32 T{Object??}, v0) goto (29, 33)
B29
ParallelMove r4 <- fp[-10]
Branch if StrictCompare:258(!==, v34, v0) goto (30, 31)
B30
ParallelMove r7 <- fp[-2], r5 <- fp[-9], r6 <- fp[-1]
ParallelMove r1 <- C, r2 <- C
v154 <- CreateArray:264(v0, v10) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v154, v19, v155, NoStoreBarrier)
ParallelMove r3 <- fp[-1]
StoreIndexed([_List] v154, v49, v39, NoStoreBarrier)
StoreIndexed([_List] v154, v43, v50, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreIndexed([_List] v154, v8, v6, NoStoreBarrier)
StoreIndexed([_List] v154, v14, v51, NoStoreBarrier)
ParallelMove r2 <- fp[-9]
StoreIndexed([_List] v154, v52, v36, NoStoreBarrier)
StoreIndexed([_List] v154, v53, v117, NoStoreBarrier)
MoveArgument(sp[0] <- v154)
v156 <- StaticCall:266( _interpolate@0150898<0> v154, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- fp[-11], r2 <- r0
StaticCall:268( writeln<0> v40, v156, using unchecked entrypoint)
ParallelMove  goto:280 B32
B31
ParallelMove r0 <- fp[-2], r3 <- fp[-1]
ParallelMove r1 <- C, r2 <- C
v150 <- CreateArray:272(v0, v52) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v150, v19, v151, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
StoreIndexed([_List] v150, v49, v39, NoStoreBarrier)
StoreIndexed([_List] v150, v43, v50, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreIndexed([_List] v150, v8, v6, NoStoreBarrier)
StoreIndexed([_List] v150, v14, v152, NoStoreBarrier)
MoveArgument(sp[0] <- v150)
v153 <- StaticCall:274( _interpolate@0150898<0> v150, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- fp[-11], r2 <- r0
StaticCall:276( writeln<0> v40, v153, using unchecked entrypoint)
ParallelMove  goto:282 B32
B32
ParallelMove r0 <- C goto:372 B43
B33
ParallelMove r0 <- r3, r2 <- fp[-9], r1 <- fp[-1]
v194 <- LoadClassId(v32 T{Object?}) [1, 600] int64
Branch if EqualityCompare(v194 == v195) T{bool} goto (34, 35)
B34
ParallelMove r3 <- fp[-2]
ParallelMove r1 <- C, r2 <- C
v146 <- CreateArray:298(v0, v8) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v146, v19, v147, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreIndexed([_List] v146, v49, v6, NoStoreBarrier)
StoreIndexed([_List] v146, v43, v51, NoStoreBarrier)
MoveArgument(sp[0] <- v146)
v148 <- StaticCall:300( _interpolate@0150898<0> v146, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- fp[-11], r2 <- r0
StaticCall:302( writeln<0> v40, v148, using unchecked entrypoint)
ParallelMove r0 <- C goto:366 B42
B35
Branch if EqualityCompare(v194 T{_Smi} == v197) T{bool} goto (36, 39)
B36
ParallelMove r3 <- fp[-2]
v640 <- LoadClassId(<non-smi> v6) int64
MoveArgument(sp[1] <- v6)
MoveArgument(sp[0] <- v136)
ParallelMove r0 <- r0
v137 <- DispatchTableCall( cid=v640 String.==<0>, v6, v136) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:320(===, v137 T{bool}, v16) goto (37, 40)
BoolTest
B37
ParallelMove r1 <- fp[-6]
v641 <- LoadClassId(v32 T{Object?}) int64
MoveArgument(sp[0] <- v32 T{Object?})
ParallelMove r0 <- r0
v139 <- DispatchTableCall( cid=v641 Object.toString<0>, v32 T{Object?}) T{String}
ParallelMove r1 <- C, r2 <- C, r0 <- r0
ParallelMove fp[-12] <- r0
v140 <- CreateArray:332(v0, v52) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v140, v19, v141, NoStoreBarrier)
ParallelMove r1 <- fp[-12]
StoreIndexed([_List] v140, v49, v139 T{String}, NoStoreBarrier)
StoreIndexed([_List] v140, v43, v142, NoStoreBarrier)
StoreIndexed([_List] v140, v8, v139 T{String}, NoStoreBarrier)
StoreIndexed([_List] v140, v14, v143, NoStoreBarrier)
MoveArgument(sp[0] <- v140)
v144 <- StaticCall:334( _interpolate@0150898<0> v140, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- fp[-11], r2 <- r0
StaticCall:336( writeln<0> v40, v144, using unchecked entrypoint)
ParallelMove r0 <- C goto:360 B41
B40
B39
B38
ParallelMove r1 <- C, r2 <- C
v130 <- CreateArray:348(v0, v105) T{_List}
ParallelMove r0 <- r0
ParallelMove fp[-12] <- r0
StoreIndexed([_List] v130, v19, v131, NoStoreBarrier)
MoveArgument(sp[0] <- v32 T{Object?})
v133 <- StaticCall:352( get:runtimeType<0> v32 T{Object?}, recognized_kind = ObjectRuntimeType) T{Type}
ParallelMove r1 <- fp[-12], r0 <- r0
StoreIndexed([_List] v130, v49, v133 T{Type})
ParallelMove r2 <- fp[-12]
StoreIndexed([_List] v130, v43, v116, NoStoreBarrier)
ParallelMove r1 <- r2, r0 <- fp[-1]
StoreIndexed([_List] v130, v8, v39)
StoreIndexed([_List] v130, v14, v50, NoStoreBarrier)
ParallelMove r1 <- r2, r0 <- fp[-2]
StoreIndexed([_List] v130, v52, v6)
StoreIndexed([_List] v130, v53, v51, NoStoreBarrier)
ParallelMove r1 <- r2, r0 <- fp[-9]
StoreIndexed([_List] v130, v10, v36)
StoreIndexed([_List] v130, v109, v117, NoStoreBarrier)
MoveArgument(sp[0] <- v130)
v134 <- StaticCall:354( _interpolate@0150898<0> v130, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- fp[-11], r2 <- r0
StaticCall:356( writeln<0> v40, v134, using unchecked entrypoint)
ParallelMove r0 <- C goto:362 B41
B41
B42
B43
ParallelMove r3 <- fp[-2], r0 <- r0 goto:378 B44
B53
B51
ParallelMove r0 <- fp[-2]
ParallelMove r1 <- C, r2 <- C
v112 <- CreateArray:380(v0, v105) T{_List}
ParallelMove r0 <- r0
ParallelMove fp[-12] <- r0
StoreIndexed([_List] v112, v19, v113, NoStoreBarrier)
MoveArgument(sp[0] <- v32 T{Object??})
v115 <- StaticCall:384( get:runtimeType<0> v32 T{Object??}, recognized_kind = ObjectRuntimeType) T{Type}
ParallelMove r1 <- fp[-12], r0 <- r0
StoreIndexed([_List] v112, v49, v115 T{Type})
ParallelMove r2 <- fp[-12]
StoreIndexed([_List] v112, v43, v116, NoStoreBarrier)
ParallelMove r1 <- r2, r0 <- fp[-1]
StoreIndexed([_List] v112, v8, v39)
StoreIndexed([_List] v112, v14, v50, NoStoreBarrier)
ParallelMove r1 <- r2, r0 <- fp[-2]
StoreIndexed([_List] v112, v52, v6)
StoreIndexed([_List] v112, v53, v51, NoStoreBarrier)
ParallelMove r1 <- r2, r0 <- fp[-9]
StoreIndexed([_List] v112, v10, v36)
StoreIndexed([_List] v112, v109, v117, NoStoreBarrier)
MoveArgument(sp[0] <- v112)
v118 <- StaticCall:386( _interpolate@0150898<0> v112, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- fp[-11], r2 <- r0
StaticCall:388( writeln<0> v40, v118, using unchecked entrypoint)
ParallelMove r1 <- C, r2 <- C
v119 <- CreateArray:390(v0, v43) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v119, v19, v120, NoStoreBarrier)
ParallelMove r3 <- fp[-2]
StoreIndexed([_List] v119, v49, v6, NoStoreBarrier)
MoveArgument(sp[0] <- v119)
v121 <- StaticCall:392( _interpolate@0150898<0> v119, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
ParallelMove r3 <- r0, r0 <- C goto:394 B44
B49
ParallelMove r3 <- fp[-2], r0 <- fp[-6], r4 <- fp[-9], r5 <- fp[-1]
ParallelMove r1 <- C, r2 <- C
v106 <- CreateArray:396(v0, v105) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v106, v19, v107, NoStoreBarrier)
ParallelMove r3 <- fp[-1]
StoreIndexed([_List] v106, v49, v39, NoStoreBarrier)
StoreIndexed([_List] v106, v43, v50, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreIndexed([_List] v106, v8, v6, NoStoreBarrier)
StoreIndexed([_List] v106, v14, v51, NoStoreBarrier)
ParallelMove r4 <- fp[-9]
StoreIndexed([_List] v106, v52, v36, NoStoreBarrier)
StoreIndexed([_List] v106, v53, v58, NoStoreBarrier)
ParallelMove r2 <- fp[-6]
StoreIndexed([_List] v106, v10, v32 T{Object??}, NoStoreBarrier)
StoreIndexed([_List] v106, v109, v60, NoStoreBarrier)
MoveArgument(sp[0] <- v106)
v110 <- StaticCall:400( _interpolate@0150898<0> v106, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- fp[-11], r2 <- r0
StaticCall:402( writeln<0> v40, v110, using unchecked entrypoint)
ParallelMove r3 <- fp[-2], r0 <- C goto:404 B44
B47
ParallelMove r4 <- fp[-9], r3 <- fp[-1]
ParallelMove r0 <- fp[-4]
v619 <- IntConverter(uint32->int64, v11) int64
Branch if RelationalOp:472(<=, v619 T{_Smi}, v538 T{_Smi}) T{bool} goto (54, 55)
B54
ParallelMove r0 <- fp[-2], r3 <- fp[-6]
ParallelMove r1 <- C, r2 <- C
v56 <- CreateArray:406(v0, v10) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v56, v19, v57, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreIndexed([_List] v56, v49, v6, NoStoreBarrier)
StoreIndexed([_List] v56, v43, v51, NoStoreBarrier)
ParallelMove r4 <- fp[-9]
StoreIndexed([_List] v56, v8, v36, NoStoreBarrier)
StoreIndexed([_List] v56, v14, v58, NoStoreBarrier)
ParallelMove r2 <- fp[-6]
StoreIndexed([_List] v56, v52, v32 T{Object??}, NoStoreBarrier)
StoreIndexed([_List] v56, v53, v60, NoStoreBarrier)
MoveArgument(sp[0] <- v56)
v61 <- StaticCall:410( _interpolate@0150898<0> v56, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- fp[-11], r2 <- r0
StaticCall:412( writeln<0> v40, v61, using unchecked entrypoint)
ParallelMove r1 <- C, r2 <- C
v62 <- CreateArray:414(v0, v43) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v62, v19, v63, NoStoreBarrier)
ParallelMove r5 <- fp[-2]
StoreIndexed([_List] v62, v49, v6, NoStoreBarrier)
MoveArgument(sp[0] <- v62)
v64 <- StaticCall:416( _interpolate@0150898<0> v62, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
ParallelMove r3 <- r0, r0 <- C goto:418 B44
B55
ParallelMove r5 <- fp[-2], r0 <- fp[-4]
v515 <- BoxUint32(v11) [0, 7] T{_Smi}
Branch if StrictCompare:482(===, v515, v14) T{bool} goto (56, 57)
B56
ParallelMove r1 <- C, r2 <- C
v47 <- CreateArray:420(v0, v10) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v47, v19, v48, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
StoreIndexed([_List] v47, v49, v39, NoStoreBarrier)
StoreIndexed([_List] v47, v43, v50, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreIndexed([_List] v47, v8, v6, NoStoreBarrier)
StoreIndexed([_List] v47, v14, v51, NoStoreBarrier)
ParallelMove r2 <- fp[-9]
StoreIndexed([_List] v47, v52, v36, NoStoreBarrier)
StoreIndexed([_List] v47, v53, v54, NoStoreBarrier)
MoveArgument(sp[0] <- v47)
v55 <- StaticCall:422( _interpolate@0150898<0> v47, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- fp[-11], r2 <- r0
StaticCall:424( writeln<0> v40, v55, using unchecked entrypoint)
ParallelMove r3 <- fp[-2], r0 <- C goto:426 B44
B57
B45
ParallelMove r3 <- fp[-2], r0 <- C goto:494 B44
B44
ParallelMove fp[-1] <- r3, fp[-2] <- r0
ParallelMove r1 <- fp[-4]
v618 <- IntConverter(uint32->int64, v11) int64
Branch if EqualityCompare(v618 T{_Smi} == v540 T{_Smi}) T{bool} goto (58, 59)
B58
ParallelMove r1 <- fp[-11], r2 <- C
StaticCall:506( writeln<0> v40, v103, using unchecked entrypoint)
ParallelMove  goto:522 B60
B59
ParallelMove r1 <- C, r2 <- C
v68 <- CreateArray:510(v0, v43) T{_List}
ParallelMove r0 <- r0
ParallelMove fp[-9] <- r0
StoreIndexed([_List] v68, v19, v69, NoStoreBarrier)
ParallelMove r1 <- fp[-6]
v71 <- StaticCall:514( safeToString<0> v32 T{Object??}) T{String}
ParallelMove r1 <- fp[-9], r0 <- r0
StoreIndexed([_List] v68, v49, v71)
MoveArgument(sp[0] <- v68)
v72 <- StaticCall:516( _interpolate@0150898<0> v68, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- fp[-11], r2 <- r0
StaticCall:518( writeln<0> v40, v72, using unchecked entrypoint)
ParallelMove  goto:524 B60
B60
ParallelMove r0 <- fp[-3]
v624 <- IntConverter(uint32->int64, v13) int64
Branch if EqualityCompare(v624 T{_Smi} == v541 T{_Smi}) T{bool} goto (61, 68)
B61
ParallelMove r0 <- fp[-2]
Branch if StrictCompare:538(===, v66 T{bool}, v16) goto (62, 63)
BoolTest
B62
MoveArgument(sp[0] <- v32 T{Object??})
v102 <- StaticCall:546( _interpolateSingle@0150898<0> v32 T{Object??}) T{String}
ParallelMove r0 <- r0
ParallelMove r3 <- r0 goto:554 B64
B63
ParallelMove r3 <- fp[-1] goto:556 B64
B64
ParallelMove r1 <- C, r2 <- C, fp[-2] <- r3
v94 <- CreateArray:558(v0, v43) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v94, v19, v78, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreIndexed([_List] v94, v49, v93, NoStoreBarrier)
MoveArgument(sp[0] <- v94)
v95 <- StaticCall:560( _interpolate@0150898<0> v94, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- fp[-11], r2 <- r0
StaticCall:562( write<0> v40, v95, using unchecked entrypoint)
ParallelMove r2 <- fp[-5]
Branch if StrictCompare:564(!==, v21, v0) goto (65, 66)
B65
ParallelMove r1 <- fp[-11], r2 <- r2
StaticCall:570( write<0> v40, v21 T{StringBuffer}, using unchecked entrypoint)
ParallelMove  goto:576 B67
B66
B67
ParallelMove r1 <- C, r2 <- C
v96 <- CreateArray:580(v0, v8) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v96, v19, v97, NoStoreBarrier)
ParallelMove r3 <- fp[-8]
v98 <- LoadField(v4 . argumentsBuf) T{StringBuffer}
StoreIndexed([_List] v96, v49, v98, NoStoreBarrier)
StoreIndexed([_List] v96, v43, v99, NoStoreBarrier)
MoveArgument(sp[0] <- v96)
v100 <- StaticCall:582( _interpolate@0150898<0> v96, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- fp[-11], r2 <- r0
StaticCall:584( write<0> v40, v100, using unchecked entrypoint)
ParallelMove  goto:644 B75
B68
ParallelMove r3 <- fp[-8]
v74 <- LoadField(v4 . argumentCount) [-9223372036854775808, 9223372036854775807] T{int}
Branch if StrictCompare(===, v74 T{int}, v19 T{_Smi}) T{bool} goto (69, 70)
B69
ParallelMove r0 <- fp[-1]
ParallelMove r1 <- C, r2 <- C
v85 <- CreateArray:598(v0, v43) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v85, v19, v78, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
StoreIndexed([_List] v85, v49, v65, NoStoreBarrier)
MoveArgument(sp[0] <- v85)
v86 <- StaticCall:600( _interpolate@0150898<0> v85, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- fp[-11], r2 <- r0
StaticCall:602( write<0> v40, v86, using unchecked entrypoint)
ParallelMove  goto:638 B74
B70
ParallelMove r0 <- fp[-3]
v623 <- IntConverter(uint32->int64, v13) int64
Branch if EqualityCompare(v623 T{_Smi} == v545 T{_Smi}) T{bool} goto (71, 72)
B71
ParallelMove r0 <- fp[-1]
ParallelMove r1 <- C, r2 <- C
v82 <- CreateArray:616(v0, v8) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v82, v19, v78, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
StoreIndexed([_List] v82, v49, v65, NoStoreBarrier)
ParallelMove r3 <- fp[-8]
v83 <- LoadField(v4 . argumentsBuf) T{StringBuffer}
StoreIndexed([_List] v82, v43, v83, NoStoreBarrier)
MoveArgument(sp[0] <- v82)
v84 <- StaticCall:618( _interpolate@0150898<0> v82, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- fp[-11], r2 <- r0
StaticCall:620( write<0> v40, v84, using unchecked entrypoint)
ParallelMove  goto:632 B73
B72
ParallelMove r0 <- fp[-1]
ParallelMove r1 <- C, r2 <- C
v77 <- CreateArray:624(v0, v14) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v77, v19, v78, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
StoreIndexed([_List] v77, v49, v65, NoStoreBarrier)
StoreIndexed([_List] v77, v43, v79, NoStoreBarrier)
ParallelMove r2 <- fp[-8]
v80 <- LoadField(v4 . argumentsBuf) T{StringBuffer}
StoreIndexed([_List] v77, v8, v80, NoStoreBarrier)
MoveArgument(sp[0] <- v77)
v81 <- StaticCall:626( _interpolate@0150898<0> v77, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- fp[-11], r2 <- r0
StaticCall:628( write<0> v40, v81, using unchecked entrypoint)
ParallelMove  goto:634 B73
B73
B74
B75
Branch if StrictCompare:648(!==, v34, v0) goto (76, 77)
B76
ParallelMove r3 <- fp[-1]
ParallelMove r1 <- C, r2 <- C
v89 <- CreateArray:654(v0, v8) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v89, v19, v90, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
StoreIndexed([_List] v89, v49, v65, NoStoreBarrier)
ParallelMove r1 <- fp[-10]
StoreIndexed([_List] v89, v43, v34 T{String?}, NoStoreBarrier)
MoveArgument(sp[0] <- v89)
v91 <- StaticCall:656( _interpolate@0150898<0> v89, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- fp[-11], r2 <- r0
StaticCall:658( write<0> v40, v91, using unchecked entrypoint)
ParallelMove  goto:664 B78
B77
B78
MoveArgument(sp[0] <- v40)
v88 <- StaticCall:668( toString<0> v40, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:670(v88)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r0, r2 <- r2
StaticCall:10( write<0> v2, v3, using unchecked entrypoint)
ParallelMove r1 <- fp[-1], r2 <- C
StaticCall:12( write<0> v2, v4, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:14(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _namedArguments@0150898) T{Map<Symbol, Object?>??}
Branch if StrictCompare:12(===, v3, v0) goto (3, 12)
B3
v11 <- LoadField(v2 . _argumentsDescriptor@0150898) T{List<Object?>??}
ParallelMove fp[-1] <- r2
CheckNull:20(v11, CastError) T{List<Object?>?}
v132 <- LoadClassId(<non-smi> v11 T{List<Object?>?}) int64
MoveArgument(sp[1] <- v11 T{List<Object?>?})
MoveArgument(sp[0] <- v12)
ParallelMove r0 <- r0
v13 <- DispatchTableCall( cid=v132 List.[]<0>, v11 T{List<Object?>?}, v12) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-3] <- r3
t0 <- AssertAssignable:24(v13 T{X0?}, v14, ' in type cast', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-3]
v114 <- UnboxInt64([non-speculative], v13 T{int}) [-9223372036854775808, 9223372036854775807] int64
v16 <- BinaryInt64Op(- [tr], v114 T{int}, v83 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-1], fp[-4] <- r2
v133 <- LoadClassId(<non-smi> v11 T{List<Object?>?}) int64
MoveArgument(sp[1] <- v11 T{List<Object?>?})
MoveArgument(sp[0] <- v17)
ParallelMove r0 <- r0
v18 <- DispatchTableCall( cid=v133 List.[]<0>, v11 T{List<Object?>?}, v17) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-3] <- r3
t0 <- AssertAssignable:30(v18 T{X0?}, v14, ' in type cast', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-3]
v115 <- UnboxInt64([non-speculative], v18 T{int}) [-9223372036854775808, 9223372036854775807] int64
v20 <- BinaryInt64Op(- [tr], v115 T{int}, v83 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-4]
v21 <- BinaryInt64Op(- [tr], v16, v20) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-5] <- r2
Branch if EqualityCompare(v21 == v123 T{_Smi}) T{bool} goto (4, 8)
B4
ParallelMove r0 <- fp[-2], r1 <- C
StoreField(v2 T{_InvocationMirror} . _namedArguments@0150898 = v48 T{_ConstMap})
ParallelMove r0 <- r1
DartReturn:48(v48)
B8
ParallelMove r0 <- fp[-2]
ParallelMove r1 <- r0
v25 <- StaticCall:52( get:_typeArgsLen@0150898<0> v2, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0
v26 <- RelationalOp(>, v25, v123 T{_Smi}) T{bool}
v94 <- IfThenElse(===, v26, v24 ? 1 : 0) [0, 1] T{_Smi}
BoolTest
ParallelMove r1 <- C, fp[-3] <- r0
v29 <- StaticCall:72( Map.<0> v28, result_type = T{_Map}) T{_Map}
ParallelMove r2 <- r0
ParallelMove fp[-7] <- r2
ParallelMove r7 <- C goto:118 B11
B11
  Loop 0
  Loop Header
ParallelMove fp[-6] <- r7
CheckStackOverflow:122(stack=0, loop=1)
Branch if RelationalOp(<, v30, v21) T{bool} goto (9, 10)
B9
  Loop 0
v84 <- ShiftInt64Op(<< [tr], v30, v83) [-9223372036854775808, 9223372036854775807] int64
v36 <- BinaryInt64Op(+ [tr], v84 T{int}, v124 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-4] <- r8
v37 <- BinaryInt64Op(+ [tr], v36, v83 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v117 <- BoxInt64(v37) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v134 <- LoadClassId(<non-smi> v11 T{List<Object?>?}) int64
MoveArgument(sp[1] <- v11 T{List<Object?>?})
MoveArgument(sp[0] <- v117 T{int})
ParallelMove r0 <- r1
v38 <- DispatchTableCall( cid=v134 List.[]<0>, v11 T{List<Object?>?}, v117 T{int}) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-8] <- r3
t0 <- AssertAssignable:96(v38 T{X0?}, v14, ' in type cast', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[-4]
v116 <- BoxInt64(v36) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0, r1 <- fp[-1]
v135 <- LoadClassId(<non-smi> v11 T{List<Object?>?}) int64
MoveArgument(sp[1] <- v11 T{List<Object?>?})
MoveArgument(sp[0] <- v116 T{int})
ParallelMove r0 <- r2
v40 <- DispatchTableCall( cid=v135 List.[]<0>, v11 T{List<Object?>?}, v116 T{int}) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-9] <- r3
t0 <- AssertAssignable:100(v40 T{X0?}, v41, ' in type cast', instantiator_type_args(v0), function_type_args(v0)) T{String}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[-2]
v43 <- LoadField(v2 . _arguments@0150898) T{List<Object?>??}
CheckNull:104(v43, CastError) T{List<Object?>?}
ParallelMove r0 <- fp[-8]
v118 <- UnboxInt64([non-speculative], v38 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- fp[-3]
v119 <- UnboxInt64([non-speculative], v94 T{_Smi}) [0, 1] int64
v44 <- BinaryInt64Op(+ [tr], v119 T{_Smi}, v118 T{int}) [-9223372036854775808, 9223372036854775807] int64
v120 <- BoxInt64(v44) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v136 <- LoadClassId(<non-smi> v43 T{List<Object?>?}) int64
MoveArgument(sp[1] <- v43 T{List<Object?>?})
MoveArgument(sp[0] <- v120 T{int})
ParallelMove r0 <- r1
v45 <- DispatchTableCall( cid=v136 List.[]<0>, v43 T{List<Object?>?}, v120 T{int}) T{*?}
ParallelMove r0 <- r0
ParallelMove fp[-8] <- r0
v46 <- AllocateObject:110(cls=Symbol) T{Symbol}
ParallelMove r1 <- r0, r0 <- fp[-9]
ParallelMove fp[-10] <- r1
StoreField(v46 T{Symbol} . _name@9040228 = v40 T{String}, NoStoreBarrier)
MoveArgument(sp[0] <- v46 T{Symbol})
v91 <- StaticCall:10( get:hashCode<0> v46 T{Symbol}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v121 <- UnboxInt64([non-speculative], v91 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-7], r2 <- fp[-10], r3 <- fp[-8], r5 <- r5
StaticCall:16( _set@3220832<0> v29 T{_Map}, v46 T{Symbol}, v45 T{X0?}, v121 T{int}, using unchecked entrypoint)
ParallelMove r0 <- fp[-6]
v47 <- BinaryInt64Op(+ [tr], v30, v83 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r7 <- r7, r2 <- fp[-7] goto:120 B11
B10
ParallelMove r0 <- r5
ParallelMove r1 <- C, r2 <- fp[-7]
v32 <- StaticCall:124( Map.unmodifiable<0> v28, v29, result_type = T{UnmodifiableMapView}) T{UnmodifiableMapView}
ParallelMove r0 <- r0, r2 <- r0, r1 <- fp[-2]
StoreField(v2 T{_InvocationMirror} . _namedArguments@0150898 = v32 T{UnmodifiableMapView})
ParallelMove r0 <- r2 goto:132 B13
B12
B13
ParallelMove r0 <- r0
DartReturn:140(v122 T{Map<Symbol, Object?>?})
CheckStackOverflowSlowPath
slow path check null (cast) operation
CheckStackOverflowSlowPath
slow path check null (cast) operation
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r0, r2 <- r2
v5 <- StaticCall:12( LinkedHashMap.from<0> v2, v3, result_type = T{_Map}) T{_Map}
ParallelMove r1 <- fp[-1], r0 <- r0
ParallelMove fp[-1] <- r0
v4 <- AllocateObject:10(cls=UnmodifiableMapView, v2) T{UnmodifiableMapView}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v4 T{UnmodifiableMapView} . _map@3220832 = v5 T{_Map}, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:16(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, r1 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v4 <- AllocateContext:10(num_variables=2) T{Context}
ParallelMove r0 <- r0, r1 <- fp[-1]
ParallelMove fp[-3] <- r0
StoreField(v4 . :type_arguments = v2, NoStoreBarrier)
v24 <- LoadStaticField:4(_uninitializedIndex@3220832, CallsInitializer) T{_Uint32List}
ParallelMove r1 <- fp[-1], r0 <- r0
ParallelMove fp[-1] <- r0
v6 <- AllocateObject:12(cls=_Map, v2 T{*?}) T{_Map}
ParallelMove r1 <- r0, r0 <- fp[-1]
ParallelMove fp[-4] <- r1
StoreField(v6 T{_Map} . LinkedHashBase.index = v24 T{_Uint32List}, NoStoreBarrier)
StoreField(v6 T{_Map} . LinkedHashBase.hash_mask = v17 T{_Smi}, NoStoreBarrier)
v39 <- LoadStaticField:4(_uninitializedData@3220832, CallsInitializer) T{_List}
ParallelMove r1 <- r0, r0 <- fp[-4]
StoreField(v6 T{_Map} . LinkedHashBase.data = v39 T{_List}, NoStoreBarrier)
StoreField(v6 T{_Map} . LinkedHashBase.used_data = v17 T{_Smi}, NoStoreBarrier)
StoreField(v6 T{_Map} . LinkedHashBase.deleted_keys = v17 T{_Smi}, NoStoreBarrier)
ParallelMove r3 <- fp[-3]
StoreField(v4 . result = v6, NoStoreBarrier)
ParallelMove r1 <- C, r2 <- r3
v8 <- AllocateClosure:16(v7, v4) T{_Closure}
ParallelMove r0 <- r0, r1 <- fp[-2]
v74 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r2, r1 <- r1, r2 <- r0
DispatchTableCall( cid=v74 Map.forEach<0>, v3, v8)
ParallelMove r1 <- fp[-3]
v9 <- LoadField(v4 . result) T{_Map}
ParallelMove r0 <- r0
DartReturn:20(v9)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[4]
v5 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
v6 <- LoadField(v5 . result) T{_Map}
ParallelMove fp[-2] <- r3
v8 <- LoadField(v5 . :type_arguments) T{*?}
ParallelMove r0 <- fp[3], r2 <- r4, r1 <- C, fp[-1] <- r4
t1 <- AssertAssignable:10(v3, v7, ' in type cast', instantiator_type_args(v8), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[2], r2 <- fp[-1], r1 <- C
t2 <- AssertAssignable:12(v4, v10, ' in type cast', instantiator_type_args(v8 T{*?}), function_type_args(v0)) T{X1?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-2], r2 <- fp[3], r3 <- fp[2]
StaticCall:14( []=<0> v6, v3 T{X0?}, v4 T{X1?})
ParallelMove r0 <- C
DartReturn:16(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _argumentsDescriptor@0150898) T{List<Object?>??}
CheckNull:12(v3, CastError) T{List<Object?>?}
v23 <- LoadClassId(<non-smi> v3 T{List<Object?>?}) int64
MoveArgument(sp[1] <- v3 T{List<Object?>?})
MoveArgument(sp[0] <- v4)
ParallelMove r0 <- r2
v5 <- DispatchTableCall( cid=v23 List.[]<0>, v3 T{List<Object?>?}, v4) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-2] <- r3
t0 <- AssertAssignable:16(v5 T{X0?}, v6, ' in type cast', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-2]
v18 <- UnboxInt64([non-speculative], v5 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v18 T{int} == v20 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r1 <- fp[-1]
v11 <- LoadField(v2 . _delayedTypeArgumentsLen@0150898) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r3 goto:34 B5
B4
ParallelMove r0 <- r2 goto:36 B5
B5
ParallelMove r0 <- r0
DartReturn:38(v10)
CheckStackOverflowSlowPath
slow path check null (cast) operation
B0
B1
Enter frame
ParallelMove fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _positionalArguments@0150898) T{List<Object?>??}
Branch if StrictCompare:12(===, v3, v0) goto (3, 9)
B3
v7 <- LoadField(v2 . _argumentsDescriptor@0150898) T{List<Object?>??}
CheckNull:20(v7, CastError) T{List<Object?>?}
v72 <- LoadClassId(<non-smi> v7 T{List<Object?>?}) int64
MoveArgument(sp[1] <- v7 T{List<Object?>?})
MoveArgument(sp[0] <- v8)
ParallelMove r0 <- r2
v9 <- DispatchTableCall( cid=v72 List.[]<0>, v7 T{List<Object?>?}, v8) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-2] <- r3
t0 <- AssertAssignable:24(v9 T{X0?}, v10, ' in type cast', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-2]
v58 <- UnboxInt64([non-speculative], v9 T{int}) [-9223372036854775808, 9223372036854775807] int64
v13 <- BinaryInt64Op(- [tr], v58 T{int}, v63 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-3] <- r0
Branch if EqualityCompare(v13 == v64 T{_Smi}) T{bool} goto (4, 8)
B4
ParallelMove r2 <- fp[-1], r0 <- C
StoreField(v2 T{_InvocationMirror} . _positionalArguments@0150898 = v24 T{_ImmutableList})
ParallelMove r0 <- r0
DartReturn:40(v24)
B8
ParallelMove r2 <- fp[-1]
ParallelMove r1 <- r2
v17 <- StaticCall:44( get:_typeArgsLen@0150898<0> v2, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0
v18 <- RelationalOp(>, v17, v64 T{_Smi}) T{bool}
v46 <- IfThenElse(===, v18, v16 ? 1 : 0) [0, 1] T{_Smi}
BoolTest
ParallelMove r2 <- fp[-1]
v20 <- LoadField(v2 . _arguments@0150898) T{List<Object?>??}
CheckNull:66(v20, CastError) T{List<Object?>?}
v60 <- UnboxInt64([non-speculative], v46 T{_Smi}) [0, 1] int64
v22 <- BinaryInt64Op(+ [tr], v60 T{_Smi}, v63 T{_Smi}) [1, 2] int64
ParallelMove r5 <- fp[-3]
v59 <- BoxInt64(v13) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v61 <- BoxInt64(v22) [1, 2] T{_Smi}
MoveArgument(sp[3] <- v21)
MoveArgument(sp[2] <- v20 T{List<Object?>?})
MoveArgument(sp[1] <- v61)
MoveArgument(sp[0] <- v59 T{int})
v23 <- StaticCall:70( _ImmutableList@0150898._from@0150898<0> v21, v20 T{List<Object?>?}, v61, v59 T{int}, result_type = T{_ImmutableList}) T{_ImmutableList}
ParallelMove r0 <- r0, r2 <- r0, r1 <- fp[-1]
StoreField(v2 T{_InvocationMirror} . _positionalArguments@0150898 = v23 T{_ImmutableList})
ParallelMove r0 <- r2 goto:78 B10
B9
B10
ParallelMove r0 <- r0
DartReturn:86(v62 T{List<Object?>?})
CheckStackOverflowSlowPath
slow path check null (cast) operation
slow path check null (cast) operation
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _typeArguments@0150898) T{List<Type>??}
Branch if StrictCompare:12(===, v3, v0) goto (3, 6)
B3
ParallelMove r1 <- r0
v5 <- StaticCall:18( get:_typeArgsLen@0150898<0> v2, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0
Branch if EqualityCompare(v5 == v42 T{_Smi}) T{bool} goto (4, 5)
B4
ParallelMove r1 <- fp[-1], r0 <- C
StoreField(v2 T{_InvocationMirror} . _typeArguments@0150898 = v13 T{_ImmutableList})
ParallelMove r0 <- r0
DartReturn:32(v13)
B5
ParallelMove r1 <- fp[-1]
v9 <- LoadField(v2 . _arguments@0150898) T{List<Object?>??}
CheckNull:38(v9, CastError) T{List<Object?>?}
v50 <- LoadClassId(<non-smi> v9 T{List<Object?>?}) int64
MoveArgument(sp[1] <- v9 T{List<Object?>?})
MoveArgument(sp[0] <- v6)
ParallelMove r0 <- r2
v10 <- DispatchTableCall( cid=v50 List.[]<0>, v9 T{List<Object?>?}, v6) T{*?}
ParallelMove r1 <- fp[-1], r0 <- r0
ParallelMove fp[-2] <- r0
v11 <- StaticCall:42( get:_typeArgsLen@0150898<0> v2, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0
v40 <- BoxInt64(v11) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[1] <- v10 T{X0?})
MoveArgument(sp[0] <- v40 T{int})
v12 <- StaticCall:44( _unpackTypeArguments@0150898<0> v10 T{X0?}, v40 T{int}, result_type = T{!null}) T{List<Type>}
ParallelMove r0 <- r0, r1 <- r0, r2 <- fp[-1]
StoreField(v2 T{_InvocationMirror} . _typeArguments@0150898 = v12 T{List<Type>})
ParallelMove r0 <- r1 goto:52 B7
B6
ParallelMove r0 <- r1 goto:54 B7
B7
ParallelMove r0 <- r0
DartReturn:60(v41 T{List<Type>?})
CheckStackOverflowSlowPath
slow path check null (cast) operation
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v63 <- LoadField(v2 T{Symbol} . _name@9040228 {final}) T{String}
ParallelMove fp[-1] <- r0
v4 <- AllocateObject:12(cls=StringBuffer) T{StringBuffer}
ParallelMove r1 <- r0, r0 <- r0
ParallelMove fp[-2] <- r0
StaticCall:14( StringBuffer.<0> v4)
ParallelMove r0 <- fp[-1]
v68 <- LoadField(v63 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v131 <- UnboxInt64([non-speculative], v68 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove fp[-3] <- r2
Branch if RelationalOp(>=, v131 T{_Smi}, v136 T{_Smi}) T{bool} goto (3, 9)
B3
MoveArgument(sp[1] <- v63 T{String})
MoveArgument(sp[0] <- v33)
v34 <- StaticCall:26( []<0> v63 T{String}, v33, using unchecked entrypoint, recognized_kind = StringBaseCharAt, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
v177 <- LoadClassId(<non-smi> v34) int64
MoveArgument(sp[1] <- v34)
MoveArgument(sp[0] <- v35)
ParallelMove r0 <- r1
v36 <- DispatchTableCall( cid=v177 String.==<0>, v34, v35) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:32(===, v36 T{bool}, v10) goto (4, 10)
BoolTest
B4
MoveArgument(sp[1] <- v63 T{String})
MoveArgument(sp[0] <- v6)
v37 <- StaticCall:40( []<0> v63 T{String}, v6, using unchecked entrypoint, recognized_kind = StringBaseCharAt, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
v178 <- LoadClassId(<non-smi> v37) int64
MoveArgument(sp[1] <- v37)
MoveArgument(sp[0] <- v38)
ParallelMove r0 <- r1
v39 <- DispatchTableCall( cid=v178 String.==<0>, v37, v38) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:46(===, v39 T{bool}, v10) goto (5, 6)
BoolTest
B5
ParallelMove r0 <- C goto:56 B7
B6
ParallelMove r0 <- C goto:58 B7
B7
ParallelMove r2 <- r0, r0 <- C goto:72 B11
B10
B9
B8
ParallelMove r2 <- C, r0 <- C goto:74 B11
B11
ParallelMove fp[-6] <- r2
ParallelMove r5 <- r0, r4 <- C goto:182 B28
B28
  Loop 0
  Loop Header
ParallelMove fp[-4] <- r5, fp[-5] <- r4
CheckStackOverflow:186(stack=0, loop=1)
Branch if RelationalOp(<, v13, v131 T{_Smi}) T{bool} goto (12, 13)
B12
  Loop 0
v132 <- BoxInt64(v13) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[1] <- v63 T{String})
MoveArgument(sp[0] <- v132 T{int})
v20 <- StaticCall:92( []<0> v63 T{String}, v132 T{int}, using unchecked entrypoint, recognized_kind = StringBaseCharAt, result_type = T{!null}) T{String}
ParallelMove r1 <- r0
ParallelMove fp[-7] <- r1
v179 <- LoadClassId(<non-smi> v20) int64
MoveArgument(sp[1] <- v20)
MoveArgument(sp[0] <- v21)
ParallelMove r0 <- r0
v22 <- DispatchTableCall( cid=v179 String.==<0>, v20, v21) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:98(===, v22 T{bool}, v10) goto (14, 15)
BoolTest
B14
  Loop 0
ParallelMove r4 <- C goto:158 B24
B15
  Loop 0
ParallelMove r2 <- fp[-7]
v180 <- LoadClassId(<non-smi> v20) int64
MoveArgument(sp[1] <- v20)
MoveArgument(sp[0] <- v23)
ParallelMove r0 <- r0
v24 <- DispatchTableCall( cid=v180 String.==<0>, v20, v23) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:110(===, v24 T{bool}, v10) goto (19, 16)
BoolTest
B19
B16
  Loop 0
ParallelMove r2 <- fp[-7]
v181 <- LoadClassId(<non-smi> v20) int64
MoveArgument(sp[1] <- v20)
MoveArgument(sp[0] <- v25)
ParallelMove r0 <- r0
v26 <- DispatchTableCall( cid=v181 String.==<0>, v20, v25) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:118(===, v26 T{bool}, v10) goto (20, 17)
BoolTest
B20
B17
  Loop 0
ParallelMove r2 <- fp[-7]
v182 <- LoadClassId(<non-smi> v20) int64
MoveArgument(sp[1] <- v20)
MoveArgument(sp[0] <- v27)
ParallelMove r0 <- r0
v28 <- DispatchTableCall( cid=v182 String.==<0>, v20, v27) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:128(===, v28 T{bool}, v10) goto (21, 22)
BoolTest
B21
B18
  Loop 0
ParallelMove r0 <- C goto:152 B23
B22
  Loop 0
ParallelMove r0 <- fp[-5] goto:154 B23
B23
  Loop 0
ParallelMove r4 <- r0 goto:160 B24
B24
  Loop 0
ParallelMove fp[-5] <- r4
Branch if StrictCompare:164(!==, v30 T{bool}, v10) goto (25, 26)
BoolTest
B25
  Loop 0
ParallelMove r2 <- fp[-7]
v82 <- LoadField(v20 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v82, v6 T{_Smi}) T{bool} goto (34, 35)
B34
B35
  Loop 0
ParallelMove r1 <- fp[-2]
StaticCall:26( _consumeBuffer@0150898<0> v4 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-2], r2 <- fp[-7]
StaticCall:28( _addPart@0150898<0> v4 T{StringBuffer}, v20 T{String}, using unchecked entrypoint)
ParallelMove  goto:30 B36
B36
B26
B27
  Loop 0
v32 <- BinaryInt64Op(+ [tr], v13, v138 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r5, r4 <- fp[-5], r2 <- fp[-6] goto:184 B28
B13
ParallelMove r0 <- r2
Branch if StrictCompare:190(===, v11 T{bool}, v10) goto (29, 30)
BoolTest
B29
ParallelMove r1 <- fp[-2], r2 <- C
StaticCall:196( write<0> v4, v19, using unchecked entrypoint)
ParallelMove  goto:202 B31
B30
B31
MoveArgument(sp[0] <- v4)
v18 <- StaticCall:206( toString<0> v4, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:208(v18)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _memberName@0150898) T{Symbol?}
Branch if StrictCompare:12(===, v3, v0) goto (3, 4)
B3
ParallelMove r1 <- r0
StaticCall:18( _setMemberNameAndType@0150898<0> v2, using unchecked entrypoint)
ParallelMove  goto:24 B5
B4
B5
v4 <- LoadField(v2 . _memberName@0150898) T{Symbol?}
CheckNull:30(v4, CastError) T{Symbol}
ParallelMove r0 <- r0
DartReturn:32(v4 T{Symbol})
CheckStackOverflowSlowPath
slow path check null (cast) operation
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _functionName@0150898) T{String??}
ParallelMove fp[-1] <- r3
CheckNull:12(v3, CastError) T{String?}
v4 <- LoadField(v2 . _type@0150898) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v4 == v120 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r1 <- C
StoreField(v2 T{_InvocationMirror} . _type@0150898 = v121 T{_Smi} <int64>)
ParallelMove  goto:32 B5
B4
B5
ParallelMove r1 <- r3, r2 <- C
v9 <- StaticCall:36( startsWith<0> v3 T{String?}, v8, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:40(===, v9 T{bool}, v7) goto (6, 7)
BoolTest
B6
ParallelMove r0 <- fp[-2]
v32 <- LoadField(v2 . _type@0150898) [-9223372036854775808, 9223372036854775807] int64
v33 <- BinaryInt64Op(| [tr], v32, v122 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_InvocationMirror} . _type@0150898 = v33 T{int} <int64>)
ParallelMove r1 <- fp[-1], r2 <- C
v35 <- StaticCall:54( substring<0> v3 T{String?}, v123 T{_Smi}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-3] <- r0
v34 <- AllocateObject:52(cls=Symbol) T{Symbol}
ParallelMove r1 <- r0, r0 <- fp[-3]
StoreField(v34 T{Symbol} . _name@9040228 = v35 T{String}, NoStoreBarrier)
ParallelMove r0 <- r1, r3 <- fp[-2]
StoreField(v2 T{_InvocationMirror} . _memberName@0150898 = v34 T{Symbol})
ParallelMove  goto:132 B14
B7
ParallelMove r3 <- fp[-2]
ParallelMove r1 <- fp[-1], r2 <- C
v11 <- StaticCall:62( startsWith<0> v3 T{String?}, v10, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:66(===, v11 T{bool}, v7) goto (8, 12)
BoolTest
B8
ParallelMove r0 <- fp[-2]
v23 <- LoadField(v2 . _type@0150898) [-9223372036854775808, 9223372036854775807] int64
v25 <- BinaryInt64Op(| [tr], v23, v124 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_InvocationMirror} . _type@0150898 = v25 T{int} <int64>)
ParallelMove r1 <- fp[-1], r2 <- C
v28 <- StaticCall:80( substring<0> v3 T{String?}, v123 T{_Smi}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
MoveArgument(sp[1] <- v28)
MoveArgument(sp[0] <- v29)
v30 <- StaticCall:82( +<0> v28, v29, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-3] <- r0
v26 <- AllocateObject:78(cls=Symbol) T{Symbol}
ParallelMove r1 <- r0, r0 <- fp[-3]
StoreField(v26 T{Symbol} . _name@9040228 = v30 T{String}, NoStoreBarrier)
ParallelMove r0 <- r1, r1 <- fp[-2]
StoreField(v2 T{_InvocationMirror} . _memberName@0150898 = v26 T{Symbol})
ParallelMove  goto:126 B13
B12
ParallelMove r1 <- fp[-2], r0 <- fp[-1]
v12 <- LoadField(v2 . _type@0150898) [-9223372036854775808, 9223372036854775807] int64
v13 <- LoadField(v2 . _isSuperInvocation@0150898) T{bool}
v98 <- IfThenElse(===, v13, v7 ? 8 : 0) [0, 8] T{_Smi}
BoolTest
v117 <- UnboxInt64([non-speculative], v98) [0, 8] int64
v16 <- BinaryInt64Op(| [tr], v12, v117 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_InvocationMirror} . _type@0150898 = v16 T{int} <int64>)
v17 <- AllocateObject:118(cls=Symbol) T{Symbol}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v17 T{Symbol} . _name@9040228 = v3 T{String}, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- fp[-2]
StoreField(v2 T{_InvocationMirror} . _memberName@0150898 = v17 T{Symbol})
ParallelMove  goto:128 B13
B13
B14
ParallelMove r0 <- C
DartReturn:136(v0)
CheckStackOverflowSlowPath
slow path check null (cast) operation
B0
B2
Enter frame
ParallelMove r0 <- fp[4]
v5 <- LoadField(v2 . Closure.context {final}) T{*}
ParallelMove fp[-1] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v6 <- LoadField(v5 . argumentCount) [-9223372036854775808, 9223372036854775807] T{int}
v29 <- UnboxInt64([non-speculative], v6) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>, v29 T{int}, v32 T{_Smi}) T{bool} goto (3, 4)
B3
v21 <- LoadField(v5 . argumentsBuf) T{StringBuffer}
ParallelMove r1 <- r1, r2 <- C
StaticCall:20( write<0> v21, v22, using unchecked entrypoint)
ParallelMove  goto:26 B5
B4
B5
ParallelMove r0 <- fp[3], r2 <- C, r1 <- C
t0 <- AssertAssignable:30(v3, v10, ' in type cast', instantiator_type_args(v0), function_type_args(v0)) T{Symbol}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
v12 <- LoadField(v5 . argumentsBuf) T{StringBuffer}
ParallelMove r1 <- fp[3], fp[-2] <- r2
v13 <- StaticCall:32( computeUnmangledName<0> v3 T{Symbol}, result_type = T{!null}) T{String}
ParallelMove r1 <- fp[-2], r2 <- r0
StaticCall:34( write<0> v12, v13, using unchecked entrypoint)
ParallelMove r0 <- fp[-1]
v14 <- LoadField(v5 . argumentsBuf) T{StringBuffer}
ParallelMove r1 <- r1, r2 <- C
StaticCall:36( write<0> v14, v15, using unchecked entrypoint)
ParallelMove r0 <- fp[-1]
v16 <- LoadField(v5 . argumentsBuf) T{StringBuffer}
ParallelMove r1 <- fp[2], fp[-2] <- r2
v17 <- StaticCall:38( safeToString<0> v4, result_type = T{!null}) T{String}
ParallelMove r1 <- fp[-2], r2 <- r0
StaticCall:40( write<0> v16, v17, using unchecked entrypoint)
ParallelMove r2 <- fp[-1]
v18 <- LoadField(v5 . argumentCount) [-9223372036854775808, 9223372036854775807] T{int}
v30 <- UnboxInt64([non-speculative], v18) [-9223372036854775808, 9223372036854775807] int64
v20 <- BinaryInt64Op(+ [tr], v30 T{int}, v33 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v31 <- BoxInt64(v20) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v5 . argumentCount = v31 T{int})
ParallelMove r0 <- C
DartReturn:44(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v4 <- CreateArray:10(v0, v3) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v4, v5, v6, NoStoreBarrier)
ParallelMove r1 <- fp[2]
v8 <- LoadField(v2 . prefix {final}) T{_LibraryPrefix}
StoreIndexed([_List] v4, v7, v8, NoStoreBarrier)
StoreIndexed([_List] v4, v9, v10, NoStoreBarrier)
MoveArgument(sp[0] <- v4)
v11 <- StaticCall:14( _interpolate@0150898<0> v4, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:16(v11)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . name {final}) T{String??}
ParallelMove fp[-1] <- r3
Branch if StrictCompare:12(===, v3, v0) goto (3, 4)
B3
ParallelMove r3 <- C goto:26 B5
B4
ParallelMove r1 <- C, r2 <- C
v5 <- CreateArray:20(v0, v4) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v5, v6, v7, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
StoreIndexed([_List] v5, v8, v3 T{String?}, NoStoreBarrier)
StoreIndexed([_List] v5, v9, v10, NoStoreBarrier)
MoveArgument(sp[0] <- v5)
v11 <- StaticCall:22( _interpolate@0150898<0> v5, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
ParallelMove r3 <- r0, r0 <- fp[2] goto:28 B5
B5
ParallelMove fp[-2] <- r3
v13 <- LoadField(v2 . message {final}) T{*?}
ParallelMove fp[-1] <- r4
Branch if StrictCompare:32(===, v13, v0) goto (6, 7)
B6
ParallelMove r3 <- C goto:46 B8
B7
ParallelMove r1 <- C, r2 <- C
v14 <- CreateArray:40(v0, v9) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v14, v6, v15, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
StoreIndexed([_List] v14, v8, v13 T{*}, NoStoreBarrier)
MoveArgument(sp[0] <- v14)
v16 <- StaticCall:42( _interpolate@0150898<0> v14, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
ParallelMove r3 <- r0, r0 <- fp[2] goto:48 B8
B8
ParallelMove fp[-1] <- r3
v134 <- LoadClassId(v2) [566, 568] int64
ParallelMove fp[-3] <- r4
Branch if EqualityCompare:52(v134 == v69) goto (32, 42)
B32
ParallelMove r1 <- C, r2 <- C
v104 <- CreateArray:10(v0 T{Null?}, v9 T{_Smi}) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v104, v6 T{_Smi}, v119 T{_OneByteString}, NoStoreBarrier)
ParallelMove r1 <- fp[2]
v108 <- LoadField(v2 T{ArgumentError} . _hasValue@0150898 {final}) T{bool}
Branch if StrictCompare:16(!==, v108 T{bool}, v22 T{bool}) goto (34, 35)
BoolTest
B34
ParallelMove r2 <- C goto:26 B36
B35
ParallelMove r2 <- C goto:28 B36
B36
StoreIndexed([_List] v104, v8 T{_Smi}, v111, NoStoreBarrier)
MoveArgument(sp[0] <- v104)
v112 <- StaticCall:30( _interpolate@0150898<0> v104, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
ParallelMove r6 <- r0, r0 <- fp[-3] goto:32 B44
B42
ParallelMove r0 <- r4
Branch if EqualityCompare:52(v134 == v70) goto (37, 43)
B37
ParallelMove r6 <- C goto:10 B44
B43
ParallelMove r6 <- C goto:10 B44
B44
ParallelMove r1 <- C, r2 <- C, fp[-4] <- r6
v18 <- CreateArray:50(v0, v4) T{_List}
ParallelMove r1 <- r0, r0 <- fp[-4]
StoreIndexed([_List] v18, v6, v135 T{String}, NoStoreBarrier)
ParallelMove r0 <- fp[-2]
StoreIndexed([_List] v18, v8, v12, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
StoreIndexed([_List] v18, v9, v17, NoStoreBarrier)
MoveArgument(sp[0] <- v18)
v20 <- StaticCall:54( _interpolate@0150898<0> v18, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r4 <- r0, r3 <- fp[2]
ParallelMove fp[-2] <- r4
v21 <- LoadField(v2 . _hasValue@0150898 {final}) T{bool}
Branch if StrictCompare:60(!==, v21 T{bool}, v22) goto (9, 10)
BoolTest
B9
ParallelMove r0 <- r4
DartReturn:66(v20)
B10
ParallelMove r5 <- fp[-3]
Branch if EqualityCompare:70(v134 T{_Smi} == v69) goto (11, 20)
B11
ParallelMove r3 <- C, r0 <- r5 goto:10 B22
B20
Branch if EqualityCompare:70(v134 T{_Smi} == v70) goto (13, 21)
B13
v140 <- LoadField(v2 T{IndexError} . invalidValue {final}) T{*?}
ParallelMove r0 <- r6, r2 <- C, r1 <- C, fp[-1] <- r6
t0 <- AssertAssignable:12(v140, v87 T{_Type}, '', instantiator_type_args(v0 T{Null?}), function_type_args(v0 T{Null?})) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
v177 <- UnboxInt64([non-speculative], v140 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v177 T{int}, v180 T{_Smi}) T{bool} goto (15, 16)
B15
ParallelMove r3 <- C, r0 <- fp[-3] goto:22 B22
B16
ParallelMove r0 <- fp[2]
v46 <- LoadField(v2 T{IndexError} . length {final}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-5] <- r3
Branch if EqualityCompare(v46 == v180 T{_Smi}) T{bool} goto (17, 18)
B17
ParallelMove r3 <- C, r0 <- fp[-3] goto:38 B22
B18
ParallelMove r1 <- C, r2 <- C
v49 <- CreateArray:42(v0 T{Null?}, v9 T{_Smi}) T{_List}
ParallelMove r2 <- r0
StoreIndexed([_List] v49, v6 T{_Smi}, v65 T{_OneByteString}, NoStoreBarrier)
ParallelMove r3 <- fp[-5]
v178 <- BoxInt64(v46 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreIndexed([_List] v49, v8 T{_Smi}, v178 T{int}, NoStoreBarrier)
MoveArgument(sp[0] <- v49)
v53 <- StaticCall:46( _interpolate@0150898<0> v49, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
ParallelMove r3 <- r0, r0 <- fp[-3] goto:48 B22
B21
ParallelMove r2 <- r3
v211 <- LoadClassId(<non-smi> v2) int64
ParallelMove r0 <- r0, r1 <- r2
v71 <- DispatchTableCall( cid=v211 ArgumentError._errorExplanation<0>, v2) T{String}
ParallelMove r0 <- r0
ParallelMove r3 <- r0, r0 <- fp[-3] goto:71 B22
B22
ParallelMove fp[-4] <- r3
Branch if EqualityCompare:72(v134 T{_Smi} == v69) goto (23, 29)
B23
ParallelMove r1 <- fp[2]
v77 <- LoadField(v2 T{ArgumentError} . invalidValue {final}) T{*?}
ParallelMove r1 <- r0, r0 <- r3 goto:4 B31
B29
ParallelMove r1 <- fp[2]
Branch if EqualityCompare:72(v134 T{_Smi} == v70) goto (24, 30)
B24
v83 <- LoadField(v2 T{IndexError} . invalidValue {final}) T{*?}
ParallelMove r0 <- r4, r2 <- C, r1 <- C, fp[-1] <- r4
t0 <- AssertAssignable:12(v83, v87 T{_Type}, '', instantiator_type_args(v0 T{Null?}), function_type_args(v0 T{Null?})) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-1], r0 <- fp[-4] goto:14 B31
B30
v92 <- LoadField(v2 T{RangeError} . invalidValue {final}) T{*?}
ParallelMove r0 <- r3, r2 <- C, r1 <- C, fp[-1] <- r3
t0 <- AssertAssignable:12(v92, v96 T{_Type}, '', instantiator_type_args(v0 T{Null?}), function_type_args(v0 T{Null?})) T{num??}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-1], r0 <- fp[-4] goto:14 B31
B31
ParallelMove r1 <- r1
v25 <- StaticCall:74( safeToString<0> v98 T{*?}) T{String}
ParallelMove r1 <- C, r2 <- C, r0 <- r0
ParallelMove fp[-1] <- r0
v27 <- CreateArray:76(v0, v26) T{_List}
ParallelMove r1 <- r0, r0 <- fp[-2]
StoreIndexed([_List] v27, v6, v20, NoStoreBarrier)
ParallelMove r0 <- fp[-4]
StoreIndexed([_List] v27, v8, v72 T{String}, NoStoreBarrier)
StoreIndexed([_List] v27, v9, v15, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
StoreIndexed([_List] v27, v4, v25, NoStoreBarrier)
MoveArgument(sp[0] <- v27)
v28 <- StaticCall:78( _interpolate@0150898<0> v27, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:80(v28)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v4 <- CreateArray:10(v0, v3) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v4, v5, v6, NoStoreBarrier)
ParallelMove r1 <- fp[2]
v8 <- LoadField(v2 . message {final}) T{String??}
StoreIndexed([_List] v4, v7, v8 T{String??}, NoStoreBarrier)
MoveArgument(sp[0] <- v4)
v9 <- StaticCall:14( _interpolate@0150898<0> v4, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:16(v9)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v4 <- CreateArray:10(v0, v3) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v4, v5, v6, NoStoreBarrier)
ParallelMove r1 <- fp[2]
v8 <- LoadField(v2 . message {final}) T{String}
StoreIndexed([_List] v4, v7, v8, NoStoreBarrier)
MoveArgument(sp[0] <- v4)
v9 <- StaticCall:14( _interpolate@0150898<0> v4, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:16(v9)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v4 <- CreateArray:12(v0, v3) T{_List}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
StoreIndexed([_List] v4, v5, v6, NoStoreBarrier)
ParallelMove r1 <- fp[2]
v8 <- LoadField(v2 . modifiedObject {final}) T{Object??}
ParallelMove r1 <- r2
v9 <- StaticCall:16( safeToString<0> v8) T{String}
ParallelMove r1 <- fp[-1], r0 <- r0
StoreIndexed([_List] v4, v7, v9)
ParallelMove r0 <- fp[-1]
StoreIndexed([_List] v4, v10, v11, NoStoreBarrier)
MoveArgument(sp[0] <- v4)
v12 <- StaticCall:18( _interpolate@0150898<0> v4, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:20(v12)
CheckStackOverflowSlowPath
B0
B1
ParallelMove r0 <- C
DartReturn:10(v3)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . unsupportedObject {final}) T{Object??}
ParallelMove r1 <- r1
v4 <- StaticCall:12( safeToString<0> v3) T{String}
ParallelMove r3 <- r0, r0 <- fp[2]
ParallelMove fp[-2] <- r3
v5 <- LoadField(v2 . cause {final}) T{Object??}
Branch if StrictCompare:16(!==, v5, v0) goto (3, 4)
B3
ParallelMove r0 <- C goto:26 B5
B4
ParallelMove r0 <- C goto:28 B5
B5
ParallelMove r1 <- C, r2 <- C, fp[-1] <- r0
v9 <- CreateArray:30(v0, v8) T{_List}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreIndexed([_List] v9, v10, v7, NoStoreBarrier)
StoreIndexed([_List] v9, v11, v12, NoStoreBarrier)
ParallelMove r0 <- fp[-2]
StoreIndexed([_List] v9, v13, v4, NoStoreBarrier)
MoveArgument(sp[0] <- v9)
v14 <- StaticCall:32( _interpolate@0150898<0> v9, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:34(v14)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . _message@9040228 {final}) T{String??}
ParallelMove r1 <- C, r2 <- C, fp[-1] <- r3
v5 <- CreateArray:12(v0, v4) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v5, v6, v7, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
StoreIndexed([_List] v5, v8, v3, NoStoreBarrier)
MoveArgument(sp[0] <- v5)
v9 <- StaticCall:14( _interpolate@0150898<0> v5, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:16(v9)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v4 <- CreateArray:10(v0, v3) T{_List}
ParallelMove r2 <- r0
StoreIndexed([_List] v4, v5, v6, NoStoreBarrier)
ParallelMove r0 <- fp[2]
v8 <- LoadField(v2 . _className@2408521 {final}) T{String}
StoreIndexed([_List] v4, v7, v8, NoStoreBarrier)
StoreIndexed([_List] v4, v9, v10, NoStoreBarrier)
v12 <- LoadField(v2 . _url@2408521) T{String??}
StoreIndexed([_List] v4, v11, v12, NoStoreBarrier)
StoreIndexed([_List] v4, v13, v14, NoStoreBarrier)
v16 <- LoadField(v2 . _line@2408521) [-9223372036854775808, 9223372036854775807] int64
v18 <- BoxInt64(v16) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreIndexed([_List] v4, v15, v18 T{int}, NoStoreBarrier)
MoveArgument(sp[0] <- v4)
v17 <- StaticCall:18( _interpolate@0150898<0> v4, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:20(v17)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v4 <- CreateArray:10(v0, v3) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v4, v5, v6, NoStoreBarrier)
ParallelMove r1 <- fp[2]
v8 <- LoadField(v2 . _msg@0150898 {final}) T{String}
StoreIndexed([_List] v4, v7, v8, NoStoreBarrier)
StoreIndexed([_List] v4, v9, v10, NoStoreBarrier)
MoveArgument(sp[0] <- v4)
v11 <- StaticCall:14( _interpolate@0150898<0> v4, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:16(v11)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
v3 <- StaticCall:10( iterableToShortString<0> v2, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:12(v3)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r3 <- r1, r1 <- r2, r2 <- r3, fp[-1] <- r1, fp[-2] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v139 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r1
v5 <- DispatchTableCall( cid=v139 Iterable.iterator<0>, v3) T{*?}
ParallelMove r2 <- r0
ParallelMove fp[-3] <- r2
v140 <- LoadClassId(<non-smi> v5 T{Iterator<X0>}) int64
ParallelMove r0 <- r0, r1 <- r2
v6 <- DispatchTableCall( cid=v140 Iterator.moveNext<0>, v5 T{Iterator<X0>}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:16(!==, v6 T{bool}, v7) goto (3, 4)
BoolTest
B3
ParallelMove r0 <- C
DartReturn:22(v0)
B4
ParallelMove r2 <- fp[-2]
v57 <- LoadField(v4 T{_OneByteString} . String.length {final}) [0, 2305843009213693951] T{_Smi}
ParallelMove fp[-5] <- r3
Branch if StrictCompare:10(===, v57, v60 T{_Smi}) T{bool} goto (5, 9)
B5
B6
  Loop 1
  Loop Header
CheckStackOverflow:50(stack=0, loop=1)
v141 <- LoadClassId(<non-smi> v5 T{Iterator<X0>}) int64
ParallelMove r0 <- r0, r1 <- r2
v12 <- DispatchTableCall( cid=v141 Iterator.current<0>, v5 T{Iterator<X0>}) T{*?}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v12 T{X0?})
v46 <- StaticCall:10( _interpolateSingle@0150898<0> v12 T{X0?}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-4] <- r0
v87 <- LoadField(v46 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v87, v60 T{_Smi}) T{bool} goto (26, 27)
B26
B27
  Loop 1
ParallelMove r1 <- fp[-1]
StaticCall:26( _consumeBuffer@0150898<0> v2 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-1], r2 <- fp[-4]
StaticCall:28( _addPart@0150898<0> v2 T{StringBuffer}, v46, using unchecked entrypoint)
ParallelMove  goto:30 B28
B28
  Loop 1
v142 <- LoadClassId(<non-smi> v5 T{Iterator<X0>}) int64
ParallelMove r0 <- r0, r1 <- r2
v13 <- DispatchTableCall( cid=v142 Iterator.moveNext<0>, v5 T{Iterator<X0>}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:44(===, v13 T{bool}, v7) goto (7, 8)
BoolTest
B7
B8
B9
ParallelMove r4 <- fp[-3]
v143 <- LoadClassId(<non-smi> v5 T{Iterator<X0>}) int64
ParallelMove r0 <- r0, r1 <- r4
v9 <- DispatchTableCall( cid=v143 Iterator.current<0>, v5 T{Iterator<X0>}) T{*?}
ParallelMove r1 <- fp[-1], r2 <- r0
StaticCall:64( write<0> v2, v9 T{X0?}, using unchecked entrypoint)
ParallelMove  goto:88 B11
B11
  Loop 0
  Loop Header
CheckStackOverflow:86(stack=0, loop=1)
v144 <- LoadClassId(<non-smi> v5 T{Iterator<X0>}) int64
ParallelMove r0 <- r0, r1 <- r3
v10 <- DispatchTableCall( cid=v144 Iterator.moveNext<0>, v5 T{Iterator<X0>}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:70(===, v10 T{bool}, v7) goto (10, 12)
BoolTest
B10
  Loop 0
ParallelMove r0 <- fp[-5]
Branch if StrictCompare:10(===, v57 T{_Smi}, v60 T{_Smi}) T{bool} goto (16, 17)
B16
B17
  Loop 0
ParallelMove r1 <- fp[-1]
StaticCall:26( _consumeBuffer@0150898<0> v2 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-1], r2 <- fp[-2]
StaticCall:28( _addPart@0150898<0> v2 T{StringBuffer}, v4, using unchecked entrypoint)
ParallelMove  goto:30 B18
B18
  Loop 0
v145 <- LoadClassId(<non-smi> v5 T{Iterator<X0>}) int64
ParallelMove r0 <- r0, r1 <- r2
v11 <- DispatchTableCall( cid=v145 Iterator.current<0>, v5 T{Iterator<X0>}) T{*?}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v11 T{X0?})
v33 <- StaticCall:10( _interpolateSingle@0150898<0> v11 T{X0?}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-4] <- r0
v80 <- LoadField(v33 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v80, v60 T{_Smi}) T{bool} goto (21, 22)
B21
B22
  Loop 0
ParallelMove r1 <- fp[-1]
StaticCall:26( _consumeBuffer@0150898<0> v2 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-1], r2 <- fp[-4]
StaticCall:28( _addPart@0150898<0> v2 T{StringBuffer}, v33, using unchecked entrypoint)
ParallelMove  goto:30 B23
B23
B12
B13
ParallelMove r0 <- C
DartReturn:98(v0)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-1] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v652 <- LoadClassId(<non-smi> v2) int64
ParallelMove r0 <- r0, r1 <- r1
v5 <- DispatchTableCall( cid=v652 Iterable.iterator<0>, v2) T{*?}
ParallelMove r2 <- r0
ParallelMove fp[-4] <- r2
ParallelMove r5 <- C, r4 <- C, r3 <- fp[-1] goto:74 B9
B9
  Loop 3
  Loop Header
ParallelMove fp[-2] <- r5, fp[-3] <- r4
CheckStackOverflow:72(stack=0, loop=1)
Branch if RelationalOp(<, v6, v598 T{_Smi}) T{bool} goto (7, 3)
B7
B3
  Loop 3
Branch if RelationalOp(<, v7, v599 T{_Smi}) T{bool} goto (8, 10)
B8
B6
  Loop 3
v653 <- LoadClassId(<non-smi> v5 T{Iterator<X0>}) int64
ParallelMove r0 <- r0, r1 <- r2
v93 <- DispatchTableCall( cid=v653 Iterator.moveNext<0>, v5 T{Iterator<X0>}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:34(!==, v93 T{bool}, v10) goto (4, 5)
BoolTest
B5
  Loop 3
ParallelMove r2 <- fp[-4]
v654 <- LoadClassId(<non-smi> v5 T{Iterator<X0>}) int64
ParallelMove r0 <- r0, r1 <- r2
v94 <- DispatchTableCall( cid=v654 Iterator.current<0>, v5 T{Iterator<X0>}) T{*?}
ParallelMove r0 <- r0
v301 <- LoadClassId(v94 T{X0?}) [1, 600] int64
Branch if TestRange(v301 in [93-94]) T{bool} goto (123, 124)
B123
  Loop 3
ParallelMove r2 <- r0 goto:20 B125
B124
  Loop 3
v655 <- LoadClassId(v94 T{X0?}) int64
MoveArgument(sp[0] <- v94 T{X0?})
ParallelMove r0 <- r1
v299 <- DispatchTableCall( cid=v655 Object.toString<0>, v94 T{X0?}) T{String}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:26 B125
B125
  Loop 3
ParallelMove fp[-6] <- r2
v412 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v417 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v418 <- LoadField(v417 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v534 <- UnboxInt64([non-speculative], v412 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-5] <- r3
v535 <- UnboxInt64([non-speculative], v418 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v534 T{_Smi} == v535 T{_Smi}) T{bool} goto (128, 129)
B128
  Loop 3
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v3 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B130
B129
B130
  Loop 3
v315 <- BinaryInt64Op(+ [tr], v534 T{_Smi}, v600 T{_Smi}) [1, 576460752303423488] int64
v536 <- BoxInt64(v315) [1, 576460752303423488] T{_Smi}
StoreField(v3 T{_GrowableList} . GrowableObjectArray.length = v536, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r4
GenericCheckBound:40(v315 T{_Smi}, v534 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v318 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- r3
StoreIndexed:40([_List] v318, v534 T{_Smi}, v303 T{String})
v327 <- LoadField(v303 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v539 <- UnboxInt64([non-speculative], v327 T{_Smi}) [0, 2305843009213693951] int64
v97 <- BinaryInt64Op(+ [tr], v539 T{_Smi}, v601 T{_Smi}) [v539+2, v539+2] int64
v98 <- BinaryInt64Op(+ [tr], v6, v97) [-9223372036854775808, 9223372036854775807] int64
v99 <- BinaryInt64Op(+ [tr], v7, v600 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r1, r4 <- r4, r3 <- r2, r2 <- fp[-4] goto:70 B9
B4
ParallelMove r0 <- C
DartReturn:40(v0)
B10
ParallelMove r2 <- r3, r3 <- r2, r6 <- r5, r5 <- r4
v656 <- LoadClassId(<non-smi> v5 T{Iterator<X0>}) int64
ParallelMove r0 <- r0, r1 <- r3
v13 <- DispatchTableCall( cid=v656 Iterator.moveNext<0>, v5 T{Iterator<X0>}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:82(!==, v13 T{bool}, v10) goto (11, 14)
BoolTest
B11
ParallelMove r3 <- fp[-3]
Branch if RelationalOp(<=, v7, v419) T{bool} goto (12, 13)
B12
ParallelMove r0 <- C
DartReturn:100(v0)
B13
ParallelMove r4 <- fp[-1]
v402 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v540 <- UnboxInt64([non-speculative], v402 T{_Smi}) [0, 576460752303423487] int64
v274 <- BinaryInt64Op(- [tr], v540 T{_Smi}, v600 T{_Smi}) [-1, 576460752303423486] int64
ParallelMove r0 <- r1, r1 <- r2
GenericCheckBound:14(v540 T{_Smi}, v274) [-9223372036854775808, 9223372036854775807] int64
v278 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v602 <- LoadIndexed:14([_List] v278, v274 T{int}) T{String}
ParallelMove r1 <- r4, r2 <- r2, fp[-6] <- r5
StaticCall:16( set:length<0> v3 T{_GrowableList}, v274 T{int}, using unchecked entrypoint)
ParallelMove r3 <- fp[-1]
v407 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v543 <- UnboxInt64([non-speculative], v407 T{_Smi}) [0, 576460752303423487] int64
v286 <- BinaryInt64Op(- [tr], v543 T{_Smi}, v600 T{_Smi}) [-1, 576460752303423486] int64
ParallelMove r0 <- r1, r1 <- r2
GenericCheckBound:14(v543 T{_Smi}, v286) [-9223372036854775808, 9223372036854775807] int64
v290 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v603 <- LoadIndexed:14([_List] v290, v286 T{int}) T{String}
ParallelMove r1 <- r3, r2 <- r2, fp[-7] <- r4
StaticCall:16( set:length<0> v3 T{_GrowableList}, v286 T{int}, using unchecked entrypoint)
ParallelMove r1 <- fp[-2], r0 <- fp[-3], r5 <- fp[-7], r4 <- fp[-6] goto:276 B31
B14
ParallelMove r3 <- fp[-4], r2 <- fp[-3]
v657 <- LoadClassId(<non-smi> v5 T{Iterator<X0>}) int64
ParallelMove r0 <- r0, r1 <- r3
v14 <- DispatchTableCall( cid=v657 Iterator.current<0>, v5 T{Iterator<X0>}) T{*?}
ParallelMove r2 <- r0, r0 <- fp[-3]
ParallelMove fp[-6] <- r2
v16 <- BinaryInt64Op(+ [tr], v7, v600 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- fp[-4], fp[-5] <- r3
v658 <- LoadClassId(<non-smi> v5 T{Iterator<X0>}) int64
ParallelMove r0 <- r0, r1 <- r4
v17 <- DispatchTableCall( cid=v658 Iterator.moveNext<0>, v5 T{Iterator<X0>}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:118(!==, v17 T{bool}, v10) goto (15, 18)
BoolTest
B15
ParallelMove r0 <- fp[-5]
Branch if RelationalOp(<=, v16, v420) T{bool} goto (16, 17)
B16
ParallelMove r1 <- fp[-1]
MoveArgument(sp[0] <- v14 T{X0?})
v62 <- StaticCall:136( _interpolateSingle@0150898<0> v14 T{X0?}) T{String}
ParallelMove r2 <- r0, r0 <- fp[-1]
ParallelMove fp[-7] <- r2
v391 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v396 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v397 <- LoadField(v396 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v548 <- UnboxInt64([non-speculative], v391 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-3] <- r3
v549 <- UnboxInt64([non-speculative], v397 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v548 T{_Smi} == v549 T{_Smi}) T{bool} goto (108, 109)
B108
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v3 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B110
B109
B110
v260 <- BinaryInt64Op(+ [tr], v548 T{_Smi}, v600 T{_Smi}) [1, 576460752303423488] int64
v550 <- BoxInt64(v260) [1, 576460752303423488] T{_Smi}
StoreField(v3 T{_GrowableList} . GrowableObjectArray.length = v550, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v260 T{_Smi}, v548 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v263 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-7]
StoreIndexed:40([_List] v263, v548 T{_Smi}, v62 T{String})
ParallelMove r0 <- C
DartReturn:140(v0)
B17
ParallelMove r2 <- fp[-1], r1 <- fp[-2]
MoveArgument(sp[0] <- v14 T{X0?})
v57 <- StaticCall:144( _interpolateSingle@0150898<0> v14 T{X0?}) T{String}
ParallelMove r4 <- r0, r3 <- fp[-1]
ParallelMove fp[-8] <- r4
v386 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v553 <- UnboxInt64([non-speculative], v386 T{_Smi}) [0, 576460752303423487] int64
v238 <- BinaryInt64Op(- [tr], v553 T{_Smi}, v600 T{_Smi}) [-1, 576460752303423486] int64
ParallelMove r0 <- r1, r1 <- r2
GenericCheckBound:14(v553 T{_Smi}, v238) [-9223372036854775808, 9223372036854775807] int64
v242 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v604 <- LoadIndexed:14([_List] v242, v238 T{int}) T{String}
ParallelMove r1 <- r3, r2 <- r2, fp[-7] <- r5
StaticCall:16( set:length<0> v3 T{_GrowableList}, v238 T{int}, using unchecked entrypoint)
ParallelMove r0 <- fp[-8]
v248 <- LoadField(v57 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v556 <- UnboxInt64([non-speculative], v248 T{_Smi}) [0, 2305843009213693951] int64
v60 <- BinaryInt64Op(+ [tr], v556 T{_Smi}, v601 T{_Smi}) [v556+2, v556+2] int64
ParallelMove r2 <- fp[-2]
v61 <- BinaryInt64Op(+ [tr], v6, v60) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r3, r2 <- fp[-5], r1 <- fp[-7], r0 <- r0 goto:270 B30
B18
ParallelMove r4 <- fp[-4], r2 <- fp[-2], r3 <- fp[-5]
v659 <- LoadClassId(<non-smi> v5 T{Iterator<X0>}) int64
ParallelMove r0 <- r0, r1 <- r4
v18 <- DispatchTableCall( cid=v659 Iterator.current<0>, v5 T{Iterator<X0>}) T{*?}
ParallelMove r1 <- r0, r0 <- fp[-5]
v19 <- BinaryInt64Op(+ [tr], v16, v600 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r2, r4 <- fp[-6], r3 <- r1 goto:248 B28
B28
  Loop 2
  Loop Header
ParallelMove fp[-3] <- r5, fp[-6] <- r4, fp[-7] <- r3
CheckStackOverflow:246(stack=0, loop=1)
v660 <- LoadClassId(<non-smi> v5 T{Iterator<X0>}) int64
ParallelMove r0 <- r0, r1 <- r2
v23 <- DispatchTableCall( cid=v660 Iterator.moveNext<0>, v5 T{Iterator<X0>}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:164(===, v23 T{bool}, v10) goto (27, 29)
BoolTest
B27
  Loop 2
ParallelMove r2 <- fp[-4], r3 <- fp[-3]
v661 <- LoadClassId(<non-smi> v5 T{Iterator<X0>}) int64
ParallelMove r0 <- r0, r1 <- r2
v33 <- DispatchTableCall( cid=v661 Iterator.current<0>, v5 T{Iterator<X0>}) T{*?}
ParallelMove r1 <- r0, r0 <- fp[-3]
v34 <- BinaryInt64Op(+ [tr], v20, v600 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>, v34, v605 T{_Smi}) T{bool} goto (19, 26)
B26
  Loop 2
ParallelMove r5 <- r5, r4 <- fp[-7], r3 <- r1 goto:244 B28
B19
ParallelMove r5 <- fp[-2], r4 <- r5 goto:222 B22
B22
  Loop 1
  Loop Header
ParallelMove fp[-5] <- r5, fp[-9] <- r4
CheckStackOverflow:220(stack=0, loop=2)
Branch if RelationalOp(>, v37, v422) T{bool} goto (20, 24)
B20
  Loop 1
Branch if RelationalOp(>, v38, v599 T{_Smi}) T{bool} goto (21, 25)
B21
  Loop 1
v381 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v557 <- UnboxInt64([non-speculative], v381 T{_Smi}) [0, 576460752303423487] int64
v221 <- BinaryInt64Op(- [tr], v557 T{_Smi}, v600 T{_Smi}) [-1, 576460752303423486] int64
ParallelMove r0 <- r1, r1 <- r2
GenericCheckBound:14(v557 T{_Smi}, v221) [-9223372036854775808, 9223372036854775807] int64
v225 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v606 <- LoadIndexed:14([_List] v225, v221 T{int}) T{String}
ParallelMove r1 <- r3, r2 <- r2, fp[-4] <- r6
StaticCall:16( set:length<0> v3 T{_GrowableList}, v221 T{int}, using unchecked entrypoint)
ParallelMove r0 <- fp[-4]
v231 <- LoadField(v606 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v560 <- UnboxInt64([non-speculative], v231 T{_Smi}) [0, 2305843009213693951] int64
v46 <- BinaryInt64Op(+ [tr], v560 T{_Smi}, v601 T{_Smi}) [v560+2, v560+2] int64
ParallelMove r0 <- fp[-5]
v47 <- BinaryInt64Op(- [tr], v37, v46) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-9]
v48 <- BinaryInt64Op(- [tr], v38, v600 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r5, r4 <- r4 goto:218 B22
B25
B24
B23
v370 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v375 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v376 <- LoadField(v375 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v563 <- UnboxInt64([non-speculative], v370 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-5] <- r2
v564 <- UnboxInt64([non-speculative], v376 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v563 T{_Smi} == v564 T{_Smi}) T{bool} goto (89, 90)
B89
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v3 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B91
B90
B91
v207 <- BinaryInt64Op(+ [tr], v563 T{_Smi}, v600 T{_Smi}) [1, 576460752303423488] int64
v565 <- BoxInt64(v207) [1, 576460752303423488] T{_Smi}
StoreField(v3 T{_GrowableList} . GrowableObjectArray.length = v565, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v207 T{_Smi}, v563 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v210 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.data) T{_List}
StoreIndexed:40([_List] v210, v563 T{_Smi}, v42 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:236(v0)
B29
ParallelMove r2 <- fp[-1], r1 <- fp[-2], r0 <- fp[-3]
MoveArgument(sp[0] <- v21)
v24 <- StaticCall:252( _interpolateSingle@0150898<0> v21) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-4] <- r0
MoveArgument(sp[0] <- v22)
v25 <- StaticCall:254( _interpolateSingle@0150898<0> v22) T{String}
ParallelMove r0 <- r0
v190 <- LoadField(v25 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
ParallelMove r2 <- fp[-4]
v195 <- LoadField(v24 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v568 <- UnboxInt64([non-speculative], v190 T{_Smi}) [0, 2305843009213693951] int64
v569 <- UnboxInt64([non-speculative], v195 T{_Smi}) [0, 2305843009213693951] int64
v28 <- BinaryInt64Op(+ [tr], v568 T{_Smi}, v569 T{_Smi}) [v568, v568+2305843009213693951] int64
v31 <- BinaryInt64Op(+ [tr], v28, v420) [v568+4, v568+2305843009213693955] int64
ParallelMove r3 <- fp[-2]
v32 <- BinaryInt64Op(+ [tr], v6, v31) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r4, r2 <- fp[-3], r1 <- r2, r0 <- r0 goto:272 B30
B30
ParallelMove r1 <- r3, r0 <- r2, r5 <- r1, r4 <- r0 goto:278 B31
B31
ParallelMove fp[-7] <- r5, fp[-8] <- r4
v185 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v570 <- UnboxInt64([non-speculative], v185 T{_Smi}) [0, 576460752303423487] int64
v70 <- BinaryInt64Op(+ [tr], v570 T{_Smi}, v601 T{_Smi}) [2, 576460752303423489] int64
Branch if RelationalOp(>, v64, v70) T{bool} goto (32, 33)
B32
v88 <- BinaryInt64Op(+ [tr], v63, v419) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r0, r0 <- C goto:302 B34
B33
ParallelMove r1 <- r1, r0 <- C goto:304 B34
B34
ParallelMove r7 <- r1, r6 <- r0 goto:360 B40
B40
  Loop 0
  Loop Header
ParallelMove fp[-2] <- r7, fp[-6] <- r6
CheckStackOverflow:358(stack=0, loop=1)
Branch if RelationalOp(>, v74, v598 T{_Smi}) T{bool} goto (35, 42)
B35
  Loop 0
v180 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v571 <- UnboxInt64([non-speculative], v180 T{_Smi}) [0, 576460752303423487] int64
Branch if RelationalOp(>, v571 T{_Smi}, v599 T{_Smi}) T{bool} goto (39, 43)
B39
  Loop 0
v165 <- BinaryInt64Op(- [tr], v571 T{_Smi}, v600 T{_Smi}) [-1, 576460752303423486] int64
ParallelMove r0 <- r1, r1 <- r2
GenericCheckBound:14(v571 T{_Smi}, v165) [-9223372036854775808, 9223372036854775807] int64
v169 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v607 <- LoadIndexed:14([_List] v169, v165 T{int}) T{String}
ParallelMove r1 <- r3, r2 <- r2, fp[-4] <- r8
StaticCall:16( set:length<0> v3 T{_GrowableList}, v165 T{int}, using unchecked entrypoint)
ParallelMove r0 <- fp[-4]
v175 <- LoadField(v607 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v575 <- UnboxInt64([non-speculative], v175 T{_Smi}) [0, 2305843009213693951] int64
v81 <- BinaryInt64Op(+ [tr], v575 T{_Smi}, v601 T{_Smi}) [v575+2, v575+2] int64
ParallelMove r0 <- fp[-2]
v82 <- BinaryInt64Op(- [tr], v74, v81) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-6]
Branch if StrictCompare:334(===, v75, v0) goto (36, 37)
B36
  Loop 0
v86 <- BinaryInt64Op(+ [tr], v82, v419) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r7 <- r0, r6 <- C goto:348 B38
B37
  Loop 0
ParallelMove r7 <- r2, r6 <- r0 goto:350 B38
B38
  Loop 0
ParallelMove r7 <- r7, r6 <- r6, r3 <- fp[-1], r5 <- fp[-7], r4 <- fp[-8] goto:356 B40
B43
ParallelMove r0 <- r6
ParallelMove  goto:370 B41
B42
ParallelMove r0 <- r6
ParallelMove  goto:366 B41
B41
Branch if StrictCompare:372(!==, v75, v0) goto (44, 45)
B44
ParallelMove r2 <- fp[-1]
v354 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v359 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v360 <- LoadField(v359 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v578 <- UnboxInt64([non-speculative], v354 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-2] <- r3
v579 <- UnboxInt64([non-speculative], v360 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v578 T{_Smi} == v579 T{_Smi}) T{bool} goto (67, 68)
B67
ParallelMove r1 <- r2
StaticCall:26( _growToNextCapacity@0150898<0> v3 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B69
B68
B69
v151 <- BinaryInt64Op(+ [tr], v578 T{_Smi}, v600 T{_Smi}) [1, 576460752303423488] int64
v580 <- BoxInt64(v151) [1, 576460752303423488] T{_Smi}
StoreField(v3 T{_GrowableList} . GrowableObjectArray.length = v580, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v151 T{_Smi}, v578 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v154 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-6]
StoreIndexed:40([_List] v154, v578 T{_Smi}, v75 T{String?})
ParallelMove  goto:384 B46
B45
ParallelMove r2 <- fp[-1]
ParallelMove  goto:386 B46
B46
v332 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v337 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v338 <- LoadField(v337 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v585 <- UnboxInt64([non-speculative], v332 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-2] <- r4
v586 <- UnboxInt64([non-speculative], v338 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v585 T{_Smi} == v586 T{_Smi}) T{bool} goto (49, 50)
B49
ParallelMove r1 <- r2
StaticCall:26( _growToNextCapacity@0150898<0> v3 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B51
B50
B51
v113 <- BinaryInt64Op(+ [tr], v585 T{_Smi}, v600 T{_Smi}) [1, 576460752303423488] int64
ParallelMove fp[-3] <- r4
v587 <- BoxInt64(v113) [1, 576460752303423488] T{_Smi}
StoreField(v3 T{_GrowableList} . GrowableObjectArray.length = v587, NoStoreBarrier)
ParallelMove r0 <- r4, r1 <- r3
GenericCheckBound:40(v113 T{_Smi}, v585 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v116 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r5, r0 <- fp[-7]
StoreIndexed:40([_List] v116, v585 T{_Smi}, v65)
v349 <- LoadField(v116 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v593 <- UnboxInt64([non-speculative], v349 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v113 T{_Smi} == v593 T{_Smi}) T{bool} goto (58, 59)
B58
ParallelMove r1 <- r2
StaticCall:26( _growToNextCapacity@0150898<0> v3 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B60
B59
B60
v132 <- BinaryInt64Op(+ [tr], v113 T{_Smi}, v600 T{_Smi}) [2, 576460752303423489] int64
v594 <- BoxInt64(v132) [2, 576460752303423489] T{_Smi}
StoreField(v3 T{_GrowableList} . GrowableObjectArray.length = v594, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v132 T{_Smi}, v113 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v135 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-8]
StoreIndexed:40([_List] v135, v113 T{_Smi}, v66)
ParallelMove r0 <- C
DartReturn:392(v0)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C goto:44 B7
B7
  Loop 0
  Loop Header
ParallelMove fp[-1] <- r1
CheckStackOverflow:48(stack=0, loop=1)
v23 <- LoadStaticField:4(toStringVisiting, CallsInitializer) T{_GrowableList}
ParallelMove r2 <- r0
v28 <- LoadField(v23 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v35 <- UnboxInt64([non-speculative], v28 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r3 <- fp[-1]
Branch if RelationalOp(<, v4, v35 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 0
ParallelMove r0 <- r1, r1 <- r3
GenericCheckBound:30(v35 T{_Smi}, v4) [-9223372036854775808, 9223372036854775807] int64
v16 <- LoadField(v23 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v39 <- LoadIndexed:30([_List] v16, v4 T{int}) T{*?}
ParallelMove r0 <- fp[-2], r1 <- r1
Branch if StrictCompare:32(===, v2, v39 T{*?}, with number check) goto (5, 6)
B6
  Loop 0
ParallelMove r1 <- fp[-1]
v13 <- BinaryInt64Op(+ [tr], v4 T{int}, v40 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r0, r0 <- fp[-2] goto:46 B7
B5
ParallelMove r0 <- C
DartReturn:38(v8)
B4
ParallelMove r0 <- C
DartReturn:50(v9)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
CheckStackOverflow:4(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v4 <- StaticCall:6( _GrowableList@0150898.<0> v2, v6 T{_Smi}, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r0 <- r0
DartReturn:8(v4)
CheckStackOverflowSlowPath
B0
B11
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[0] <- v3 T{_Smi})
v24 <- StaticCall:82( toString<0> v3 T{_Smi}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
v111 <- LoadClassId(<non-smi> v24 T{String}) int64
ParallelMove r0 <- r1, r1 <- r0, r2 <- C, r3 <- C
v27 <- DispatchTableCall( cid=v111 String.padLeft<0>, v24 T{String}, v110 T{_Smi}, v26) T{String}
ParallelMove r1 <- C, r2 <- C, r0 <- r0
ParallelMove fp[-1] <- r0
v28 <- CreateArray:86(v0, v16) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v28, v3, v4 T{_OneByteString}, NoStoreBarrier)
StoreIndexed([_List] v28, v29, v3 T{_Smi}, NoStoreBarrier)
StoreIndexed([_List] v28, v30, v31, NoStoreBarrier)
StoreIndexed([_List] v28, v32, v26 T{_OneByteString}, NoStoreBarrier)
StoreIndexed([_List] v28, v33, v3 T{_Smi}, NoStoreBarrier)
StoreIndexed([_List] v28, v34, v31, NoStoreBarrier)
StoreIndexed([_List] v28, v25, v26 T{_OneByteString}, NoStoreBarrier)
StoreIndexed([_List] v28, v35, v3 T{_Smi}, NoStoreBarrier)
StoreIndexed([_List] v28, v36, v37, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
StoreIndexed([_List] v28, v38, v27 T{String}, NoStoreBarrier)
MoveArgument(sp[0] <- v28)
v39 <- StaticCall:88( _interpolate@0150898<0> v28, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:90(v39)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
v33 <- LoadClassId(v2) [508, 509] int64
Branch if EqualityCompare:10(v33 == v34) goto (3, 8)
B3
ParallelMove r1 <- C, r2 <- C
v9 <- CreateArray:10(v0 T{Null?}, v16 T{_Smi}) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v9, v17 T{_Smi}, v18 T{_OneByteString}, NoStoreBarrier)
ParallelMove r3 <- fp[2]
v13 <- LoadField(v2 T{_OS} . _name@0150898 {final}) T{_OneByteString}
StoreIndexed([_List] v9, v19 T{_Smi}, v13, NoStoreBarrier)
MoveArgument(sp[0] <- v9)
v14 <- StaticCall:14( _interpolate@0150898<0> v9, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:16 B9
B8
ParallelMove r3 <- r0
ParallelMove r1 <- C, r2 <- C
v25 <- CreateArray:10(v0 T{Null?}, v16 T{_Smi}) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v25, v17 T{_Smi}, v32 T{_OneByteString}, NoStoreBarrier)
ParallelMove r1 <- fp[2]
v29 <- LoadField(v2 T{_Architecture} . _name@0150898 {final}) T{_OneByteString}
StoreIndexed([_List] v25, v19 T{_Smi}, v29, NoStoreBarrier)
MoveArgument(sp[0] <- v25)
v30 <- StaticCall:14( _interpolate@0150898<0> v25, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:16 B9
B9
ParallelMove r0 <- r0
DartReturn:12(v35 T{String})
CheckStackOverflowSlowPath
B0
B1
ParallelMove r0 <- C
DartReturn:10(v3)
B0
B1
ParallelMove r0 <- C
DartReturn:10(v3)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
v4 <- LoadField(v2 . message {final}) T{String}
ParallelMove fp[-1] <- r1
MoveArgument(sp[1] <- v5)
MoveArgument(sp[0] <- v4)
v6 <- StaticCall:12( ==<0> v5, v4, using unchecked entrypoint, recognized_kind = OneByteString_equality, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:16(!==, v6 T{bool}, v7) goto (3, 4)
BoolTest
B3
ParallelMove r0 <- fp[-1]
ParallelMove r1 <- C, r2 <- C
v125 <- CreateArray:22(v0, v14) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v125, v16, v3, NoStoreBarrier)
StoreIndexed([_List] v125, v18, v126, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
StoreIndexed([_List] v125, v19, v4, NoStoreBarrier)
MoveArgument(sp[0] <- v125)
v127 <- StaticCall:24( _interpolate@0150898<0> v125, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
ParallelMove r3 <- r0 goto:30 B5
B4
ParallelMove r3 <- C goto:32 B5
B5
ParallelMove fp[-1] <- r3
v9 <- LoadField(v2 . offset {final}) T{int??}
ParallelMove fp[-10] <- r4
v10 <- LoadField(v2 . source {final}) T{*?}
ParallelMove fp[-6] <- r5
v132 <- LoadClassId(v10) [1, 600] int64
Branch if TestRange(v132 in [93-94]) T{bool} goto (6, 57)
B6
Branch if StrictCompare:48(!==, v9, v0) goto (8, 13)
B8
v291 <- UnboxInt64([non-speculative], v9 T{int?}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v291 T{int?}, v321 T{_Smi}) T{bool} goto (10, 7)
B10
B7
v190 <- LoadField(v10 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v293 <- UnboxInt64([non-speculative], v190 T{_Smi}) [0, 2305843009213693951] int64
Branch if RelationalOp(>, v291 T{int?}, v293 T{_Smi}) T{bool} goto (11, 14)
B11
B9
ParallelMove r0 <- C goto:96 B15
B14
B13
B12
ParallelMove r0 <- r4 goto:98 B15
B15
Branch if StrictCompare:100(===, v23, v0) goto (16, 20)
B16
v185 <- LoadField(v10 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v294 <- UnboxInt64([non-speculative], v185 T{_Smi}) [0, 2305843009213693951] int64
Branch if RelationalOp(>, v294 T{_Smi}, v322 T{_Smi}) T{bool} goto (17, 18)
B17
MoveArgument(sp[0] <- v68)
ParallelMove r1 <- r5, r2 <- C
v120 <- StaticCall:118( substring<0> v10 T{String}, v321 T{_Smi}, v68, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
MoveArgument(sp[1] <- v120)
MoveArgument(sp[0] <- v75)
v121 <- StaticCall:120( +<0> v120, v75, using unchecked entrypoint) T{String}
ParallelMove r0 <- r0
ParallelMove r3 <- r0 goto:126 B19
B18
ParallelMove r3 <- r5 goto:128 B19
B19
ParallelMove r1 <- C, r2 <- C, fp[-2] <- r3
v118 <- CreateArray:130(v0, v14) T{_List}
ParallelMove r0 <- r0, r3 <- fp[-1]
StoreIndexed([_List] v118, v16, v8, NoStoreBarrier)
StoreIndexed([_List] v118, v18, v60, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreIndexed([_List] v118, v19, v117, NoStoreBarrier)
MoveArgument(sp[0] <- v118)
v119 <- StaticCall:132( _interpolate@0150898<0> v118, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:134(v119)
B20
v296 <- UnboxInt64:234([non-speculative], v23 T{int?}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-5] <- r4
v171 <- LoadField:234(v10 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
ParallelMove fp[-2] <- r6
v305 <- UnboxInt64:234([non-speculative], v171) [0, 2305843009213693951] int64
v173 <- LoadClassId:234(v10 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove r11 <- C, r10 <- C, r9 <- C, r8 <- C goto:234 B35
B35
  Loop 1
  Loop Header
ParallelMove fp[-3] <- r11, fp[-4] <- r10
CheckStackOverflow:238(stack=0, loop=1)
Branch if RelationalOp(<, v28, v296 T{int?}) T{bool} goto (21, 22)
B21
  Loop 1
ParallelMove r0 <- r2, r1 <- r8
t0 <- GenericCheckBound:152(v305 T{_Smi}, v28 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:152(===, v173, v154 T{_Smi}) goto (75, 76)
B75
  Loop 1
v177 <- LoadIndexed([_OneByteString] v10 T{_OneByteString}, v28 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:152 B74
B76
  Loop 1
v175 <- LoadIndexed([_TwoByteString] v10 T{_StringBase}, v28 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:152 B74
B74
  Loop 1
Branch if EqualityCompare(v176 T{_Smi} == v324 T{_Smi}) T{bool} goto (23, 30)
B23
  Loop 1
Branch if EqualityCompare(v26 != v28 T{int}) T{bool} goto (26, 24)
B26
B24
  Loop 1
Branch if StrictCompare:174(!==, v27 T{bool}, v7) goto (27, 28)
BoolTest
B27
B25
  Loop 1
v114 <- BinaryInt64Op(+ [tr], v25, v323 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0 goto:196 B29
B28
  Loop 1
ParallelMove r0 <- r11 goto:198 B29
B29
  Loop 1
v113 <- BinaryInt64Op(+ [tr], v28 T{int}, v323 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r11 <- r0, r10 <- r1, r9 <- C goto:228 B34
B30
  Loop 1
Branch if EqualityCompare(v176 T{_Smi} == v325 T{_Smi}) T{bool} goto (31, 32)
B31
  Loop 1
v105 <- BinaryInt64Op(+ [tr], v25, v323 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v106 <- BinaryInt64Op(+ [tr], v28 T{int}, v323 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r11 <- r0, r1 <- r1, r0 <- C goto:222 B33
B32
  Loop 1
ParallelMove r11 <- r11, r1 <- r10, r0 <- r9 goto:224 B33
B33
  Loop 1
ParallelMove r11 <- r11, r10 <- r1, r9 <- r0 goto:230 B34
B34
  Loop 1
v110 <- BinaryInt64Op(+ [tr], v28 T{int}, v323 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r11 <- r11, r10 <- r10, r9 <- r9, r8 <- r0 goto:236 B35
B22
Branch if RelationalOp(>, v25, v323 T{_Smi}) T{bool} goto (36, 37)
B36
ParallelMove r1 <- C, r2 <- C
v92 <- CreateArray:250(v0, v61) T{_List}
ParallelMove r2 <- r0
StoreIndexed([_List] v92, v16, v93, NoStoreBarrier)
ParallelMove r3 <- fp[-3]
v304 <- BoxInt64(v25) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreIndexed([_List] v92, v18, v304 T{int}, NoStoreBarrier)
StoreIndexed([_List] v92, v19, v94, NoStoreBarrier)
ParallelMove r4 <- fp[-4], r3 <- fp[-5]
v95 <- BinaryInt64Op(- [tr], v296 T{int?}, v26) [-9223372036854775808, 9223372036854775807] int64
v96 <- BinaryInt64Op(+ [tr], v95, v323 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v306 <- BoxInt64(v96) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreIndexed([_List] v92, v14, v306 T{int}, NoStoreBarrier)
StoreIndexed([_List] v92, v59, v35, NoStoreBarrier)
MoveArgument(sp[0] <- v92)
v97 <- StaticCall:256( _interpolate@0150898<0> v92, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
MoveArgument(sp[1] <- v8)
MoveArgument(sp[0] <- v97)
v98 <- StaticCall:258( +<0> v8, v97, using unchecked entrypoint) T{String}
ParallelMove r0 <- r0
ParallelMove r3 <- r0 goto:272 B38
B37
ParallelMove r0 <- r4
ParallelMove r1 <- C, r2 <- C
v32 <- CreateArray:262(v0, v14) T{_List}
ParallelMove r2 <- r0
StoreIndexed([_List] v32, v16, v33, NoStoreBarrier)
ParallelMove r3 <- fp[-5]
v34 <- BinaryInt64Op(+ [tr], v296 T{int?}, v323 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v307 <- BoxInt64(v34) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreIndexed([_List] v32, v18, v307 T{int}, NoStoreBarrier)
StoreIndexed([_List] v32, v19, v35, NoStoreBarrier)
MoveArgument(sp[0] <- v32)
v36 <- StaticCall:266( _interpolate@0150898<0> v32, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
MoveArgument(sp[1] <- v8)
MoveArgument(sp[0] <- v36)
v37 <- StaticCall:268( +<0> v8, v36, using unchecked entrypoint) T{String}
ParallelMove r0 <- r0
ParallelMove r3 <- r0 goto:274 B38
B38
ParallelMove fp[-8] <- r3
v309 <- UnboxInt64:332([non-speculative], v171 T{_Smi}) [0, 2305843009213693951] int64
v146 <- LoadClassId:332(v10 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove r6 <- fp[-5] goto:332 B47
B47
  Loop 0
  Loop Header
CheckStackOverflow:336(stack=0, loop=1)
Branch if RelationalOp(<, v40, v309 T{_Smi}) T{bool} goto (39, 40)
B39
  Loop 0
ParallelMove r0 <- r4, r1 <- r6
t0 <- GenericCheckBound:294(v309 T{_Smi}, v40 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:294(===, v146, v154 T{_Smi}) goto (66, 67)
B66
  Loop 0
v150 <- LoadIndexed([_OneByteString] v10 T{_OneByteString}, v40 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:294 B65
B67
  Loop 0
v148 <- LoadIndexed([_TwoByteString] v10 T{_StringBase}, v40 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:294 B65
B65
  Loop 0
Branch if EqualityCompare(v149 T{_Smi} == v324 T{_Smi}) T{bool} goto (43, 41)
B41
  Loop 0
Branch if EqualityCompare(v149 T{_Smi} == v325 T{_Smi}) T{bool} goto (44, 46)
B46
  Loop 0
v91 <- BinaryInt64Op(+ [tr], v40 T{int?}, v323 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r0 goto:334 B47
B44
B43
B42
ParallelMove r1 <- r6 goto:326 B45
B40
ParallelMove r1 <- r4 goto:338 B45
B45
v46 <- BinaryInt64Op(- [tr], v44, v26) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>, v46, v322 T{_Smi}) T{bool} goto (48, 55)
B48
ParallelMove r4 <- fp[-5]
v67 <- BinaryInt64Op(- [tr], v296 T{int?}, v26) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v67, v326 T{_Smi}) T{bool} goto (49, 50)
B49
v85 <- BinaryInt64Op(+ [tr], v26, v326 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r0, r5 <- r1, r1 <- C, r0 <- C goto:396 B54
B50
v70 <- BinaryInt64Op(- [tr], v44, v296 T{int?}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v70, v326 T{_Smi}) T{bool} goto (51, 52)
B51
v80 <- BinaryInt64Op(- [tr], v44, v326 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0, r1 <- r1, r0 <- C goto:390 B53
B52
v73 <- BinaryInt64Op(- [tr], v296 T{int?}, v327 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v74 <- BinaryInt64Op(+ [tr], v296 T{int?}, v327 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0, r1 <- r1, r0 <- C goto:392 B53
B53
ParallelMove r6 <- r5, r5 <- r1, r1 <- C, r0 <- r0 goto:398 B54
B54
ParallelMove r8 <- r6, r7 <- r5, r6 <- r1, r5 <- r0 goto:404 B56
B55
ParallelMove r4 <- fp[-5]
ParallelMove r8 <- r0, r7 <- r1, r6 <- C, r5 <- C goto:406 B56
B56
ParallelMove fp[-3] <- r8, fp[-2] <- r6, fp[-7] <- r5
v311 <- BoxInt64(v50) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v311 T{int?})
ParallelMove r1 <- r2, r2 <- r8
v53 <- StaticCall:408( substring<0> v10 T{String}, v49, v311 T{int?}, using unchecked entrypoint) T{String}
ParallelMove r3 <- r0, r1 <- fp[-3], r0 <- fp[-5]
ParallelMove fp[-6] <- r3
v54 <- BinaryInt64Op(- [tr], v296 T{int?}, v49) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-2]
v137 <- LoadField(v51 T{_OneByteString} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v312 <- UnboxInt64([non-speculative], v137 T{_Smi}) [0, 2305843009213693951] int64
v56 <- BinaryInt64Op(+ [tr], v54, v312 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- C, r2 <- C, fp[-3] <- r5
v58 <- CreateArray:416(v0, v57) T{_List}
ParallelMove r3 <- r0, r0 <- fp[-8]
ParallelMove fp[-9] <- r3
StoreIndexed([_List] v58, v16, v38, NoStoreBarrier)
ParallelMove r0 <- fp[-2]
StoreIndexed([_List] v58, v18, v51, NoStoreBarrier)
ParallelMove r0 <- fp[-6]
StoreIndexed([_List] v58, v19, v53, NoStoreBarrier)
ParallelMove r0 <- fp[-7]
StoreIndexed([_List] v58, v14, v52, NoStoreBarrier)
StoreIndexed([_List] v58, v59, v60, NoStoreBarrier)
ParallelMove r1 <- C, r2 <- fp[-3]
v63 <- StaticCall:418( *<0> v62, v56, using unchecked entrypoint) T{String}
ParallelMove r1 <- fp[-9], r0 <- r0
StoreIndexed([_List] v58, v61, v63)
ParallelMove r0 <- fp[-9]
StoreIndexed([_List] v58, v64, v65, NoStoreBarrier)
MoveArgument(sp[0] <- v58)
v66 <- StaticCall:420( _interpolate@0150898<0> v58, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:422(v66)
B57
Branch if StrictCompare:426(!==, v9, v0) goto (58, 59)
B58
ParallelMove r1 <- C, r2 <- C
v15 <- CreateArray:432(v0, v14) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v15, v16, v17, NoStoreBarrier)
ParallelMove r1 <- fp[-10]
StoreIndexed([_List] v15, v18, v9 T{int?}, NoStoreBarrier)
StoreIndexed([_List] v15, v19, v20, NoStoreBarrier)
MoveArgument(sp[0] <- v15)
v21 <- StaticCall:434( _interpolate@0150898<0> v15, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
MoveArgument(sp[1] <- v8)
MoveArgument(sp[0] <- v21)
v22 <- StaticCall:436( +<0> v8, v21, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:442 B60
B59
ParallelMove r0 <- fp[-1] goto:444 B60
B60
ParallelMove r0 <- r0
DartReturn:446(v13)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove r3 <- r1, fp[-3] <- r1
CheckStackOverflow:8(stack=0, loop=0)
Branch if RelationalOp(<=, v3, v154 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:20(v22)
B4
Branch if EqualityCompare(v3 == v155 T{_Smi}) T{bool} goto (5, 6)
B5
ParallelMove r0 <- r3
DartReturn:34(v2)
B6
v99 <- LoadField(v2 T{_OneByteString} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v99, v4 T{_Smi}) T{bool} goto (7, 8)
B7
ParallelMove r0 <- r3
DartReturn:48(v2)
B8
v140 <- UnboxInt64([non-speculative], v99 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove fp[-2] <- r4
v60 <- BinaryInt64Op(* [tr], v140 T{_Smi}, v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
v61 <- BinaryInt64Op(| [tr], v140 T{_Smi}, v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v61, v154 T{_Smi}) T{bool} goto (29, 27)
B29
B27
Branch if RelationalOp(<=, v60, v154 T{_Smi}) T{bool} goto (30, 31)
B30
B28
ParallelMove r2 <- C goto:42 B36
B31
Branch if RelationalOp(<, v61 T{int}, v88 T{_Smi}) T{bool} goto (32, 33)
B32
ParallelMove r2 <- r0 goto:60 B36
B33
v71 <- BinaryInt64Op(~/ [tr], v60, v140 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v71 != v3 T{int}) T{bool} goto (34, 35)
B34
ParallelMove r2 <- C goto:76 B36
B35
ParallelMove r2 <- r0 goto:80 B36
B36
ParallelMove fp[-1] <- r2
v144 <- BoxInt64(v89 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v144 T{int})
v94 <- StaticCall:10( allocateOneByteString<0> v144 T{int}, recognized_kind = AllocateOneByteString, result_type = T{_OneByteString}) T{_OneByteString}
ParallelMove r2 <- r0
ParallelMove r5 <- C, r3 <- fp[-3], r4 <- fp[-2] goto:78 B11
B11
  Loop 1
  Loop Header
CheckStackOverflow:82(stack=0, loop=1)
Branch if RelationalOp(<, v13, v140 T{_Smi}) T{bool} goto (9, 10)
B9
  Loop 1
v157 <- LoadIndexed:72([_OneByteString] v2, v13 T{int}) [0, 255] int64
StoreIndexed:10([_OneByteString] v94 T{_OneByteString}, v13 T{int}, v157 T{_Smi}, NoStoreBarrier)
v21 <- BinaryInt64Op(+ [tr], v13 T{int}, v155 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:80 B11
B10
v27 <- LoadField:106(v94 T{_OneByteString} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v150 <- UnboxInt64:106([non-speculative], v27) [0, 2305843009213693951] int64
ParallelMove r6 <- r4, r3 <- fp[-1] goto:106 B14
B14
  Loop 0
  Loop Header
CheckStackOverflow:110(stack=0, loop=1)
Branch if RelationalOp(<, v15, v89 T{int}) T{bool} goto (12, 13)
B12
  Loop 0
v17 <- BinaryInt64Op(- [tr], v15, v140 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r5, r1 <- r7
GenericCheckBound:100(v150 T{_Smi}, v17) [-9223372036854775808, 9223372036854775807] int64
v158 <- LoadIndexed:100([_OneByteString] v94 T{_OneByteString}, v17 T{int}) [0, 255] int64
StoreIndexed:10([_OneByteString] v94 T{_OneByteString}, v15 T{int}, v158 T{_Smi}, NoStoreBarrier)
v19 <- BinaryInt64Op(+ [tr], v15, v155 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r0 goto:108 B14
B13
ParallelMove r0 <- r2
DartReturn:112(v94 T{_OneByteString})
CheckStackOverflowSlowPath
slow path int64 divide operation
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
ParallelMove r0 <- C
DartReturn:10(v3)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
StaticCall:10( _consumeBuffer@0150898<0> v2, using unchecked entrypoint)
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . _parts@0150898) T{_GrowableList?}
v4 <- LoadField(v2 . _partsCodeUnits@0150898) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v4 == v27 T{_Smi}) T{bool} goto (5, 3)
B5
B3
Branch if StrictCompare:24(===, v3, v0) goto (6, 7)
B6
B4
ParallelMove r0 <- C goto:48 B8
B7
v17 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v26 <- UnboxInt64([non-speculative], v17 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r1 <- r1, r2 <- C, r3 <- r3
v9 <- StaticCall:44( _concatRange@0150898<0> v3 T{_GrowableList}, v27 T{_Smi}, v26 T{_Smi}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:50 B8
B8
ParallelMove r0 <- r0
DartReturn:52(v10)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
v8 <- LoadField:4(v2 T{_Uri} . _text@0150898, CallsInitializer) T{String}
ParallelMove r0 <- r0
DartReturn:12(v8 T{String})
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r3 <- fp[2]
v3 <- LoadField(v2 . _separatorIndices@0150898 {final}) T{_GrowableList}
v17 <- LoadField(v3 . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v27 <- UnboxInt64([non-speculative], v17) [0, 576460752303423487] int64
ParallelMove r0 <- r1, r1 <- C
GenericCheckBound:12(v27 T{_Smi}, v31 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v19 <- LoadField(v3 . GrowableObjectArray.data) T{_List}
v32 <- LoadIndexed:12([_List] v19, v31 T{_Smi}) [-9223372036854775808, 9223372036854775807] T{int}
Branch if StrictCompare(===, v32 T{int}, v6 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r1 <- C, r2 <- C
v12 <- CreateArray:24(v0, v11) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v12, v4, v13, NoStoreBarrier)
ParallelMove r1 <- fp[2]
v15 <- LoadField(v2 . _text@0150898 {final}) T{String}
StoreIndexed([_List] v12, v14, v15, NoStoreBarrier)
MoveArgument(sp[0] <- v12)
v16 <- StaticCall:28( _interpolate@0150898<0> v12, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:36 B5
B4
ParallelMove r1 <- r3
v9 <- LoadField(v2 . _text@0150898 {final}) T{String}
ParallelMove r0 <- r2 goto:38 B5
B5
ParallelMove r0 <- r0
DartReturn:40(v10)
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
ParallelMove r1 <- sp[0]
v3 <- LoadField(v2 . _uri@0150898 {final}) T{String}
ParallelMove r0 <- r0
DartReturn:12(v3)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v4 <- CreateArray:10(v0, v3) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v4, v5, v6, NoStoreBarrier)
ParallelMove r1 <- fp[2]
v8 <- LoadField(v2 . name {final}) T{Null?}
StoreIndexed([_List] v4, v7, v8, NoStoreBarrier)
MoveArgument(sp[0] <- v4)
v9 <- StaticCall:14( _interpolate@0150898<0> v4, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:16(v9)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . error {final}) T{Object}
MoveArgument(sp[0] <- v3)
v4 <- StaticCall:12( _interpolateSingle@0150898<0> v3) T{String}
ParallelMove r0 <- r0
DartReturn:14(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v4 <- CreateArray:10(v0, v3) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v4, v5, v6, NoStoreBarrier)
ParallelMove r1 <- fp[2]
v8 <- LoadField(v2 . _message@4048458 {final}) T{String}
StoreIndexed([_List] v4, v7, v8, NoStoreBarrier)
StoreIndexed([_List] v4, v9, v10, NoStoreBarrier)
MoveArgument(sp[0] <- v4)
v11 <- StaticCall:14( _interpolate@0150898<0> v4, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:16(v11)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v5 <- CreateArray:12(v0, v4) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v5, v6, v7, NoStoreBarrier)
ParallelMove r1 <- fp[2]
v9 <- LoadField(v2 . duration {final}) T{Duration}
StoreIndexed([_List] v5, v8, v9, NoStoreBarrier)
MoveArgument(sp[0] <- v5)
v10 <- StaticCall:16( _interpolate@0150898<0> v5, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- C, r2 <- C, r0 <- r0
ParallelMove fp[-1] <- r0
v12 <- CreateArray:20(v0, v11) T{_List}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreIndexed([_List] v12, v6, v10, NoStoreBarrier)
StoreIndexed([_List] v12, v8, v13, NoStoreBarrier)
ParallelMove r0 <- fp[2]
v14 <- LoadField(v2 . message {final}) T{_OneByteString}
StoreIndexed([_List] v12, v4, v14, NoStoreBarrier)
MoveArgument(sp[0] <- v12)
v15 <- StaticCall:24( _interpolate@0150898<0> v12, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:26(v15)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r2 <- r1
CheckStackOverflow:8(stack=0, loop=0)
v30 <- LoadField(v2 T{__Int8ArrayView&_TypedListView&_IntListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v37 <- UnboxInt64([non-speculative], v30 T{_Smi}) [0, 4611686018427387903] int64
Branch if RelationalOp(>, v37 T{_Smi}, v41 T{_Smi}) T{bool} goto (3, 4)
B3
v10 <- BinaryInt64Op(- [tr], v37 T{_Smi}, v42 T{_Smi}) [v37-1, v37-1] int64
ParallelMove r0 <- r1, r1 <- r3
t0 <- GenericCheckBound:26(v37 T{_Smi}, v10 T{int}) [-9223372036854775808, 9223372036854775807] int64
v45 <- LoadField(v2 T{_Uint8ArrayView} . PointerBase.data, MayLoadInnerPointer) untagged
v25 <- LoadIndexed([_Uint8ArrayView] v45 T{_Uint8ArrayView}, v10 T{int}) [0, 255] int64
v40 <- BoxInt64(v25 T{_Smi}) [0, 255] T{_Smi}
ParallelMove r0 <- r0
DartReturn:28(v40 T{_Smi})
B4
v7 <- StaticCall:32( noElement<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:34(v7)
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v21 <- LoadField(v2 T{__Int8List&_TypedList&_IntListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v28 <- UnboxInt64([non-speculative], v21 T{_Smi}) [0, 4611686018427387903] int64
Branch if RelationalOp(>, v28 T{_Smi}, v31 T{_Smi}) T{bool} goto (3, 4)
B3
v10 <- BinaryInt64Op(- [tr], v28 T{_Smi}, v32 T{_Smi}) [v28-1, v28-1] int64
v30 <- BoxInt64(v10) [v28-1, v28-1] T{_Smi}
v33 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v30)
ParallelMove r0 <- r0
v11 <- DispatchTableCall( cid=v33 List.[]<0>, v2, v30) T{*?}
ParallelMove r0 <- r0
DartReturn:28(v11 T{_Smi})
B4
v7 <- StaticCall:32( noElement<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:34(v7)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . _map@3220832 {final}) T{_Map}
ParallelMove r1 <- r1
v9 <- StaticCall:10( mapToString<0> v3 T{_Map}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:14(v9 T{String})
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[4]
v5 <- LoadField(v2 . Closure.context {final}) T{*}
ParallelMove fp[-1] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v6 <- LoadField(v5 . first) T{bool}
Branch if StrictCompare:12(!==, v6 T{bool}, v7) goto (3, 4)
BoolTest
B3
v13 <- LoadField(v5 . result) T{StringBuffer}
ParallelMove r1 <- r1, r2 <- C
StaticCall:18( write<0> v13, v14, using unchecked entrypoint)
ParallelMove  goto:24 B5
B4
B5
StoreField(v5 . first = v8)
v9 <- LoadField(v5 . result) T{StringBuffer}
ParallelMove r1 <- r1, r2 <- fp[3]
StaticCall:28( write<0> v9, v3, using unchecked entrypoint)
ParallelMove r0 <- fp[-1]
v10 <- LoadField(v5 . result) T{StringBuffer}
ParallelMove r1 <- r1, r2 <- C
StaticCall:30( write<0> v10, v11, using unchecked entrypoint)
ParallelMove r0 <- fp[-1]
v12 <- LoadField(v5 . result) T{StringBuffer}
ParallelMove r1 <- r1, r2 <- fp[2]
StaticCall:32( write<0> v12, v4, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:34(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r2 <- r1
CheckStackOverflow:8(stack=0, loop=0)
v25 <- LoadField(v2 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v32 <- UnboxInt64([non-speculative], v25 T{_Smi}) [0, 576460752303423487] int64
Branch if RelationalOp(>, v32 T{_Smi}, v36 T{_Smi}) T{bool} goto (3, 4)
B3
v10 <- BinaryInt64Op(- [tr], v32 T{_Smi}, v37 T{_Smi}) [-1, 576460752303423486] int64
ParallelMove r0 <- r1, r1 <- r3
GenericCheckBound:26(v32 T{_Smi}, v10) [-9223372036854775808, 9223372036854775807] int64
v14 <- LoadField(v2 . GrowableObjectArray.data) T{_List}
v38 <- LoadIndexed:26([_List] v14, v10 T{int}) T{X0}
ParallelMove r0 <- r1
DartReturn:28(v38 T{X0})
B4
v7 <- StaticCall:32( noElement<0> ) T{StateError}
ParallelMove r0 <- r0
Throw:34(v7)
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
v6 <- LoadField(v2 . _os@8050071 {final}) T{_OS}
v18 <- LoadField(v6 T{_OS} . _name@0150898 {final}) T{_OneByteString}
ParallelMove r1 <- C, r2 <- C, fp[-1] <- r3
v4 <- CreateArray:10(v0, v3) T{_List}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreIndexed([_List] v4, v5, v18, NoStoreBarrier)
StoreIndexed([_List] v4, v8, v9, NoStoreBarrier)
ParallelMove r0 <- fp[2]
v11 <- LoadField(v2 . _architecture@8050071 {final}) T{_Architecture}
v23 <- LoadField(v11 T{_Architecture} . _name@0150898 {final}) T{_OneByteString}
StoreIndexed([_List] v4, v10, v23, NoStoreBarrier)
MoveArgument(sp[0] <- v4)
v13 <- StaticCall:20( _interpolate@0150898<0> v4, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:22(v13)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v4 <- CreateArray:10(v0, v3) T{_List}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
StoreIndexed([_List] v4, v5, v6, NoStoreBarrier)
ParallelMove r1 <- fp[2]
v8 <- StaticCall:12( computeUnmangledName<0> v2) T{String}
ParallelMove r1 <- fp[-1], r0 <- r0
StoreIndexed([_List] v4, v7, v8)
ParallelMove r0 <- fp[-1]
StoreIndexed([_List] v4, v9, v10, NoStoreBarrier)
MoveArgument(sp[0] <- v4)
v11 <- StaticCall:14( _interpolate@0150898<0> v4, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:16(v11)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v4 <- CreateArray:10(v0, v3) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v4, v5, v6, NoStoreBarrier)
ParallelMove r1 <- fp[2]
v8 <- LoadField(v2 . message {final}) T{String}
StoreIndexed([_List] v4, v7, v8, NoStoreBarrier)
MoveArgument(sp[0] <- v4)
v9 <- StaticCall:14( _interpolate@0150898<0> v4, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:16(v9)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
v3 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r1 <- r1
v4 <- AllocateObject:10(cls=ListIterator, v3, <not-aliased>) T{ListIterator}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v4 T{ListIterator} . _iterable@9040228 = v2 T{ListBase<X0>}, NoStoreBarrier)
v33 <- LoadClassId(v2) [89, 549] int64
Branch if TestRange:10(v33 in [89-90]) goto (6, 13)
B6
v18 <- LoadField(v2 T{_Array<X0>} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v44 <- UnboxInt64([non-speculative], v18) [0, 576460752303423487] int64
ParallelMove r2 <- r4 goto:10 B15
B13
Branch if EqualityCompare:10(v33 == v34) goto (8, 14)
B8
v24 <- LoadField(v2 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v45 <- UnboxInt64([non-speculative], v24) [0, 576460752303423487] int64
ParallelMove r2 <- r3 goto:10 B15
B14
v30 <- LoadField(v2 T{CodeUnits} . _string@9040228 {final}) T{String}
v40 <- LoadField(v30 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v46 <- UnboxInt64([non-speculative], v40 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove r2 <- r2 goto:14 B15
B15
StoreField(v4 T{ListIterator} . _length@9040228 = v35 <int64>, NoStoreBarrier)
StoreField(v4 T{ListIterator} . _index@9040228 = v47 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:14(v4)
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r1 <- r1
v4 <- AllocateObject:10(cls=ListIterator, v3, <not-aliased>) T{ListIterator}
ParallelMove r2 <- r0, r1 <- fp[-1]
ParallelMove fp[-2] <- r2
StoreField(v4 T{ListIterator} . _iterable@9040228 = v2 T{ListIterable<X0>}, NoStoreBarrier)
v50 <- LoadClassId(v2) [537, 538] int64
Branch if EqualityCompare:10(v50 == v51) goto (6, 18)
B6
v18 <- LoadField(v2 T{MappedListIterable} . _source@9040228 {final}) T{_GrowableList}
v57 <- LoadField(v18 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v72 <- UnboxInt64([non-speculative], v57 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r2 <- r0, r0 <- r2 goto:14 B19
B18
v25 <- LoadField(v2 T{SubListIterable} . _iterable@9040228 {final}) T{Iterable<X0>}
v84 <- LoadClassId(<non-smi> v25) int64
MoveArgument(sp[0] <- v25)
ParallelMove r0 <- r3
v26 <- DispatchTableCall( cid=v84 Iterable.length<0>, v25) T{int}
ParallelMove r0 <- r0, r1 <- fp[-1]
v27 <- LoadField(v2 T{SubListIterable} . _start@9040228 {final}) [-9223372036854775808, 9223372036854775807] int64
v75 <- UnboxInt64([non-speculative], v26 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
Branch if RelationalOp(>=, v27, v75 T{_Smi}) T{bool} goto (10, 11)
B10
ParallelMove r2 <- C, r0 <- fp[-2] goto:26 B19
B11
v30 <- LoadField(v2 T{SubListIterable} . _endOrLength@9040228 {final}) T{int??}
Branch if StrictCompare:32(===, v30, v0 T{Null?}) goto (14, 12)
B14
B12
v76 <- UnboxInt64([non-speculative], v30 T{int?}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>=, v76 T{int?}, v75 T{_Smi}) T{bool} goto (15, 16)
B15
B13
v35 <- BinaryInt64Op(- [tr], v75 T{_Smi}, v27 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r4, r0 <- fp[-2] goto:60 B19
B16
v33 <- BinaryInt64Op(- [tr], v76 T{int?}, v27 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r3, r0 <- fp[-2] goto:68 B19
B19
StoreField(v4 T{ListIterator} . _length@9040228 = v52 T{int} <int64>)
StoreField(v4 T{ListIterator} . _index@9040228 = v78 T{_Smi} <int64>)
ParallelMove r0 <- r0
DartReturn:14(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v3 <- LoadField(v2 . _re@0150898 {final}) T{_RegExp}
ParallelMove fp[-2] <- r0
v4 <- LoadField(v2 . _str@0150898 {final}) T{String}
ParallelMove fp[-1] <- r2
v6 <- AllocateObject:16(cls=_AllMatchesIterator, <not-aliased>) T{_AllMatchesIterator}
ParallelMove r0 <- r0, r1 <- fp[-2]
StoreField(v6 T{_AllMatchesIterator} . _re@0150898 = v3 T{_RegExp}, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
StoreField(v6 T{_AllMatchesIterator} . _str@0150898 = v4 T{String}, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v6 T{_AllMatchesIterator} . _nextIndex@0150898 = v17 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:20(v6)
B0
B1
Enter frame
v3 <- LoadField(v2 . _input@0150898 {final}) T{String}
ParallelMove fp[-2] <- r0
v4 <- LoadField(v2 . _pattern@0150898 {final}) T{String}
ParallelMove fp[-1] <- r2
v6 <- AllocateObject:16(cls=_StringAllMatchesIterator, <not-aliased>) T{_StringAllMatchesIterator}
ParallelMove r0 <- r0, r1 <- fp[-2]
StoreField(v6 T{_StringAllMatchesIterator} . _input@0150898 = v3 T{String}, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
StoreField(v6 T{_StringAllMatchesIterator} . _pattern@0150898 = v4 T{String}, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v6 T{_StringAllMatchesIterator} . _index@0150898 = v17 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:20(v6)
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r1 <- r1
v4 <- AllocateObject:10(cls=_SyncStarIterator, v3) T{_SyncStarIterator}
ParallelMove r1 <- r0, r0 <- fp[-1]
ParallelMove fp[-3] <- r1
v5 <- LoadField(v2 . _stateAtStart@4048458) T{_SuspendState?}
ParallelMove fp[-2] <- r2
CheckNull:14(v5, CastError) T{_SuspendState}
ParallelMove r0 <- r2
v12 <- Call1ArgStub:10(CloneSuspendState(v5 T{_SuspendState})) T{*?}
ParallelMove r0 <- r0, r2 <- r0, r1 <- fp[-3]
StoreField(v4 T{_SyncStarIterator} . _state@4048458 = v12 T{_SuspendState})
ParallelMove r0 <- r1
StoreField(v12 T{_SuspendState} . SuspendState.function_data = v4 T{_SyncStarIterator})
ParallelMove r0 <- r1
DartReturn:20(v4)
CheckStackOverflowSlowPath
slow path check null (cast) operation
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
v5 <- LoadField(v2 . _table@3220832 {final}) T{_Map}
ParallelMove fp[-4] <- r2
v16 <- LoadField(v5 T{_Map} . LinkedHashBase.data) T{_List}
ParallelMove fp[-3] <- r3
v21 <- LoadField(v5 T{_Map} . LinkedHashBase.used_data) [0, 4611686018427387903] T{_Smi}
v10 <- LoadField(v2 . _offset@3220832 {final}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-2] <- r6
v23 <- UnboxInt64([non-speculative], v21 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- r0, fp[-1] <- r5
v4 <- AllocateObject:10(cls=_CompactIterator, v3) T{_CompactIterator}
ParallelMove r1 <- r0, r2 <- fp[-4], r3 <- fp[-3], r5 <- fp[-1], r6 <- fp[-2], r7 <- C, r0 <- r0
ParallelMove fp[-3] <- r0
StaticCall:26( _CompactIterator@3220832.<0> v4, v5, v16 T{_List}, v23 T{_Smi}, v10, v24 T{_Smi})
ParallelMove r0 <- fp[-3]
DartReturn:28(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r3 <- r1, r1 <- r3, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- r2
StoreField(v2 . _table@3220832 = v3)
ParallelMove r0 <- r1
StoreField(v2 . _data@3220832 = v4)
StoreField(v2 . _len@3220832 = v5 <int64>)
StoreField(v2 . _offset@3220832 = v6 <int64>)
StoreField(v2 . _step@3220832 = v7 <int64>)
v9 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r2
v8 <- DispatchTableCall( cid=v9 _HashBase._checkSum<0>, v3) int64
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v2 . _checkSum@3220832 = v8 T{int} <int64>)
ParallelMove r0 <- C
DartReturn:14(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v4 <- LoadField(v2 . _data@3220832 {final}) T{_ImmutableList}
ParallelMove fp[-3] <- r0
v5 <- LoadField(v2 . _len@3220832 {final}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-2] <- r2
v6 <- LoadField(v2 . _offset@3220832 {final}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-1] <- r3
v8 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r1 <- r4
v9 <- AllocateObject:20(cls=_CompactIteratorImmutable, v8, <not-aliased>) T{_CompactIteratorImmutable}
ParallelMove r0 <- r0, r1 <- fp[-3]
StoreField(v9 T{_CompactIteratorImmutable} . _data@3220832 = v4 T{_ImmutableList}, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreField(v9 T{_CompactIteratorImmutable} . _len@3220832 = v5 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
StoreField(v9 T{_CompactIteratorImmutable} . _offset@3220832 = v6 T{int} <int64>, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v9 T{_CompactIteratorImmutable} . _step@3220832 = v23 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:24(v9)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- AllocateObject:10(cls=StringBuffer) T{StringBuffer}
ParallelMove r1 <- r0, r0 <- r0
ParallelMove fp[-1] <- r0
StaticCall:12( StringBuffer.<0> v3)
ParallelMove r1 <- fp[-1], r2 <- C
StaticCall:14( write<0> v3, v4, using unchecked entrypoint)
ParallelMove r0 <- fp[2]
v5 <- LoadField(v2 . message {final}) T{String}
ParallelMove fp[-2] <- r3
v32 <- LoadField(v5 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(!==, v32, v35 T{_Smi}) T{bool} goto (3, 7)
B3
ParallelMove r1 <- fp[-1], r2 <- C
StaticCall:28( write<0> v3, v15, using unchecked entrypoint)
ParallelMove r1 <- fp[-1], r2 <- fp[-2]
StaticCall:32( write<0> v3, v5 T{String}, using unchecked entrypoint)
ParallelMove r0 <- fp[2]
v17 <- LoadField(v2 . errorCode {final}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-3] <- r3
Branch if EqualityCompare(v17 != v54 T{_Smi}) T{bool} goto (4, 5)
B4
ParallelMove r1 <- fp[-1], r2 <- C
StaticCall:46( write<0> v3, v19, using unchecked entrypoint)
ParallelMove r2 <- fp[-3]
v48 <- BoxInt64(v17 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v63 <- LoadClassId(v48 T{int}) int64
MoveArgument(sp[0] <- v48 T{int})
ParallelMove r0 <- r1
v21 <- DispatchTableCall( cid=v63 int.toString<0>, v48 T{int}) T{String}
ParallelMove r1 <- fp[-1], r2 <- r0
StaticCall:52( write<0> v3, v21 T{String}, using unchecked entrypoint)
ParallelMove  goto:58 B6
B5
B6
B7
v8 <- LoadField(v2 . errorCode {final}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-3] <- r3
Branch if EqualityCompare(v8 != v54 T{_Smi}) T{bool} goto (8, 9)
B8
ParallelMove r1 <- fp[-1], r2 <- C
StaticCall:76( write<0> v3, v11, using unchecked entrypoint)
ParallelMove r2 <- fp[-3]
v49 <- BoxInt64(v8 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v64 <- LoadClassId(v49 T{int}) int64
MoveArgument(sp[0] <- v49 T{int})
ParallelMove r0 <- r1
v13 <- DispatchTableCall( cid=v64 int.toString<0>, v49 T{int}) T{String}
ParallelMove r1 <- fp[-1], r2 <- r0
StaticCall:82( write<0> v3, v13 T{String}, using unchecked entrypoint)
ParallelMove  goto:88 B10
B9
B10
B11
MoveArgument(sp[0] <- v3)
v14 <- StaticCall:98( toString<0> v3, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:100(v14)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v4 <- CreateArray:10(v0, v3) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v4, v5, v6, NoStoreBarrier)
ParallelMove r1 <- fp[2]
v16 <- LoadField(v2 T{_Directory} . _path@15069316 {final}) T{String}
StoreIndexed([_List] v4, v7, v16 T{String}, NoStoreBarrier)
StoreIndexed([_List] v4, v9, v10, NoStoreBarrier)
MoveArgument(sp[0] <- v4)
v11 <- StaticCall:14( _interpolate@0150898<0> v4, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:16(v11)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v4 <- CreateArray:10(v0, v3) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v4, v5, v6, NoStoreBarrier)
ParallelMove r1 <- fp[2]
v16 <- LoadField(v2 T{_File} . _path@15069316 {final}) T{String}
StoreIndexed([_List] v4, v7, v16 T{String}, NoStoreBarrier)
StoreIndexed([_List] v4, v9, v10, NoStoreBarrier)
MoveArgument(sp[0] <- v4)
v11 <- StaticCall:14( _interpolate@0150898<0> v4, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:16(v11)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v4 <- CreateArray:10(v0, v3) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v4, v5, v6, NoStoreBarrier)
ParallelMove r1 <- fp[2]
v16 <- LoadField(v2 T{_Link} . _path@15069316 {final}) T{String}
StoreIndexed([_List] v4, v7, v16 T{String}, NoStoreBarrier)
StoreIndexed([_List] v4, v9, v10, NoStoreBarrier)
MoveArgument(sp[0] <- v4)
v11 <- StaticCall:14( _interpolate@0150898<0> v4, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:16(v11)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2], r2 <- C
v4 <- StaticCall:10( _toStringHelper@15069316<0> v2, v3, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:12(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v4 <- AllocateObject:10(cls=StringBuffer) T{StringBuffer}
ParallelMove r1 <- r0, r0 <- r0
ParallelMove fp[-3] <- r0
StaticCall:12( StringBuffer.<0> v4)
ParallelMove r1 <- fp[-3], r2 <- fp[-2]
StaticCall:14( write<0> v4, v3, using unchecked entrypoint)
ParallelMove r0 <- fp[-1]
v5 <- LoadField(v2 . message {final}) T{String}
ParallelMove fp[-2] <- r3
v52 <- LoadField(v5 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(!==, v52, v11 T{_Smi}) T{bool} goto (3, 7)
B3
ParallelMove r1 <- C, r2 <- C
v26 <- CreateArray:28(v0, v9) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v26, v11, v12, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreIndexed([_List] v26, v13, v5 T{String}, NoStoreBarrier)
MoveArgument(sp[0] <- v26)
v28 <- StaticCall:32( _interpolate@0150898<0> v26, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- fp[-3], r2 <- r0
StaticCall:34( write<0> v4, v28, using unchecked entrypoint)
ParallelMove r1 <- C, r2 <- C
v29 <- CreateArray:38(v0, v19) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v29, v11, v21, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
v30 <- LoadField(v2 . path {final}) T{String??}
StoreIndexed([_List] v29, v13, v30, NoStoreBarrier)
StoreIndexed([_List] v29, v9, v23, NoStoreBarrier)
MoveArgument(sp[0] <- v29)
v31 <- StaticCall:42( _interpolate@0150898<0> v29, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- fp[-3], r2 <- r0
StaticCall:44( write<0> v4, v31, using unchecked entrypoint)
ParallelMove r0 <- fp[-1]
v32 <- LoadField(v2 . osError {final}) T{OSError?}
ParallelMove fp[-2] <- r3
Branch if StrictCompare:48(!==, v32, v0) goto (4, 5)
B4
ParallelMove r1 <- C, r2 <- C
v33 <- CreateArray:54(v0, v19) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v33, v11, v34, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreIndexed([_List] v33, v13, v32 T{OSError}, NoStoreBarrier)
StoreIndexed([_List] v33, v9, v36, NoStoreBarrier)
MoveArgument(sp[0] <- v33)
v37 <- StaticCall:58( _interpolate@0150898<0> v33, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- fp[-3], r2 <- r0
StaticCall:60( write<0> v4, v37, using unchecked entrypoint)
ParallelMove  goto:66 B6
B5
B6
B7
v8 <- LoadField(v2 . osError {final}) T{OSError?}
ParallelMove fp[-2] <- r3
Branch if StrictCompare:74(!==, v8, v0) goto (8, 9)
B8
ParallelMove r1 <- C, r2 <- C
v16 <- CreateArray:80(v0, v9) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v16, v11, v12, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreIndexed([_List] v16, v13, v8 T{OSError}, NoStoreBarrier)
MoveArgument(sp[0] <- v16)
v18 <- StaticCall:84( _interpolate@0150898<0> v16, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- fp[-3], r2 <- r0
StaticCall:86( write<0> v4, v18, using unchecked entrypoint)
ParallelMove r1 <- C, r2 <- C
v20 <- CreateArray:90(v0, v19) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v20, v11, v21, NoStoreBarrier)
ParallelMove r3 <- fp[-1]
v22 <- LoadField(v2 . path {final}) T{String??}
StoreIndexed([_List] v20, v13, v22, NoStoreBarrier)
StoreIndexed([_List] v20, v9, v23, NoStoreBarrier)
MoveArgument(sp[0] <- v20)
v24 <- StaticCall:94( _interpolate@0150898<0> v20, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- fp[-3], r2 <- r0
StaticCall:96( write<0> v4, v24, using unchecked entrypoint)
ParallelMove  goto:112 B10
B9
ParallelMove r3 <- r0
ParallelMove r1 <- C, r2 <- C
v10 <- CreateArray:102(v0, v9) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v10, v11, v12, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
v14 <- LoadField(v2 . path {final}) T{String??}
StoreIndexed([_List] v10, v13, v14, NoStoreBarrier)
MoveArgument(sp[0] <- v10)
v15 <- StaticCall:106( _interpolate@0150898<0> v10, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- fp[-3], r2 <- r0
StaticCall:108( write<0> v4, v15, using unchecked entrypoint)
ParallelMove  goto:114 B10
B10
B11
MoveArgument(sp[0] <- v4)
v25 <- StaticCall:122( toString<0> v4, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:124(v25)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2], r2 <- C
v4 <- StaticCall:10( _toStringHelper@15069316<0> v2, v3, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:12(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2], r2 <- C
v4 <- StaticCall:10( _toStringHelper@15069316<0> v2, v3, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:12(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2], r2 <- C
v4 <- StaticCall:10( _toStringHelper@15069316<0> v2, v3, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:12(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- AllocateObject:10(cls=StringBuffer) T{StringBuffer}
ParallelMove r1 <- r0, r0 <- r0
ParallelMove fp[-1] <- r0
StaticCall:12( StringBuffer.<0> v3)
ParallelMove r0 <- fp[2]
v4 <- LoadField(v2 . type {final}) T{_OneByteString}
ParallelMove r1 <- fp[-1], r2 <- r2
StaticCall:16( write<0> v3, v4, using unchecked entrypoint)
ParallelMove r0 <- fp[2]
v5 <- LoadField(v2 . message {final}) T{String}
ParallelMove fp[-2] <- r3
v41 <- LoadField(v5 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(!==, v41, v11 T{_Smi}) T{bool} goto (3, 7)
B3
ParallelMove r1 <- C, r2 <- C
v17 <- CreateArray:30(v0, v9) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v17, v11, v12, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreIndexed([_List] v17, v13, v5 T{String}, NoStoreBarrier)
MoveArgument(sp[0] <- v17)
v19 <- StaticCall:34( _interpolate@0150898<0> v17, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- fp[-1], r2 <- r0
StaticCall:36( write<0> v3, v19, using unchecked entrypoint)
ParallelMove r0 <- fp[2]
v20 <- LoadField(v2 . osError {final}) T{OSError?}
ParallelMove fp[-2] <- r3
Branch if StrictCompare:40(!==, v20, v0) goto (4, 5)
B4
ParallelMove r1 <- C, r2 <- C
v22 <- CreateArray:46(v0, v21) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v22, v11, v23, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreIndexed([_List] v22, v13, v20 T{OSError}, NoStoreBarrier)
StoreIndexed([_List] v22, v9, v25, NoStoreBarrier)
MoveArgument(sp[0] <- v22)
v26 <- StaticCall:50( _interpolate@0150898<0> v22, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- fp[-1], r2 <- r0
StaticCall:52( write<0> v3, v26, using unchecked entrypoint)
ParallelMove  goto:58 B6
B5
B6
B7
v8 <- LoadField(v2 . osError {final}) T{OSError?}
ParallelMove fp[-2] <- r3
Branch if StrictCompare:66(!==, v8, v0) goto (8, 9)
B8
ParallelMove r1 <- C, r2 <- C
v10 <- CreateArray:72(v0, v9) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v10, v11, v12, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreIndexed([_List] v10, v13, v8 T{OSError}, NoStoreBarrier)
MoveArgument(sp[0] <- v10)
v15 <- StaticCall:76( _interpolate@0150898<0> v10, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r1 <- fp[-1], r2 <- r0
StaticCall:78( write<0> v3, v15, using unchecked entrypoint)
ParallelMove  goto:84 B10
B9
B10
B11
MoveArgument(sp[0] <- v3)
v16 <- StaticCall:94( toString<0> v3, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:96(v16)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v4 <- CreateArray:10(v0, v3) T{_List}
ParallelMove r2 <- r0
StoreIndexed([_List] v4, v5, v6, NoStoreBarrier)
ParallelMove r0 <- fp[2]
v15 <- LoadField(v2 T{InternetAddressType} . _value@15069316 {final}) [-9223372036854775808, 9223372036854775807] int64
v17 <- BinaryInt64Op(+ [tr], v15, v28 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- C, r1 <- r3
GenericCheckBound:14(v29 T{_Smi}, v17) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- C
v30 <- LoadIndexed:14([_List] v23, v17 T{int}) T{String}
StoreIndexed([_List] v4, v7, v30 T{String}, NoStoreBarrier)
MoveArgument(sp[0] <- v4)
v9 <- StaticCall:14( _interpolate@0150898<0> v4, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:16(v9)
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
ParallelMove r0 <- C
DartReturn:10(v3)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v2, v3, ' in type cast', instantiator_type_args(v0), function_type_args(v0)) T{List<dynamic>}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[2]
v5 <- StaticCall:12( listToString<0> v2, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:14(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r1, r2 <- C, r3 <- C
v5 <- StaticCall:10( iterableToFullString<0> v2, v3, v4, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:12(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
v3 <- StaticCall:10( listToString<0> v2, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:12(v3)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
v3 <- StaticCall:10( setToString<0> v2, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:12(v3)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r1, r2 <- C, r3 <- C
v5 <- StaticCall:10( iterableToFullString<0> v2, v3, v4, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:12(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
v3 <- StaticCall:10( mapToString<0> v2, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:12(v3)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- AllocateObject:10(cls=StringBuffer) T{StringBuffer}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
MoveArgument(sp[0] <- v4)
ParallelMove r1 <- r0
StaticCall:12( StringBuffer.<0> v3, v4)
ParallelMove r0 <- fp[2]
v91 <- LoadField(v2 T{_Record} . Record.shape {final}) [0, 4611686018427387903] T{_Smi}
v93 <- BinarySmiOp:10(& [-o], v91, v94 T{_Smi}) [0, 65535] T{_Smi}
v99 <- LoadThread() untagged
v100 <- LoadField(v99 . Thread.isolate_group {final}) untagged
v101 <- LoadField(v100 . IsolateGroup.object_store {final}) untagged
v102 <- LoadField(v101 . ObjectStore.record_field_names) T{_List?}
v105 <- BinarySmiOp:10(>> [-o], v91 T{_Smi}, v109 T{_Smi}) [0, 70368744177663] T{_Smi}
v107 <- BinarySmiOp:12(& [-o], v105, v110 T{_Smi}) [0, 70368744177663] T{_Smi}
v108 <- LoadIndexed([_List] v102, v107) T{*?}
ParallelMove fp[-6] <- r3
v115 <- LoadField(v108 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v178 <- UnboxInt64([non-speculative], v93) [0, 65535] int64
ParallelMove fp[-5] <- r4
v179 <- UnboxInt64([non-speculative], v115 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-4] <- r2
v8 <- BinaryInt64Op(- [tr], v178 T{_Smi}, v179 T{_Smi}) [-576460752303423487, 65535] int64
ParallelMove fp[-3] <- r5
ParallelMove r6 <- C goto:90 B11
B11
  Loop 0
  Loop Header
ParallelMove fp[-2] <- r6
CheckStackOverflow:94(stack=0, loop=1)
Branch if RelationalOp(<, v10, v178 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 0
Branch if EqualityCompare(v10 != v188 T{_Smi}) T{bool} goto (34, 6)
B34
  Loop 0
ParallelMove r1 <- fp[-1]
StaticCall:26( _consumeBuffer@0150898<0> v3 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-1], r2 <- C
StaticCall:28( _addPart@0150898<0> v3 T{StringBuffer}, v24 T{_OneByteString}, using unchecked entrypoint)
ParallelMove  goto:52 B7
B6
B7
  Loop 0
Branch if RelationalOp(>=, v10, v8) T{bool} goto (8, 9)
B8
  Loop 0
ParallelMove r4 <- fp[-6]
v21 <- BinaryInt64Op(- [tr], v10, v8) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-4], r1 <- r5
GenericCheckBound:68(v179 T{_Smi}, v21) [-9223372036854775808, 9223372036854775807] int64
v189 <- LoadIndexed:68([_List] v108 T{_List}, v21 T{int}) T{*?}
MoveArgument(sp[0] <- v189 T{Object??})
v54 <- StaticCall:10( _interpolateSingle@0150898<0> v189 T{Object??}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-7] <- r0
v136 <- LoadField(v54 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v136, v9 T{_Smi}) T{bool} goto (22, 23)
B22
B23
  Loop 0
ParallelMove r1 <- fp[-1]
StaticCall:26( _consumeBuffer@0150898<0> v3 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-1], r2 <- fp[-7]
StaticCall:28( _addPart@0150898<0> v3 T{StringBuffer}, v54, using unchecked entrypoint)
ParallelMove  goto:30 B29
B29
  Loop 0
ParallelMove r1 <- fp[-1]
StaticCall:26( _consumeBuffer@0150898<0> v3 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-1], r2 <- C
StaticCall:28( _addPart@0150898<0> v3 T{StringBuffer}, v23 T{_OneByteString}, using unchecked entrypoint)
ParallelMove  goto:78 B10
B9
B10
  Loop 0
v190 <- LoadIndexed([_Record] v2 T{_Record}, v10 T{int}) T{*?}
v208 <- LoadClassId(v190 T{Object??}) int64
MoveArgument(sp[0] <- v190 T{Object??})
ParallelMove r0 <- r3
v18 <- DispatchTableCall( cid=v208 Object.toString<0>, v190 T{Object??}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-7] <- r0
v129 <- LoadField(v18 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v129, v9 T{_Smi}) T{bool} goto (17, 18)
B17
B18
  Loop 0
ParallelMove r1 <- fp[-1]
StaticCall:26( _consumeBuffer@0150898<0> v3 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-1], r2 <- fp[-7]
StaticCall:28( _addPart@0150898<0> v3 T{StringBuffer}, v18 T{String}, using unchecked entrypoint)
ParallelMove  goto:30 B19
B19
  Loop 0
v20 <- BinaryInt64Op(+ [tr], v10, v191 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r6, r0 <- fp[2], r5 <- fp[-3], r3 <- fp[-6], r4 <- fp[-5], r2 <- fp[-4] goto:92 B11
B4
ParallelMove r1 <- fp[-1], r2 <- C
StaticCall:96( write<0> v3, v13, using unchecked entrypoint)
MoveArgument(sp[0] <- v3)
v14 <- StaticCall:98( toString<0> v3, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:100(v14)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
ParallelMove r1 <- sp[0]
Branch if StrictCompare:12(===, v2 T{bool}, v3) goto (3, 4)
BoolTest
B3
ParallelMove r0 <- C goto:22 B5
B4
ParallelMove r0 <- C goto:24 B5
B5
ParallelMove r0 <- r0
DartReturn:26(v5)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C goto:48 B7
B7
  Loop 0
  Loop Header
ParallelMove fp[-1] <- r1
CheckStackOverflow:52(stack=0, loop=1)
Branch if RelationalOp(<, v4, v78 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 0
v51 <- LoadStaticField:4(_cache@0150898, CallsInitializer) T{_List}
ParallelMove r2 <- r0
ParallelMove fp[-3] <- r2
v30 <- LoadField(v51 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v65 <- UnboxInt64([non-speculative], v30) [0, 576460752303423487] int64
ParallelMove r0 <- r3, r1 <- fp[-1], fp[-2] <- r3
GenericCheckBound:26(v65 T{_Smi}, v4) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- fp[-1]
v79 <- LoadIndexed:26([_List] v51, v4 T{int}) T{*?}
ParallelMove r0 <- r0, r1 <- fp[2]
Branch if StrictCompare:28(===, v79 T{*?}, v2, with number check) goto (5, 6)
B6
  Loop 0
ParallelMove r0 <- fp[-1]
v24 <- BinaryInt64Op(+ [tr], v4 T{int}, v82 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r1 goto:50 B7
B5
ParallelMove r0 <- fp[-1], r2 <- fp[-3]
v26 <- BinaryInt64Op(+ [tr], v4 T{int}, v80 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-2], r1 <- r3
GenericCheckBound:38(v65 T{_Smi}, v26) [-9223372036854775808, 9223372036854775807] int64
v81 <- LoadIndexed:38([_List] v51 T{_List}, v26 T{int}) T{*?}
ParallelMove r0 <- r4, r2 <- C, r1 <- C, fp[-4] <- r4
t0 <- AssertAssignable:40(v81 T{*?}, v28, '', instantiator_type_args(v0), function_type_args(v0)) T{String}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-4]
DartReturn:42(v81 T{String})
B4
ParallelMove r0 <- C, r1 <- fp[2]
Branch if StrictCompare:54(===, v8, v2, with number check) goto (8, 9)
B8
ParallelMove r0 <- C
DartReturn:60(v21)
B9
MoveArgument(sp[0] <- v2)
v9 <- StaticCall:64( _toString@0150898<0> v2, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-3] <- r0
v42 <- LoadStaticField:4(_cache@0150898, CallsInitializer) T{_List}
ParallelMove r2 <- r0
v11 <- LoadStaticField(_cacheEvictIndex@0150898) [-9223372036854775808, 9223372036854775807] T{int}
v36 <- LoadField(v42 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v69 <- UnboxInt64([non-speculative], v11) [-9223372036854775808, 9223372036854775807] int64
v70 <- UnboxInt64([non-speculative], v36) [0, 576460752303423487] int64
ParallelMove r0 <- r3, r1 <- r5
GenericCheckBound:68(v70 T{_Smi}, v69 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r2, r0 <- fp[2]
StoreIndexed:68([_List] v42, v69 T{int}, v2)
v15 <- BinaryInt64Op(+ [tr], v69 T{int}, v80 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r3, r1 <- r4
GenericCheckBound:74(v70 T{_Smi}, v15) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r2, r0 <- fp[-3]
StoreIndexed:74([_List] v42 T{_List}, v15 T{int}, v9)
ParallelMove r5 <- r5
v96 <- IntConverter(int64->uint32[tr], v69 T{int}) uint32
ParallelMove r1 <- C
v18 <- BinaryUint32Op(+ [tr], v96 T{int}, v97 T{_Smi}) [0, 4294967295] uint32
ParallelMove r1 <- C
v20 <- BinaryUint32Op(& [tr], v18, v98 T{_Smi}) [0, 15] uint32
v76 <- BoxUint32(v20) [0, 15] T{_Smi}
StoreStaticField(_cacheEvictIndex@0150898, v76)
ParallelMove r0 <- fp[-3]
DartReturn:80(v9)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r1 <- C, r2 <- C
v4 <- CreateArray:6(v0, v2) T{_List}
ParallelMove r0 <- r0
DartReturn:8(v4)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
v171 <- UnboxInt64([non-speculative], v2) [-4611686018427387904, 4611686018427387903] int64
ParallelMove fp[-1] <- r2
Branch if RelationalOp(<, v171 T{_Smi}, v186 T{_Smi}) T{bool} goto (3, 6)
B3
Branch if RelationalOp(>, v171 T{_Smi}, v135) T{bool} goto (4, 7)
B4
ParallelMove r3 <- C
v39 <- BinaryInt64Op(+ [tr], v171 T{_Smi}, v187 T{_Smi}) [-4611686018427387805, 4611686018427388002] int64
ParallelMove r0 <- C, r1 <- r4
GenericCheckBound:34(v188 T{_Smi}, v39) [-9223372036854775808, 9223372036854775807] int64
v189 <- LoadIndexed:34([_List] v37, v39 T{int}) T{String}
ParallelMove r0 <- r0
DartReturn:36(v189 T{String})
B7
B6
B5
Branch if RelationalOp(<, v171 T{_Smi}, v190 T{_Smi}) T{bool} goto (8, 9)
B8
ParallelMove r1 <- r2
v34 <- StaticCall:58( _negativeToString@0150898<0> v171 T{_Smi}, result_type = T{_OneByteString}) T{_OneByteString}
ParallelMove r0 <- r0
DartReturn:60(v34)
B9
ParallelMove r1 <- r2
v8 <- StaticCall:64( _positiveBase10Length@0150898<0> v171 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0
ParallelMove fp[-2] <- r2
v176 <- BoxInt64(v8 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v176 T{int})
v112 <- StaticCall:10( allocateOneByteString<0> v176 T{int}, recognized_kind = AllocateOneByteString, result_type = T{_OneByteString}) T{_OneByteString}
ParallelMove r3 <- r0, r2 <- fp[-2]
v11 <- BinaryInt64Op(- [tr], v8, v122 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r4, r5 <- fp[-1], r4 <- C, r2 <- C goto:106 B10
B10
  Loop 0
  Loop Header
CheckStackOverflow:100(stack=0, loop=1)
v119 <- BinaryInt64Op(~/ [tr], v13 T{int}, v186 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v120 <- BinaryInt64Op(* [tr], v119, v186 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v121 <- BinaryInt64Op(- [tr], v13 T{int}, v120) [-9223372036854775808, 9223372036854775807] int64
v123 <- ShiftInt64Op(<< [tr], v121 T{int}, v122) [-9223372036854775808, 9223372036854775807] int64
v19 <- BinaryInt64Op(+ [tr], v123 T{int}, v122 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- C, r1 <- r8
GenericCheckBound:78(v191 T{_Smi}, v19) [-9223372036854775808, 9223372036854775807] int64
v192 <- LoadIndexed:78([_List] v18, v19 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
v98 <- UnboxInt64:10([non-speculative], v192 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:10([_OneByteString] v112 T{_OneByteString}, v12 T{int}, v98, NoStoreBarrier)
v21 <- BinaryInt64Op(- [tr], v12, v122 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- C, r1 <- r5
GenericCheckBound:84(v191 T{_Smi}, v123 T{int}) [-9223372036854775808, 9223372036854775807] int64
v193 <- LoadIndexed:84([_List] v18, v123 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
v107 <- UnboxInt64:10([non-speculative], v193 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:10([_OneByteString] v112 T{_OneByteString}, v21 T{int}, v107, NoStoreBarrier)
v23 <- BinaryInt64Op(- [tr], v12, v194 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>=, v119 T{int}, v186 T{_Smi}) T{bool} goto (11, 12)
B11
  Loop 0
ParallelMove r6 <- r8, r5 <- r7 goto:104 B10
B12
Branch if RelationalOp(<, v119 T{int}, v195 T{_Smi}) T{bool} goto (13, 14)
B13
v33 <- BinaryInt64Op(+ [tr], v119 T{int}, v196 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:10([_OneByteString] v112 T{_OneByteString}, v23 T{int}, v33 T{int}, NoStoreBarrier)
ParallelMove  goto:142 B15
B14
v124 <- ShiftInt64Op(<< [tr], v119 T{int}, v122) [-9223372036854775808, 9223372036854775807] int64
v28 <- BinaryInt64Op(+ [tr], v124 T{int}, v122 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- C, r1 <- r5
GenericCheckBound:130(v191 T{_Smi}, v28) [-9223372036854775808, 9223372036854775807] int64
v197 <- LoadIndexed:130([_List] v18, v28 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
v64 <- UnboxInt64:10([non-speculative], v197 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:10([_OneByteString] v112 T{_OneByteString}, v23 T{int}, v64, NoStoreBarrier)
v30 <- BinaryInt64Op(- [tr], v23, v122 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- C, r1 <- r2
GenericCheckBound:136(v191 T{_Smi}, v124 T{int}) [-9223372036854775808, 9223372036854775807] int64
v198 <- LoadIndexed:136([_List] v18, v124 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
v73 <- UnboxInt64:10([non-speculative], v198 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:10([_OneByteString] v112 T{_OneByteString}, v30 T{int}, v73, NoStoreBarrier)
ParallelMove  goto:144 B15
B15
ParallelMove r0 <- r3
DartReturn:146(v112 T{_OneByteString})
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
Branch if RelationalOp(<, v2, v89 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:20(v90 T{_Smi})
B4
Branch if RelationalOp(<, v2, v91 T{_Smi}) T{bool} goto (5, 6)
B5
ParallelMove r0 <- C
DartReturn:34(v92 T{_Smi})
B6
Branch if RelationalOp(<, v2, v93 T{_Smi}) T{bool} goto (7, 12)
B7
Branch if RelationalOp(<, v2, v94 T{_Smi}) T{bool} goto (8, 9)
B8
ParallelMove r0 <- C
DartReturn:58(v95 T{_Smi})
B9
Branch if RelationalOp(<, v2, v96 T{_Smi}) T{bool} goto (10, 11)
B10
ParallelMove r0 <- C
DartReturn:72(v97 T{_Smi})
B11
ParallelMove r0 <- C
DartReturn:76(v98 T{_Smi})
B12
Branch if RelationalOp(<, v2, v99 T{_Smi}) T{bool} goto (13, 14)
B13
ParallelMove r0 <- C
DartReturn:90(v100 T{_Smi})
B14
Branch if RelationalOp(<, v2, v101 T{_Smi}) T{bool} goto (15, 16)
B15
ParallelMove r0 <- C
DartReturn:104(v102 T{_Smi})
B16
ParallelMove r0 <- C
v14 <- BinaryInt64Op(~/ [tr], v2, v101 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v14, v103 T{_Smi}) T{bool} goto (17, 18)
B17
ParallelMove r0 <- C
DartReturn:120(v103 T{_Smi})
B18
Branch if RelationalOp(<, v14, v104 T{_Smi}) T{bool} goto (19, 20)
B19
ParallelMove r0 <- C
DartReturn:134(v105 T{_Smi})
B20
ParallelMove r1 <- r2
v20 <- StaticCall:138( _positiveBase10Length@0150898<0> v14, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0
v21 <- BinaryInt64Op(+ [tr], v20, v102 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r1
DartReturn:142(v21)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r0
v3 <- StaticCall:10( _negativeBase10Length@0150898<0> v2, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0
ParallelMove fp[-2] <- r2
v5 <- BinaryInt64Op(+ [tr], v3, v126 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v146 <- BoxInt64(v5 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v146 T{int})
v105 <- StaticCall:10( allocateOneByteString<0> v146 T{int}, recognized_kind = AllocateOneByteString, result_type = T{_OneByteString}) T{_OneByteString}
ParallelMove r3 <- r0, r2 <- C
StoreIndexed:10([_OneByteString] v105 T{_OneByteString}, v7 T{_Smi}, v116 T{_Smi}, NoStoreBarrier)
ParallelMove r6 <- fp[-1], r5 <- fp[-2], r4 <- C, r2 <- C goto:58 B3
B3
  Loop 0
  Loop Header
CheckStackOverflow:52(stack=0, loop=1)
v123 <- BinaryInt64Op(~/ [tr], v9 T{int}, v156 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v124 <- BinaryInt64Op(* [tr], v123, v156 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v125 <- BinaryInt64Op(- [tr], v9 T{int}, v124) [-9223372036854775808, 9223372036854775807] int64
v14 <- UnaryInt64Op(unary-, v125 T{int}) [-9223372036854775808, 9223372036854775807] int64
v127 <- ShiftInt64Op(<< [tr], v14, v126) [-9223372036854775808, 9223372036854775807] int64
v18 <- BinaryInt64Op(+ [tr], v127 T{int}, v126 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- C, r1 <- r6
GenericCheckBound:28(v157 T{_Smi}, v18) [-9223372036854775808, 9223372036854775807] int64
v158 <- LoadIndexed:28([_List] v17, v18 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
v91 <- UnboxInt64:10([non-speculative], v158 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:10([_OneByteString] v105 T{_OneByteString}, v10 T{int}, v91, NoStoreBarrier)
v20 <- BinaryInt64Op(- [tr], v10, v126 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- C, r1 <- r8
GenericCheckBound:34(v157 T{_Smi}, v127 T{int}) [-9223372036854775808, 9223372036854775807] int64
v159 <- LoadIndexed:34([_List] v17, v127 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
v100 <- UnboxInt64:10([non-speculative], v159 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:10([_OneByteString] v105 T{_OneByteString}, v20 T{int}, v100, NoStoreBarrier)
v22 <- BinaryInt64Op(- [tr], v10, v160 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<=, v123 T{int}, v130) T{bool} goto (4, 5)
B4
  Loop 0
ParallelMove r6 <- r7, r5 <- r8 goto:56 B3
B5
Branch if RelationalOp(>, v123 T{int}, v131) T{bool} goto (6, 7)
B6
ParallelMove r2 <- C
v36 <- BinaryInt64Op(- [tr], v161 T{_Smi}, v123 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:10([_OneByteString] v105 T{_OneByteString}, v22 T{int}, v36 T{int}, NoStoreBarrier)
ParallelMove  goto:98 B8
B7
v29 <- UnaryInt64Op(unary-, v123 T{int}) [-9223372036854775808, 9223372036854775807] int64
v128 <- ShiftInt64Op(<< [tr], v29, v126) [-9223372036854775808, 9223372036854775807] int64
v31 <- BinaryInt64Op(+ [tr], v128 T{int}, v126 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- C, r1 <- r2
GenericCheckBound:86(v157 T{_Smi}, v31) [-9223372036854775808, 9223372036854775807] int64
v162 <- LoadIndexed:86([_List] v17, v31 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
v57 <- UnboxInt64:10([non-speculative], v162 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:10([_OneByteString] v105 T{_OneByteString}, v22 T{int}, v57, NoStoreBarrier)
v33 <- BinaryInt64Op(- [tr], v22, v126 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- C, r1 <- r5
GenericCheckBound:92(v157 T{_Smi}, v128 T{int}) [-9223372036854775808, 9223372036854775807] int64
v163 <- LoadIndexed:92([_List] v17, v128 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
v66 <- UnboxInt64:10([non-speculative], v163 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:10([_OneByteString] v105 T{_OneByteString}, v33 T{int}, v66, NoStoreBarrier)
ParallelMove  goto:100 B8
B8
ParallelMove r0 <- r3
DartReturn:102(v105 T{_OneByteString})
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
Branch if RelationalOp(>, v2, v42) T{bool} goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:22(v62 T{_Smi})
B4
Branch if RelationalOp(>, v2, v43) T{bool} goto (5, 6)
B5
ParallelMove r0 <- C
DartReturn:38(v63 T{_Smi})
B6
Branch if RelationalOp(>, v2, v44) T{bool} goto (7, 12)
B7
Branch if RelationalOp(>, v2, v45) T{bool} goto (8, 9)
B8
ParallelMove r0 <- C
DartReturn:66(v64 T{_Smi})
B9
Branch if RelationalOp(>, v2, v46) T{bool} goto (10, 11)
B10
ParallelMove r0 <- C
DartReturn:82(v65 T{_Smi})
B11
ParallelMove r0 <- C
DartReturn:86(v66 T{_Smi})
B12
Branch if RelationalOp(>, v2, v47) T{bool} goto (13, 14)
B13
ParallelMove r0 <- C
DartReturn:102(v67 T{_Smi})
B14
Branch if RelationalOp(>, v2, v48) T{bool} goto (15, 16)
B15
ParallelMove r0 <- C
DartReturn:118(v68 T{_Smi})
B16
ParallelMove r0 <- C
v19 <- BinaryInt64Op(~/ [tr], v2, v69 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>, v19, v49) T{bool} goto (17, 18)
B17
ParallelMove r0 <- C
DartReturn:136(v70 T{_Smi})
B18
Branch if RelationalOp(>, v19, v50) T{bool} goto (19, 20)
B19
ParallelMove r0 <- C
DartReturn:152(v71 T{_Smi})
B20
ParallelMove r1 <- r2
v27 <- StaticCall:156( _negativeBase10Length@0150898<0> v19, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0
v28 <- BinaryInt64Op(+ [tr], v27, v68 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r1
DartReturn:160(v28)
CheckStackOverflowSlowPath
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) T{_Float64x2}
AssertAssignable for compile-time type
TTSCall
v7 <- AllocateObject:12(cls=UnsupportedError) T{UnsupportedError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v7 T{UnsupportedError} . message = v8 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:16(v7)
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) T{_Float64x2}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v16 <- LoadField(v2 T{_ExternalFloat64x2Array} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v30 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v31 <- UnboxInt64([non-speculative], v16 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v31 T{_Smi}, v30 T{int}) [-9223372036854775808, 9223372036854775807] int64
v28 <- ShiftInt64Op(<< [tr], v30 T{int}, v27) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[2]
v26 <- Unbox(v4 T{_Float64x2}) float64x2
v29 <- LoadField(v2 T{_ExternalFloat64x2Array} . PointerBase.data {final}) untagged
StoreIndexed([_Float64x2List] v29 T{_ExternalFloat64x2Array}, v28 T{int}, v26, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:20(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) T{_Float64x2}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v19 <- LoadField(v2 T{_Float64x2ArrayView} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v42 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v43 <- UnboxInt64([non-speculative], v19 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v43 T{_Smi}, v42 T{int}) [-9223372036854775808, 9223372036854775807] int64
v24 <- LoadField(v2 T{_Float64x2ArrayView} . TypedDataView.typed_data {final}) T{*}
v29 <- LoadField(v2 T{_Float64x2ArrayView} . TypedDataView.offset_in_bytes {final}) [0, 4611686018427387903] T{_Smi}
v41 <- ShiftInt64Op(<< [tr], v42 T{int}, v40) [-9223372036854775808, 9223372036854775807] int64
v44 <- UnboxInt64([non-speculative], v29 T{_Smi}) [0, 4611686018427387903] int64
v13 <- BinaryInt64Op(+ [tr], v44 T{_Smi}, v41 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- fp[2]
v39 <- Unbox(v4 T{_Float64x2}) float64x2
v48 <- LoadField(v24 T{_TypedList} . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Float64x2List] v48 T{_TypedList}, v13 T{int}, v39, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:26(v0)
slow path check bound operation
B0
B3
Graph intrinsic begin
ParallelMove r1 <- sp[2]
v3 <- LoadField(v0 . TypedDataBase.length {final})
ParallelMove r3 <- sp[1]
CheckArrayBound(v3, v1)
ParallelMove r2 <- sp[0]
CheckClass(v2 Cids[1: _Float64x2@7027147 etc.  cid 65])
v5 <- Unbox(v2 T{_Float64x2}) float64x2
StoreIndexed([_Float64x2List] v0, v1, v5, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:36(v6)
Graph intrinsic end
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) T{_Float64x2}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v16 <- LoadField(v2 T{_Float64x2List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v29 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v30 <- UnboxInt64([non-speculative], v16 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v30 T{_Smi}, v29 T{int}) [-9223372036854775808, 9223372036854775807] int64
v28 <- ShiftInt64Op(<< [tr], v29 T{int}, v27) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[2]
v26 <- Unbox(v4 T{_Float64x2}) float64x2
StoreIndexed([_Float64x2List] v2 T{_Float64x2List}, v28 T{int}, v26, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:20(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) T{_Int32x4}
AssertAssignable for compile-time type
TTSCall
v7 <- AllocateObject:12(cls=UnsupportedError) T{UnsupportedError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v7 T{UnsupportedError} . message = v8 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:16(v7)
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) T{_Int32x4}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v16 <- LoadField(v2 T{_ExternalInt32x4Array} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v30 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v31 <- UnboxInt64([non-speculative], v16 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v31 T{_Smi}, v30 T{int}) [-9223372036854775808, 9223372036854775807] int64
v28 <- ShiftInt64Op(<< [tr], v30 T{int}, v27) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[2]
v26 <- Unbox(v4 T{_Int32x4}) int32x4
v29 <- LoadField(v2 T{_ExternalInt32x4Array} . PointerBase.data {final}) untagged
StoreIndexed([_Int32x4List] v29 T{_ExternalInt32x4Array}, v28 T{int}, v26, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:20(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) T{_Int32x4}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v19 <- LoadField(v2 T{_Int32x4ArrayView} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v42 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v43 <- UnboxInt64([non-speculative], v19 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v43 T{_Smi}, v42 T{int}) [-9223372036854775808, 9223372036854775807] int64
v24 <- LoadField(v2 T{_Int32x4ArrayView} . TypedDataView.typed_data {final}) T{*}
v29 <- LoadField(v2 T{_Int32x4ArrayView} . TypedDataView.offset_in_bytes {final}) [0, 4611686018427387903] T{_Smi}
v41 <- ShiftInt64Op(<< [tr], v42 T{int}, v40) [-9223372036854775808, 9223372036854775807] int64
v44 <- UnboxInt64([non-speculative], v29 T{_Smi}) [0, 4611686018427387903] int64
v13 <- BinaryInt64Op(+ [tr], v44 T{_Smi}, v41 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- fp[2]
v39 <- Unbox(v4 T{_Int32x4}) int32x4
v48 <- LoadField(v24 T{_TypedList} . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Int32x4List] v48 T{_TypedList}, v13 T{int}, v39, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:26(v0)
slow path check bound operation
B0
B3
Graph intrinsic begin
ParallelMove r1 <- sp[2]
v3 <- LoadField(v0 . TypedDataBase.length {final})
ParallelMove r3 <- sp[1]
CheckArrayBound(v3, v1)
ParallelMove r2 <- sp[0]
CheckClass(v2 Cids[1: _Int32x4@7027147 etc.  cid 64])
v5 <- Unbox(v2 T{_Int32x4}) int32x4
StoreIndexed([_Int32x4List] v0, v1, v5, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:36(v6)
Graph intrinsic end
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) T{_Int32x4}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v16 <- LoadField(v2 T{_Int32x4List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v29 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v30 <- UnboxInt64([non-speculative], v16 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v30 T{_Smi}, v29 T{int}) [-9223372036854775808, 9223372036854775807] int64
v28 <- ShiftInt64Op(<< [tr], v29 T{int}, v27) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[2]
v26 <- Unbox(v4 T{_Int32x4}) int32x4
StoreIndexed([_Int32x4List] v2 T{_Int32x4List}, v28 T{int}, v26, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:20(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) T{_Float32x4}
AssertAssignable for compile-time type
TTSCall
v7 <- AllocateObject:12(cls=UnsupportedError) T{UnsupportedError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v7 T{UnsupportedError} . message = v8 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:16(v7)
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) T{_Float32x4}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v16 <- LoadField(v2 T{_ExternalFloat32x4Array} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v30 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v31 <- UnboxInt64([non-speculative], v16 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v31 T{_Smi}, v30 T{int}) [-9223372036854775808, 9223372036854775807] int64
v28 <- ShiftInt64Op(<< [tr], v30 T{int}, v27) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[2]
v26 <- Unbox(v4 T{_Float32x4}) float32x4
v29 <- LoadField(v2 T{_ExternalFloat32x4Array} . PointerBase.data {final}) untagged
StoreIndexed([_Float32x4List] v29 T{_ExternalFloat32x4Array}, v28 T{int}, v26, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:20(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) T{_Float32x4}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v19 <- LoadField(v2 T{_Float32x4ArrayView} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v42 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v43 <- UnboxInt64([non-speculative], v19 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v43 T{_Smi}, v42 T{int}) [-9223372036854775808, 9223372036854775807] int64
v24 <- LoadField(v2 T{_Float32x4ArrayView} . TypedDataView.typed_data {final}) T{*}
v29 <- LoadField(v2 T{_Float32x4ArrayView} . TypedDataView.offset_in_bytes {final}) [0, 4611686018427387903] T{_Smi}
v41 <- ShiftInt64Op(<< [tr], v42 T{int}, v40) [-9223372036854775808, 9223372036854775807] int64
v44 <- UnboxInt64([non-speculative], v29 T{_Smi}) [0, 4611686018427387903] int64
v13 <- BinaryInt64Op(+ [tr], v44 T{_Smi}, v41 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- fp[2]
v39 <- Unbox(v4 T{_Float32x4}) float32x4
v48 <- LoadField(v24 T{_TypedList} . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Float32x4List] v48 T{_TypedList}, v13 T{int}, v39, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:26(v0)
slow path check bound operation
B0
B3
Graph intrinsic begin
ParallelMove r1 <- sp[2]
v3 <- LoadField(v0 . TypedDataBase.length {final})
ParallelMove r3 <- sp[1]
CheckArrayBound(v3, v1)
ParallelMove r2 <- sp[0]
CheckClass(v2 Cids[1: _Float32x4@7027147 etc.  cid 63])
v5 <- Unbox(v2 T{_Float32x4}) float32x4
StoreIndexed([_Float32x4List] v0, v1, v5, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:36(v6)
Graph intrinsic end
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) T{_Float32x4}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v16 <- LoadField(v2 T{_Float32x4List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v29 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v30 <- UnboxInt64([non-speculative], v16 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v30 T{_Smi}, v29 T{int}) [-9223372036854775808, 9223372036854775807] int64
v28 <- ShiftInt64Op(<< [tr], v29 T{int}, v27) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[2]
v26 <- Unbox(v4 T{_Float32x4}) float32x4
StoreIndexed([_Float32x4List] v2 T{_Float32x4List}, v28 T{int}, v26, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:20(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) T{_Double}
AssertAssignable for compile-time type
TTSCall
v7 <- AllocateObject:12(cls=UnsupportedError) T{UnsupportedError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v7 T{UnsupportedError} . message = v8 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:16(v7)
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) T{_Double}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v16 <- LoadField(v2 T{_ExternalFloat64Array} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v30 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v31 <- UnboxInt64([non-speculative], v16 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v31 T{_Smi}, v30 T{int}) [-9223372036854775808, 9223372036854775807] int64
v28 <- ShiftInt64Op(<< [tr], v30 T{int}, v27) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[2]
v26 <- Unbox(v4 T{_Double}) double
v29 <- LoadField(v2 T{_ExternalFloat64Array} . PointerBase.data {final}) untagged
StoreIndexed([_Float64List] v29 T{_ExternalFloat64Array}, v28 T{int}, v26, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:20(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) T{_Double}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v19 <- LoadField(v2 T{_Float64ArrayView} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v42 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v43 <- UnboxInt64([non-speculative], v19 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v43 T{_Smi}, v42 T{int}) [-9223372036854775808, 9223372036854775807] int64
v24 <- LoadField(v2 T{_Float64ArrayView} . TypedDataView.typed_data {final}) T{*}
v29 <- LoadField(v2 T{_Float64ArrayView} . TypedDataView.offset_in_bytes {final}) [0, 4611686018427387903] T{_Smi}
v41 <- ShiftInt64Op(<< [tr], v42 T{int}, v40) [-9223372036854775808, 9223372036854775807] int64
v44 <- UnboxInt64([non-speculative], v29 T{_Smi}) [0, 4611686018427387903] int64
v13 <- BinaryInt64Op(+ [tr], v44 T{_Smi}, v41 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- fp[2]
v39 <- Unbox(v4 T{_Double}) double
v48 <- LoadField(v24 T{_TypedList} . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Float64List] v48 T{_TypedList}, v13 T{int}, v39, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:26(v0)
slow path check bound operation
B0
B3
Graph intrinsic begin
ParallelMove r1 <- sp[2]
v3 <- LoadField(v0 . TypedDataBase.length {final})
ParallelMove r3 <- sp[1]
CheckArrayBound(v3, v1)
ParallelMove r2 <- sp[0]
CheckClass(v2 Cids[1: _Double@0150898 etc.  cid 61])
v5 <- Unbox(v2 T{_Double}) double
StoreIndexed([_Float64List] v0, v1, v5, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:36(v6)
Graph intrinsic end
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) T{_Double}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v16 <- LoadField(v2 T{_Float64List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v29 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v30 <- UnboxInt64([non-speculative], v16 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v30 T{_Smi}, v29 T{int}) [-9223372036854775808, 9223372036854775807] int64
v28 <- ShiftInt64Op(<< [tr], v29 T{int}, v27) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[2]
v26 <- Unbox(v4 T{_Double}) double
StoreIndexed([_Float64List] v2 T{_Float64List}, v28 T{int}, v26, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:20(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) T{_Double}
AssertAssignable for compile-time type
TTSCall
v7 <- AllocateObject:12(cls=UnsupportedError) T{UnsupportedError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v7 T{UnsupportedError} . message = v8 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:16(v7)
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) T{_Double}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v16 <- LoadField(v2 T{_ExternalFloat32Array} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v31 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v32 <- UnboxInt64([non-speculative], v16 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v32 T{_Smi}, v31 T{int}) [-9223372036854775808, 9223372036854775807] int64
v29 <- ShiftInt64Op(<< [tr], v31 T{int}, v28) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[2]
v26 <- Unbox(v4 T{_Double}) double
v27 <- DoubleToFloat(v26) float
v30 <- LoadField(v2 T{_ExternalFloat32Array} . PointerBase.data {final}) untagged
StoreIndexed([_Float32List] v30 T{_ExternalFloat32Array}, v29 T{int}, v27, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:20(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) T{_Double}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v19 <- LoadField(v2 T{_Float32ArrayView} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v43 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v44 <- UnboxInt64([non-speculative], v19 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v44 T{_Smi}, v43 T{int}) [-9223372036854775808, 9223372036854775807] int64
v24 <- LoadField(v2 T{_Float32ArrayView} . TypedDataView.typed_data {final}) T{*}
v29 <- LoadField(v2 T{_Float32ArrayView} . TypedDataView.offset_in_bytes {final}) [0, 4611686018427387903] T{_Smi}
v42 <- ShiftInt64Op(<< [tr], v43 T{int}, v41) [-9223372036854775808, 9223372036854775807] int64
v45 <- UnboxInt64([non-speculative], v29 T{_Smi}) [0, 4611686018427387903] int64
v13 <- BinaryInt64Op(+ [tr], v45 T{_Smi}, v42 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- fp[2]
v39 <- Unbox(v4 T{_Double}) double
v40 <- DoubleToFloat(v39) float
v49 <- LoadField(v24 T{_TypedList} . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Float32List] v49 T{_TypedList}, v13 T{int}, v40, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:26(v0)
slow path check bound operation
B0
B3
Graph intrinsic begin
ParallelMove r1 <- sp[2]
v3 <- LoadField(v0 . TypedDataBase.length {final})
ParallelMove r3 <- sp[1]
CheckArrayBound(v3, v1)
ParallelMove r2 <- sp[0]
CheckClass(v2 Cids[1: _Double@0150898 etc.  cid 61])
v5 <- Unbox(v2 T{_Double}) double
v6 <- DoubleToFloat(v5) float
StoreIndexed([_Float32List] v0, v1, v6, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:36(v7)
Graph intrinsic end
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) T{_Double}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v16 <- LoadField(v2 T{_Float32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v30 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v31 <- UnboxInt64([non-speculative], v16 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v31 T{_Smi}, v30 T{int}) [-9223372036854775808, 9223372036854775807] int64
v29 <- ShiftInt64Op(<< [tr], v30 T{int}, v28) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[2]
v26 <- Unbox(v4 T{_Double}) double
v27 <- DoubleToFloat(v26) float
StoreIndexed([_Float32List] v2 T{_Float32List}, v29 T{int}, v27, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:20(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
v7 <- AllocateObject:12(cls=UnsupportedError) T{UnsupportedError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v7 T{UnsupportedError} . message = v8 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:16(v7)
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v16 <- LoadField(v2 T{_ExternalUint64Array} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v30 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v31 <- UnboxInt64([non-speculative], v16 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v31 T{_Smi}, v30 T{int}) [-9223372036854775808, 9223372036854775807] int64
v28 <- ShiftInt64Op(<< [tr], v30 T{int}, v27) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[2]
v26 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
v29 <- LoadField(v2 T{_ExternalUint64Array} . PointerBase.data {final}) untagged
StoreIndexed([_Uint64List] v29 T{_ExternalUint64Array}, v28 T{int}, v26, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:20(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v19 <- LoadField(v2 T{_Uint64ArrayView} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v42 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v43 <- UnboxInt64([non-speculative], v19 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v43 T{_Smi}, v42 T{int}) [-9223372036854775808, 9223372036854775807] int64
v24 <- LoadField(v2 T{_Uint64ArrayView} . TypedDataView.typed_data {final}) T{*}
v29 <- LoadField(v2 T{_Uint64ArrayView} . TypedDataView.offset_in_bytes {final}) [0, 4611686018427387903] T{_Smi}
v41 <- ShiftInt64Op(<< [tr], v42 T{int}, v40) [-9223372036854775808, 9223372036854775807] int64
v44 <- UnboxInt64([non-speculative], v29 T{_Smi}) [0, 4611686018427387903] int64
v13 <- BinaryInt64Op(+ [tr], v44 T{_Smi}, v41 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- fp[2]
v39 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
v48 <- LoadField(v24 T{_TypedList} . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint64List] v48 T{_TypedList}, v13 T{int}, v39, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:26(v0)
slow path check bound operation
B0
B3
Graph intrinsic begin
ParallelMove r1 <- sp[2]
v3 <- LoadField(v0 . TypedDataBase.length {final})
ParallelMove r3 <- sp[1]
CheckArrayBound(v3, v1)
ParallelMove r2 <- sp[0]
v5 <- UnboxInt64([guard-inputs], v2) int64
StoreIndexed([_Uint64List] v0, v1, v5, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:36(v6)
Graph intrinsic end
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v16 <- LoadField(v2 T{_Uint64List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v29 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v30 <- UnboxInt64([non-speculative], v16 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v30 T{_Smi}, v29 T{int}) [-9223372036854775808, 9223372036854775807] int64
v28 <- ShiftInt64Op(<< [tr], v29 T{int}, v27) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[2]
v26 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed([_Uint64List] v2 T{_Uint64List}, v28 T{int}, v26, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:20(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
v7 <- AllocateObject:12(cls=UnsupportedError) T{UnsupportedError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v7 T{UnsupportedError} . message = v8 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:16(v7)
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v16 <- LoadField(v2 T{_ExternalInt64Array} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v30 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v31 <- UnboxInt64([non-speculative], v16 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v31 T{_Smi}, v30 T{int}) [-9223372036854775808, 9223372036854775807] int64
v28 <- ShiftInt64Op(<< [tr], v30 T{int}, v27) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[2]
v26 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
v29 <- LoadField(v2 T{_ExternalInt64Array} . PointerBase.data {final}) untagged
StoreIndexed([_Int64List] v29 T{_ExternalInt64Array}, v28 T{int}, v26, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:20(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v19 <- LoadField(v2 T{_Int64ArrayView} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v42 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v43 <- UnboxInt64([non-speculative], v19 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v43 T{_Smi}, v42 T{int}) [-9223372036854775808, 9223372036854775807] int64
v24 <- LoadField(v2 T{_Int64ArrayView} . TypedDataView.typed_data {final}) T{*}
v29 <- LoadField(v2 T{_Int64ArrayView} . TypedDataView.offset_in_bytes {final}) [0, 4611686018427387903] T{_Smi}
v41 <- ShiftInt64Op(<< [tr], v42 T{int}, v40) [-9223372036854775808, 9223372036854775807] int64
v44 <- UnboxInt64([non-speculative], v29 T{_Smi}) [0, 4611686018427387903] int64
v13 <- BinaryInt64Op(+ [tr], v44 T{_Smi}, v41 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- fp[2]
v39 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
v48 <- LoadField(v24 T{_TypedList} . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Int64List] v48 T{_TypedList}, v13 T{int}, v39, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:26(v0)
slow path check bound operation
B0
B3
Graph intrinsic begin
ParallelMove r1 <- sp[2]
v3 <- LoadField(v0 . TypedDataBase.length {final})
ParallelMove r3 <- sp[1]
CheckArrayBound(v3, v1)
ParallelMove r2 <- sp[0]
v5 <- UnboxInt64([guard-inputs], v2) int64
StoreIndexed([_Int64List] v0, v1, v5, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:36(v6)
Graph intrinsic end
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v16 <- LoadField(v2 T{_Int64List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v29 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v30 <- UnboxInt64([non-speculative], v16 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v30 T{_Smi}, v29 T{int}) [-9223372036854775808, 9223372036854775807] int64
v28 <- ShiftInt64Op(<< [tr], v29 T{int}, v27) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[2]
v26 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed([_Int64List] v2 T{_Int64List}, v28 T{int}, v26, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:20(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
v7 <- AllocateObject:12(cls=UnsupportedError) T{UnsupportedError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v7 T{UnsupportedError} . message = v8 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:16(v7)
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v16 <- LoadField(v2 T{_ExternalUint32Array} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v30 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v31 <- UnboxInt64([non-speculative], v16 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v31 T{_Smi}, v30 T{int}) [-9223372036854775808, 9223372036854775807] int64
v28 <- ShiftInt64Op(<< [tr], v30 T{int}, v27) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[2]
v26 <- UnboxUint32([tr], [non-speculative], v4 T{int}) [0, 4294967295] uint32
v29 <- LoadField(v2 T{_ExternalUint32Array} . PointerBase.data {final}) untagged
StoreIndexed([_Uint32List] v29 T{_ExternalUint32Array}, v28 T{int}, v26, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:20(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v19 <- LoadField(v2 T{_Uint32ArrayView} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v42 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v43 <- UnboxInt64([non-speculative], v19 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v43 T{_Smi}, v42 T{int}) [-9223372036854775808, 9223372036854775807] int64
v24 <- LoadField(v2 T{_Uint32ArrayView} . TypedDataView.typed_data {final}) T{*}
v29 <- LoadField(v2 T{_Uint32ArrayView} . TypedDataView.offset_in_bytes {final}) [0, 4611686018427387903] T{_Smi}
v41 <- ShiftInt64Op(<< [tr], v42 T{int}, v40) [-9223372036854775808, 9223372036854775807] int64
v44 <- UnboxInt64([non-speculative], v29 T{_Smi}) [0, 4611686018427387903] int64
v13 <- BinaryInt64Op(+ [tr], v44 T{_Smi}, v41 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- fp[2]
v39 <- UnboxUint32([tr], [non-speculative], v4 T{int}) [0, 4294967295] uint32
v48 <- LoadField(v24 T{_TypedList} . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint32List] v48 T{_TypedList}, v13 T{int}, v39, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:26(v0)
slow path check bound operation
B0
B3
Graph intrinsic begin
ParallelMove r1 <- sp[2]
v3 <- LoadField(v0 . TypedDataBase.length {final})
ParallelMove r3 <- sp[1]
CheckArrayBound(v3, v1)
ParallelMove r2 <- sp[0]
v5 <- UnboxUint32([tr], [guard-inputs], v2) uint32
StoreIndexed([_Uint32List] v0, v1, v5, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:36(v6)
Graph intrinsic end
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v16 <- LoadField(v2 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v29 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v30 <- UnboxInt64([non-speculative], v16 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v30 T{_Smi}, v29 T{int}) [-9223372036854775808, 9223372036854775807] int64
v28 <- ShiftInt64Op(<< [tr], v29 T{int}, v27) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[2]
v26 <- UnboxUint32([tr], [non-speculative], v4 T{int}) [0, 4294967295] uint32
StoreIndexed([_Uint32List] v2 T{_Uint32List}, v28 T{int}, v26, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:20(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
v7 <- AllocateObject:12(cls=UnsupportedError) T{UnsupportedError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v7 T{UnsupportedError} . message = v8 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:16(v7)
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v16 <- LoadField(v2 T{_ExternalInt32Array} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v30 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v31 <- UnboxInt64([non-speculative], v16 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v31 T{_Smi}, v30 T{int}) [-9223372036854775808, 9223372036854775807] int64
v28 <- ShiftInt64Op(<< [tr], v30 T{int}, v27) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[2]
v26 <- UnboxInt32([tr], [non-speculative], v4 T{int}) [-2147483648, 2147483647] int32
v29 <- LoadField(v2 T{_ExternalInt32Array} . PointerBase.data {final}) untagged
StoreIndexed([_Int32List] v29 T{_ExternalInt32Array}, v28 T{int}, v26, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:20(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v19 <- LoadField(v2 T{_Int32ArrayView} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v42 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v43 <- UnboxInt64([non-speculative], v19 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v43 T{_Smi}, v42 T{int}) [-9223372036854775808, 9223372036854775807] int64
v24 <- LoadField(v2 T{_Int32ArrayView} . TypedDataView.typed_data {final}) T{*}
v29 <- LoadField(v2 T{_Int32ArrayView} . TypedDataView.offset_in_bytes {final}) [0, 4611686018427387903] T{_Smi}
v41 <- ShiftInt64Op(<< [tr], v42 T{int}, v40) [-9223372036854775808, 9223372036854775807] int64
v44 <- UnboxInt64([non-speculative], v29 T{_Smi}) [0, 4611686018427387903] int64
v13 <- BinaryInt64Op(+ [tr], v44 T{_Smi}, v41 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- fp[2]
v39 <- UnboxInt32([tr], [non-speculative], v4 T{int}) [-2147483648, 2147483647] int32
v48 <- LoadField(v24 T{_TypedList} . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Int32List] v48 T{_TypedList}, v13 T{int}, v39, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:26(v0)
slow path check bound operation
B0
B3
Graph intrinsic begin
ParallelMove r1 <- sp[2]
v3 <- LoadField(v0 . TypedDataBase.length {final})
ParallelMove r3 <- sp[1]
CheckArrayBound(v3, v1)
ParallelMove r2 <- sp[0]
v5 <- UnboxUint32([tr], [guard-inputs], v2) uint32
StoreIndexed([_Int32List] v0, v1, v5, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:36(v6)
Graph intrinsic end
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v16 <- LoadField(v2 T{_Int32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v29 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v30 <- UnboxInt64([non-speculative], v16 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v30 T{_Smi}, v29 T{int}) [-9223372036854775808, 9223372036854775807] int64
v28 <- ShiftInt64Op(<< [tr], v29 T{int}, v27) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[2]
v26 <- UnboxInt32([tr], [non-speculative], v4 T{int}) [-2147483648, 2147483647] int32
StoreIndexed([_Int32List] v2 T{_Int32List}, v28 T{int}, v26, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:20(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
v7 <- AllocateObject:12(cls=UnsupportedError) T{UnsupportedError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v7 T{UnsupportedError} . message = v8 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:16(v7)
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v16 <- LoadField(v2 T{_ExternalUint16Array} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v30 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v31 <- UnboxInt64([non-speculative], v16 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v31 T{_Smi}, v30 T{int}) [-9223372036854775808, 9223372036854775807] int64
v28 <- ShiftInt64Op(<< [tr], v30 T{int}, v27) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[2]
v26 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
v29 <- LoadField(v2 T{_ExternalUint16Array} . PointerBase.data {final}) untagged
StoreIndexed([_Uint16List] v29 T{_ExternalUint16Array}, v28 T{int}, v26, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:20(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v19 <- LoadField(v2 T{_Uint16ArrayView} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v42 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v43 <- UnboxInt64([non-speculative], v19 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v43 T{_Smi}, v42 T{int}) [-9223372036854775808, 9223372036854775807] int64
v24 <- LoadField(v2 T{_Uint16ArrayView} . TypedDataView.typed_data {final}) T{*}
v29 <- LoadField(v2 T{_Uint16ArrayView} . TypedDataView.offset_in_bytes {final}) [0, 4611686018427387903] T{_Smi}
v41 <- ShiftInt64Op(<< [tr], v42 T{int}, v40) [-9223372036854775808, 9223372036854775807] int64
v44 <- UnboxInt64([non-speculative], v29 T{_Smi}) [0, 4611686018427387903] int64
v13 <- BinaryInt64Op(+ [tr], v44 T{_Smi}, v41 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- fp[2]
v39 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
v48 <- LoadField(v24 T{_TypedList} . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint16List] v48 T{_TypedList}, v13 T{int}, v39, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:26(v0)
slow path check bound operation
B0
B3
Graph intrinsic begin
ParallelMove r1 <- sp[2]
v3 <- LoadField(v0 . TypedDataBase.length {final})
ParallelMove r3 <- sp[1]
CheckArrayBound(v3, v1)
ParallelMove r2 <- sp[0]
v5 <- UnboxInt64([tr], [guard-inputs], v2) int64
StoreIndexed([_Uint16List] v0, v1, v5, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:36(v6)
Graph intrinsic end
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v16 <- LoadField(v2 T{_Uint16List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v29 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v30 <- UnboxInt64([non-speculative], v16 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v30 T{_Smi}, v29 T{int}) [-9223372036854775808, 9223372036854775807] int64
v28 <- ShiftInt64Op(<< [tr], v29 T{int}, v27) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[2]
v26 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed([_Uint16List] v2 T{_Uint16List}, v28 T{int}, v26, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:20(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
v7 <- AllocateObject:12(cls=UnsupportedError) T{UnsupportedError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v7 T{UnsupportedError} . message = v8 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:16(v7)
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v16 <- LoadField(v2 T{_ExternalInt16Array} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v30 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v31 <- UnboxInt64([non-speculative], v16 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v31 T{_Smi}, v30 T{int}) [-9223372036854775808, 9223372036854775807] int64
v28 <- ShiftInt64Op(<< [tr], v30 T{int}, v27) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[2]
v26 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
v29 <- LoadField(v2 T{_ExternalInt16Array} . PointerBase.data {final}) untagged
StoreIndexed([_Int16List] v29 T{_ExternalInt16Array}, v28 T{int}, v26, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:20(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v19 <- LoadField(v2 T{_Int16ArrayView} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v42 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v43 <- UnboxInt64([non-speculative], v19 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v43 T{_Smi}, v42 T{int}) [-9223372036854775808, 9223372036854775807] int64
v24 <- LoadField(v2 T{_Int16ArrayView} . TypedDataView.typed_data {final}) T{*}
v29 <- LoadField(v2 T{_Int16ArrayView} . TypedDataView.offset_in_bytes {final}) [0, 4611686018427387903] T{_Smi}
v41 <- ShiftInt64Op(<< [tr], v42 T{int}, v40) [-9223372036854775808, 9223372036854775807] int64
v44 <- UnboxInt64([non-speculative], v29 T{_Smi}) [0, 4611686018427387903] int64
v13 <- BinaryInt64Op(+ [tr], v44 T{_Smi}, v41 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- fp[2]
v39 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
v48 <- LoadField(v24 T{_TypedList} . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Int16List] v48 T{_TypedList}, v13 T{int}, v39, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:26(v0)
slow path check bound operation
B0
B3
Graph intrinsic begin
ParallelMove r1 <- sp[2]
v3 <- LoadField(v0 . TypedDataBase.length {final})
ParallelMove r3 <- sp[1]
CheckArrayBound(v3, v1)
ParallelMove r2 <- sp[0]
v5 <- UnboxInt64([tr], [guard-inputs], v2) int64
StoreIndexed([_Int16List] v0, v1, v5, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:36(v6)
Graph intrinsic end
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v16 <- LoadField(v2 T{_Int16List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v29 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v30 <- UnboxInt64([non-speculative], v16 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v30 T{_Smi}, v29 T{int}) [-9223372036854775808, 9223372036854775807] int64
v28 <- ShiftInt64Op(<< [tr], v29 T{int}, v27) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[2]
v26 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed([_Int16List] v2 T{_Int16List}, v28 T{int}, v26, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:20(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
v7 <- AllocateObject:12(cls=UnsupportedError) T{UnsupportedError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v7 T{UnsupportedError} . message = v8 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:16(v7)
B0
B3
Graph intrinsic begin
ParallelMove r1 <- sp[2]
v3 <- LoadField(v0 . TypedDataBase.length {final})
ParallelMove r3 <- sp[1]
CheckArrayBound(v3, v1)
ParallelMove r2 <- sp[0]
v5 <- UnboxInt64([tr], [guard-inputs], v2) int64
v6 <- LoadField(v0 . PointerBase.data {final}) untagged
StoreIndexed([_ExternalUint8ClampedArray] v6, v1, v5, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:44(v7)
Graph intrinsic end
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v15 <- LoadField(v2 T{_ExternalUint8ClampedArray} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v60 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v64 <- UnboxInt64([non-speculative], v15 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v64 T{_Smi}, v60 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[2]
v62 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v62 T{int}, v67 T{_Smi}) T{bool} goto (10, 11)
B10
ParallelMove r1 <- C goto:20 B14
B11
Branch if RelationalOp(>, v62 T{int}, v68 T{_Smi}) T{bool} goto (12, 13)
B12
ParallelMove r1 <- C goto:34 B14
B13
ParallelMove r1 <- r3 goto:38 B14
B14
v47 <- LoadField(v2 T{_ExternalUint8ClampedArray} . PointerBase.data {final}) untagged
StoreIndexed([_Uint8List] v47 T{_ExternalUint8ClampedArray}, v60 T{int}, v36 T{int}, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:20(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v20 <- LoadField(v2 T{_Uint8ClampedArrayView} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v74 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v78 <- UnboxInt64([non-speculative], v20 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v78 T{_Smi}, v74 T{int}) [-9223372036854775808, 9223372036854775807] int64
v25 <- LoadField(v2 T{_Uint8ClampedArrayView} . TypedDataView.typed_data {final}) T{*}
v30 <- LoadField(v2 T{_Uint8ClampedArrayView} . TypedDataView.offset_in_bytes {final}) [0, 4611686018427387903] T{_Smi}
v79 <- UnboxInt64([non-speculative], v30 T{_Smi}) [0, 4611686018427387903] int64
v13 <- BinaryInt64Op(+ [tr], v79 T{_Smi}, v74 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- fp[2]
v76 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v76 T{int}, v82 T{_Smi}) T{bool} goto (14, 15)
B14
ParallelMove r2 <- C goto:20 B18
B15
Branch if RelationalOp(>, v76 T{int}, v83 T{_Smi}) T{bool} goto (16, 17)
B16
ParallelMove r2 <- C goto:34 B18
B17
ParallelMove r2 <- r4 goto:38 B18
B18
v86 <- LoadField(v25 T{_TypedList} . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v86 T{_TypedList}, v13 T{int}, v51 T{int}, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:28(v0)
slow path check bound operation
B0
B3
Graph intrinsic begin
ParallelMove r1 <- sp[2]
v3 <- LoadField(v0 . TypedDataBase.length {final})
ParallelMove r3 <- sp[1]
CheckArrayBound(v3, v1)
ParallelMove r2 <- sp[0]
v5 <- UnboxInt64([tr], [guard-inputs], v2) int64
StoreIndexed([_Uint8ClampedList] v0, v1, v5, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:44(v6)
Graph intrinsic end
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v15 <- LoadField(v2 T{_Uint8ClampedList} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v59 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v63 <- UnboxInt64([non-speculative], v15 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v63 T{_Smi}, v59 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[2]
v61 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v61 T{int}, v66 T{_Smi}) T{bool} goto (10, 11)
B10
ParallelMove r1 <- C goto:20 B14
B11
Branch if RelationalOp(>, v61 T{int}, v67 T{_Smi}) T{bool} goto (12, 13)
B12
ParallelMove r1 <- C goto:34 B14
B13
ParallelMove r1 <- r3 goto:38 B14
B14
StoreIndexed([_Uint8List] v2 T{_Uint8ClampedList}, v59 T{int}, v36 T{int}, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:20(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
v7 <- AllocateObject:12(cls=UnsupportedError) T{UnsupportedError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v7 T{UnsupportedError} . message = v8 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:16(v7)
B0
B3
Graph intrinsic begin
ParallelMove r1 <- sp[2]
v3 <- LoadField(v0 . TypedDataBase.length {final})
ParallelMove r3 <- sp[1]
CheckArrayBound(v3, v1)
ParallelMove r2 <- sp[0]
v5 <- UnboxInt64([tr], [guard-inputs], v2) int64
v6 <- LoadField(v0 . PointerBase.data {final}) untagged
StoreIndexed([_ExternalUint8Array] v6, v1, v5, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:34(v7)
Graph intrinsic end
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v14 <- LoadField(v2 T{_ExternalUint8Array} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v26 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v27 <- UnboxInt64([non-speculative], v14 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v27 T{_Smi}, v26 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[2]
v24 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
v25 <- LoadField(v2 T{_ExternalUint8Array} . PointerBase.data {final}) untagged
StoreIndexed([_Uint8List] v25 T{_ExternalUint8Array}, v26 T{int}, v24, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:18(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v19 <- LoadField(v2 T{_Uint8ArrayView} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v40 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v41 <- UnboxInt64([non-speculative], v19 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v41 T{_Smi}, v40 T{int}) [-9223372036854775808, 9223372036854775807] int64
v24 <- LoadField(v2 T{_Uint8ArrayView} . TypedDataView.typed_data {final}) T{*}
v29 <- LoadField(v2 T{_Uint8ArrayView} . TypedDataView.offset_in_bytes {final}) [0, 4611686018427387903] T{_Smi}
v42 <- UnboxInt64([non-speculative], v29 T{_Smi}) [0, 4611686018427387903] int64
v13 <- BinaryInt64Op(+ [tr], v42 T{_Smi}, v40 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- fp[2]
v39 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
v46 <- LoadField(v24 T{_TypedList} . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v46 T{_TypedList}, v13 T{int}, v39, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:26(v0)
slow path check bound operation
B0
B3
Graph intrinsic begin
ParallelMove r1 <- sp[2]
v3 <- LoadField(v0 . TypedDataBase.length {final})
ParallelMove r3 <- sp[1]
CheckArrayBound(v3, v1)
ParallelMove r2 <- sp[0]
v5 <- UnboxInt64([tr], [guard-inputs], v2) int64
StoreIndexed([_Uint8List] v0, v1, v5, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:34(v6)
Graph intrinsic end
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v14 <- LoadField(v2 T{_Uint8List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v25 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v26 <- UnboxInt64([non-speculative], v14 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v26 T{_Smi}, v25 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[2]
v24 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed([_Uint8List] v2 T{_Uint8List}, v25 T{int}, v24, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:18(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
v7 <- AllocateObject:12(cls=UnsupportedError) T{UnsupportedError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v7 T{UnsupportedError} . message = v8 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:16(v7)
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v14 <- LoadField(v2 T{_ExternalInt8Array} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v26 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v27 <- UnboxInt64([non-speculative], v14 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v27 T{_Smi}, v26 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[2]
v24 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
v25 <- LoadField(v2 T{_ExternalInt8Array} . PointerBase.data {final}) untagged
StoreIndexed([_Int8List] v25 T{_ExternalInt8Array}, v26 T{int}, v24, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:18(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v19 <- LoadField(v2 T{_Int8ArrayView} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v40 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v41 <- UnboxInt64([non-speculative], v19 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v41 T{_Smi}, v40 T{int}) [-9223372036854775808, 9223372036854775807] int64
v24 <- LoadField(v2 T{_Int8ArrayView} . TypedDataView.typed_data {final}) T{*}
v29 <- LoadField(v2 T{_Int8ArrayView} . TypedDataView.offset_in_bytes {final}) [0, 4611686018427387903] T{_Smi}
v42 <- UnboxInt64([non-speculative], v29 T{_Smi}) [0, 4611686018427387903] int64
v13 <- BinaryInt64Op(+ [tr], v42 T{_Smi}, v40 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- fp[2]
v39 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
v46 <- LoadField(v24 T{_TypedList} . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Int8List] v46 T{_TypedList}, v13 T{int}, v39, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:26(v0)
slow path check bound operation
B0
B3
Graph intrinsic begin
ParallelMove r1 <- sp[2]
v3 <- LoadField(v0 . TypedDataBase.length {final})
ParallelMove r3 <- sp[1]
CheckArrayBound(v3, v1)
ParallelMove r2 <- sp[0]
v5 <- UnboxInt64([tr], [guard-inputs], v2) int64
StoreIndexed([_Int8List] v0, v1, v5, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:34(v6)
Graph intrinsic end
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v14 <- LoadField(v2 T{_Int8List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r4 <- fp[3]
v25 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v26 <- UnboxInt64([non-speculative], v14 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:14(v26 T{_Smi}, v25 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[2]
v24 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed([_Int8List] v2 T{_Int8List}, v25 T{int}, v24, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:18(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r3 <- fp[4]
v6 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- fp[2], r2 <- r2, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v6), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v8 <- LoadField(v2 . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
ParallelMove r4 <- fp[3]
v11 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v12 <- UnboxInt64([non-speculative], v8) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:12(v12 T{_Smi}, v11 T{int}) [-9223372036854775808, 9223372036854775807] int64
v10 <- LoadField(v2 . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[2]
StoreIndexed:12([_List] v10, v11 T{int}, v4 T{X0?})
ParallelMove r0 <- C
DartReturn:14(v0)
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- fp[4]
v6 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- fp[2], r2 <- r2, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v6), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
v8 <- AllocateObject:12(cls=UnsupportedError, <not-aliased>) T{UnsupportedError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v8 T{UnsupportedError} . message = v9 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:16(v8)
B0
B3
Enter frame
ParallelMove r3 <- fp[4]
v6 <- LoadField(v2 . Array.type_arguments {final}) T{TypeArguments?}
ParallelMove r0 <- fp[2], r2 <- r2, r1 <- C
t0 <- AssertAssignable:10(v4, v5, 'value', instantiator_type_args(v6), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[4]
v8 <- LoadField(v2 . Array.length {final}) [0, 576460752303423487] T{_Smi}
ParallelMove r4 <- fp[3]
v10 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v11 <- UnboxInt64([non-speculative], v8) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:12(v11 T{_Smi}, v10 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r2, r0 <- fp[2]
StoreIndexed:12([_List] v2, v10 T{int}, v4 T{X0?})
ParallelMove r0 <- C
DartReturn:14(v0)
slow path check bound operation
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v2 . _map@3220832 {final}) T{_Map}
ParallelMove r1 <- r0, r2 <- r2
v5 <- StaticCall:12( containsKey<0> v4, v3, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
DartReturn:14(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r1 <- C, r0 <- r1, fp[-1] <- r1
v4 <- AllocateObject:10(cls=_TypedListIterator, v3, <not-aliased>) T{_TypedListIterator}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v4 T{_TypedListIterator} . _array@7027147 = v2 T{__Float64x2List&_TypedList&_Float64x2ListMixin}, NoStoreBarrier)
v20 <- LoadField(v2 T{__Float64x2List&_TypedList&_Float64x2ListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v21 <- UnboxInt64([non-speculative], v20 T{_Smi}) [0, 4611686018427387903] int64
StoreField(v4 T{_TypedListIterator} . _length@7027147 = v21 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v4 T{_TypedListIterator} . _position@7027147 = v15 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:14(v4)
B0
B1
Enter frame
ParallelMove r1 <- C, r0 <- r1, fp[-1] <- r1
v4 <- AllocateObject:10(cls=_TypedListIterator, v3, <not-aliased>) T{_TypedListIterator}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v4 T{_TypedListIterator} . _array@7027147 = v2 T{__Int32x4List&_TypedList&_Int32x4ListMixin}, NoStoreBarrier)
v20 <- LoadField(v2 T{__Int32x4List&_TypedList&_Int32x4ListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v21 <- UnboxInt64([non-speculative], v20 T{_Smi}) [0, 4611686018427387903] int64
StoreField(v4 T{_TypedListIterator} . _length@7027147 = v21 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v4 T{_TypedListIterator} . _position@7027147 = v15 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:14(v4)
B0
B1
Enter frame
ParallelMove r1 <- C, r0 <- r1, fp[-1] <- r1
v4 <- AllocateObject:10(cls=_TypedListIterator, v3, <not-aliased>) T{_TypedListIterator}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v4 T{_TypedListIterator} . _array@7027147 = v2 T{__Float32x4List&_TypedList&_Float32x4ListMixin}, NoStoreBarrier)
v20 <- LoadField(v2 T{__Float32x4List&_TypedList&_Float32x4ListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v21 <- UnboxInt64([non-speculative], v20 T{_Smi}) [0, 4611686018427387903] int64
StoreField(v4 T{_TypedListIterator} . _length@7027147 = v21 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v4 T{_TypedListIterator} . _position@7027147 = v15 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:14(v4)
B0
B1
Enter frame
ParallelMove r1 <- C, r0 <- r1, fp[-1] <- r1
v4 <- AllocateObject:10(cls=_TypedListIterator, v3, <not-aliased>) T{_TypedListIterator}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v4 T{_TypedListIterator} . _array@7027147 = v2 T{__Float32List&_TypedList&_DoubleListMixin}, NoStoreBarrier)
v20 <- LoadField(v2 T{__Float32List&_TypedList&_DoubleListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v21 <- UnboxInt64([non-speculative], v20 T{_Smi}) [0, 4611686018427387903] int64
StoreField(v4 T{_TypedListIterator} . _length@7027147 = v21 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v4 T{_TypedListIterator} . _position@7027147 = v15 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:14(v4)
B0
B1
Enter frame
ParallelMove r1 <- C, r0 <- r1, fp[-1] <- r1
v4 <- AllocateObject:10(cls=_TypedListIterator, v3, <not-aliased>) T{_TypedListIterator}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v4 T{_TypedListIterator} . _array@7027147 = v2 T{__Int8List&_TypedList&_IntListMixin}, NoStoreBarrier)
v20 <- LoadField(v2 T{__Int8List&_TypedList&_IntListMixin} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v21 <- UnboxInt64([non-speculative], v20 T{_Smi}) [0, 4611686018427387903] int64
StoreField(v4 T{_TypedListIterator} . _length@7027147 = v21 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v4 T{_TypedListIterator} . _position@7027147 = v15 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:14(v4)
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
v3 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r1 <- r1
v4 <- AllocateObject:10(cls=ListIterator, v3, <not-aliased>) T{ListIterator}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v4 T{ListIterator} . _iterable@9040228 = v2 T{_GrowableList}, NoStoreBarrier)
v18 <- LoadField(v2 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v20 <- UnboxInt64([non-speculative], v18) [0, 576460752303423487] int64
StoreField(v4 T{ListIterator} . _length@9040228 = v20 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v4 T{ListIterator} . _index@9040228 = v21 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:14(v4)
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
v3 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r1 <- r1
v4 <- AllocateObject:10(cls=_ArrayIterator, v3, <not-aliased>) T{_ArrayIterator}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v4 T{_ArrayIterator} . _array@0150898 = v2 T{_Array<X0>}, NoStoreBarrier)
v18 <- LoadField(v2 T{_Array<X0>} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v20 <- UnboxInt64([non-speculative], v18 T{_Smi}) [0, 576460752303423487] int64
StoreField(v4 T{_ArrayIterator} . _length@0150898 = v20 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v4 T{_ArrayIterator} . _index@0150898 = v21 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:14(v4)
B0
B1
Enter frame
v3 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
v13 <- LoadField(v2 T{__ConstSet&_HashVMImmutableBase&SetMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashSetMixin&_UnmodifiableSetMixin&_ImmutableLinkedHashSetMixin<X0>} . ImmutableLinkedHashBase.data {final}) T{_ImmutableList}
ParallelMove fp[-2] <- r2
v18 <- LoadField(v2 T{__ConstSet&_HashVMImmutableBase&SetMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashSetMixin&_UnmodifiableSetMixin&_ImmutableLinkedHashSetMixin<X0>} . LinkedHashBase.used_data) [0, 4611686018427387903] T{_Smi}
ParallelMove r1 <- r0, fp[-1] <- r3
v4 <- AllocateObject:10(cls=_CompactIteratorImmutable, v3, <not-aliased>) T{_CompactIteratorImmutable}
ParallelMove r0 <- r0, r1 <- fp[-2]
StoreField(v4 T{_CompactIteratorImmutable} . _data@3220832 = v13 T{_ImmutableList}, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
v33 <- UnboxInt64([non-speculative], v18 T{_Smi}) [0, 4611686018427387903] int64
StoreField(v4 T{_CompactIteratorImmutable} . _len@3220832 = v33 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v4 T{_CompactIteratorImmutable} . _offset@3220832 = v31 <int64>, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v4 T{_CompactIteratorImmutable} . _step@3220832 = v34 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:20(v4)
B0
B1
Enter frame
ParallelMove r2 <- r1, fp[-3] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
v13 <- LoadField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.data) T{_List}
ParallelMove fp[-2] <- r3
v18 <- LoadField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.used_data) [0, 4611686018427387903] T{_Smi}
v21 <- UnboxInt64([non-speculative], v18 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- r1, fp[-1] <- r5
v4 <- AllocateObject:10(cls=_CompactIterator, v3) T{_CompactIterator}
ParallelMove r1 <- r0, r2 <- fp[-3], r3 <- fp[-2], r5 <- fp[-1], r6 <- C, r7 <- C, r0 <- r0
ParallelMove fp[-2] <- r0
StaticCall:18( _CompactIterator@3220832.<0> v4, v2, v13 T{_List}, v21 T{_Smi}, v19, v22 T{_Smi})
ParallelMove r0 <- fp[-2]
DartReturn:20(v4)
CheckStackOverflowSlowPath
B0
B1
ParallelMove r1 <- sp[0]
Branch if StrictCompare:10(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:18(v7)
B4
v13 <- LoadClassId(v3 T{*}) [1, 600] int64
Branch if EqualityCompare(v13 == v14) T{bool} goto (6, 7)
B6
ParallelMove r0 <- C goto:40 B5
B7
ParallelMove r0 <- C goto:44 B5
B5
ParallelMove r0 <- r0
DartReturn:46(v8)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r3 <- fp[2]
Branch if StrictCompare:10(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:18(v7)
B4
ParallelMove r4 <- fp[3]
Branch if StrictCompare:20(===, v2, v3 T{*}) goto (5, 6)
B5
ParallelMove r0 <- C
DartReturn:26(v6)
B6
ParallelMove r0 <- r3, r2 <- C, r1 <- C
v5 <- InstanceOf:32(v3 T{*} IS Uri, instantiator_type_args(v0), function_type_args(v0)) T{bool}
InlineInstanceof
InstantiatedTypeNoArgumentsTest
ParallelMove r0 <- r0
Branch if StrictCompare:36(===, v5 T{bool}, v6) goto (8, 19)
BoolTest
B8
ParallelMove r3 <- fp[3], r2 <- fp[2]
v9 <- LoadField(v2 . scheme {final}) T{String}
ParallelMove fp[-1] <- r4
v173 <- LoadClassId(<non-smi> v3 T{Uri}) int64
ParallelMove r0 <- r0, r1 <- r2
v10 <- DispatchTableCall( cid=v173 Uri.scheme<0>, v3 T{Uri}) T{String}
ParallelMove r1 <- r0, r0 <- fp[-1]
v174 <- LoadClassId(<non-smi> v9) int64
MoveArgument(sp[1] <- v9)
MoveArgument(sp[0] <- v10 T{String})
ParallelMove r0 <- r2
v11 <- DispatchTableCall( cid=v174 String.==<0>, v9, v10 T{String}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:48(===, v11 T{bool}, v6) goto (9, 20)
BoolTest
B9
ParallelMove r3 <- fp[3], r2 <- fp[2]
v99 <- LoadField(v2 T{_Uri} . _host@0150898 {final}) T{String??}
v100 <- StrictCompare:12(!==, v99, v0 T{Null?}) T{bool}
ParallelMove fp[-1] <- r4
v175 <- LoadClassId(<non-smi> v3 T{Uri}) int64
ParallelMove r0 <- r0, r1 <- r2
v13 <- DispatchTableCall( cid=v175 Uri.hasAuthority<0>, v3 T{Uri}) T{bool}
ParallelMove r1 <- r0, r0 <- fp[-1]
Branch if StrictCompare:10(===, v100 T{bool}, v13 T{bool}) T{bool} goto (10, 21)
B10
ParallelMove r3 <- fp[3], r2 <- fp[2]
v94 <- LoadField(v2 T{_Uri} . _userInfo@0150898 {final}) T{String}
ParallelMove fp[-1] <- r4
v176 <- LoadClassId(<non-smi> v3 T{Uri}) int64
ParallelMove r0 <- r0, r1 <- r2
v16 <- DispatchTableCall( cid=v176 Uri.userInfo<0>, v3 T{Uri}) T{String}
ParallelMove r1 <- r0, r0 <- fp[-1]
v177 <- LoadClassId(<non-smi> v94 T{String}) int64
MoveArgument(sp[1] <- v94 T{String})
MoveArgument(sp[0] <- v16 T{String})
ParallelMove r0 <- r2
v17 <- DispatchTableCall( cid=v177 String.==<0>, v94 T{String}, v16 T{String}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:76(===, v17 T{bool}, v6) goto (11, 22)
BoolTest
B11
ParallelMove r0 <- fp[2]
ParallelMove r1 <- fp[3]
v18 <- StaticCall:82( get:host<0> v2, result_type = T{!null}) T{String}
ParallelMove r3 <- r0, r2 <- fp[2]
ParallelMove fp[-1] <- r3
v178 <- LoadClassId(<non-smi> v3 T{Uri}) int64
ParallelMove r0 <- r0, r1 <- r2
v19 <- DispatchTableCall( cid=v178 Uri.host<0>, v3 T{Uri}) T{String}
ParallelMove r1 <- r0, r0 <- fp[-1]
v179 <- LoadClassId(<non-smi> v18) int64
MoveArgument(sp[1] <- v18)
MoveArgument(sp[0] <- v19 T{String})
ParallelMove r0 <- r2
v20 <- DispatchTableCall( cid=v179 String.==<0>, v18, v19 T{String}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:90(===, v20 T{bool}, v6) goto (12, 23)
BoolTest
B12
ParallelMove r0 <- fp[2]
ParallelMove r1 <- fp[3]
v21 <- StaticCall:96( get:port<0> v2, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0, r2 <- fp[2]
ParallelMove fp[-2] <- r3
v180 <- LoadClassId(<non-smi> v3 T{Uri}) int64
ParallelMove r0 <- r0, r1 <- r2
v22 <- DispatchTableCall( cid=v180 Uri.port<0>, v3 T{Uri}) int64
ParallelMove r1 <- r0, r0 <- fp[-2]
Branch if EqualityCompare(v21 == v22 T{int}) T{bool} goto (13, 24)
B13
ParallelMove r3 <- fp[3], r2 <- fp[2]
v24 <- LoadField(v2 . path {final}) T{String}
ParallelMove fp[-1] <- r4
v181 <- LoadClassId(<non-smi> v3 T{Uri}) int64
ParallelMove r0 <- r0, r1 <- r2
v25 <- DispatchTableCall( cid=v181 Uri.path<0>, v3 T{Uri}) T{String}
ParallelMove r1 <- r0, r0 <- fp[-1]
v182 <- LoadClassId(<non-smi> v24) int64
MoveArgument(sp[1] <- v24)
MoveArgument(sp[0] <- v25 T{String})
ParallelMove r0 <- r2
v26 <- DispatchTableCall( cid=v182 String.==<0>, v24, v25 T{String}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:118(===, v26 T{bool}, v6) goto (14, 25)
BoolTest
B14
ParallelMove r3 <- fp[3], r2 <- fp[2]
v80 <- LoadField(v2 T{_Uri} . _query@0150898 {final}) T{String??}
ParallelMove fp[-3] <- r4
v81 <- StrictCompare:12(!==, v80, v0 T{Null?}) T{bool}
ParallelMove fp[-1] <- r5
v183 <- LoadClassId(<non-smi> v3 T{Uri}) int64
ParallelMove r0 <- r0, r1 <- r2
v28 <- DispatchTableCall( cid=v183 Uri.hasQuery<0>, v3 T{Uri}) T{bool}
ParallelMove r1 <- r0, r0 <- fp[-1]
Branch if StrictCompare:10(===, v81 T{bool}, v28 T{bool}) T{bool} goto (15, 26)
B15
ParallelMove r0 <- fp[-3]
Branch if StrictCompare:12(===, v80 T{String??}, v0 T{Null?}) goto (40, 41)
B40
ParallelMove r3 <- C goto:22 B42
B41
ParallelMove r3 <- r0 goto:24 B42
B42
ParallelMove fp[-1] <- r3
v184 <- LoadClassId(<non-smi> v3 T{Uri}) int64
ParallelMove r0 <- r0, r1 <- r2
v31 <- DispatchTableCall( cid=v184 Uri.query<0>, v3 T{Uri}) T{String}
ParallelMove r1 <- r0, r0 <- fp[-1]
v185 <- LoadClassId(<non-smi> v71 T{String}) int64
MoveArgument(sp[1] <- v71 T{String})
MoveArgument(sp[0] <- v31 T{String})
ParallelMove r0 <- r2
v32 <- DispatchTableCall( cid=v185 String.==<0>, v71 T{String}, v31 T{String}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:146(===, v32 T{bool}, v6) goto (16, 27)
BoolTest
B16
ParallelMove r0 <- fp[3], r2 <- fp[2]
v56 <- LoadField(v2 T{_Uri} . _fragment@0150898 {final}) T{String??}
ParallelMove fp[-3] <- r3
v57 <- StrictCompare:12(!==, v56, v0 T{Null?}) T{bool}
ParallelMove fp[-1] <- r4
v186 <- LoadClassId(<non-smi> v3 T{Uri}) int64
ParallelMove r0 <- r0, r1 <- r2
v34 <- DispatchTableCall( cid=v186 Uri.hasFragment<0>, v3 T{Uri}) T{bool}
ParallelMove r1 <- r0, r0 <- fp[-1]
Branch if StrictCompare:10(===, v57 T{bool}, v34 T{bool}) T{bool} goto (17, 28)
B17
ParallelMove r0 <- fp[-3]
Branch if StrictCompare:12(===, v56 T{String??}, v0 T{Null?}) goto (31, 32)
B31
ParallelMove r2 <- C goto:22 B33
B32
ParallelMove r2 <- r0 goto:24 B33
B33
ParallelMove fp[-1] <- r2
v187 <- LoadClassId(<non-smi> v3 T{Uri}) int64
ParallelMove r0 <- r0, r1 <- r1
v37 <- DispatchTableCall( cid=v187 Uri.fragment<0>, v3 T{Uri}) T{String}
ParallelMove r1 <- r0, r0 <- fp[-1]
v188 <- LoadClassId(<non-smi> v46 T{String}) int64
MoveArgument(sp[1] <- v46 T{String})
MoveArgument(sp[0] <- v37 T{String})
ParallelMove r0 <- r2
v38 <- DispatchTableCall( cid=v188 String.==<0>, v46 T{String}, v37 T{String}) T{bool}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:176 B7
B28
B27
B26
B25
B24
B23
B22
B21
B20
B19
B18
ParallelMove r0 <- C goto:220 B7
B7
ParallelMove r0 <- r0
DartReturn:222(v8)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r3 <- fp[2]
Branch if StrictCompare:10(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:18(v7)
B4
ParallelMove r4 <- fp[3]
Branch if StrictCompare:20(===, v2, v3 T{*}) goto (5, 6)
B5
ParallelMove r0 <- C
DartReturn:26(v6)
B6
ParallelMove r0 <- r3, r2 <- C, r1 <- C
v5 <- InstanceOf:32(v3 T{*} IS Uri, instantiator_type_args(v0), function_type_args(v0)) T{bool}
InlineInstanceof
InstantiatedTypeNoArgumentsTest
ParallelMove r0 <- r0
Branch if StrictCompare:36(===, v5 T{bool}, v6) goto (8, 9)
BoolTest
B8
ParallelMove r1 <- fp[3], r0 <- fp[2]
v9 <- LoadField(v2 . _uri@0150898 {final}) T{String}
ParallelMove fp[-1] <- r2
v28 <- LoadClassId(<non-smi> v3 T{Uri}) int64
MoveArgument(sp[0] <- v3 T{Uri})
ParallelMove r0 <- r1
v10 <- DispatchTableCall( cid=v28 Uri.toString<0>, v3 T{Uri}) T{String}
ParallelMove r1 <- r0, r0 <- fp[-1]
v29 <- LoadClassId(<non-smi> v9) int64
MoveArgument(sp[1] <- v9)
MoveArgument(sp[0] <- v10 T{String})
ParallelMove r0 <- r2
v11 <- DispatchTableCall( cid=v29 String.==<0>, v9, v10 T{String}) T{bool}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:50 B7
B9
ParallelMove r0 <- C goto:54 B7
B7
ParallelMove r0 <- r0
DartReturn:56(v8)
CheckStackOverflowSlowPath
B0
B1
ParallelMove r1 <- sp[0]
Branch if StrictCompare:10(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:18(v7)
B4
ParallelMove r2 <- sp[1]
Branch if StrictCompare:20(===, v2, v3 T{*}) goto (5, 6)
B5
ParallelMove r0 <- C
DartReturn:26(v6)
B6
v14 <- LoadClassId(v3 T{*}) [1, 600] int64
Branch if TestRange(v14 in [460-461]) T{bool} goto (8, 9)
B8
v9 <- LoadField(v3 T{_ControllerStream<dynamic>} . _controller@4048458) T{_StreamControllerLifecycle<X0>}
v10 <- LoadField(v2 . _controller@4048458) T{_StreamControllerLifecycle<X0>}
v11 <- StrictCompare:46(===, v9, v10) T{bool}
ParallelMove r0 <- r2 goto:48 B7
B9
ParallelMove r0 <- C goto:52 B7
B7
ParallelMove r0 <- r0
DartReturn:54(v8)
B0
B3
Enter frame
ParallelMove r5 <- r1, r4 <- r2, fp[-2] <- r1, fp[-3] <- r2, fp[-4] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v6 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r4, r2 <- r6, r1 <- C, fp[-1] <- r6
t0 <- AssertAssignable:10(v3, v5, 'key', instantiator_type_args(v6), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-4], r2 <- fp[-1], r1 <- C
t0 <- AssertAssignable:12(v4, v8, 'value', instantiator_type_args(v6 T{TypeArguments}), function_type_args(v0)) T{X1?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-2], r2 <- fp[-3]
v11 <- StaticCall:14( _hashCode@3220832<0> v2, v3 T{X0?}, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-2], r2 <- fp[-3], r3 <- fp[-4], r5 <- r0
StaticCall:16( _set@3220832<0> v2, v3 T{X0?}, v4 T{X1?}, v11, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:18(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v12 <- LoadField(v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin&_UnmodifiableMapMixin&_ImmutableLinkedHashMapMixin<X0, X1>} . ImmutableLinkedHashBase.index) T{_Uint32List?}
Branch if StrictCompare:12(===, v12, v0) goto (3, 4)
B3
ParallelMove r1 <- r0
StaticCall:18( _createIndex@3220832<0> v2, using unchecked entrypoint)
ParallelMove  goto:24 B5
B4
B5
ParallelMove r1 <- fp[-1], r2 <- fp[-2]
v5 <- StaticCall:28( containsKey<0> v2, v3, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
DartReturn:30(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v12 <- LoadField(v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin<X0, X1>} . ImmutableLinkedHashBase.data {final}) T{_ImmutableList}
ParallelMove r1 <- r1, r2 <- r2, fp[-1] <- r0
v5 <- StaticCall:12( _getValueOrData@3220832<0> v2, v3, using unchecked entrypoint) T{Object??}
ParallelMove r0 <- r0, r1 <- fp[-1]
v6 <- StrictCompare:14(!==, v12 T{_ImmutableList}, v5) T{bool}
ParallelMove r0 <- r2
DartReturn:18(v6 T{bool})
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v12 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.data) T{_List}
ParallelMove r1 <- r1, r2 <- r2, fp[-1] <- r0
v5 <- StaticCall:12( _getValueOrData@3220832<0> v2, v3, using unchecked entrypoint) T{Object??}
ParallelMove r0 <- r0, r1 <- fp[-1]
v6 <- StrictCompare:14(!==, v12 T{_List}, v5) T{bool}
ParallelMove r0 <- r2
DartReturn:18(v6 T{bool})
CheckStackOverflowSlowPath
B0
B1
ParallelMove r2 <- C
v3 <- LoadField(v2 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r3
v14 <- IntConverter(int64->uint32[tr], v3) uint32
v5 <- BinaryUint32Op(& [tr], v14 T{int}, v16 T{_Smi}) [0, 4] uint32
ParallelMove r1 <- r1
v15 <- IntConverter(uint32->int64, v5) int64
v7 <- EqualityCompare(v15 T{_Smi} != v12 T{_Smi}) T{bool}
ParallelMove r0 <- r0
DartReturn:18(v7 T{bool})
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
Branch if StrictCompare:10(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:18(v7)
B4
v14 <- LoadClassId(v3 T{*}) [1, 600] int64
Branch if EqualityCompare(v14 == v15) T{bool} goto (6, 7)
B6
ParallelMove r1 <- fp[3]
v9 <- LoadField(v2 . _name@9040228 {final}) T{String}
v10 <- LoadField(v3 T{Symbol} . _name@9040228 {final}) T{String}
v25 <- LoadClassId(<non-smi> v9) int64
MoveArgument(sp[1] <- v9)
MoveArgument(sp[0] <- v10)
ParallelMove r0 <- r0
v11 <- DispatchTableCall( cid=v25 String.==<0>, v9, v10) T{bool}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:40 B5
B7
ParallelMove r0 <- C goto:44 B5
B5
ParallelMove r0 <- r0
DartReturn:46(v8)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
v3 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r1 <- r1
v4 <- AllocateObject:10(cls=_ControllerStream, v3, <not-aliased>) T{_ControllerStream}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v4 T{_ControllerStream} . _controller@4048458 = v2 T{_StreamController<X0>}, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:14(v4)
B0
B1
ParallelMove r0 <- r2
StoreField(v2 . onResume = v3)
ParallelMove r0 <- C
DartReturn:4(v0)
B0
B1
ParallelMove r0 <- r2
StoreField(v2 . onCancel = v3)
ParallelMove r0 <- C
DartReturn:4(v0)
B0
B1
ParallelMove r0 <- r2
StoreField(v2 . onListen = v3)
ParallelMove r0 <- C
DartReturn:4(v0)
B0
B1
Enter frame
ParallelMove fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- AllocateContext:10(num_variables=1) T{Context}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v3 . this = v2, NoStoreBarrier)
ParallelMove r1 <- C, r2 <- r1
v5 <- AllocateClosure:12(v4, v3) T{_Closure}
ParallelMove r1 <- fp[-1], r0 <- r0
ParallelMove fp[-2] <- r0
StaticCall:14( _cancel@4048458<0> v2, using unchecked entrypoint)
ParallelMove r0 <- fp[-1]
v6 <- LoadField(v2 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
v8 <- BinaryInt64Op(| [tr], v6, v24 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458 = v8 T{int} <int64>)
v9 <- LoadField(v2 . _cancelFuture@4048458) T{_Future?}
ParallelMove fp[-3] <- r1
Branch if StrictCompare:24(!==, v9, v0) goto (3, 6)
B3
v14 <- LoadStaticField:4(_nullFuture@4048458, CallsInitializer) T{_Future}
ParallelMove r0 <- r0, r1 <- fp[-3]
Branch if StrictCompare:30(!==, v9 T{_Future}, v14 T{_Future}) goto (4, 7)
B4
ParallelMove r1 <- r1, r2 <- fp[-2]
StaticCall:38( whenComplete<0> v9 T{_Future}, v5, using unchecked entrypoint)
ParallelMove  goto:54 B8
B7
B6
B5
MoveArgument(sp[0] <- v5)
ParallelMove r0 <- fp[-2]
ClosureCall:50( closure=v5<0>, v5)
ParallelMove  goto:56 B8
B8
ParallelMove r0 <- C
DartReturn:58(v0)
CheckStackOverflowSlowPath
B0
B5
Enter frame
ParallelMove r0 <- r1, fp[-2] <- r1, fp[-3] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r1 <- r3, fp[-1] <- r3
v5 <- AllocateObject:10(cls=_Future, v4) T{_Future}
ParallelMove r1 <- r0, r0 <- C
ParallelMove fp[-4] <- r1
StoreField(v5 T{_Future} . _state@4048458 = v47 T{_Smi} <int64>, NoStoreBarrier)
v42 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r1 <- r0, r0 <- fp[-4]
StoreField(v5 T{_Future} . _zone@4048458 = v42, NoStoreBarrier)
ParallelMove r2 <- fp[-1], r1 <- C, r3 <- C
v11 <- InstantiateTypeArguments:34(v10, instantiator_type_args(v4 T{TypeArguments}), function_type_args(v0), instantiator_class(Library:'dart:async' Class: _Future@4048458)) T{*?}
ParallelMove r1 <- r0
v12 <- AllocateObject:36(cls=_FutureListener, v11) T{_FutureListener}
ParallelMove r1 <- r0, r0 <- fp[-4]
StoreField(v12 T{_FutureListener} . result = v5 T{_Future}, NoStoreBarrier)
ParallelMove r2 <- fp[-3]
StoreField(v12 T{_FutureListener} . callback = v3 T{_Closure}, NoStoreBarrier)
ParallelMove r2 <- C
StoreField(v12 T{_FutureListener} . state = v48 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r1 <- fp[-2], r2 <- r1
StaticCall:40( _addListener@4048458<0> v2, v12, using unchecked entrypoint)
ParallelMove r0 <- fp[-4]
DartReturn:42(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
v5 <- BinaryInt64Op(| [tr], v3, v65 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458 = v5 T{int} <int64>)
Branch if TestInt(v5, v66) goto (3, 4)
B3
v10 <- LoadField(v2 . _pending@4048458) T{_PendingEvents?}
CheckNull:28(v10, CastError) T{_PendingEvents}
ParallelMove r1 <- r1
StaticCall:30( cancelSchedule<0> v10 T{_PendingEvents}, using unchecked entrypoint)
ParallelMove  goto:36 B5
B4
B5
v27 <- LoadField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v27, v68) goto (6, 7)
B6
StoreField(v2 T{_BufferingStreamSubscription<X0>} . _pending@4048458 = v0 T{Null?})
ParallelMove  goto:56 B8
B7
B8
ParallelMove r1 <- r0
v9 <- StaticCall:60( _onCancel@4048458<0> v2, using unchecked entrypoint, result_type = T{_Future?}) T{_Future?}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v2 T{_BufferingStreamSubscription<X0>} . _cancelFuture@4048458 = v9 T{_Future?})
ParallelMove r0 <- C
DartReturn:64(v0)
CheckStackOverflowSlowPath
slow path check null (cast) operation
B0
B1
Enter frame
ParallelMove r2 <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _controller@4048458 {final}) T{_StreamControllerLifecycle<X0>}
v5 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r1, r2 <- r2
v4 <- DispatchTableCall( cid=v5 _StreamControllerLifecycle._recordCancel<0>, v3, v2) T{Future<void>??}
ParallelMove r0 <- r0
DartReturn:14(v4 T{_Future?})
CheckStackOverflowSlowPath
B0
B1
v16 <- LoadField(v2 T{_PendingEvents} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v16 == v27 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r2 <- C
StoreField(v2 T{_PendingEvents} . _state@4048458 = v28 T{_Smi} <int64>)
ParallelMove  goto:26 B5
B4
B5
ParallelMove r0 <- C
DartReturn:30(v0)
B0
B1
Enter frame
CheckStackOverflow:4(stack=0, loop=0)
v5 <- LoadStaticField:4(nullFuture, CallsInitializer) T{_Future}
ParallelMove r0 <- r0
DartReturn:8(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:4(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v5 <- AllocateClosure:6(v4, v0) T{_Closure}
ParallelMove r0 <- r0
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v5)
v6 <- StaticCall:8( run<1> v2, v3, v5, using unchecked entrypoint, result_type = T{_Future}) T{_Future}
ParallelMove r0 <- r0
DartReturn:10(v6)
CheckStackOverflowSlowPath
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C
v10 <- AllocateObject:28(cls=_Future, v4 T{TypeArguments}) T{_Future}
ParallelMove r1 <- r0, r0 <- C
ParallelMove fp[-1] <- r1
StoreField(v10 T{_Future} . _state@4048458 = v29 T{_Smi} <int64>, NoStoreBarrier)
v27 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v10 T{_Future} . _zone@4048458 = v27, NoStoreBarrier)
ParallelMove r1 <- r0, r2 <- C
StaticCall:14( _asyncComplete@4048458<0> v10 T{_Future}, v0 T{Null?}, using unchecked entrypoint)
ParallelMove r0 <- fp[-1]
DartReturn:12(v10)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . Closure.context {final}) T{*}
ParallelMove fp[-1] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v3 . this) T{_BufferingStreamSubscription<X0>}
v41 <- LoadField(v4 T{_BufferingStreamSubscription<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v41, v58) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:20(v0)
B4
v15 <- BinaryInt64Op(| [tr], v41 T{int}, v50) [-9223372036854775808, 9223372036854775807] int64
StoreField(v4 T{_BufferingStreamSubscription<X0>} . _state@4048458 = v15 T{int} <int64>)
v17 <- LoadField(v4 T{_BufferingStreamSubscription<X0>} . _zone@4048458 {final}) T{_RootZone}
v19 <- LoadField(v4 T{_BufferingStreamSubscription<X0>} . _onDone@4048458) T{(dynamic) => void}
ParallelMove r1 <- r1, r2 <- r2
StaticCall:38( runGuarded<0> v17, v19, using unchecked entrypoint)
ParallelMove r1 <- fp[-1]
v20 <- LoadField(v3 . this) T{_BufferingStreamSubscription<X0>}
v22 <- LoadField(v20 T{_BufferingStreamSubscription<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
v24 <- BinaryInt64Op(& [tr], v22, v53) [-9223372036854775808, 9223372036854775807] int64
StoreField(v20 T{_BufferingStreamSubscription<X0>} . _state@4048458 = v24 T{int} <int64>)
ParallelMove r0 <- C
DartReturn:48(v0)
CheckStackOverflowSlowPath
B0
B1
ParallelMove r1 <- sp[0]
v4 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- sp[1]
StoreField(v2 . _state@4048458 = v4 T{int} <int64>)
ParallelMove r0 <- C
DartReturn:4(v0)
B0
B1
ParallelMove r2 <- sp[0]
v3 <- LoadField(v2 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
v4 <- BoxInt64(v3) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
DartReturn:4(v4 T{int})
B0
B1
ParallelMove r0 <- sp[0], r1 <- sp[1]
StoreField(v2 . _onDone@4048458 = v3)
ParallelMove r0 <- C
DartReturn:4(v0)
B0
B1
ParallelMove r0 <- sp[0], r1 <- sp[1]
StoreField(v2 . _onError@4048458 = v3)
ParallelMove r0 <- C
DartReturn:4(v0)
B0
B1
Enter frame
ParallelMove fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v5 <- AllocateContext:10(num_variables=3) T{Context}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v5 . this = v2, NoStoreBarrier)
ParallelMove r2 <- fp[-2]
StoreField(v5 . error = v3, NoStoreBarrier)
ParallelMove r2 <- fp[-3]
StoreField(v5 . stackTrace = v4, NoStoreBarrier)
v31 <- LoadField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-4] <- r3
ParallelMove r2 <- r3
v69 <- IntConverter(int64->uint32[tr], v31) uint32
ParallelMove r4 <- C
v33 <- BinaryUint32Op(& [tr], v69 T{int}, v71 T{_Smi}) [0, 4] uint32
ParallelMove r5 <- r5
v70 <- IntConverter(uint32->int64, v33) int64
v35 <- EqualityCompare(v70 T{_Smi} != v62 T{_Smi}) T{bool}
ParallelMove r1 <- C, r2 <- r1, fp[-2] <- r4
v8 <- AllocateClosure:14(v7, v5) T{_Closure}
ParallelMove r2 <- r0, r0 <- fp[-4]
ParallelMove fp[-3] <- r2
Branch if TestInt(v31, v63) goto (3, 10)
B3
ParallelMove r3 <- fp[-1]
v14 <- BinaryInt64Op(| [tr], v31 T{int}, v64 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458 = v14 T{int} <int64>)
ParallelMove r1 <- r3
StaticCall:32( _cancel@4048458<0> v2, using unchecked entrypoint)
ParallelMove r1 <- fp[-1]
v15 <- LoadField(v2 . _cancelFuture@4048458) T{_Future?}
ParallelMove fp[-5] <- r0
Branch if StrictCompare:36(!==, v15, v0) goto (4, 7)
B4
v20 <- LoadStaticField:4(_nullFuture@4048458, CallsInitializer) T{_Future}
ParallelMove r0 <- r0, r1 <- fp[-5]
Branch if StrictCompare:42(!==, v15 T{_Future}, v20 T{_Future}) goto (5, 8)
B5
ParallelMove r1 <- r1, r2 <- fp[-3]
StaticCall:50( whenComplete<0> v15 T{_Future}, v8, using unchecked entrypoint)
ParallelMove  goto:66 B9
B8
B7
B6
MoveArgument(sp[0] <- v8)
ParallelMove r0 <- fp[-3]
ClosureCall:62( closure=v8<0>, v8)
ParallelMove  goto:68 B9
B9
B10
ParallelMove r1 <- fp[-1]
MoveArgument(sp[0] <- v8)
ParallelMove r0 <- fp[-3]
ClosureCall:72( closure=v8<0>, v8)
ParallelMove r1 <- fp[-1], r2 <- fp[-2]
StaticCall:74( _checkState@4048458<0> v2, v35 T{bool}, using unchecked entrypoint)
ParallelMove  goto:80 B11
B11
ParallelMove r0 <- C
DartReturn:82(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v156 <- LoadField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v156, v213) goto (3, 12)
B3
v21 <- LoadField(v2 . _pending@4048458) T{_PendingEvents?}
CheckNull:20(v21, CastError) T{_PendingEvents}
v150 <- LoadField(v21 T{_PendingEvents} . lastPendingEvent) T{_DelayedEvent<dynamic>??}
Branch if StrictCompare:12(===, v150, v0 T{Null?}) T{bool} goto (4, 13)
B4
v26 <- BinaryInt64Op(& [tr], v156 T{int}, v179) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458 = v26 T{int} <int64>)
Branch if TestInt(v26, v215) goto (5, 8)
B5
ParallelMove r1 <- r0
v28 <- StaticCall:50( get:_mayResumeInput@4048458<0> v2, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:54(===, v28 T{bool}, v5) goto (6, 9)
BoolTest
B6
ParallelMove r3 <- fp[-1]
v29 <- LoadField(v2 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
v32 <- BinaryInt64Op(& [tr], v29, v180) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458 = v32 T{int} <int64>)
ParallelMove  goto:82 B10
B9
ParallelMove r3 <- fp[-1]
ParallelMove  goto:78 B7
B8
ParallelMove r3 <- r0
ParallelMove  goto:74 B7
B7
B10
B13
ParallelMove r3 <- r0
ParallelMove  goto:94 B11
B12
ParallelMove r3 <- r0
ParallelMove  goto:90 B11
B11
B14
v46 <- LoadClassId:184(v2) [440, 441] int64
ParallelMove fp[-4] <- r4
v59 <- LoadClassId:184(v2) [440, 441] int64
ParallelMove fp[-3] <- r5
ParallelMove r0 <- fp[-2] goto:184 B23
B23
  Loop 0
  Loop Header
CheckStackOverflow:182(stack=0, loop=1)
v117 <- LoadField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v117, v216) goto (15, 16)
B16
  Loop 0
ParallelMove r2 <- r1
v237 <- IntConverter(int64->uint32[tr], v117 T{int}) uint32
v97 <- BinaryUint32Op(& [tr], v237 T{int}, v241 T{_Smi}) [0, 4] uint32
ParallelMove r7 <- r7
v238 <- IntConverter(uint32->int64, v97) int64
v99 <- EqualityCompare(v238 T{_Smi} != v214 T{_Smi}) T{bool}
ParallelMove fp[-2] <- r8
Branch if StrictCompare:10(===, v6 T{bool}, v99 T{bool}) T{bool} goto (18, 19)
B19
  Loop 0
v17 <- BinaryInt64Op(^ [tr], v117 T{int}, v218 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458 = v17 T{int} <int64>)
Branch if StrictCompare:150(===, v99 T{bool}, v5 T{bool}) goto (20, 21)
BoolTest
B20
  Loop 0
Branch if EqualityCompare:156(v59 == v47) goto (39, 44)
B39
  Loop 0
v52 <- LoadField(v2 T{_BufferingStreamSubscription<X0>} . _controller@4048458 {final}) T{_StreamControllerLifecycle<X0>}
v239 <- LoadClassId(<non-smi> v52) int64
ParallelMove r0 <- r0, r1 <- r1, r2 <- r3
DispatchTableCall( cid=v239 _StreamControllerLifecycle._recordPause<0>, v52, v2 T{_BufferingStreamSubscription<X0>})
ParallelMove  goto:14 B45
B44
B45
B21
  Loop 0
ParallelMove r3 <- r4
Branch if EqualityCompare:160(v46 == v47) goto (32, 37)
B32
  Loop 0
ParallelMove r4 <- fp[-1]
v39 <- LoadField(v2 T{_BufferingStreamSubscription<X0>} . _controller@4048458 {final}) T{_StreamControllerLifecycle<X0>}
v240 <- LoadClassId(<non-smi> v39) int64
ParallelMove r0 <- r0, r1 <- r1, r2 <- r4
DispatchTableCall( cid=v240 _StreamControllerLifecycle._recordResume<0>, v39, v2 T{_BufferingStreamSubscription<X0>})
ParallelMove  goto:14 B38
B37
B38
B22
  Loop 0
v18 <- LoadField(v2 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
v20 <- BinaryInt64Op(& [tr], v18, v181) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458 = v20 T{int} <int64>)
ParallelMove r0 <- fp[-2], r3 <- r2, r4 <- fp[-4], r5 <- fp[-3] goto:180 B23
B18
ParallelMove r2 <- r3
Branch if TestInt(v117, v213) goto (26, 29)
B26
Branch if RelationalOp(<, v117 T{int}, v217 T{_Smi}) T{bool} goto (27, 30)
B27
v11 <- LoadField(v2 . _pending@4048458) T{_PendingEvents?}
CheckNull:212(v11, CastError) T{_PendingEvents}
ParallelMove r1 <- r1, r2 <- r2
StaticCall:214( schedule<0> v11 T{_PendingEvents}, v2)
ParallelMove  goto:228 B31
B30
B29
B28
B31
ParallelMove r0 <- C
DartReturn:232(v0)
B15
ParallelMove r2 <- r3
StoreField(v2 T{_BufferingStreamSubscription<X0>} . _pending@4048458 = v0 T{Null?})
ParallelMove r0 <- C
DartReturn:120(v0)
CheckStackOverflowSlowPath
slow path check null (cast) operation
CheckStackOverflowSlowPath
slow path check null (cast) operation
B0
B11
Enter frame
ParallelMove r0 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v5 <- AllocateContext:10(num_variables=2) T{Context}
ParallelMove r4 <- r0, r3 <- fp[-1]
ParallelMove fp[-3] <- r4
StoreField(v5 . this = v2, NoStoreBarrier)
ParallelMove r0 <- fp[-2]
StoreField(v5 . dispatch = v3, NoStoreBarrier)
v8 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r0, r2 <- r2, r1 <- C
t0 <- AssertAssignable:12(v3, v7, 'dispatch', instantiator_type_args(v8), function_type_args(v0)) T{_EventDispatch<X0>}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
v40 <- LoadField(v2 T{_PendingEvents} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v40 == v55 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:24(v0)
B4
Branch if RelationalOp(>=, v40 T{int}, v55 T{_Smi}) T{bool} goto (5, 6)
B5
ParallelMove r3 <- C
StoreField(v2 T{_PendingEvents} . _state@4048458 = v55 T{_Smi} <int64>)
ParallelMove r0 <- C
DartReturn:40(v0)
B6
ParallelMove r3 <- C
ParallelMove r1 <- C, r2 <- fp[-3]
v14 <- AllocateClosure:44(v13, v5) T{_Closure}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v14)
StaticCall:46( scheduleMicrotask<0> v14)
ParallelMove r1 <- fp[-1], r2 <- C
StoreField(v2 T{_PendingEvents} . _state@4048458 = v55 T{_Smi} <int64>)
ParallelMove r0 <- C
DartReturn:50(v0)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- C
ParallelMove r1 <- fp[2]
v3 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v3 . this) T{_PendingEvents}
v5 <- LoadField(v4 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
StoreField(v4 T{_PendingEvents} . _state@4048458 = v25 T{_Smi} <int64>)
Branch if EqualityCompare(v5 == v26 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:24(v0)
B4
v12 <- LoadField(v3 . dispatch) T{_EventDispatch<X0>}
ParallelMove r1 <- r1, r2 <- r0
StaticCall:28( handleNext<0> v4 T{_PendingEvents}, v12, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:30(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r3 <- r1, fp[-2] <- r1, fp[-3] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v2 . firstPendingEvent) T{_DelayedEvent<dynamic>??}
ParallelMove fp[-1] <- r4
CheckNull:12(v4, CastError) T{_DelayedEvent<dynamic>?}
v30 <- LoadClassId(<non-smi> v4 T{_DelayedEvent<dynamic>?}) int64
ParallelMove r0 <- r0, r1 <- r4
v5 <- DispatchTableCall( cid=v30 _DelayedEvent.next<0>, v4 T{_DelayedEvent<dynamic>?}) T{_DelayedEvent<dynamic>??}
ParallelMove r0 <- r0, r2 <- r0, r1 <- fp[-2]
StoreField(v2 T{_PendingEvents} . firstPendingEvent = v5 T{_DelayedEvent<dynamic>??})
Branch if StrictCompare:18(===, v5 T{_DelayedEvent<dynamic>??}, v0) goto (3, 4)
B3
StoreField(v2 T{_PendingEvents} . lastPendingEvent = v0 T{Null?})
ParallelMove  goto:30 B5
B4
B5
v31 <- LoadClassId(<non-smi> v4 T{_DelayedEvent<dynamic>?}) int64
ParallelMove r0 <- r0, r1 <- r1, r2 <- fp[-3]
DispatchTableCall( cid=v31 _DelayedEvent.perform<0>, v4 T{_DelayedEvent<dynamic>?}, v3)
ParallelMove r0 <- C
DartReturn:36(v0)
CheckStackOverflowSlowPath
slow path check null (cast) operation
B0
B1
v26 <- LoadField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v26, v39 T{_Smi}) T{bool} goto (4, 11)
B4
v9 <- LoadField(v2 . _pending@4048458) T{_PendingEvents?}
Branch if StrictCompare:24(===, v9, v0) goto (5, 6)
B5
ParallelMove r1 <- C goto:36 B7
B6
v20 <- LoadField(v9 T{_PendingEvents} . lastPendingEvent) T{_DelayedEvent<dynamic>??}
v21 <- StrictCompare:12(===, v20, v0 T{Null?}) T{bool}
ParallelMove r1 <- r2 goto:38 B7
B7
Branch if StrictCompare:40(===, v11, v0) goto (8, 9)
B8
ParallelMove r1 <- C goto:50 B10
B9
B10
ParallelMove r0 <- r1 goto:56 B3
B11
ParallelMove r0 <- C goto:60 B3
B3
ParallelMove r0 <- r0
DartReturn:62(v6)
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . Closure.context {final}) T{*}
ParallelMove fp[-3] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v3 . this) T{_BufferingStreamSubscription<X0>}
ParallelMove fp[-2] <- r4
v65 <- LoadField(v4 T{_BufferingStreamSubscription<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v65, v91) goto (3, 6)
B3
Branch if TestInt(v65, v93) goto (4, 7)
B4
ParallelMove r0 <- C
DartReturn:30(v0)
B7
B6
B5
v11 <- BinaryInt64Op(| [tr], v65 T{int}, v94 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v4 T{_BufferingStreamSubscription<X0>} . _state@4048458 = v11 T{int} <int64>)
v13 <- LoadField(v4 T{_BufferingStreamSubscription<X0>} . _onError@4048458) T{Function}
ParallelMove r0 <- r5, r2 <- C, r1 <- C, fp[-1] <- r5
v15 <- InstanceOf:50(v13 IS (dynamic, Object, StackTrace) => void, instantiator_type_args(v0), function_type_args(v0)) T{bool}
InlineInstanceof
FunctionTypeTest
BoolTest
ParallelMove r0 <- r0
Branch if StrictCompare:54(===, v15 T{bool}, v6) goto (8, 9)
BoolTest
B8
ParallelMove r0 <- fp[-3], r1 <- fp[-2]
v31 <- LoadField(v4 T{_BufferingStreamSubscription<X0>} . _zone@4048458 {final}) T{_RootZone}
v32 <- LoadField(v3 . error) T{Object}
v33 <- LoadField(v3 . stackTrace) T{StackTrace}
MoveArgument(sp[4] <- v29)
MoveArgument(sp[3] <- v31)
MoveArgument(sp[2] <- v13 T{_Closure})
MoveArgument(sp[1] <- v32)
MoveArgument(sp[0] <- v33)
StaticCall:62( runBinaryGuarded<2> v29, v31, v13 T{_Closure}, v32, v33, using unchecked entrypoint)
ParallelMove  goto:76 B10
B9
ParallelMove r3 <- fp[-3], r1 <- fp[-2]
v18 <- LoadField(v4 T{_BufferingStreamSubscription<X0>} . _zone@4048458 {final}) T{_RootZone}
ParallelMove r0 <- fp[-1], r2 <- C, r1 <- C, fp[-4] <- r4
t2 <- AssertAssignable:70(v13 T{Function}, v21, '', instantiator_type_args(v0), function_type_args(v0)) T{_Closure}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-3]
v23 <- LoadField(v3 . error) T{Object}
MoveArgument(sp[3] <- v16)
MoveArgument(sp[2] <- v18)
MoveArgument(sp[1] <- v13 T{_Closure})
MoveArgument(sp[0] <- v23)
StaticCall:72( runUnaryGuarded<1> v16, v18, v13 T{_Closure}, v23, using unchecked entrypoint)
ParallelMove  goto:78 B10
B10
v24 <- LoadField(v3 . this) T{_BufferingStreamSubscription<X0>}
v26 <- LoadField(v24 T{_BufferingStreamSubscription<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
v28 <- BinaryInt64Op(& [tr], v26, v78) [-9223372036854775808, 9223372036854775807] int64
StoreField(v24 T{_BufferingStreamSubscription<X0>} . _state@4048458 = v28 T{int} <int64>)
ParallelMove r0 <- C
DartReturn:88(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r1 <- C, r2 <- fp[2]
v4 <- AllocateClosure:6(v3, v2) T{_Closure}
ParallelMove r0 <- r0
DartReturn:8(v4)
B0
B1
Enter frame
ParallelMove r3 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _varData@4048458) T{Object??}
ParallelMove fp[-1] <- r4
v5 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r4, r2 <- r2, r1 <- C
t0 <- AssertAssignable:12(v3, v4, '', instantiator_type_args(v5), function_type_args(v0)) T{_StreamControllerAddStreamState}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-1]
v7 <- LoadField(v3 T{_StreamControllerAddStreamState} . _varData@4048458) T{*?}
ParallelMove r0 <- r0, r2 <- fp[-2]
StoreField(v2 T{_StreamController<X0>} . _varData@4048458 = v7 T{Object??})
v8 <- LoadField(v2 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
v11 <- BinaryInt64Op(& [tr], v8, v24) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_StreamController<X0>} . _state@4048458 = v11 T{int} <int64>)
ParallelMove r1 <- r1
StaticCall:26( complete<0> v3 T{_StreamControllerAddStreamState}, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:28(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . addStreamFuture {final}) T{_Future}
ParallelMove r1 <- r0, r2 <- C
StaticCall:12( _asyncComplete@4048458<0> v3, v0, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:14(v0)
CheckStackOverflowSlowPath
B0
B1
ParallelMove r1 <- sp[0]
v4 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- sp[1]
StoreField(v2 . _state@4048458 = v4 T{int} <int64>)
ParallelMove r0 <- C
DartReturn:4(v0)
B0
B1
ParallelMove r2 <- sp[0]
v3 <- LoadField(v2 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
v4 <- BoxInt64(v3) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
DartReturn:4(v4 T{int})
B0
B1
ParallelMove r0 <- sp[0], r1 <- sp[1]
StoreField(v2 . _function_type_arguments@0150898 = v3)
ParallelMove r0 <- C
DartReturn:4(v0)
B0
B3
Enter frame
ParallelMove r4 <- r1, r3 <- r2, fp[-2] <- r1, fp[-3] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v5 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r3, r2 <- r5, r1 <- C, fp[-1] <- r5
t0 <- AssertAssignable:10(v3, v4, 'data', instantiator_type_args(v5), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-2]
v21 <- LoadField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0
v49 <- IntConverter(int64->uint32[tr], v21) uint32
ParallelMove r3 <- C
v23 <- BinaryUint32Op(& [tr], v49 T{int}, v51 T{_Smi}) [0, 4] uint32
ParallelMove r4 <- r4
v50 <- IntConverter(uint32->int64, v23) int64
v25 <- EqualityCompare(v50 T{_Smi} != v46 T{_Smi}) T{bool}
ParallelMove fp[-4] <- r2
v10 <- BinaryInt64Op(| [tr], v21 T{int}, v47 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458 = v10 T{int} <int64>)
v12 <- LoadField(v2 . _zone@4048458 {final}) T{_RootZone}
v13 <- LoadField(v2 . _onData@4048458) T{(dynamic, X0) => void}
MoveArgument(sp[3] <- v5 T{TypeArguments})
MoveArgument(sp[2] <- v12)
MoveArgument(sp[1] <- v13)
MoveArgument(sp[0] <- v3 T{X0?})
StaticCall:24( runUnaryGuarded<1> v5 T{TypeArguments}, v12, v13, v3 T{X0?}, using unchecked entrypoint)
ParallelMove r1 <- fp[-2]
v14 <- LoadField(v2 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
v16 <- BinaryInt64Op(& [tr], v14, v41) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458 = v16 T{int} <int64>)
ParallelMove r1 <- r1, r2 <- fp[-4]
StaticCall:34( _checkState@4048458<0> v2, v25 T{bool}, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:36(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r1 <- C, r2 <- fp[2]
v4 <- AllocateClosure:6(v3, v2) T{_Closure}
ParallelMove r0 <- r0
DartReturn:8(v4)
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r1
v5 <- StaticCall:10( _close@4048458<0> v3 T{*}) T{void?}
ParallelMove r0 <- r0
DartReturn:12(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v28 <- LoadField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v28, v48) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:20(v0)
B4
v7 <- BinaryInt64Op(| [tr], v28 T{int}, v50 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458 = v7 T{int} <int64>)
Branch if RelationalOp(<, v7 T{int}, v51 T{_Smi}) T{bool} goto (5, 6)
B5
ParallelMove r1 <- r1
StaticCall:40( _sendDone@4048458<0> v2, using unchecked entrypoint)
ParallelMove  goto:48 B7
B6
ParallelMove r1 <- r1, r2 <- C
StaticCall:44( _addPending@4048458<0> v2, v9, using unchecked entrypoint)
ParallelMove  goto:50 B7
B7
ParallelMove r0 <- C
DartReturn:52(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v2 . _pending@4048458) T{_PendingEvents?}
Branch if StrictCompare:12(===, v4, v0) goto (3, 4)
B3
v12 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r1 <- r1
v13 <- AllocateObject:18(cls=_PendingEvents, v12) T{_PendingEvents}
ParallelMove r1 <- r0, r0 <- C
StoreField(v13 T{_PendingEvents} . _state@4048458 = v66 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r0 <- r1, r3 <- fp[-1]
StoreField(v2 T{_BufferingStreamSubscription<X0>} . _pending@4048458 = v13 T{_PendingEvents})
ParallelMove r0 <- r1 goto:28 B5
B4
ParallelMove r3 <- r0
ParallelMove r0 <- r1 goto:30 B5
B5
ParallelMove r1 <- r0, r2 <- fp[-2], fp[-3] <- r0
StaticCall:32( add<0> v5, v3, using unchecked entrypoint)
ParallelMove r2 <- fp[-1]
v33 <- LoadField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v33, v67) goto (6, 10)
B6
v10 <- BinaryInt64Op(| [tr], v33 T{int}, v67 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458 = v10 T{int} <int64>)
Branch if RelationalOp(<, v10 T{int}, v68 T{_Smi}) T{bool} goto (7, 8)
B7
ParallelMove r1 <- fp[-3], r2 <- r2
StaticCall:60( schedule<0> v5, v2)
ParallelMove  goto:66 B9
B8
B9
B10
B11
ParallelMove r0 <- C
DartReturn:78(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, r3 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v2 . lastPendingEvent) T{_DelayedEvent<dynamic>??}
Branch if StrictCompare:12(===, v4, v0) goto (3, 4)
B3
ParallelMove r0 <- r3
StoreField(v2 T{_PendingEvents} . lastPendingEvent = v3 T{_DelayedEvent<dynamic>})
ParallelMove r0 <- r3
StoreField(v2 T{_PendingEvents} . firstPendingEvent = v3 T{_DelayedEvent<dynamic>})
ParallelMove  goto:30 B5
B4
v29 <- LoadClassId(<non-smi> v4 T{_DelayedEvent<dynamic>?}) int64
ParallelMove r0 <- r0, r1 <- r1, r2 <- r3
DispatchTableCall( cid=v29 _DelayedEvent.next=<0>, v4 T{_DelayedEvent<dynamic>?}, v3)
ParallelMove r0 <- fp[-2], r1 <- fp[-1]
StoreField(v2 T{_PendingEvents} . lastPendingEvent = v3 T{_DelayedEvent<dynamic>})
ParallelMove  goto:32 B5
B5
ParallelMove r0 <- C
DartReturn:34(v0)
CheckStackOverflowSlowPath
B0
B11
Enter frame
ParallelMove r5 <- r1, r4 <- r2, fp[-2] <- r1, fp[-3] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v9 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r4, r2 <- r3, r1 <- C, fp[-1] <- r3
t0 <- AssertAssignable:10(v3, v8, 'source', instantiator_type_args(v9), function_type_args(v0)) T{Stream<X0>}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[-2]
v58 <- LoadField(v2 T{_StreamController<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>=, v58, v79 T{_Smi}) T{bool} goto (3, 4)
B4
Branch if TestInt(v58, v80) goto (5, 6)
B5
ParallelMove r1 <- C
v22 <- AllocateObject:38(cls=_Future, v0) T{_Future}
ParallelMove r1 <- r0, r0 <- C
ParallelMove fp[-4] <- r1
StoreField(v22 T{_Future} . _state@4048458 = v81 T{_Smi} <int64>, NoStoreBarrier)
v64 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r1 <- r0, r0 <- fp[-4]
StoreField(v22 T{_Future} . _zone@4048458 = v64, NoStoreBarrier)
ParallelMove r1 <- r0, r2 <- C
StaticCall:14( _asyncComplete@4048458<0> v22 T{_Future}, v0 T{Null?}, using unchecked entrypoint)
ParallelMove r0 <- fp[-4]
DartReturn:42(v22)
B6
v15 <- LoadField(v2 . _varData@4048458) T{Object??}
ParallelMove r1 <- fp[-1], fp[-4] <- r3
v17 <- AllocateObject:48(cls=_StreamControllerAddStreamState, v9 T{TypeArguments}) T{_StreamControllerAddStreamState}
ParallelMove r1 <- r0, r2 <- fp[-2], r3 <- fp[-4], r5 <- fp[-3], r0 <- r0
ParallelMove fp[-1] <- r0
StaticCall:50( _StreamControllerAddStreamState@4048458.<0> v17, v2, v15, v3 T{Stream<X0>})
ParallelMove r0 <- fp[-1], r1 <- fp[-2]
StoreField(v2 T{_StreamController<X0>} . _varData@4048458 = v17 T{_StreamControllerAddStreamState})
v18 <- LoadField(v2 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
v20 <- BinaryInt64Op(| [tr], v18, v82 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_StreamController<X0>} . _state@4048458 = v20 T{int} <int64>)
ParallelMove r0 <- fp[-1]
v21 <- LoadField(v17 . addStreamFuture {final}) T{_Future}
ParallelMove r0 <- r1
DartReturn:62(v21)
B3
ParallelMove r1 <- r2
ParallelMove r1 <- r1
v23 <- StaticCall:22( _badEventState@4048458<0> v2, using unchecked entrypoint) T{Error}
ParallelMove r0 <- r0
Throw:24(v23)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v25 <- LoadField(v2 T{_StreamController<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v25, v47) goto (3, 4)
B3
v7 <- AllocateObject:20(cls=StateError, <not-aliased>) T{StateError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v7 T{StateError} . message = v8 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
DartReturn:24(v7)
B4
v5 <- AllocateObject:28(cls=StateError, <not-aliased>) T{StateError}
ParallelMove r0 <- r0, r1 <- C
StoreField(v5 T{StateError} . message = v6 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:32(v5)
B0
B1
Enter frame
ParallelMove r5 <- r1, r4 <- r2, r0 <- r3, r3 <- r5, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- r0
StoreField(v2 . _varData@4048458 = v4)
ParallelMove r1 <- r5, r2 <- r4, r3 <- r3
StaticCall:10( _AddStreamState@4048458.<0> v2, v3, v5)
ParallelMove r1 <- fp[-2]
v6 <- StaticCall:12( get:isPaused<0> v3, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:16(===, v6 T{bool}, v7) goto (3, 4)
BoolTest
B3
ParallelMove r0 <- fp[-1]
v8 <- LoadField(v2 . addSubscription {final}) T{StreamSubscription<dynamic>}
v17 <- LoadClassId(<non-smi> v8) int64
ParallelMove r0 <- r0, r1 <- r1
DispatchTableCall( cid=v17 StreamSubscription.pause<0>, v8)
ParallelMove  goto:30 B5
B4
B5
ParallelMove r0 <- C
DartReturn:34(v0)
CheckStackOverflowSlowPath
B0
B5
Enter frame
ParallelMove r3 <- r1, r0 <- r3, fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C
v5 <- AllocateObject:10(cls=_Future, v0) T{_Future}
ParallelMove r1 <- r0, r0 <- C
ParallelMove fp[-4] <- r1
StoreField(v5 T{_Future} . _state@4048458 = v29 T{_Smi} <int64>, NoStoreBarrier)
v27 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r1 <- r0, r0 <- fp[-4]
StoreField(v5 T{_Future} . _zone@4048458 = v27, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v2 . addStreamFuture = v5)
ParallelMove r2 <- fp[-2]
v30 <- LoadClassId(v3) int64
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r0
v6 <- DispatchTableCall( cid=v30 _EventSink._add<0>, v3) T{*?}
ParallelMove r4 <- r0, r3 <- fp[-1]
ParallelMove fp[-4] <- r4
v8 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r4, r2 <- r2, r1 <- C
t1 <- AssertAssignable:16(v6 T{*}, v7, '', instantiator_type_args(v8), function_type_args(v0)) T{_Closure}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-2]
v31 <- LoadClassId(v3) int64
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r0
v12 <- DispatchTableCall( cid=v31 _EventSink._addError<0>, v3) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-5] <- r3
t1 <- AssertAssignable:38(v12 T{*}, v13, '', instantiator_type_args(v0), function_type_args(v0)) T{_Closure}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-2]
v32 <- LoadClassId(v3) int64
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r1
v15 <- DispatchTableCall( cid=v32 _EventSink._close<0>, v3) T{*?}
ParallelMove r0 <- r0, r1 <- fp[-3]
v33 <- LoadClassId(<non-smi> v4) int64
ParallelMove r0 <- r2, r1 <- r1, r2 <- fp[-4], r3 <- C, r5 <- r0, r6 <- fp[-5]
v16 <- DispatchTableCall( cid=v33 Stream.listen<0>, v4, v6 T{_Closure}, v10 T{bool}, v15 T{*}, v12 T{_Closure}) T{*?}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v2 . addSubscription = v16 T{StreamSubscription<X0>})
ParallelMove r0 <- C
DartReturn:46(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v21 <- LoadField(v2 T{_StreamController<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v21, v39) goto (3, 4)
B3
ParallelMove r1 <- r0
v8 <- StaticCall:20( _ensureDoneFuture@4048458<0> v2, using unchecked entrypoint, result_type = T{_Future}) T{_Future}
ParallelMove r0 <- r0
DartReturn:22(v8)
B4
Branch if RelationalOp(>=, v21 T{int}, v39 T{_Smi}) T{bool} goto (5, 6)
B6
ParallelMove r1 <- r0
StaticCall:42( _closeUnchecked@4048458<0> v2, using unchecked entrypoint)
ParallelMove r1 <- fp[-1]
v6 <- StaticCall:44( _ensureDoneFuture@4048458<0> v2, using unchecked entrypoint, result_type = T{_Future}) T{_Future}
ParallelMove r0 <- r0
DartReturn:46(v6)
B5
ParallelMove r1 <- fp[-1]
v7 <- StaticCall:36( _badEventState@4048458<0> v2, using unchecked entrypoint) T{Error}
ParallelMove r0 <- r0
Throw:38(v7)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
v5 <- BinaryInt64Op(| [tr], v3, v69 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_StreamController<X0>} . _state@4048458 = v5 T{int} <int64>)
Branch if TestInt(v5, v70) goto (3, 4)
B3
v24 <- LoadClassId(v2) [445, 446] int64
Branch if EqualityCompare:26(v24 == v25) goto (9, 14)
B9
ParallelMove r1 <- r1
v15 <- StaticCall:10( get:_subscription@4048458<0> v2 T{_SyncStreamController}, result_type = T{!null}) T{_ControllerSubscription<X0>}
ParallelMove r1 <- r0
StaticCall:12( _close@4048458<0> v15, using unchecked entrypoint)
ParallelMove  goto:14 B15
B14
ParallelMove r1 <- r1
v21 <- StaticCall:10( get:_subscription@4048458<0> v2 T{_AsyncStreamController}, result_type = T{!null}) T{_ControllerSubscription<X0>}
ParallelMove r1 <- r0, r2 <- C
StaticCall:12( _addPending@4048458<0> v21, v10 T{_DelayedDone}, using unchecked entrypoint)
ParallelMove  goto:14 B15
B15
B4
Branch if TestInt(v5, v72) goto (5, 6)
B5
ParallelMove r1 <- r1
v9 <- StaticCall:40( _ensurePendingEvents@4048458<0> v2, using unchecked entrypoint, result_type = T{_PendingEvents}) T{_PendingEvents}
ParallelMove r1 <- r0, r2 <- C
StaticCall:42( add<0> v9, v10, using unchecked entrypoint)
ParallelMove  goto:48 B7
B6
B7
B8
ParallelMove r0 <- C
DartReturn:58(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
v51 <- LoadField(v2 T{_StreamController<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v51, v73) goto (3, 7)
B3
v16 <- LoadField(v2 . _varData@4048458) T{Object??}
Branch if StrictCompare:22(===, v16, v0) goto (4, 5)
B4
v20 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r1 <- r1
v21 <- AllocateObject:28(cls=_PendingEvents, v20) T{_PendingEvents}
ParallelMove r1 <- r0, r3 <- C
StoreField(v21 T{_PendingEvents} . _state@4048458 = v74 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r0 <- r1, r2 <- fp[-1]
StoreField(v2 T{_StreamController<X0>} . _varData@4048458 = v21 T{_PendingEvents})
ParallelMove r3 <- r1 goto:38 B6
B5
ParallelMove r2 <- r0
ParallelMove r3 <- r1 goto:40 B6
B6
ParallelMove fp[-2] <- r3
v18 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r3, r2 <- r0, r1 <- C
t0 <- AssertAssignable:42(v17, v11, '', instantiator_type_args(v18), function_type_args(v0)) T{_PendingEvents}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-2]
DartReturn:44(v17 T{_PendingEvents})
B7
ParallelMove r2 <- r0, r3 <- C
v5 <- LoadField(v2 . _varData@4048458) T{Object??}
ParallelMove fp[-3] <- r4
v7 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r4, r2 <- r5, r1 <- C, fp[-2] <- r5
t0 <- AssertAssignable:50(v5, v6, '', instantiator_type_args(v7), function_type_args(v0)) T{_StreamControllerAddStreamState}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-3]
v9 <- LoadField(v5 T{_StreamControllerAddStreamState} . _varData@4048458) T{*?}
Branch if StrictCompare:54(===, v9, v0) goto (8, 9)
B8
ParallelMove r1 <- fp[-2]
v15 <- AllocateObject:60(cls=_PendingEvents, v7 T{TypeArguments}) T{_PendingEvents}
ParallelMove r1 <- r0, r0 <- C
StoreField(v15 T{_PendingEvents} . _state@4048458 = v74 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r0 <- r1, r2 <- fp[-3]
StoreField(v5 T{_StreamControllerAddStreamState} . _varData@4048458 = v15 T{_PendingEvents})
ParallelMove r3 <- r1 goto:70 B10
B9
ParallelMove r3 <- r1 goto:72 B10
B10
ParallelMove r0 <- r3, r2 <- fp[-2], r1 <- C, fp[-1] <- r3
t0 <- AssertAssignable:74(v10, v11, '', instantiator_type_args(v7 T{TypeArguments}), function_type_args(v0)) T{_PendingEvents}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:76(v10 T{_PendingEvents})
B0
B1
Enter frame
ParallelMove r3 <- r1, fp[-2] <- r1
v3 <- LoadField(v2 . _varData@4048458) T{Object??}
ParallelMove fp[-1] <- r4
v17 <- LoadField(v2 T{_StreamController<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v17, v31) goto (3, 4)
B3
ParallelMove r0 <- r4, r2 <- C, r1 <- C
t0 <- AssertAssignable:22(v3, v10, '', instantiator_type_args(v0), function_type_args(v0)) T{_StreamControllerAddStreamState}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
v12 <- LoadField(v3 T{_StreamControllerAddStreamState} . _varData@4048458) T{*?}
ParallelMove r3 <- r1 goto:30 B5
B4
ParallelMove r0 <- r4
ParallelMove r3 <- r0 goto:32 B5
B5
ParallelMove fp[-1] <- r3
v8 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r3, r2 <- r2, r1 <- C
t0 <- AssertAssignable:34(v6, v7, '', instantiator_type_args(v8), function_type_args(v0)) T{_ControllerSubscription<X0>}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:36(v6 T{_ControllerSubscription<X0>})
B0
B1
Enter frame
ParallelMove fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _doneFuture@4048458) T{_Future?}
Branch if StrictCompare:12(===, v3, v0) goto (3, 7)
B3
v32 <- LoadField(v2 T{_StreamController<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v32, v52) goto (4, 5)
B4
v27 <- LoadStaticField:4(_nullFuture@4048458, CallsInitializer) T{_Future}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:38 B6
B5
ParallelMove r1 <- C
v8 <- AllocateObject:32(cls=_Future, v7) T{_Future}
ParallelMove r1 <- r0, r0 <- C
ParallelMove fp[-2] <- r1
StoreField(v8 T{_Future} . _state@4048458 = v53 T{_Smi} <int64>, NoStoreBarrier)
v41 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r0 <- r0, r1 <- fp[-2]
StoreField(v8 T{_Future} . _zone@4048458 = v41, NoStoreBarrier)
ParallelMove r2 <- r1 goto:40 B6
B6
ParallelMove r0 <- r2
StoreField(v2 T{_StreamController<X0>} . _doneFuture@4048458 = v9 T{_Future})
ParallelMove r0 <- r2 goto:48 B8
B7
B8
ParallelMove r0 <- r0
DartReturn:52(v4)
CheckStackOverflowSlowPath
B0
B16
Enter frame
ParallelMove fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v33 <- LoadField(v2 T{_StreamController<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>=, v33, v46 T{_Smi}) T{bool} goto (3, 4)
B4
v39 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r1 <- fp[-1], r2 <- fp[-2], r3 <- fp[-3]
StaticCall:32( _addError@4048458<0> v2, v3, v4, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:34(v0)
B3
ParallelMove r1 <- fp[-1]
v9 <- StaticCall:22( _badEventState@4048458<0> v2, using unchecked entrypoint) T{Error}
ParallelMove r0 <- r0
Throw:24(v9)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-1] <- r2, fp[-2] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v56 <- LoadField(v2 T{_StreamController<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v56, v93) goto (3, 4)
B3
v31 <- LoadClassId(v2) [445, 446] int64
Branch if EqualityCompare:20(v31 == v32) goto (9, 14)
B9
ParallelMove r1 <- r1
v18 <- StaticCall:10( get:_subscription@4048458<0> v2 T{_SyncStreamController}, result_type = T{!null}) T{_ControllerSubscription<X0>}
ParallelMove r1 <- r0, r2 <- fp[-1], r3 <- fp[-2]
StaticCall:12( _addError@4048458<0> v18, v3 T{Object}, v4 T{StackTrace}, using unchecked entrypoint)
ParallelMove  goto:14 B15
B14
ParallelMove r0 <- r3
ParallelMove r1 <- r1
v28 <- StaticCall:10( get:_subscription@4048458<0> v2 T{_AsyncStreamController}, result_type = T{!null}) T{_ControllerSubscription<X0>}
ParallelMove r1 <- C, r0 <- r0
ParallelMove fp[-3] <- r0
v29 <- AllocateObject:12(cls=_DelayedError, v0 T{Null?}) T{_DelayedError}
ParallelMove r0 <- r0, r2 <- fp[-1]
StoreField(v29 T{_DelayedError} . error = v3 T{Object}, NoStoreBarrier)
ParallelMove r3 <- fp[-2]
StoreField(v29 T{_DelayedError} . stackTrace = v4 T{StackTrace}, NoStoreBarrier)
ParallelMove r1 <- fp[-3], r2 <- r0
StaticCall:16( _addPending@4048458<0> v28, v29, using unchecked entrypoint)
ParallelMove  goto:18 B15
B15
B4
Branch if TestInt(v56, v95) goto (5, 6)
B5
ParallelMove r1 <- r1
v8 <- StaticCall:34( _ensurePendingEvents@4048458<0> v2, using unchecked entrypoint, result_type = T{_PendingEvents}) T{_PendingEvents}
ParallelMove r1 <- C, r0 <- r0
ParallelMove fp[-3] <- r0
v9 <- AllocateObject:36(cls=_DelayedError, v0) T{_DelayedError}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v9 T{_DelayedError} . error = v3 T{Object}, NoStoreBarrier)
ParallelMove r0 <- fp[-2]
StoreField(v9 T{_DelayedError} . stackTrace = v4 T{StackTrace}, NoStoreBarrier)
ParallelMove r1 <- fp[-3], r2 <- r1
StaticCall:40( add<0> v8, v9, using unchecked entrypoint)
ParallelMove  goto:46 B7
B6
B7
B8
ParallelMove r0 <- C
DartReturn:56(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v29 <- LoadField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v29, v52) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:20(v0)
B4
Branch if RelationalOp(<, v29 T{int}, v54 T{_Smi}) T{bool} goto (5, 6)
B5
ParallelMove r1 <- r0, r2 <- r2, r3 <- r3
StaticCall:34( _sendError@4048458<0> v2, v3, v4, using unchecked entrypoint)
ParallelMove  goto:46 B7
B6
ParallelMove r1 <- C
v8 <- AllocateObject:38(cls=_DelayedError, v0) T{_DelayedError}
ParallelMove r1 <- r0, r0 <- fp[-2]
StoreField(v8 T{_DelayedError} . error = v3 T{Object}, NoStoreBarrier)
ParallelMove r0 <- fp[-3]
StoreField(v8 T{_DelayedError} . stackTrace = v4 T{StackTrace}, NoStoreBarrier)
ParallelMove r1 <- fp[-1], r2 <- r1
StaticCall:42( _addPending@4048458<0> v2, v8, using unchecked entrypoint)
ParallelMove  goto:48 B7
B7
ParallelMove r0 <- C
DartReturn:50(v0)
CheckStackOverflowSlowPath
B0
B5
Enter frame
ParallelMove r4 <- r1, r3 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v5 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r3, r2 <- r2, r1 <- C
t0 <- AssertAssignable:10(v3, v4, 'value', instantiator_type_args(v5), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-1]
v14 <- LoadField(v2 T{_StreamController<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>=, v14, v23 T{_Smi}) T{bool} goto (3, 4)
B4
ParallelMove r1 <- r1, r2 <- fp[-2]
StaticCall:28( _add@4048458<0> v2, v3 T{X0?}, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:30(v0)
B3
ParallelMove r1 <- r1
v9 <- StaticCall:22( _badEventState@4048458<0> v2, using unchecked entrypoint) T{Error}
ParallelMove r0 <- r0
Throw:24(v9)
CheckStackOverflowSlowPath
B0
B9
Enter frame
ParallelMove r4 <- r1, r3 <- r2, fp[-2] <- r1, fp[-3] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v5 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r3, r2 <- r5, r1 <- C, fp[-1] <- r5
t0 <- AssertAssignable:10(v3, v4, 'value', instantiator_type_args(v5), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-2]
v54 <- LoadField(v2 T{_StreamController<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v54, v92) goto (3, 4)
B3
v31 <- LoadClassId(v2) [445, 446] int64
Branch if EqualityCompare:22(v31 == v32) goto (11, 16)
B11
ParallelMove r1 <- r1
v19 <- StaticCall:10( get:_subscription@4048458<0> v2 T{_SyncStreamController}, result_type = T{!null}) T{_ControllerSubscription<X0>}
ParallelMove r1 <- r0, r2 <- fp[-3]
StaticCall:12( _add@4048458<0> v19, v3 T{X0?})
ParallelMove  goto:14 B17
B16
ParallelMove r0 <- fp[-3]
ParallelMove r1 <- r1
v27 <- StaticCall:10( get:_subscription@4048458<0> v2 T{_AsyncStreamController}, result_type = T{!null}) T{_ControllerSubscription<X0>}
ParallelMove r1 <- fp[-1], r0 <- r0
ParallelMove fp[-4] <- r0
v29 <- AllocateObject:12(cls=_DelayedData, v5 T{TypeArguments}) T{_DelayedData}
ParallelMove r0 <- r0, r2 <- fp[-3]
StoreField(v29 T{_DelayedData} . value = v3 T{X0?}, NoStoreBarrier)
ParallelMove r1 <- fp[-4], r2 <- r0
StaticCall:16( _addPending@4048458<0> v27, v29, using unchecked entrypoint)
ParallelMove  goto:18 B17
B17
B4
ParallelMove r2 <- fp[-3]
Branch if TestInt(v54, v94) goto (5, 6)
B5
ParallelMove r1 <- r1
v10 <- StaticCall:36( _ensurePendingEvents@4048458<0> v2, using unchecked entrypoint, result_type = T{_PendingEvents}) T{_PendingEvents}
ParallelMove r1 <- fp[-1], r0 <- r0
ParallelMove fp[-1] <- r0
v12 <- AllocateObject:38(cls=_DelayedData, v5 T{TypeArguments}) T{_DelayedData}
ParallelMove r1 <- r0, r0 <- fp[-3]
StoreField(v12 T{_DelayedData} . value = v3 T{X0?}, NoStoreBarrier)
ParallelMove r1 <- fp[-1], r2 <- r1
StaticCall:42( add<0> v10, v12, using unchecked entrypoint)
ParallelMove  goto:48 B7
B6
B7
B8
ParallelMove r0 <- C
DartReturn:58(v0)
CheckStackOverflowSlowPath
B0
B8
Enter frame
ParallelMove r4 <- r1, r3 <- r2, fp[-2] <- r1, fp[-3] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v5 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r3, r2 <- r5, r1 <- C, fp[-1] <- r5
t0 <- AssertAssignable:10(v3, v4, 'data', instantiator_type_args(v5), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-2]
v30 <- LoadField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v30, v54) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:22(v0)
B4
Branch if RelationalOp(<, v30 T{int}, v56 T{_Smi}) T{bool} goto (5, 6)
B5
ParallelMove r1 <- r0, r2 <- fp[-3]
StaticCall:36( _sendData@4048458<0> v2, v3 T{X0?}, using unchecked entrypoint)
ParallelMove  goto:48 B7
B6
ParallelMove r2 <- fp[-3]
ParallelMove r1 <- fp[-1]
v11 <- AllocateObject:40(cls=_DelayedData, v5 T{TypeArguments}) T{_DelayedData}
ParallelMove r1 <- r0, r0 <- fp[-3]
StoreField(v11 T{_DelayedData} . value = v3 T{X0?}, NoStoreBarrier)
ParallelMove r1 <- fp[-2], r2 <- r1
StaticCall:44( _addPending@4048458<0> v2, v11, using unchecked entrypoint)
ParallelMove  goto:50 B7
B7
ParallelMove r0 <- C
DartReturn:52(v0)
CheckStackOverflowSlowPath
B0
B6
Enter frame
ParallelMove r3 <- r1, r0 <- r2, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v5 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r0, r2 <- r4, r1 <- C, fp[-1] <- r4
t0 <- AssertAssignable:10(v3, v4, 'subscription', instantiator_type_args(v5), function_type_args(v0)) T{StreamSubscription<X0>}
AssertAssignable for compile-time type
TTSCall
ParallelMove r3 <- fp[-2]
v18 <- LoadField(v2 T{_StreamController<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v18, v33) goto (3, 4)
B3
v10 <- LoadField(v2 . _varData@4048458) T{Object??}
ParallelMove r0 <- r4, r2 <- fp[-1], r1 <- C, fp[-3] <- r4
t0 <- AssertAssignable:24(v10, v11, '', instantiator_type_args(v5 T{TypeArguments}), function_type_args(v0)) T{_StreamControllerAddStreamState}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-3]
StaticCall:26( resume<0> v10 T{_StreamControllerAddStreamState}, using unchecked entrypoint)
ParallelMove  goto:32 B5
B4
B5
v9 <- LoadField(v2 . onResume) T{((dynamic) => void)??}
ParallelMove r1 <- r1
StaticCall:38( _runGuarded@4048458<0> v9)
ParallelMove r0 <- C
DartReturn:40(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . addSubscription {final}) T{StreamSubscription<dynamic>}
v4 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r1, r1 <- r0
DispatchTableCall( cid=v4 StreamSubscription.resume<0>, v3)
ParallelMove r0 <- C
DartReturn:14(v0)
CheckStackOverflowSlowPath
B0
B6
Enter frame
ParallelMove r3 <- r1, r0 <- r2, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v5 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r0, r2 <- r4, r1 <- C, fp[-1] <- r4
t0 <- AssertAssignable:10(v3, v4, 'subscription', instantiator_type_args(v5), function_type_args(v0)) T{StreamSubscription<X0>}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-2]
v17 <- LoadField(v2 T{_StreamController<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v17, v32) goto (3, 4)
B3
v9 <- LoadField(v2 . _varData@4048458) T{Object??}
ParallelMove r0 <- r3, r2 <- fp[-1], r1 <- C, fp[-3] <- r3
t0 <- AssertAssignable:24(v9, v10, '', instantiator_type_args(v5 T{TypeArguments}), function_type_args(v0)) T{_StreamControllerAddStreamState}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-3]
StaticCall:26( pause<0> v9 T{_StreamControllerAddStreamState}, using unchecked entrypoint)
ParallelMove  goto:32 B5
B4
B5
ParallelMove r1 <- C
StaticCall:38( _runGuarded@4048458<0> v0)
ParallelMove r0 <- C
DartReturn:40(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . addSubscription {final}) T{StreamSubscription<dynamic>}
v4 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r1, r1 <- r0
DispatchTableCall( cid=v4 StreamSubscription.pause<0>, v3)
ParallelMove r0 <- C
DartReturn:14(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r2 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . controller) T{StreamController<X0>}
v56 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r1
v4 <- DispatchTableCall( cid=v56 StreamController.isClosed<0>, v3) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:16(===, v4 T{bool}, v5) goto (3, 4)
BoolTest
B3
ParallelMove r0 <- C
DartReturn:22(v0)
B4
ParallelMove r0 <- fp[-1]
v6 <- LoadField(v2 . cancellationFuture) T{_Future?}
Branch if StrictCompare:28(===, v6, v0) goto (5, 9)
B5
ParallelMove r1 <- C
v8 <- AllocateObject:34(cls=_Future, v0) T{_Future}
ParallelMove r1 <- r0, r0 <- C
ParallelMove fp[-2] <- r1
StoreField(v8 T{_Future} . _state@4048458 = v42 T{_Smi} <int64>, NoStoreBarrier)
v27 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r1 <- r0, r0 <- fp[-2]
StoreField(v8 T{_Future} . _zone@4048458 = v27, NoStoreBarrier)
ParallelMove r0 <- r0, r2 <- fp[-1]
StoreField(v2 T{_AsyncStarStreamController} . cancellationFuture = v8 T{_Future})
v9 <- LoadField(v2 . isSuspendedAtYield) T{bool}
Branch if StrictCompare:44(===, v9 T{bool}, v5) goto (6, 7)
BoolTest
B6
ParallelMove r1 <- r2
StaticCall:50( scheduleGenerator<0> v2, using unchecked entrypoint)
ParallelMove  goto:56 B8
B7
B8
B9
B10
v7 <- LoadField(v2 . cancellationFuture) T{_Future?}
ParallelMove r0 <- r0
DartReturn:70(v7)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r2 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . isScheduled) T{bool}
Branch if StrictCompare:14(===, v3 T{bool}, v4) goto (6, 3)
BoolTest
B6
B3
v5 <- LoadField(v2 . controller) T{StreamController<X0>}
v46 <- LoadClassId(<non-smi> v5) int64
ParallelMove r0 <- r0, r1 <- r1
v6 <- DispatchTableCall( cid=v46 StreamController.isPaused<0>, v5) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:24(===, v6 T{bool}, v4) goto (7, 4)
BoolTest
B7
B4
ParallelMove r2 <- fp[-1]
v7 <- LoadField(v2 . isAdding) T{bool}
Branch if StrictCompare:34(===, v7 T{bool}, v4) goto (8, 9)
BoolTest
B8
B5
ParallelMove r0 <- C
DartReturn:54(v0)
B9
ParallelMove r0 <- C
StoreField(v2 T{_AsyncStarStreamController} . isScheduled = v4 T{bool})
ParallelMove r1 <- C, r2 <- r2
v20 <- AllocateClosure:6(v21 T{Function}, v2 T{_AsyncStarStreamController}) T{_Closure}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v20)
StaticCall:62( scheduleMicrotask<0> v20)
ParallelMove r0 <- C
DartReturn:64(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- C
CheckStackOverflow:8(stack=0, loop=0)
StoreField(v2 T{_AsyncStarStreamController} . isScheduled = v3 T{bool})
StoreField(v2 T{_AsyncStarStreamController} . isSuspendedAtYield = v3 T{bool})
v4 <- LoadField(v2 . asyncStarBody) T{((dynamic, Object?) => void)??}
ParallelMove fp[-1] <- r2
CheckNull:16(v4, CastError) T{((dynamic, Object?) => void)?}
v5 <- LoadField(v2 . controller) T{StreamController<X0>}
v22 <- LoadClassId(<non-smi> v5) int64
ParallelMove r0 <- r1, r1 <- r0
v6 <- DispatchTableCall( cid=v22 StreamController.hasListener<0>, v5) T{bool}
ParallelMove r0 <- r0
v7 <- BooleanNegate(v6 T{bool}) T{bool}
MoveArgument(sp[1] <- v4 T{((dynamic, Object?) => void)?})
MoveArgument(sp[0] <- v7)
ParallelMove r0 <- fp[-1]
v8 <- ClosureCall:26( closure=v4 T{((dynamic, Object?) => void)?}<0>, v4 T{((dynamic, Object?) => void)?}, v7) T{*?}
ParallelMove r0 <- C
DartReturn:28(v0)
CheckStackOverflowSlowPath
slow path check null (cast) operation
B0
B1
Enter frame
ParallelMove r3 <- fp[3]
v5 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- fp[2], r2 <- r2, r1 <- C
AssertAssignable:4(v3, v4, 'value', instantiator_type_args(v5), function_type_args(v0)) T{StreamController<X0>}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[2], r1 <- fp[3]
StoreField(v2 . controller = v3 T{StreamController<X0>})
ParallelMove r0 <- C
DartReturn:6(v0)
B0
B1
Enter frame
ParallelMove fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- AllocateContext:10(num_variables=1) T{Context}
ParallelMove r2 <- r0, r0 <- fp[-1]
ParallelMove fp[-2] <- r2
StoreField(v3 . this = v2, NoStoreBarrier)
v4 <- LoadField(v2 . addSubscription {final}) T{StreamSubscription<dynamic>}
v9 <- LoadClassId(<non-smi> v4) int64
ParallelMove r0 <- r0, r1 <- r1
v5 <- DispatchTableCall( cid=v9 StreamSubscription.cancel<0>, v4) T{_Future}
ParallelMove r1 <- C, r2 <- fp[-2], r0 <- r0
ParallelMove fp[-1] <- r0
v7 <- AllocateClosure:16(v6, v3) T{_Closure}
ParallelMove r1 <- fp[-1], r2 <- r0
v8 <- StaticCall:18( whenComplete<0> v5 T{_Future}, v7, using unchecked entrypoint, result_type = T{_Future}) T{_Future}
ParallelMove r0 <- r0
DartReturn:20(v8)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v3 . this) T{_AddStreamState<X0>}
v5 <- LoadField(v4 . addStreamFuture {final}) T{_Future}
ParallelMove r1 <- r1, r2 <- C
StaticCall:12( _asyncComplete@4048458<0> v5, v0, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:14(v0)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v3 . this) T{_StreamController<X0>}
v5 <- LoadField(v4 . _doneFuture@4048458) T{_Future?}
Branch if StrictCompare:12(!==, v5, v0) goto (3, 6)
B3
v13 <- LoadField(v5 T{_Future} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v13, v28) goto (4, 7)
B4
ParallelMove r1 <- r1, r2 <- C
StaticCall:28( _asyncComplete@4048458<0> v5 T{_Future}, v0)
ParallelMove  goto:42 B8
B7
B6
B5
B8
ParallelMove r0 <- C
DartReturn:46(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v37 <- LoadField(v2 T{_StreamController<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v37, v54) goto (3, 4)
B3
ParallelMove r1 <- r1
v8 <- StaticCall:20( get:_subscription@4048458<0> v2, result_type = T{!null}) T{_ControllerSubscription<X0>}
ParallelMove r0 <- r0
v26 <- LoadField(v8 T{_ControllerSubscription<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r1
v61 <- IntConverter(int64->uint32[tr], v26) uint32
ParallelMove r2 <- C
v28 <- BinaryUint32Op(& [tr], v61 T{int}, v64 T{_Smi}) [0, 4] uint32
ParallelMove r3 <- r3
v62 <- IntConverter(uint32->int64, v28) int64
v30 <- EqualityCompare(v62 T{_Smi} != v55 T{_Smi}) T{bool}
ParallelMove r0 <- r1 goto:32 B5
B4
ParallelMove r1 <- C
ParallelMove r0 <- r0
v60 <- IntConverter(int64->uint32[tr], v37 T{int}) uint32
v16 <- BinaryUint32Op(& [tr], v60 T{int}, v65 T{_Smi}) [0, 2] uint32
ParallelMove r2 <- r2
v63 <- IntConverter(uint32->int64, v16) int64
v18 <- EqualityCompare(v63 T{_Smi} == v55 T{_Smi}) T{bool}
ParallelMove r0 <- r1 goto:34 B5
B5
ParallelMove r0 <- r0
DartReturn:36(v7)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3, fp[-4] <- r5, fp[-5] <- r6
CheckStackOverflow:8(stack=0, loop=0)
v7 <- AllocateContext:10(num_variables=1) T{Context}
ParallelMove r2 <- r0, r0 <- fp[-1]
ParallelMove fp[-7] <- r2
StoreField(v7 . this = v2, NoStoreBarrier)
v79 <- LoadField(v2 T{_StreamController<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v79, v103) goto (3, 4)
B4
v10 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r1 <- r3, fp[-6] <- r3
v11 <- AllocateObject:30(cls=_ControllerSubscription, v10) T{_ControllerSubscription}
ParallelMove r4 <- r0, r0 <- fp[-1]
ParallelMove fp[-8] <- r4
StoreField(v11 T{_ControllerSubscription} . _controller@4048458 = v2 T{_StreamController<X0>}, NoStoreBarrier)
ParallelMove r1 <- r4, r2 <- fp[-2], r3 <- fp[-3], r5 <- fp[-4], r6 <- fp[-5]
StaticCall:10( _BufferingStreamSubscription@4048458.<0> v11 T{_ControllerSubscription}, v3 T{_Closure}, v4 T{_Closure}, v5 T{_Closure}, v6 T{bool})
ParallelMove r1 <- fp[-1]
v12 <- StaticCall:34( get:_pendingEvents@4048458<0> v2, result_type = T{_PendingEvents?}) T{_PendingEvents?}
ParallelMove r3 <- r0, r1 <- fp[-1]
ParallelMove fp[-3] <- r3
v13 <- LoadField(v2 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
v15 <- BinaryInt64Op(| [tr], v13, v105 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_StreamController<X0>} . _state@4048458 = v15 T{int} <int64>)
Branch if TestInt(v15, v106) goto (5, 6)
B5
v19 <- LoadField(v2 . _varData@4048458) T{Object??}
ParallelMove r0 <- r4, r2 <- fp[-6], r1 <- C, fp[-2] <- r4
t0 <- AssertAssignable:54(v19, v20, '', instantiator_type_args(v10 T{TypeArguments}), function_type_args(v0)) T{_StreamControllerAddStreamState}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-8], r1 <- fp[-2]
StoreField(v19 T{_StreamControllerAddStreamState} . _varData@4048458 = v11 T{_ControllerSubscription})
ParallelMove r1 <- r1
StaticCall:58( resume<0> v19 T{_StreamControllerAddStreamState}, using unchecked entrypoint)
ParallelMove  goto:66 B7
B6
ParallelMove r0 <- fp[-8]
StoreField(v2 T{_StreamController<X0>} . _varData@4048458 = v11 T{_ControllerSubscription})
ParallelMove  goto:68 B7
B7
ParallelMove r1 <- fp[-8], r2 <- fp[-3]
StaticCall:70( _setPendingEvents@4048458<0> v11, v12)
ParallelMove r1 <- C, r2 <- fp[-7]
v18 <- AllocateClosure:72(v17, v7) T{_Closure}
ParallelMove r1 <- fp[-8], r2 <- r0
StaticCall:74( _guardCallback@4048458<0> v11, v18, using unchecked entrypoint)
ParallelMove r0 <- fp[-8]
DartReturn:76(v11)
B3
v23 <- AllocateObject:22(cls=StateError, <not-aliased>) T{StateError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v23 T{StateError} . message = v24 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:26(v23)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- C
ParallelMove r2 <- r1, r1 <- r2, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v16 <- LoadField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- r3
v44 <- IntConverter(int64->uint32[tr], v16) uint32
v18 <- BinaryUint32Op(& [tr], v44 T{int}, v46 T{_Smi}) [0, 4] uint32
ParallelMove r5 <- r5
v45 <- IntConverter(uint32->int64, v18) int64
v20 <- EqualityCompare(v45 T{_Smi} != v41 T{_Smi}) T{bool}
ParallelMove fp[-1] <- r4
v7 <- BinaryInt64Op(| [tr], v16 T{int}, v42 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458 = v7 T{int} <int64>)
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r1
v8 <- ClosureCall:20( closure=v3<0>, v3) T{*?}
ParallelMove r1 <- fp[-2]
v9 <- LoadField(v2 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
v11 <- BinaryInt64Op(& [tr], v9, v36) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458 = v11 T{int} <int64>)
ParallelMove r1 <- r1, r2 <- fp[-1]
StaticCall:30( _checkState@4048458<0> v2, v20 T{bool}, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:32(v0)
CheckStackOverflowSlowPath
B0
B8
Enter frame
ParallelMove r4 <- r1, r3 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v5 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r3, r2 <- r2, r1 <- C
t0 <- AssertAssignable:10(v3, v4, 'pendingEvents', instantiator_type_args(v5), function_type_args(v0)) T{_PendingEvents?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-2]
Branch if StrictCompare:12(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:18(v0)
B4
ParallelMove r2 <- fp[-1]
ParallelMove r0 <- r1
StoreField(v2 T{_BufferingStreamSubscription<X0>} . _pending@4048458 = v3 T{_PendingEvents})
v29 <- LoadField(v3 T{_PendingEvents} . lastPendingEvent) T{_DelayedEvent<dynamic>??}
Branch if StrictCompare:12(!==, v29, v0 T{Null?}) T{bool} goto (5, 6)
B5
v9 <- LoadField(v2 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
v11 <- BinaryInt64Op(| [tr], v9, v37 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458 = v11 T{int} <int64>)
ParallelMove r1 <- r1, r2 <- r2
StaticCall:40( schedule<0> v3 T{_PendingEvents}, v2)
ParallelMove  goto:46 B7
B6
B7
ParallelMove r0 <- C
DartReturn:50(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v20 <- LoadField(v2 T{_StreamController<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v20, v34) goto (3, 4)
B3
v13 <- LoadField(v2 . _varData@4048458) T{Object??}
ParallelMove fp[-1] <- r3
v14 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r3, r2 <- r2, r1 <- C
t0 <- AssertAssignable:22(v13, v10, '', instantiator_type_args(v14), function_type_args(v0)) T{_PendingEvents?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:24(v13 T{_PendingEvents?})
B4
v5 <- LoadField(v2 . _varData@4048458) T{Object??}
ParallelMove fp[-2] <- r3
v7 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r3, r2 <- r4, r1 <- C, fp[-1] <- r4
t0 <- AssertAssignable:30(v5, v6, '', instantiator_type_args(v7), function_type_args(v0)) T{_StreamControllerAddStreamState}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-2]
v9 <- LoadField(v5 T{_StreamControllerAddStreamState} . _varData@4048458) T{*?}
ParallelMove r0 <- r3, r2 <- fp[-1], r1 <- C, fp[-3] <- r3
t0 <- AssertAssignable:34(v9, v10, '', instantiator_type_args(v7 T{TypeArguments}), function_type_args(v0)) T{_PendingEvents?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-3]
DartReturn:36(v9 T{_PendingEvents?})
B0
B1
Enter frame
ParallelMove r3 <- r2, r5 <- r3, r6 <- r5, r7 <- r6, fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3, fp[-4] <- r5, fp[-5] <- r6
CheckStackOverflow:8(stack=0, loop=0)
v13 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r1 <- fp[-1], r2 <- r0, r3 <- fp[-2], r5 <- fp[-3], r6 <- fp[-4], r7 <- fp[-5]
StaticCall:12( _BufferingStreamSubscription@4048458.zoned<0> v2, v13, v3, v4, v5, v6)
ParallelMove r0 <- C
DartReturn:14(v0)
CheckStackOverflowSlowPath
B0
B5
Enter frame
ParallelMove r5 <- r1, r4 <- r2, r1 <- r5, r2 <- r6, fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r5, fp[-4] <- r6
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- r4
StoreField(v2 . _zone@4048458 = v3)
v20 <- IfThenElse(===, v7, v8 ? 1 : 0) [0, 1] T{_Smi}
BoolTest
v22 <- UnboxInt64([non-speculative], v20 T{_Smi}) [0, 1] int64
v12 <- BinaryInt64Op(| [tr], v22 T{_Smi}, v23 T{_Smi}) [0, 63] int64
StoreField(v2 . _state@4048458 = v12 <int64>)
v13 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
MoveArgument(sp[2] <- v13)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v4)
v14 <- StaticCall:28( _registerDataHandler@4048458<1> v13, v3, v4, result_type = T{!null}) T{_Closure}
ParallelMove r0 <- r0, r3 <- fp[-1]
StoreField(v2 . _onData@4048458 = v14)
ParallelMove r1 <- fp[-2], r2 <- fp[-3]
v15 <- StaticCall:30( _registerErrorHandler@4048458<0> v3, v5, result_type = T{!null}) T{_Closure}
ParallelMove r0 <- r0, r3 <- fp[-1]
StoreField(v2 . _onError@4048458 = v15)
ParallelMove r1 <- fp[-2], r2 <- fp[-4]
v16 <- StaticCall:32( _registerDoneHandler@4048458<0> v3, v6, result_type = T{!null}) T{_Closure}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v2 . _onDone@4048458 = v16)
ParallelMove r0 <- C
DartReturn:36(v0)
CheckStackOverflowSlowPath
B0
B1
ParallelMove r0 <- r2
DartReturn:12(v3 T{_Closure})
B0
B1
Enter frame
Branch if StrictCompare:10(===, v3, v0) goto (3, 4)
B3
ParallelMove r3 <- C goto:20 B5
B4
ParallelMove r3 <- r2 goto:22 B5
B5
ParallelMove r0 <- r3, r2 <- C, r1 <- C, fp[-1] <- r3
v7 <- InstanceOf:24(v4 IS (dynamic, Object, StackTrace) => void, instantiator_type_args(v0), function_type_args(v0)) T{bool}
InlineInstanceof
FunctionTypeTest
BoolTest
ParallelMove r0 <- r0
Branch if StrictCompare:28(===, v7 T{bool}, v8) goto (6, 7)
BoolTest
B6
ParallelMove r0 <- fp[-1]
DartReturn:36(v4 T{_Closure})
B7
ParallelMove r0 <- fp[-1], r2 <- C, r1 <- C
v10 <- InstanceOf:40(v4 IS (dynamic, Object) => void, instantiator_type_args(v0), function_type_args(v0)) T{bool}
InlineInstanceof
FunctionTypeTest
BoolTest
ParallelMove r0 <- r0
Branch if StrictCompare:44(===, v10 T{bool}, v8) goto (8, 9)
BoolTest
B8
ParallelMove r0 <- fp[-1]
DartReturn:52(v4 T{_Closure})
B9
v11 <- AllocateObject:56(cls=ArgumentError) T{ArgumentError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v11 T{ArgumentError} . message = v12 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v11 T{ArgumentError} . _hasValue@0150898 = v27 T{bool}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:60(v11)
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[3], r2 <- fp[2]
v6 <- StaticCall:10( _nullErrorHandler@4048458<0> v3, v4) T{void?}
ParallelMove r0 <- r0
DartReturn:12(v6)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v18 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r1 <- fp[-1], r2 <- fp[-2]
StaticCall:10( _rootHandleError@4048458<0> v2 T{Object}, v3 T{StackTrace})
ParallelMove r0 <- C
DartReturn:14(v0)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v3 . this) T{_StreamController<X0>}
v5 <- LoadField(v4 . onListen) T{((dynamic) => void)??}
ParallelMove r1 <- r1
StaticCall:12( _runGuarded@4048458<0> v5)
ParallelMove r0 <- C
DartReturn:14(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r3 <- fp[2]
Branch if StrictCompare:10(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:18(v7)
B4
ParallelMove r0 <- r3, r2 <- C, r1 <- C
v5 <- InstanceOf:22(v3 T{*} IS _ByteBuffer@7027147, instantiator_type_args(v0), function_type_args(v0)) T{bool}
InlineInstanceof
InstantiatedTypeNoArgumentsTest
ParallelMove r0 <- r0
Branch if StrictCompare:26(===, v5 T{bool}, v6) goto (6, 7)
BoolTest
B6
ParallelMove r2 <- fp[3], r1 <- fp[2]
v9 <- LoadField(v2 . _data@7027147 {final}) T{_TypedList}
v10 <- LoadField(v3 T{_ByteBuffer} . _data@7027147 {final}) T{_TypedList}
v11 <- StrictCompare:36(===, v9, v10) T{bool}
ParallelMove r0 <- r1 goto:38 B5
B7
ParallelMove r0 <- C goto:42 B5
B5
ParallelMove r0 <- r0
DartReturn:44(v8)
B0
B1
Intrinsic
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
Branch if StrictCompare:10(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:18(v5)
B4
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v3 T{*})
v4 <- StaticCall:20( ==<0> v2, v3 T{*}, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
DartReturn:22(v4)
CheckStackOverflowSlowPath
B0
B4
Enter frame
ParallelMove r3 <- fp[3], r2 <- fp[2]
Branch if StrictCompare:20(===, v2, v3 T{*}) goto (5, 6)
B5
ParallelMove r0 <- C
DartReturn:26(v6)
B6
v22 <- LoadClassId(v3 T{*}) [1, 600] int64
Branch if TestRange(v22 in [93-94]) T{bool} goto (7, 15)
B7
v65 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v70 <- LoadField(v3 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v90 <- UnboxInt64([non-speculative], v65 T{_Smi}) [0, 2305843009213693951] int64
v91 <- UnboxInt64([non-speculative], v70 T{_Smi}) [0, 2305843009213693951] int64
Branch if EqualityCompare(v90 T{_Smi} == v91 T{_Smi}) T{bool} goto (8, 16)
B8
v31 <- LoadClassId:90(v2 T{_StringBase}) [93, 94] T{_Smi}
v48 <- LoadClassId:90(v3 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove r8 <- C goto:90 B13
B13
  Loop 0
  Loop Header
CheckStackOverflow:94(stack=0, loop=1)
Branch if RelationalOp(<, v13, v90 T{_Smi}) T{bool} goto (9, 10)
B9
  Loop 0
Branch if StrictCompare:70(===, v31, v39 T{_Smi}) goto (20, 21)
B20
  Loop 0
v35 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v13 T{int}) [0, 255] int64
ParallelMove r9 <- r9 goto:70 B19
B21
  Loop 0
v33 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v13 T{int}) [0, 65535] int64
ParallelMove r9 <- r9 goto:70 B19
B19
  Loop 0
ParallelMove r0 <- r4, r1 <- r8
t0 <- GenericCheckBound:72(v91 T{_Smi}, v13 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:72(===, v48, v39 T{_Smi}) goto (25, 26)
B25
  Loop 0
v52 <- LoadIndexed([_OneByteString] v3 T{_OneByteString}, v13 T{int}) [0, 255] int64
ParallelMove r1 <- r1 goto:72 B24
B26
  Loop 0
v50 <- LoadIndexed([_TwoByteString] v3 T{_StringBase}, v13 T{int}) [0, 65535] int64
ParallelMove r1 <- r1 goto:72 B24
B24
  Loop 0
Branch if EqualityCompare(v34 T{_Smi} != v51 T{_Smi}) T{bool} goto (11, 12)
B12
  Loop 0
v19 <- BinaryInt64Op(+ [tr], v13 T{int}, v98 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r8 <- r0 goto:92 B13
B11
ParallelMove r0 <- C
DartReturn:84(v7)
B10
ParallelMove r0 <- C
DartReturn:96(v6)
B16
B15
B14
ParallelMove r0 <- C
DartReturn:108(v7)
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Intrinsic
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
Branch if StrictCompare:10(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:18(v5)
B4
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v3 T{*})
v4 <- StaticCall:20( ==<0> v2, v3 T{*}, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
DartReturn:22(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
Branch if StrictCompare:10(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:18(v7)
B4
v14 <- LoadClassId(v3 T{*}) [1, 600] int64
Branch if EqualityCompare(v14 == v15) T{bool} goto (6, 7)
B6
MoveArgument(sp[0] <- v2)
v9 <- StaticCall:32( _get_id@1026248<0> v2, using unchecked entrypoint) T{*?}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
MoveArgument(sp[0] <- v3 T{_SendPort})
v10 <- StaticCall:34( _get_id@1026248<0> v3 T{_SendPort}, using unchecked entrypoint) T{*?}
ParallelMove r1 <- r0, r0 <- fp[-1]
v25 <- LoadClassId(v9) int64
MoveArgument(sp[1] <- v9)
MoveArgument(sp[0] <- v10)
ParallelMove r0 <- r2
v11 <- DispatchTableCall( cid=v25 Object.==<0>, v9, v10) T{bool}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:40 B5
B7
ParallelMove r0 <- C goto:44 B5
B5
ParallelMove r0 <- r0
DartReturn:46(v8)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
Branch if StrictCompare:10(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:18(v7)
B4
v14 <- LoadClassId(v3 T{*}) [1, 600] int64
Branch if EqualityCompare(v14 == v15) T{bool} goto (6, 7)
B6
MoveArgument(sp[0] <- v2)
v9 <- StaticCall:32( _get_id@1026248<0> v2, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
MoveArgument(sp[0] <- v3 T{_RawReceivePort})
v10 <- StaticCall:34( _get_id@1026248<0> v3 T{_RawReceivePort}, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0, r1 <- fp[-1]
v20 <- UnboxInt64([non-speculative], v9) [-9223372036854775808, 9223372036854775807] int64
v21 <- UnboxInt64([non-speculative], v10) [-9223372036854775808, 9223372036854775807] int64
v11 <- EqualityCompare(v20 T{int} == v21 T{int}) T{bool}
ParallelMove r0 <- r3 goto:40 B5
B7
ParallelMove r0 <- C goto:44 B5
B5
ParallelMove r0 <- r0
DartReturn:46(v8)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
Branch if StrictCompare:10(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:18(v7)
B4
v12 <- LoadClassId(v3 T{*}) [1, 600] int64
Branch if EqualityCompare(v12 == v13) T{bool} goto (6, 7)
B6
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v3 T{_Capability})
v9 <- StaticCall:32( _equals@1026248<0> v2, v3 T{_Capability}, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:36 B5
B7
ParallelMove r0 <- C goto:40 B5
B5
ParallelMove r0 <- r0
DartReturn:42(v8)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
Branch if StrictCompare:10(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:18(v10)
B4
v13 <- LoadClassId(v3 T{*}) [1, 600] int64
Branch if EqualityCompare(v13 != v14) T{bool} goto (5, 6)
B5
ParallelMove r0 <- C
DartReturn:30(v10)
B6
MoveArgument(sp[0] <- v2)
v7 <- StaticCall:34( getHandle<0> v2, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
MoveArgument(sp[0] <- v3 T{DynamicLibrary})
v8 <- StaticCall:36( getHandle<0> v3 T{DynamicLibrary}, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0, r1 <- fp[-1]
v19 <- UnboxInt64([non-speculative], v7) [-9223372036854775808, 9223372036854775807] int64
v20 <- UnboxInt64([non-speculative], v8) [-9223372036854775808, 9223372036854775807] int64
v9 <- EqualityCompare(v19 T{int} == v20 T{int}) T{bool}
ParallelMove r0 <- r0
DartReturn:40(v9)
CheckStackOverflowSlowPath
B0
B1
ParallelMove r1 <- sp[0]
Branch if StrictCompare:10(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:18(v10)
B4
v13 <- LoadClassId(v3 T{*}) [1, 600] int64
Branch if EqualityCompare(v13 != v14) T{bool} goto (5, 6)
B5
ParallelMove r0 <- C
DartReturn:30(v10)
B6
ParallelMove r2 <- sp[1]
v20 <- LoadField(v2 T{Pointer} . PointerBase.data {final}) untagged
ParallelMove r3 <- r3
v21 <- IntConverter(untagged->int64[tr], v20) [-9223372036854775808, 9223372036854775807] int64
v28 <- LoadField(v3 T{Pointer} . PointerBase.data {final}) untagged
ParallelMove r2 <- r2
v29 <- IntConverter(untagged->int64[tr], v28) [-9223372036854775808, 9223372036854775807] int64
v9 <- EqualityCompare(v21 T{int} == v29 T{int}) T{bool}
ParallelMove r0 <- r0
DartReturn:40(v9)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
Branch if StrictCompare:10(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:18(v19)
B4
ParallelMove r2 <- fp[3]
Branch if StrictCompare:20(===, v2, v3 T{*}) goto (5, 6)
B5
ParallelMove r0 <- C
DartReturn:26(v6)
B6
v22 <- LoadClassId(v3 T{*}) [1, 600] int64
Branch if EqualityCompare(v22 != v23) T{bool} goto (7, 8)
B7
ParallelMove r0 <- C
DartReturn:40(v19)
B8
v50 <- LoadField(v2 T{_Record} . Record.shape {final}) [0, 4611686018427387903] T{_Smi}
v55 <- LoadField(v3 T{_Record} . Record.shape {final}) [0, 4611686018427387903] T{_Smi}
Branch if StrictCompare(!==, v50 T{_Smi}, v55 T{_Smi}) T{bool} goto (9, 10)
B9
ParallelMove r0 <- C
DartReturn:58(v19)
B10
v44 <- BinarySmiOp:10(& [-o], v50 T{_Smi}, v45 T{_Smi}) [0, 65535] T{_Smi}
v76 <- UnboxInt64:98([non-speculative], v44) [0, 65535] int64
ParallelMove fp[-2] <- r4
ParallelMove r3 <- C goto:98 B15
B15
  Loop 0
  Loop Header
ParallelMove fp[-1] <- r3
CheckStackOverflow:102(stack=0, loop=1)
Branch if RelationalOp(<, v12, v76 T{_Smi}) T{bool} goto (11, 12)
B11
  Loop 0
v83 <- LoadIndexed([_Record] v2 T{_Record}, v12 T{int}) T{*?}
v84 <- LoadIndexed([_Record] v3 T{_Record}, v12 T{int}) T{*?}
v105 <- LoadClassId(v83 T{Object??}) int64
MoveArgument(sp[1] <- v83 T{Object??})
MoveArgument(sp[0] <- v84 T{Object??})
ParallelMove r0 <- r6
v16 <- DispatchTableCall( cid=v105 Object.==<0>, v83 T{Object??}, v84 T{Object??}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:86(!==, v16 T{bool}, v6) goto (13, 14)
BoolTest
B14
  Loop 0
ParallelMove r1 <- fp[-1]
v18 <- BinaryInt64Op(+ [tr], v12, v85 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r3, r2 <- fp[3], r1 <- fp[2], r4 <- fp[-2] goto:100 B15
B13
ParallelMove r0 <- C
DartReturn:92(v19)
B12
ParallelMove r0 <- C
DartReturn:104(v6)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
Intrinsic
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
Branch if StrictCompare:10(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:18(v7)
B4
v13 <- LoadClassId(v3 T{*}) [1, 600] int64
Branch if TestRange(v13 in [59-61]) T{bool} goto (6, 7)
B6
v19 <- LoadClassId(v3 T{num}) int64
MoveArgument(sp[0] <- v3 T{num})
ParallelMove r0 <- r1
v9 <- DispatchTableCall( cid=v19 num.toDouble<0>, v3 T{num}) T{_Double}
ParallelMove r0 <- r0
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v9 T{_Double})
v10 <- StaticCall:34( _equal@0150898<0> v2, v9 T{_Double}, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:38 B5
B7
ParallelMove r0 <- C goto:42 B5
B5
ParallelMove r0 <- r0
DartReturn:44(v8)
CheckStackOverflowSlowPath
B0
B1
Intrinsic
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
Branch if StrictCompare:10(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:18(v7)
B4
v11 <- LoadClassId(v3 T{*}) [1, 600] int64
Branch if TestRange(v11 in [59-61]) T{bool} goto (5, 6)
B5
v17 <- LoadClassId(v3 T{num}) int64
MoveArgument(sp[1] <- v3 T{num})
MoveArgument(sp[0] <- v2)
ParallelMove r0 <- r1
v8 <- DispatchTableCall( cid=v17 num._equalToInteger<0>, v3 T{num}, v2) T{bool}
ParallelMove r0 <- r0
DartReturn:32(v8 T{bool})
B6
ParallelMove r0 <- C
DartReturn:36(v7)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r3 <- r1, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v319 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r2
v6 <- DispatchTableCall( cid=v319 Uri.scheme<0>, v3) T{String}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v6 T{_StringBase})
v157 <- StaticCall:10( get:isEmpty<0> v6 T{_StringBase}, recognized_kind = StringBaseIsEmpty, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
v158 <- BooleanNegate(v157 T{bool}) T{bool}
Branch if StrictCompare:16(===, v158 T{bool}, v8) goto (3, 4)
BoolTest
B3
ParallelMove r0 <- fp[-2]
DartReturn:22(v3)
B4
ParallelMove r3 <- fp[-1], r2 <- fp[-2]
v9 <- LoadField(v2 . scheme {final}) T{String}
ParallelMove fp[-3] <- r4
v320 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r2
v10 <- DispatchTableCall( cid=v320 Uri.hasAuthority<0>, v3) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:32(===, v10 T{bool}, v8) goto (5, 6)
BoolTest
B5
ParallelMove r2 <- fp[-2]
v321 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r2, r2 <- fp[-3]
v88 <- DispatchTableCall( cid=v321 Uri.replace<0>, v3, v9) T{Uri}
ParallelMove r0 <- r0
DartReturn:40(v88 T{_Uri})
B6
ParallelMove r3 <- fp[-1], r2 <- fp[-2]
v11 <- LoadField(v2 . _userInfo@0150898 {final}) T{String}
ParallelMove fp[-6] <- r4
v12 <- LoadField(v2 . _host@0150898 {final}) T{String??}
ParallelMove fp[-5] <- r5
v13 <- LoadField(v2 . _port@0150898) T{int??}
ParallelMove fp[-4] <- r6
v322 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r2
v14 <- DispatchTableCall( cid=v322 Uri.hasEmptyPath<0>, v3) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:54(===, v14 T{bool}, v8) goto (7, 11)
BoolTest
B7
ParallelMove r3 <- fp[-1], r2 <- fp[-2]
v81 <- LoadField(v2 . path {final}) T{String}
ParallelMove fp[-7] <- r4
v323 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r2
v82 <- DispatchTableCall( cid=v323 Uri.hasQuery<0>, v3) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:66(===, v82 T{bool}, v8) goto (8, 9)
BoolTest
B8
ParallelMove r2 <- fp[-2]
v324 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r2
v87 <- DispatchTableCall( cid=v324 Uri.query<0>, v3) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:80 B10
B9
ParallelMove r0 <- fp[-1]
v83 <- LoadField(v2 . _query@0150898 {final}) T{String??}
ParallelMove r0 <- r1 goto:82 B10
B10
ParallelMove r4 <- fp[-7], r3 <- r0 goto:338 B44
B11
ParallelMove r0 <- fp[-1]
v15 <- LoadField(v2 . path {final}) T{String}
ParallelMove r1 <- r0, r2 <- r3, fp[-7] <- r3
v16 <- StaticCall:88( _packageNameEnd@0150898<0> v2, v15, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0
Branch if RelationalOp(>, v16, v253 T{_Smi}) T{bool} goto (12, 16)
B12
ParallelMove r3 <- fp[-2]
v235 <- BoxInt64(v16) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v235 T{int})
ParallelMove r1 <- fp[-7], r2 <- C
v59 <- StaticCall:100( substring<0> v15, v253 T{_Smi}, v235 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r3 <- r0, r2 <- fp[-2]
ParallelMove fp[-8] <- r3
v325 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r2
v60 <- DispatchTableCall( cid=v325 Uri.hasAbsolutePath<0>, v3) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:106(===, v60 T{bool}, v8) goto (13, 14)
BoolTest
B13
ParallelMove r2 <- fp[-2]
v326 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r2
v68 <- DispatchTableCall( cid=v326 Uri.path<0>, v3) T{String}
ParallelMove r1 <- r0
v69 <- StaticCall:114( _removeDotSegments@0150898<0> v68 T{String}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
MoveArgument(sp[1] <- v59)
MoveArgument(sp[0] <- v69)
v70 <- StaticCall:116( +<0> v59, v69, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:134 B15
B14
ParallelMove r0 <- fp[-2], r3 <- fp[-8]
v152 <- LoadField(v59 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v236 <- UnboxInt64([non-speculative], v152 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove r1 <- fp[-7], r2 <- r2
v62 <- StaticCall:122( substring<0> v15, v236 T{_Smi}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r3 <- r0, r2 <- fp[-2]
ParallelMove fp[-9] <- r3
v327 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r2
v63 <- DispatchTableCall( cid=v327 Uri.path<0>, v3) T{String}
ParallelMove r1 <- fp[-1], r2 <- fp[-9], r3 <- r0
v64 <- StaticCall:126( _mergePaths@0150898<0> v2, v62, v63 T{String}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r1 <- r0
v65 <- StaticCall:128( _removeDotSegments@0150898<0> v64, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
MoveArgument(sp[1] <- v59)
MoveArgument(sp[0] <- v65)
v66 <- StaticCall:130( +<0> v59, v65, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:136 B15
B15
ParallelMove r3 <- r0 goto:312 B40
B16
ParallelMove r2 <- fp[-2]
v328 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r2
v19 <- DispatchTableCall( cid=v328 Uri.hasAbsolutePath<0>, v3) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:144(===, v19 T{bool}, v8) goto (17, 18)
BoolTest
B17
ParallelMove r2 <- fp[-2]
v329 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r2
v51 <- DispatchTableCall( cid=v329 Uri.path<0>, v3) T{String}
ParallelMove r1 <- r0
v52 <- StaticCall:152( _removeDotSegments@0150898<0> v51 T{String}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:306 B39
B18
MoveArgument(sp[0] <- v15 T{String})
v147 <- StaticCall:12( get:isEmpty<0> v15 T{String}, recognized_kind = StringBaseIsEmpty, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:160(===, v147 T{bool}, v8) goto (19, 26)
BoolTest
B19
ParallelMove r0 <- fp[-5]
Branch if StrictCompare:12(===, v12 T{String??}, v0 T{Null?}) T{bool} goto (20, 24)
B20
MoveArgument(sp[0] <- v9 T{_StringBase})
v169 <- StaticCall:10( get:isEmpty<0> v9 T{_StringBase}, recognized_kind = StringBaseIsEmpty, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
v170 <- BooleanNegate(v169 T{bool}) T{bool}
Branch if StrictCompare:180(!==, v170 T{bool}, v8) goto (21, 22)
BoolTest
B21
ParallelMove r2 <- fp[-2]
v330 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r2
v47 <- DispatchTableCall( cid=v330 Uri.path<0>, v3) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:196 B23
B22
ParallelMove r2 <- fp[-2]
v331 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r2
v44 <- DispatchTableCall( cid=v331 Uri.path<0>, v3) T{String}
ParallelMove r1 <- r0
v45 <- StaticCall:192( _removeDotSegments@0150898<0> v44 T{String}, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:198 B23
B23
B24
ParallelMove r2 <- fp[-2]
v332 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r2
v39 <- DispatchTableCall( cid=v332 Uri.path<0>, v3) T{String}
ParallelMove r0 <- r0
MoveArgument(sp[1] <- v38)
MoveArgument(sp[0] <- v39 T{String})
v40 <- StaticCall:204( +<0> v38, v39 T{String}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r1 <- r0
v41 <- StaticCall:206( _removeDotSegments@0150898<0> v40, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:212 B25
B25
B26
ParallelMove r2 <- fp[-2]
v333 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r2
v22 <- DispatchTableCall( cid=v333 Uri.path<0>, v3) T{String}
ParallelMove r1 <- fp[-1], r2 <- fp[-7], r3 <- r0
v23 <- StaticCall:220( _mergePaths@0150898<0> v2, v15 T{String}, v22 T{String}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-7] <- r0
MoveArgument(sp[0] <- v9 T{_StringBase})
v163 <- StaticCall:10( get:isEmpty<0> v9 T{_StringBase}, recognized_kind = StringBaseIsEmpty, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
v164 <- BooleanNegate(v163 T{bool}) T{bool}
Branch if StrictCompare:226(===, v164 T{bool}, v8) goto (30, 27)
BoolTest
B30
B27
ParallelMove r0 <- fp[-5]
Branch if StrictCompare:12(!==, v12 T{String??}, v0 T{Null?}) T{bool} goto (31, 28)
B31
B28
ParallelMove r1 <- fp[-1]
v26 <- StaticCall:240( get:hasAbsolutePath<0> v2, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:244(===, v26 T{bool}, v8) goto (32, 33)
BoolTest
B32
B29
ParallelMove r1 <- fp[-7]
v33 <- StaticCall:264( _removeDotSegments@0150898<0> v23, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:294 B37
B33
ParallelMove r1 <- fp[-1]
v27 <- StaticCall:270( get:hasScheme<0> v2, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:274(===, v27 T{bool}, v8) goto (36, 35)
BoolTest
B36
ParallelMove r2 <- C goto:288 B34
B35
ParallelMove r2 <- C goto:284 B34
B34
ParallelMove r1 <- fp[-7], r2 <- r2
v30 <- StaticCall:290( _normalizeRelativePath@0150898<0> v23, v29, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:296 B37
B37
B38
B39
ParallelMove r3 <- r0 goto:314 B40
B40
ParallelMove fp[-1] <- r3
v334 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r2
v56 <- DispatchTableCall( cid=v334 Uri.hasQuery<0>, v3) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:320(===, v56 T{bool}, v8) goto (41, 42)
BoolTest
B41
ParallelMove r2 <- fp[-2]
v335 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r2
v58 <- DispatchTableCall( cid=v335 Uri.query<0>, v3) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:332 B43
B42
ParallelMove r0 <- C goto:334 B43
B43
ParallelMove r4 <- fp[-1], r3 <- r0 goto:340 B44
B44
ParallelMove fp[-1] <- r4, fp[-7] <- r3
v336 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r2
v77 <- DispatchTableCall( cid=v336 Uri.hasFragment<0>, v3) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:346(===, v77 T{bool}, v8) goto (45, 46)
BoolTest
B45
ParallelMove r1 <- fp[-2]
v337 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r1
v80 <- DispatchTableCall( cid=v337 Uri.fragment<0>, v3) T{String}
ParallelMove r0 <- r0
ParallelMove r6 <- r0 goto:358 B47
B46
ParallelMove r6 <- C goto:360 B47
B47
ParallelMove fp[-2] <- r6
v79 <- AllocateObject:362(cls=_Uri, <not-aliased>) T{_Uri}
ParallelMove r0 <- r0, r1 <- C
StoreField(v79 T{_Uri} . _text@0150898 = v108 T{Sentinel~}, NoStoreBarrier)
StoreField(v79 T{_Uri} . pathSegments = v108 T{Sentinel~}, NoStoreBarrier)
StoreField(v79 T{_Uri} . hashCode = v108 T{Sentinel~}, NoStoreBarrier)
ParallelMove r1 <- fp[-3]
StoreField(v79 T{_Uri} . scheme = v9 T{String}, NoStoreBarrier)
ParallelMove r1 <- fp[-6]
StoreField(v79 T{_Uri} . _userInfo@0150898 = v11 T{String}, NoStoreBarrier)
ParallelMove r1 <- fp[-5]
StoreField(v79 T{_Uri} . _host@0150898 = v12 T{String??}, NoStoreBarrier)
ParallelMove r1 <- fp[-4]
StoreField(v79 T{_Uri} . _port@0150898 = v13 T{int??}, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
StoreField(v79 T{_Uri} . path = v72 T{String}, NoStoreBarrier)
ParallelMove r1 <- fp[-7]
StoreField(v79 T{_Uri} . _query@0150898 = v73 T{String??}, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreField(v79 T{_Uri} . _fragment@0150898 = v78 T{String?}, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:366(v79)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r3 <- r2, r2 <- r3, fp[-5] <- r2, fp[-6] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v118 <- LoadField:30(v4 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
ParallelMove fp[-4] <- r4
v188 <- UnboxInt64:30([non-speculative], v118 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove fp[-3] <- r5
ParallelMove r7 <- C, r6 <- C goto:30 B4
B4
  Loop 1
  Loop Header
ParallelMove fp[-1] <- r7, fp[-2] <- r6
CheckStackOverflow:28(stack=0, loop=1)
Branch if RelationalOp(<, v7 T{int}, v194 T{_Smi}) T{bool} goto (45, 43)
B43
  Loop 1
Branch if RelationalOp(>, v7 T{int}, v188 T{_Smi}) T{bool} goto (46, 48)
B48
  Loop 1
v187 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[2] <- v4 T{_StringBase})
MoveArgument(sp[1] <- v187 T{int})
MoveArgument(sp[0] <- v8 T{_OneByteString})
v97 <- StaticCall:78( _substringMatches@0150898<0> v4 T{_StringBase}, v187 T{int}, v8 T{_OneByteString}, using unchecked entrypoint, recognized_kind = StringBaseSubstringMatches, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:14(===, v97 T{bool}, v10) goto (3, 5)
BoolTest
B3
  Loop 1
ParallelMove r3 <- fp[-1], r0 <- fp[-2]
v44 <- BinaryInt64Op(+ [tr], v7, v195 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v45 <- BinaryInt64Op(+ [tr], v6, v196 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r7 <- r7, r6 <- r6, r3 <- fp[-5], r2 <- fp[-6], r4 <- fp[-4], r5 <- fp[-3] goto:26 B4
B5
ParallelMove r4 <- fp[-5], r3 <- fp[-1], r0 <- fp[-2]
ParallelMove r1 <- r4, r2 <- C
v12 <- StaticCall:34( lastIndexOf<0> v3, v11, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0, r3 <- fp[-5]
v69 <- LoadField:176(v3 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v190 <- UnboxInt64:176([non-speculative], v69) [0, 2305843009213693951] int64
ParallelMove fp[-8] <- r4
v71 <- LoadClassId:176(v3 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove fp[-7] <- r5
ParallelMove r7 <- fp[-1], r6 <- r0 goto:176 B24
B24
  Loop 0
  Loop Header
ParallelMove fp[-1] <- r7, fp[-3] <- r6
CheckStackOverflow:174(stack=0, loop=1)
Branch if RelationalOp(>, v14, v194 T{_Smi}) T{bool} goto (6, 26)
B6
  Loop 0
Branch if RelationalOp(>, v13, v194 T{_Smi}) T{bool} goto (23, 27)
B23
  Loop 0
v28 <- BinaryInt64Op(- [tr], v14, v196 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v189 <- BoxInt64(v28) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v189 T{int})
ParallelMove r1 <- r3, r2 <- C
v29 <- StaticCall:56( lastIndexOf<0> v3, v11, v189 T{int}, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0
Branch if RelationalOp(<, v29, v194 T{_Smi}) T{bool} goto (7, 9)
B9
  Loop 0
ParallelMove r3 <- fp[-3]
v31 <- BinaryInt64Op(- [tr], v14, v29) [-9223372036854775808, 9223372036854775807] int64
v33 <- EqualityCompare(v31 == v197 T{_Smi}) T{bool}
Branch if StrictCompare:80(===, v33, v10) goto (12, 10)
BoolTest
B12
B10
  Loop 0
Branch if EqualityCompare(v31 == v195 T{_Smi}) T{bool} goto (13, 20)
B13
B11
  Loop 0
v36 <- BinaryInt64Op(+ [tr], v29, v196 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-8], r1 <- r6
t0 <- GenericCheckBound:96(v190 T{_Smi}, v36 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:96(===, v71, v62 T{_Smi}) goto (36, 37)
B36
  Loop 0
ParallelMove r8 <- fp[-5]
v75 <- LoadIndexed([_OneByteString] v3 T{_OneByteString}, v36 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:96 B35
B37
  Loop 0
ParallelMove r8 <- fp[-5]
v73 <- LoadIndexed([_TwoByteString] v3 T{_StringBase}, v36 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:96 B35
B35
  Loop 0
Branch if EqualityCompare(v74 T{_Smi} == v198 T{_Smi}) T{bool} goto (15, 21)
B15
  Loop 0
Branch if StrictCompare:120(===, v33 T{bool}, v10) goto (17, 14)
BoolTest
B14
  Loop 0
v41 <- BinaryInt64Op(+ [tr], v29, v197 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-8], r1 <- r4
t0 <- GenericCheckBound:126(v190 T{_Smi}, v41 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:126(===, v71 T{_Smi}, v62 T{_Smi}) goto (31, 32)
B31
  Loop 0
v58 <- LoadIndexed([_OneByteString] v3 T{_OneByteString}, v41 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:126 B30
B32
  Loop 0
v56 <- LoadIndexed([_TwoByteString] v3 T{_StringBase}, v41 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:126 B30
B30
  Loop 0
Branch if EqualityCompare(v57 T{_Smi} == v198 T{_Smi}) T{bool} goto (18, 22)
B22
B18
B17
B16
ParallelMove r0 <- fp[-1] goto:150 B8
B21
B20
  Loop 0
ParallelMove r8 <- fp[-5], r5 <- fp[-7]
ParallelMove  goto:156 B19
B19
  Loop 0
v35 <- BinaryInt64Op(- [tr], v13, v196 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r7 <- r7, r6 <- r2, r3 <- r8, r4 <- fp[-8] goto:172 B24
B7
ParallelMove r8 <- fp[-5], r0 <- fp[-1], r3 <- fp[-3]
ParallelMove  goto:70 B8
B27
ParallelMove r8 <- r3, r0 <- r7, r3 <- r6
ParallelMove  goto:186 B25
B26
ParallelMove r8 <- r3, r0 <- r7, r3 <- r6
ParallelMove  goto:182 B25
B25
B8
v21 <- BinaryInt64Op(+ [tr], v14, v196 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-8] <- r4
v23 <- BinaryInt64Op(* [tr], v13, v195 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v24 <- BinaryInt64Op(- [tr], v7, v23) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-6], r2 <- r0
v25 <- StaticCall:196( substring<0> v4, v24, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r1 <- fp[-5], r2 <- fp[-8], r3 <- C, r5 <- r0
v26 <- StaticCall:198( replaceRange<0> v3, v21, v0, v25, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:200(v26)
B46
ParallelMove r2 <- r6
ParallelMove  goto:56 B44
B45
ParallelMove r2 <- r6
ParallelMove  goto:52 B44
B44
v186 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
ParallelMove fp[-5] <- r0
v98 <- AllocateObject:58(cls=RangeError) T{RangeError}
ParallelMove r0 <- r0
ParallelMove fp[-6] <- r0
MoveArgument(sp[3] <- v98)
MoveArgument(sp[2] <- v186 T{int})
MoveArgument(sp[1] <- v5 T{_Smi})
MoveArgument(sp[0] <- v118 T{_Smi})
StaticCall:62( RangeError.range<0> v98, v186 T{int}, v5 T{_Smi}, v118 T{_Smi})
ParallelMove r0 <- fp[-6]
Throw:64(v98)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r3 <- r1, fp[-2] <- r1, fp[-3] <- r2
v6 <- LoadField(v4 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v8 <- BinarySmiOp:4(- [tr], v6, v7) [-2, 4611686018427387901] T{_Smi}
Branch if RelationalOp:6(<=, v9, v8) T{bool} goto (2, 3)
B2
v38 <- LoadIndexedUnsafe(fp[v8 T{_Smi} + 8]) T{int??}
ParallelMove r0 <- r0 goto:20 B5
B3
ParallelMove r0 <- C goto:18 B5
B5
ParallelMove fp[-4] <- r0
CheckStackOverflow:26(stack=0, loop=0)
Branch if StrictCompare:28(===, v12, v0) goto (6, 7)
B6
v69 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v107 <- UnboxInt64([non-speculative], v69 T{_Smi}) [0, 2305843009213693951] int64
v153 <- UnboxInt64([non-speculative], v69) int64
ParallelMove r1 <- r1, r0 <- r4 goto:80 B13
B7
v109 <- UnboxInt64([non-speculative], v12 T{int?}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v109 T{int?}, v123 T{_Smi}) T{bool} goto (10, 8)
B8
v64 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v111 <- UnboxInt64([non-speculative], v64 T{_Smi}) [0, 2305843009213693951] int64
Branch if RelationalOp(>, v109 T{int?}, v111 T{_Smi}) T{bool} goto (11, 12)
B12
v154 <- UnboxInt64([non-speculative], v64) int64
ParallelMove r1 <- r1, r0 <- r0 goto:82 B13
B13
v43 <- LoadClassId(v3) [78, 94] int64
Branch if TestRange(v43 in [93-94]) T{bool} goto (14, 23)
B14
v54 <- LoadField(v3 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v113 <- UnboxInt64([non-speculative], v54 T{_Smi}) [0, 2305843009213693951] int64
v29 <- BinaryInt64Op(- [tr], v115 T{_Smi}, v113 T{_Smi}) [-2305843009213693951, 2305843009213693951] int64
Branch if RelationalOp(<, v29, v19 T{int?}) T{bool} goto (15, 16)
B15
ParallelMove r0 <- r4 goto:114 B17
B16
ParallelMove r0 <- r1 goto:116 B17
B17
ParallelMove r4 <- r0 goto:148 B22
B22
  Loop 1
  Loop Header
ParallelMove fp[-1] <- r4
CheckStackOverflow:152(stack=0, loop=1)
Branch if RelationalOp(>=, v32, v123 T{_Smi}) T{bool} goto (18, 19)
B18
  Loop 1
v114 <- BoxInt64(v32) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v114 T{int?})
MoveArgument(sp[0] <- v3 T{String})
v35 <- StaticCall:132( _substringMatches@0150898<0> v2, v114 T{int?}, v3 T{String}, using unchecked entrypoint, recognized_kind = StringBaseSubstringMatches, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:136(===, v35 T{bool}, v11) goto (20, 21)
BoolTest
B21
  Loop 1
ParallelMove r0 <- fp[-1]
v36 <- BinaryInt64Op(- [tr], v32, v124 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- r4, r3 <- fp[-2], r2 <- fp[-3] goto:150 B22
B20
ParallelMove r0 <- fp[-1]
ParallelMove r0 <- r0
DartReturn:142(v32)
B19
ParallelMove r0 <- C
DartReturn:156(v86)
B23
ParallelMove r5 <- r1 goto:188 B28
B28
  Loop 0
  Loop Header
ParallelMove fp[-1] <- r5
CheckStackOverflow:192(stack=0, loop=1)
Branch if RelationalOp(>=, v22, v123 T{_Smi}) T{bool} goto (24, 25)
B24
  Loop 0
v156 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r4, r2 <- fp[-2], r3 <- r5
v25 <- DispatchTableCall( cid=v156 Pattern.matchAsPrefix<0>, v3, v2, v22) T{Match??}
ParallelMove r0 <- r0
Branch if StrictCompare:176(!==, v25 T{Match??}, v0) goto (26, 27)
B27
  Loop 0
ParallelMove r0 <- fp[-1]
v26 <- BinaryInt64Op(- [tr], v22, v124 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r5 goto:190 B28
B26
ParallelMove r0 <- fp[-1]
ParallelMove r0 <- r0
DartReturn:182(v22)
B25
ParallelMove r0 <- C
DartReturn:196(v86)
B10
B11
B9
v59 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
ParallelMove fp[-3] <- r2
v17 <- AllocateObject:68(cls=RangeError) T{RangeError}
ParallelMove r0 <- r0
ParallelMove fp[-2] <- r0
MoveArgument(sp[3] <- v17)
MoveArgument(sp[2] <- v12 T{int?})
MoveArgument(sp[1] <- v13)
MoveArgument(sp[0] <- v59 T{_Smi})
StaticCall:72( RangeError.range<0> v17, v12 T{int?}, v13, v59 T{_Smi})
ParallelMove r0 <- fp[-2]
Throw:74(v17)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r3 <- r1, r0 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r3, r2 <- C
v5 <- StaticCall:10( isScheme<0> v2, v4, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:14(===, v5 T{bool}, v6) goto (3, 6)
BoolTest
B3
ParallelMove r1 <- fp[-1]
v79 <- LoadField(v2 T{_Uri} . _host@0150898 {final}) T{String??}
Branch if StrictCompare:12(===, v79, v0 T{Null?}) T{bool} goto (4, 7)
B4
ParallelMove r1 <- fp[-2]
v17 <- LoadField(v3 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v136 <- UnboxInt64:100([non-speculative], v17 T{_Smi}) [0, 2305843009213693951] int64
v90 <- LoadClassId:100(v3 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove r5 <- C, r4 <- C goto:100 B24
B24
  Loop 0
  Loop Header
CheckStackOverflow:104(stack=0, loop=1)
Branch if RelationalOp(<, v27, v136 T{_Smi}) T{bool} goto (12, 13)
B12
  Loop 0
Branch if StrictCompare:24(===, v90, v98 T{_Smi}) goto (31, 32)
B31
  Loop 0
v94 <- LoadIndexed([_OneByteString] v3 T{_OneByteString}, v27 T{int}) [0, 255] int64
ParallelMove r6 <- r6 goto:24 B30
B32
  Loop 0
v92 <- LoadIndexed([_TwoByteString] v3 T{_StringBase}, v27 T{int}) [0, 65535] int64
ParallelMove r6 <- r6 goto:24 B30
B30
  Loop 0
Branch if EqualityCompare(v93 T{_Smi} == v142 T{_Smi}) T{bool} goto (14, 18)
B18
  Loop 0
Branch if EqualityCompare(v93 T{_Smi} == v143 T{_Smi}) T{bool} goto (21, 19)
B19
  Loop 0
Branch if EqualityCompare(v93 T{_Smi} == v144 T{_Smi}) T{bool} goto (22, 23)
B23
  Loop 0
v41 <- BinaryInt64Op(^ [tr], v93 T{_Smi}, v145 T{_Smi}) [0, 65535] int64
v42 <- BinaryInt64Op(| [tr], v26, v41) [0, 65535] int64
v43 <- BinaryInt64Op(+ [tr], v27 T{int}, v146 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0, r4 <- r6 goto:102 B24
B22
B21
B20
ParallelMove r0 <- C goto:90 B25
B14
Branch if EqualityCompare(v26 != v141 T{_Smi}) T{bool} goto (15, 16)
B15
ParallelMove r1 <- r4 goto:52 B17
B16
ParallelMove r1 <- C goto:54 B17
B17
ParallelMove r0 <- r1 goto:56 B25
B13
ParallelMove r0 <- C goto:108 B25
B25
ParallelMove r0 <- r0
DartReturn:34(v74 T{int})
B7
B6
B5
ParallelMove r0 <- C
DartReturn:48(v73)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, r1 <- r2, fp[-1] <- r1
v13 <- LoadIndexed([_List] v4, v11 T{_Smi}) T{*?}
Branch if StrictCompare:16(===, v13, v14) goto (2, 3)
B2
ParallelMove r2 <- C goto:26 B4
B3
ParallelMove r2 <- C goto:28 B4
B4
v207 <- BoxInt64(v15) [0, 1] T{_Smi}
v158 <- BinarySmiOp:30(<< [tr], v207 T{_Smi}, v75) [0, 2] T{_Smi}
v17 <- BinarySmiOp:38(+ [tr], v158 T{_Smi}, v11) [4, 6] T{_Smi}
v18 <- LoadIndexed([_List] v4, v17) T{*?}
Branch if StrictCompare:40(===, v18, v19) goto (5, 6)
B5
v96 <- BinarySmiOp:36(+ [tr], v207 T{_Smi}, v75) [1, 2] T{_Smi}
v209 <- UnboxInt64([non-speculative], v96) [1, 2] int64
ParallelMove r2 <- r3 goto:50 B7
B6
B7
v210 <- BoxInt64(v20) [0, 2] T{_Smi}
v159 <- BinarySmiOp:54(<< [tr], v210 T{_Smi}, v75) [0, 4] T{_Smi}
v22 <- BinarySmiOp:62(+ [tr], v159 T{_Smi}, v11) [4, 8] T{_Smi}
v23 <- LoadIndexed([_List] v4, v22) T{*?}
Branch if StrictCompare:64(===, v23, v24) goto (8, 9)
B8
v91 <- BinarySmiOp:60(+ [tr], v210 T{_Smi}, v75) [1, 3] T{_Smi}
v212 <- UnboxInt64([non-speculative], v91) [1, 3] int64
ParallelMove r2 <- r3 goto:74 B10
B9
B10
v213 <- BoxInt64(v25) [0, 3] T{_Smi}
v160 <- BinarySmiOp:78(<< [tr], v213 T{_Smi}, v75) [0, 6] T{_Smi}
v27 <- BinarySmiOp:86(+ [tr], v160 T{_Smi}, v11) [4, 10] T{_Smi}
v28 <- LoadIndexed([_List] v4, v27) T{*?}
Branch if StrictCompare:88(===, v28, v29) goto (11, 12)
B11
v86 <- BinarySmiOp:84(+ [tr], v213 T{_Smi}, v75) [1, 4] T{_Smi}
v215 <- UnboxInt64([non-speculative], v86) [1, 4] int64
ParallelMove r2 <- r3 goto:98 B13
B12
B13
v216 <- BoxInt64(v30) [0, 4] T{_Smi}
v161 <- BinarySmiOp:102(<< [tr], v216 T{_Smi}, v75) [0, 8] T{_Smi}
v32 <- BinarySmiOp:110(+ [tr], v161 T{_Smi}, v11) [4, 12] T{_Smi}
v33 <- LoadIndexed([_List] v4, v32) T{*?}
Branch if StrictCompare:112(===, v33, v34) goto (14, 15)
B14
B15
B20
CheckStackOverflow:154(stack=0, loop=0)
v148 <- LoadField(v3 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v221 <- UnboxInt64([non-speculative], v148 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove r1 <- r1, r2 <- r3
v42 <- StaticCall:158( _makeScheme@0150898<0> v3, v221 T{_Smi}, result_type = T{!null}) T{String}
ParallelMove r2 <- r0, r1 <- fp[-1]
ParallelMove fp[-2] <- r2
v43 <- LoadField(v2 . scheme {final}) T{String}
v269 <- LoadClassId(<non-smi> v42) int64
MoveArgument(sp[1] <- v42)
MoveArgument(sp[0] <- v43)
ParallelMove r0 <- r3
v44 <- DispatchTableCall( cid=v269 String.==<0>, v42, v43) T{bool}
ParallelMove r0 <- r0
v45 <- BooleanNegate(v44 T{bool}) T{bool}
ParallelMove r2 <- fp[-2], fp[-3] <- r1
v270 <- LoadClassId(<non-smi> v42) int64
MoveArgument(sp[1] <- v42)
MoveArgument(sp[0] <- v46)
ParallelMove r0 <- r0
v47 <- DispatchTableCall( cid=v270 String.==<0>, v42, v46) T{bool}
ParallelMove r3 <- r0, r0 <- fp[-1]
ParallelMove fp[-5] <- r3
v48 <- LoadField(v2 . _userInfo@0150898 {final}) T{String}
ParallelMove fp[-4] <- r4
v49 <- LoadField(v2 . _port@0150898) T{int??}
ParallelMove r2 <- fp[-3]
Branch if StrictCompare:174(===, v45 T{bool}, v50) goto (21, 22)
BoolTest
B21
ParallelMove r1 <- r1, r2 <- fp[-2]
v69 <- StaticCall:180( _makePort@0150898<0> v49, v42, result_type = T{int??}) T{int??}
ParallelMove r0 <- r0
ParallelMove r3 <- r0 goto:186 B23
B22
ParallelMove r3 <- r1 goto:188 B23
B23
ParallelMove fp[-7] <- r3
v141 <- LoadField(v2 T{_Uri} . _host@0150898 {final}) T{String??}
Branch if StrictCompare:12(!==, v141, v0 T{Null?}) T{bool} goto (24, 25)
B24
ParallelMove r5 <- r1, r1 <- fp[-5], r4 <- fp[-4] goto:250 B34
B25
ParallelMove r4 <- fp[-4]
v153 <- LoadField(v48 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(!==, v153, v9 T{_Smi}) T{bool} goto (29, 26)
B29
ParallelMove r1 <- fp[-5] goto:230 B28
B26
Branch if StrictCompare:212(!==, v51, v0) goto (30, 27)
B30
ParallelMove r1 <- fp[-5] goto:234 B28
B27
ParallelMove r1 <- fp[-5]
Branch if StrictCompare:220(===, v47 T{bool}, v50) goto (31, 32)
BoolTest
B31
B28
ParallelMove r2 <- C goto:244 B33
B32
ParallelMove r2 <- C goto:246 B33
B33
ParallelMove r5 <- r2 goto:252 B34
B34
ParallelMove fp[-6] <- r5
v59 <- LoadField(v2 . path {final}) T{String}
ParallelMove fp[-3] <- r6
Branch if StrictCompare:262(===, v47 T{bool}, v50) goto (38, 36)
BoolTest
B38
B36
Branch if StrictCompare:254(!==, v56, v0) T{bool} goto (35, 42)
B35
v128 <- LoadField(v59 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(!==, v128, v9 T{_Smi}) T{bool} goto (39, 43)
B39
B37
ParallelMove r1 <- r6, r2 <- C
v66 <- StaticCall:284( startsWith<0> v59, v65, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:288(!==, v66 T{bool}, v50) goto (40, 44)
BoolTest
B40
MoveArgument(sp[1] <- v65)
MoveArgument(sp[0] <- v59)
v67 <- StaticCall:304( +<0> v65, v59, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:322 B45
B44
B43
B42
B41
ParallelMove r5 <- fp[-3] goto:324 B45
B45
ParallelMove fp[-8] <- r5
v62 <- LoadField(v2 . _query@0150898 {final}) T{String??}
ParallelMove fp[-5] <- r6
v63 <- LoadField(v2 . _fragment@0150898 {final}) T{String??}
ParallelMove fp[-3] <- r7
v64 <- AllocateObject:330(cls=_Uri, <not-aliased>) T{_Uri}
ParallelMove r0 <- r0, r1 <- C
StoreField(v64 T{_Uri} . _text@0150898 = v123 T{Sentinel~}, NoStoreBarrier)
StoreField(v64 T{_Uri} . pathSegments = v123 T{Sentinel~}, NoStoreBarrier)
StoreField(v64 T{_Uri} . hashCode = v123 T{Sentinel~}, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreField(v64 T{_Uri} . scheme = v42 T{String}, NoStoreBarrier)
ParallelMove r1 <- fp[-4]
StoreField(v64 T{_Uri} . _userInfo@0150898 = v48 T{String}, NoStoreBarrier)
ParallelMove r1 <- fp[-6]
StoreField(v64 T{_Uri} . _host@0150898 = v56 T{String??}, NoStoreBarrier)
ParallelMove r1 <- fp[-7]
StoreField(v64 T{_Uri} . _port@0150898 = v51 T{int??}, NoStoreBarrier)
ParallelMove r1 <- fp[-8]
StoreField(v64 T{_Uri} . path = v61 T{String}, NoStoreBarrier)
ParallelMove r1 <- fp[-5]
StoreField(v64 T{_Uri} . _query@0150898 = v62 T{String??}, NoStoreBarrier)
ParallelMove r1 <- fp[-3]
StoreField(v64 T{_Uri} . _fragment@0150898 = v63 T{String??}, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:334(v64)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, r1 <- r2, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
Branch if StrictCompare:10(!==, v2, v0) goto (3, 6)
B3
ParallelMove r1 <- r1
v4 <- StaticCall:14( _defaultPort@0150898<0> v3, result_type = T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r0 <- r0
v15 <- BoxInt64(v4) [-4611686018427387904, 4611686018427387903] T{_Smi}
ParallelMove r0 <- fp[-1]
Branch if StrictCompare(===, v2 T{int?}, v15 T{_Smi}) T{bool} goto (4, 7)
B4
ParallelMove r0 <- C
DartReturn:28(v0)
B7
B6
B5
ParallelMove r0 <- r0
DartReturn:40(v2)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v33 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r0
v4 <- DispatchTableCall( cid=v33 String.==<0>, v2, v3) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:14(===, v4 T{bool}, v5) goto (3, 4)
BoolTest
B3
ParallelMove r0 <- C
DartReturn:20(v22 T{_Smi})
B4
ParallelMove r0 <- fp[-1]
v34 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v6)
ParallelMove r0 <- r1
v7 <- DispatchTableCall( cid=v34 String.==<0>, v2, v6) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:28(===, v7 T{bool}, v5) goto (5, 6)
BoolTest
B5
ParallelMove r0 <- C
DartReturn:34(v23 T{_Smi})
B6
ParallelMove r0 <- C
DartReturn:38(v24 T{_Smi})
CheckStackOverflowSlowPath
B0
B1
Enter frame
v3 <- LoadField(v2 . _current@0150898) T{X0??}
ParallelMove fp[-1] <- r3
Branch if StrictCompare:12(===, v3, v0) goto (3, 4)
B3
v6 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r3, r2 <- r2, r1 <- C
t0 <- AssertAssignable:18(v3 T{X0??}, v5, ' in type cast', instantiator_type_args(v6), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove  goto:24 B5
B4
B5
ParallelMove r0 <- fp[-1]
DartReturn:28(v3 T{X0??})
B0
B1
Enter frame
ParallelMove r0 <- r1, r1 <- r2, fp[-1] <- r1
v13 <- LoadIndexed([_List] v4, v11 T{_Smi}) T{*?}
Branch if StrictCompare:16(===, v13, v14) goto (2, 3)
B2
ParallelMove r2 <- C goto:26 B4
B3
ParallelMove r2 <- C goto:28 B4
B4
v276 <- BoxInt64(v15) [0, 1] T{_Smi}
v207 <- BinarySmiOp:30(<< [tr], v276 T{_Smi}, v80) [0, 2] T{_Smi}
v17 <- BinarySmiOp:38(+ [tr], v207 T{_Smi}, v11) [4, 6] T{_Smi}
v18 <- LoadIndexed([_List] v4, v17) T{*?}
Branch if StrictCompare:40(===, v18, v19) goto (5, 6)
B5
v128 <- BinarySmiOp:36(+ [tr], v276 T{_Smi}, v80) [1, 2] T{_Smi}
v278 <- UnboxInt64([non-speculative], v128) [1, 2] int64
ParallelMove r2 <- r3 goto:50 B7
B6
B7
v279 <- BoxInt64(v20) [0, 2] T{_Smi}
v208 <- BinarySmiOp:54(<< [tr], v279 T{_Smi}, v80) [0, 4] T{_Smi}
v22 <- BinarySmiOp:62(+ [tr], v208 T{_Smi}, v11) [4, 8] T{_Smi}
v23 <- LoadIndexed([_List] v4, v22) T{*?}
Branch if StrictCompare:64(===, v23, v24) goto (8, 9)
B8
v123 <- BinarySmiOp:60(+ [tr], v279 T{_Smi}, v80) [1, 3] T{_Smi}
v281 <- UnboxInt64([non-speculative], v123) [1, 3] int64
ParallelMove r2 <- r3 goto:74 B10
B9
B10
v282 <- BoxInt64(v25) [0, 3] T{_Smi}
v209 <- BinarySmiOp:78(<< [tr], v282 T{_Smi}, v80) [0, 6] T{_Smi}
v27 <- BinarySmiOp:86(+ [tr], v209 T{_Smi}, v11) [4, 10] T{_Smi}
v28 <- LoadIndexed([_List] v4, v27) T{*?}
Branch if StrictCompare:88(===, v28, v29) goto (11, 12)
B11
v118 <- BinarySmiOp:84(+ [tr], v282 T{_Smi}, v80) [1, 4] T{_Smi}
v284 <- UnboxInt64([non-speculative], v118) [1, 4] int64
ParallelMove r2 <- r3 goto:98 B13
B12
B13
v285 <- BoxInt64(v30) [0, 4] T{_Smi}
v210 <- BinarySmiOp:102(<< [tr], v285 T{_Smi}, v80) [0, 8] T{_Smi}
v32 <- BinarySmiOp:110(+ [tr], v210 T{_Smi}, v11) [4, 12] T{_Smi}
v33 <- LoadIndexed([_List] v4, v32) T{*?}
Branch if StrictCompare:112(===, v33, v34) goto (14, 15)
B14
B15
B20
CheckStackOverflow:154(stack=0, loop=0)
v197 <- LoadField(v3 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v290 <- UnboxInt64([non-speculative], v197 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove r1 <- r1, r2 <- r3
v42 <- StaticCall:158( _makeScheme@0150898<0> v3, v290 T{_Smi}, result_type = T{!null}) T{String}
ParallelMove r1 <- fp[-1], r2 <- r0, r0 <- r0
ParallelMove fp[-2] <- r0
v43 <- StaticCall:160( _isScheme@0150898<0> v2, v42, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
v44 <- BooleanNegate(v43 T{bool}) T{bool}
ParallelMove r2 <- fp[-2], fp[-3] <- r1
v360 <- LoadClassId(<non-smi> v42) int64
MoveArgument(sp[1] <- v42)
MoveArgument(sp[0] <- v45)
ParallelMove r0 <- r0
v46 <- DispatchTableCall( cid=v360 String.==<0>, v42, v45) T{bool}
ParallelMove r4 <- r0, r3 <- fp[-1]
ParallelMove fp[-6] <- r4
v47 <- LoadField(v2 . _hostStart@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-5] <- r5
v48 <- RelationalOp(>, v47, v305 T{_Smi}) T{bool}
ParallelMove fp[-4] <- r6
Branch if StrictCompare:172(===, v48, v49) goto (21, 22)
BoolTest
B21
v97 <- LoadField(v2 . _uri@0150898 {final}) T{String}
v98 <- LoadField(v2 . _schemeEnd@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
v100 <- BinaryInt64Op(+ [tr], v98, v306 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v291 <- BoxInt64(v47 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v291 T{int})
ParallelMove r1 <- r2, r2 <- r7
v102 <- StaticCall:186( substring<0> v97, v100, v291 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:192 B23
B22
ParallelMove r2 <- C goto:194 B23
B23
ParallelMove fp[-7] <- r2
Branch if StrictCompare:18(===, v48 T{bool}, v49 T{bool}) goto (70, 79)
BoolTest
B70
ParallelMove r3 <- fp[-1]
v184 <- LoadField(v2 T{_SimpleUri} . _portStart@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
v186 <- BinaryInt64Op(+ [tr], v184, v304 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v187 <- LoadField(v2 T{_SimpleUri} . _pathStart@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v186, v187) T{bool} goto (24, 77)
B24
ParallelMove r1 <- r3
v96 <- StaticCall:206( get:port<0> v2, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0
v292 <- BoxInt64(v96) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
ParallelMove r1 <- r0 goto:212 B26
B77
B79
B25
ParallelMove r1 <- C goto:214 B26
B26
Branch if StrictCompare:218(===, v44 T{bool}, v49) goto (27, 28)
BoolTest
B27
ParallelMove r1 <- r1, r2 <- fp[-2]
v95 <- StaticCall:224( _makePort@0150898<0> v53, v42, result_type = T{int??}) T{int??}
ParallelMove r0 <- r0
ParallelMove r3 <- r0 goto:230 B29
B28
ParallelMove r3 <- r1 goto:232 B29
B29
ParallelMove fp[-3] <- r3
Branch if StrictCompare:240(===, v48 T{bool}, v49) goto (30, 31)
BoolTest
B30
ParallelMove r4 <- fp[-1]
v91 <- LoadField(v2 . _uri@0150898 {final}) T{String}
v93 <- LoadField(v2 . _portStart@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
v293 <- BoxInt64(v93) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v293 T{int})
ParallelMove r1 <- r2, r2 <- fp[-5]
v94 <- StaticCall:252( substring<0> v91, v47 T{int}, v293 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r7 <- r0, r5 <- fp[-6], r3 <- fp[-7], r4 <- fp[-3] goto:302 B40
B31
ParallelMove r3 <- fp[-7]
v202 <- LoadField(v51 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(!==, v202, v9 T{_Smi}) T{bool} goto (35, 32)
B35
ParallelMove r5 <- fp[-6], r4 <- fp[-3] goto:282 B34
B32
ParallelMove r4 <- fp[-3]
Branch if StrictCompare:264(!==, v54, v0) goto (36, 33)
B36
ParallelMove r5 <- fp[-6] goto:286 B34
B33
ParallelMove r5 <- fp[-6]
Branch if StrictCompare:272(===, v46 T{bool}, v49) goto (37, 38)
BoolTest
B37
B34
ParallelMove r0 <- C goto:296 B39
B38
ParallelMove r0 <- C goto:298 B39
B39
ParallelMove r7 <- r0 goto:304 B40
B40
ParallelMove fp[-8] <- r7
v62 <- LoadField(v2 . _uri@0150898 {final}) T{String}
ParallelMove fp[-4] <- r8
v63 <- LoadField(v2 . _pathStart@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
v64 <- LoadField(v2 . _queryStart@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-5] <- r9
v294 <- BoxInt64(v64) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v294 T{int})
ParallelMove r1 <- r8, r2 <- r2
v65 <- StaticCall:316( substring<0> v62, v63, v294 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r3 <- r0, r0 <- fp[-6]
ParallelMove fp[-9] <- r3
Branch if StrictCompare:320(===, v46 T{bool}, v49) goto (44, 42)
BoolTest
B44
ParallelMove r0 <- fp[-8] goto:354 B43
B42
ParallelMove r0 <- fp[-8]
Branch if StrictCompare:306(!==, v59, v0) T{bool} goto (41, 48)
B41
v165 <- LoadField(v65 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(!==, v165, v9 T{_Smi}) T{bool} goto (45, 49)
B45
B43
ParallelMove r1 <- r3, r2 <- C
v89 <- StaticCall:342( startsWith<0> v65, v88, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:346(!==, v89 T{bool}, v49) goto (46, 50)
BoolTest
B46
MoveArgument(sp[1] <- v88)
MoveArgument(sp[0] <- v65)
v90 <- StaticCall:362( +<0> v88, v65, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r3 <- r0 goto:380 B51
B50
B49
B48
B47
ParallelMove r3 <- fp[-9] goto:382 B51
B51
ParallelMove fp[-6] <- r3
v69 <- LoadField(v2 . _fragmentStart@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-10] <- r4
Branch if RelationalOp(<, v64 T{int}, v69) T{bool} goto (52, 53)
B52
v85 <- BinaryInt64Op(+ [tr], v64 T{int}, v304 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v295 <- BoxInt64(v69 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v295 T{int})
ParallelMove r1 <- fp[-4], r2 <- r2
v87 <- StaticCall:406( substring<0> v62 T{String}, v85, v295 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r3 <- r0 goto:412 B54
B53
ParallelMove r3 <- C goto:414 B54
B54
ParallelMove fp[-1] <- r3
v160 <- LoadField(v62 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v296 <- UnboxInt64([non-speculative], v160 T{_Smi}) [0, 2305843009213693951] int64
Branch if RelationalOp(<, v69 T{int}, v296 T{_Smi}) T{bool} goto (55, 56)
B55
v81 <- BinaryInt64Op(+ [tr], v69 T{int}, v304 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r1, r2 <- r2
v82 <- StaticCall:438( substring<0> v62 T{String}, v81, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r6 <- r0 goto:444 B57
B56
ParallelMove r6 <- C goto:446 B57
B57
ParallelMove fp[-4] <- r6
v77 <- AllocateObject:448(cls=_Uri, <not-aliased>) T{_Uri}
ParallelMove r0 <- r0, r1 <- C
StoreField(v77 T{_Uri} . _text@0150898 = v155 T{Sentinel~}, NoStoreBarrier)
StoreField(v77 T{_Uri} . pathSegments = v155 T{Sentinel~}, NoStoreBarrier)
StoreField(v77 T{_Uri} . hashCode = v155 T{Sentinel~}, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreField(v77 T{_Uri} . scheme = v42 T{String}, NoStoreBarrier)
ParallelMove r1 <- fp[-7]
StoreField(v77 T{_Uri} . _userInfo@0150898 = v51 T{String}, NoStoreBarrier)
ParallelMove r1 <- fp[-8]
StoreField(v77 T{_Uri} . _host@0150898 = v59 T{String?}, NoStoreBarrier)
ParallelMove r1 <- fp[-3]
StoreField(v77 T{_Uri} . _port@0150898 = v54 T{int??}, NoStoreBarrier)
ParallelMove r1 <- fp[-6]
StoreField(v77 T{_Uri} . path = v67 T{String}, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
StoreField(v77 T{_Uri} . _query@0150898 = v71 T{String?}, NoStoreBarrier)
ParallelMove r1 <- fp[-4]
StoreField(v77 T{_Uri} . _fragment@0150898 = v76 T{String?}, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:452(v77)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v2 . _schemeEnd@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
v16 <- LoadField(v3 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v21 <- UnboxInt64([non-speculative], v16 T{_Smi}) [0, 2305843009213693951] int64
Branch if EqualityCompare(v4 == v21 T{_Smi}) T{bool} goto (4, 5)
B4
v10 <- LoadField(v2 . _uri@0150898 {final}) T{String}
ParallelMove r1 <- r0, r2 <- r2
v11 <- StaticCall:28( startsWith<0> v10, v3, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:32 B3
B5
ParallelMove r0 <- C goto:36 B3
B3
ParallelMove r0 <- r0
DartReturn:38(v9)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v2 . start {final}) T{num??}
ParallelMove fp[-2] <- r0
v5 <- LoadField(v2 . end {final}) T{num??}
ParallelMove fp[-1] <- r3
Branch if StrictCompare:14(===, v4, v0) goto (3, 7)
B3
Branch if StrictCompare:20(!==, v5, v0) goto (4, 5)
B4
ParallelMove r1 <- C, r2 <- C
v30 <- CreateArray:26(v0, v9) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v30, v11, v31, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
StoreIndexed([_List] v30, v13, v5 T{num?}, NoStoreBarrier)
MoveArgument(sp[0] <- v30)
v32 <- StaticCall:28( _interpolate@0150898<0> v30, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:34 B6
B5
ParallelMove r0 <- C goto:36 B6
B6
B7
ParallelMove r1 <- r3
Branch if StrictCompare:40(===, v5, v0) goto (8, 9)
B8
ParallelMove r1 <- C, r2 <- C
v25 <- CreateArray:46(v0, v9) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v25, v11, v26, NoStoreBarrier)
ParallelMove r2 <- fp[-2]
StoreIndexed([_List] v25, v13, v4 T{num?}, NoStoreBarrier)
MoveArgument(sp[0] <- v25)
v27 <- StaticCall:48( _interpolate@0150898<0> v25, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
ParallelMove r1 <- r0 goto:98 B16
B9
ParallelMove r2 <- r0
MoveArgument(sp[1] <- v5 T{int?})
MoveArgument(sp[0] <- v4 T{num?})
v6 <- StaticCall:52( ><0> v5 T{int?}, v4 T{num?}, using unchecked entrypoint, recognized_kind = Integer_greaterThan, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:56(===, v6 T{bool}, v7) goto (10, 11)
BoolTest
B10
ParallelMove r3 <- fp[-2], r0 <- fp[-1]
ParallelMove r1 <- C, r2 <- C
v19 <- CreateArray:62(v0, v18) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v19, v11, v20, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreIndexed([_List] v19, v13, v4 T{num?}, NoStoreBarrier)
StoreIndexed([_List] v19, v9, v21, NoStoreBarrier)
ParallelMove r2 <- fp[-1]
StoreIndexed([_List] v19, v22, v5 T{int?}, NoStoreBarrier)
MoveArgument(sp[0] <- v19)
v23 <- StaticCall:64( _interpolate@0150898<0> v19, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
ParallelMove r1 <- r0 goto:92 B15
B11
ParallelMove r1 <- fp[-2], r2 <- fp[-1]
MoveArgument(sp[1] <- v5 T{int?})
MoveArgument(sp[0] <- v4 T{num?})
v8 <- StaticCall:68( <<0> v5 T{int?}, v4 T{num?}, using unchecked entrypoint, recognized_kind = Integer_lessThan, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:72(===, v8 T{bool}, v7) goto (12, 13)
BoolTest
B12
ParallelMove r1 <- C goto:86 B14
B13
ParallelMove r0 <- fp[-2]
ParallelMove r1 <- C, r2 <- C
v10 <- CreateArray:80(v0, v9) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v10, v11, v12, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreIndexed([_List] v10, v13, v4 T{num?}, NoStoreBarrier)
MoveArgument(sp[0] <- v10)
v14 <- StaticCall:82( _interpolate@0150898<0> v10, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
ParallelMove r1 <- r0 goto:88 B14
B14
B15
B16
ParallelMove r0 <- r1 goto:106 B17
B17
ParallelMove r0 <- r0
DartReturn:108(v28)
CheckStackOverflowSlowPath
B0
B1
Intrinsic
ParallelMove r1 <- sp[1]
v5 <- UnboxInt64([non-speculative], v2) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- sp[0]
v6 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
v4 <- RelationalOp(>, v6 T{int}, v5 T{_IntegerImplementation}) T{bool}
ParallelMove r0 <- r0
DartReturn:12(v4)
B0
B1
Intrinsic
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v2)
v4 <- StaticCall:10( _greaterThanFromInteger@0150898<0> v3, v2, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
DartReturn:12(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r3 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v21 <- LoadField(v2 T{IndexError} . invalidValue {final}) T{*?}
ParallelMove r0 <- r4, r2 <- C, r1 <- C, fp[-1] <- r4
t0 <- AssertAssignable:12(v21, v24 T{_Type}, '', instantiator_type_args(v0 T{Null?}), function_type_args(v0 T{Null?})) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
v35 <- UnboxInt64([non-speculative], v21 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v35 T{int}, v37 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:22(v16)
B4
ParallelMove r0 <- fp[-2]
v7 <- LoadField(v2 . length {final}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-3] <- r3
Branch if EqualityCompare(v7 == v37 T{_Smi}) T{bool} goto (5, 6)
B5
ParallelMove r0 <- C
DartReturn:38(v15)
B6
ParallelMove r1 <- C, r2 <- C
v10 <- CreateArray:42(v0, v9) T{_List}
ParallelMove r2 <- r0
StoreIndexed([_List] v10, v4, v11, NoStoreBarrier)
ParallelMove r3 <- fp[-3]
v36 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreIndexed([_List] v10, v12, v36 T{int}, NoStoreBarrier)
MoveArgument(sp[0] <- v10)
v14 <- StaticCall:46( _interpolate@0150898<0> v10, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:48(v14)
CheckStackOverflowSlowPath
B0
B1
ParallelMove r0 <- C
DartReturn:10(v3)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
v3 <- LoadField(v2 . _iterable@9040228 {final}) T{Iterable<X0>}
v36 <- LoadClassId(<non-smi> v3) int64
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r2
v4 <- DispatchTableCall( cid=v36 Iterable.length<0>, v3) T{int}
ParallelMove r0 <- r0, r2 <- fp[2]
v5 <- LoadField(v2 . _start@9040228 {final}) [-9223372036854775808, 9223372036854775807] int64
v28 <- UnboxInt64([non-speculative], v4 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
Branch if RelationalOp(>=, v5, v28 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:26(v14)
B4
v8 <- LoadField(v2 . _endOrLength@9040228 {final}) T{int??}
Branch if StrictCompare:32(===, v8, v0) goto (7, 5)
B7
B5
v29 <- UnboxInt64([non-speculative], v8 T{int?}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>=, v29 T{int?}, v28 T{_Smi}) T{bool} goto (8, 9)
B8
B6
v13 <- BinaryInt64Op(- [tr], v28 T{_Smi}, v5 T{int}) [-9223372036854775808, 9223372036854775807] int64
v31 <- BoxInt64(v13) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
DartReturn:60(v31 T{int})
B9
v11 <- BinaryInt64Op(- [tr], v29 T{int?}, v5 T{int}) [-9223372036854775808, 9223372036854775807] int64
v32 <- BoxInt64(v11) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
DartReturn:68(v32 T{int})
CheckStackOverflowSlowPath
B0
B1
ParallelMove r1 <- sp[0]
v3 <- LoadField(v2 . _source@9040228 {final}) T{_GrowableList}
v9 <- LoadField(v3 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
ParallelMove r0 <- r0
DartReturn:14(v9 T{_Smi})
B0
B1
v3 <- LoadField(v2 . path {final}) T{String}
v9 <- LoadField(v3 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v11 <- StrictCompare:10(===, v9, v12 T{_Smi}) T{bool}
ParallelMove r0 <- r0
DartReturn:14(v11 T{bool})
B0
B1
v3 <- LoadField(v2 . _pathStart@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
v4 <- LoadField(v2 . _queryStart@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
v5 <- EqualityCompare(v3 == v4) T{bool}
ParallelMove r0 <- r0
DartReturn:16(v5)
B0
B1
v3 <- LoadField(v2 . _fragment@0150898 {final}) T{String??}
Branch if StrictCompare:12(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- C goto:22 B5
B4
ParallelMove r0 <- r2 goto:24 B5
B5
ParallelMove r0 <- r0
DartReturn:26(v4)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _fragmentStart@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
v4 <- LoadField(v2 . _uri@0150898 {final}) T{String}
v19 <- LoadField(v4 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v25 <- UnboxInt64([non-speculative], v19 T{_Smi}) [0, 2305843009213693951] int64
Branch if RelationalOp(<, v3, v25 T{_Smi}) T{bool} goto (3, 4)
B3
v13 <- BinaryInt64Op(+ [tr], v3 T{int}, v28 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r2, r2 <- r1
v14 <- StaticCall:32( substring<0> v4 T{String}, v13, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:38 B5
B4
ParallelMove r0 <- C goto:40 B5
B5
ParallelMove r0 <- r0
DartReturn:42(v9)
CheckStackOverflowSlowPath
B0
B1
v3 <- LoadField(v2 . _fragment@0150898 {final}) T{String??}
v4 <- StrictCompare:12(!==, v3, v0) T{bool}
ParallelMove r0 <- r0
DartReturn:16(v4 T{bool})
B0
B1
v3 <- LoadField(v2 . _fragmentStart@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
v4 <- LoadField(v2 . _uri@0150898 {final}) T{String}
v11 <- LoadField(v4 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v12 <- UnboxInt64([non-speculative], v11 T{_Smi}) [0, 2305843009213693951] int64
v6 <- RelationalOp(<, v3, v12 T{_Smi}) T{bool}
ParallelMove r0 <- r0
DartReturn:18(v6)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _hostStart@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
v4 <- LoadField(v2 . _schemeEnd@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
v6 <- BinaryInt64Op(+ [tr], v4, v24 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>, v3, v6) T{bool} goto (3, 4)
B3
v11 <- LoadField(v2 . _uri@0150898 {final}) T{String}
v16 <- BinaryInt64Op(- [tr], v3 T{int}, v25 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v21 <- BoxInt64(v16) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v21 T{int})
ParallelMove r1 <- r2, r2 <- r3
v17 <- StaticCall:36( substring<0> v11, v6 T{int}, v21 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:42 B5
B4
ParallelMove r0 <- C goto:44 B5
B5
ParallelMove r0 <- r0
DartReturn:46(v10)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _port@0150898) T{int??}
Branch if StrictCompare:12(===, v3, v0) goto (3, 4)
B3
v5 <- LoadField(v2 . scheme {final}) T{String}
ParallelMove r1 <- r0
v6 <- StaticCall:20( _defaultPort@0150898<0> v5, result_type = T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:26 B5
B4
v10 <- UnboxInt64([non-speculative], v3 T{int?}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r1 goto:28 B5
B5
ParallelMove r0 <- r0
DartReturn:30(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v3 <- LoadField(v2 . _current@0150898) T{_RegExpMatch?}
ParallelMove fp[-1] <- r3
Branch if StrictCompare:12(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- r3, r2 <- C, r1 <- C
t0 <- AssertAssignable:18(v3 T{_RegExpMatch?}, v5, ' in type cast', instantiator_type_args(v0), function_type_args(v0)) T{_RegExpMatch}
AssertAssignable for compile-time type
TTSCall
ParallelMove  goto:24 B5
B4
B5
ParallelMove r0 <- fp[-1]
DartReturn:28(v3 T{_RegExpMatch})
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v21 <- LoadField(v2 T{_SimpleUri} . _hostStart@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>, v21, v56 T{_Smi}) T{bool} goto (12, 17)
B12
v27 <- LoadField(v2 T{_SimpleUri} . _portStart@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
v29 <- BinaryInt64Op(+ [tr], v27, v57 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v30 <- LoadField(v2 T{_SimpleUri} . _pathStart@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v29, v30) T{bool} goto (3, 15)
B3
v10 <- LoadField(v2 . _uri@0150898 {final}) T{String}
v55 <- BoxInt64(v30 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v55 T{int})
ParallelMove r1 <- r4, r2 <- r2
v15 <- StaticCall:28( substring<0> v10, v29 T{int}, v55 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r1 <- r0
v16 <- StaticCall:30( parse<0> v15, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0
DartReturn:32(v16)
B15
B17
B4
ParallelMove r1 <- r0
v5 <- StaticCall:36( get:_isHttp@0150898<0> v2, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:40(===, v5 T{bool}, v4) goto (5, 6)
BoolTest
B5
ParallelMove r0 <- C
DartReturn:46(v58 T{_Smi})
B6
ParallelMove r1 <- fp[-1]
v6 <- StaticCall:50( get:_isHttps@0150898<0> v2, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:54(===, v6 T{bool}, v4) goto (7, 8)
BoolTest
B7
ParallelMove r0 <- C
DartReturn:60(v59 T{_Smi})
B8
ParallelMove r0 <- C
DartReturn:64(v56 T{_Smi})
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _schemeEnd@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v3 == v17 T{_Smi}) T{bool} goto (4, 5)
B4
v9 <- LoadField(v2 . _uri@0150898 {final}) T{String}
ParallelMove r1 <- r0, r2 <- C
v11 <- StaticCall:26( startsWith<0> v9, v10, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:30 B3
B5
ParallelMove r0 <- C goto:34 B3
B3
ParallelMove r0 <- r0
DartReturn:36(v8)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _schemeEnd@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v3 == v17 T{_Smi}) T{bool} goto (4, 5)
B4
v9 <- LoadField(v2 . _uri@0150898 {final}) T{String}
ParallelMove r1 <- r0, r2 <- C
v11 <- StaticCall:26( startsWith<0> v9, v10, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:30 B3
B5
ParallelMove r0 <- C goto:34 B3
B3
ParallelMove r0 <- r0
DartReturn:36(v8)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . path {final}) T{String}
ParallelMove r1 <- r0, r2 <- C
v5 <- StaticCall:12( startsWith<0> v3, v4, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
DartReturn:14(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v3 <- LoadField(v2 . _current@0150898) T{_StringMatch?}
ParallelMove fp[-1] <- r3
Branch if StrictCompare:12(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- r3, r2 <- C, r1 <- C
t0 <- AssertAssignable:18(v3 T{_StringMatch?}, v5, ' in type cast', instantiator_type_args(v0), function_type_args(v0)) T{Match}
AssertAssignable for compile-time type
TTSCall
ParallelMove  goto:24 B5
B4
B5
ParallelMove r0 <- fp[-1]
DartReturn:28(v3 T{Match})
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _uri@0150898 {final}) T{String}
v5 <- LoadField(v2 . _pathStart@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
v7 <- BoxInt64(v5) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v7 T{int})
ParallelMove r1 <- r2, r2 <- C
v6 <- StaticCall:14( startsWith<0> v3, v4, v7 T{int}, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
DartReturn:16(v6)
CheckStackOverflowSlowPath
B0
B1
v3 <- LoadField(v2 . scheme {final}) T{String}
ParallelMove r0 <- r0
DartReturn:4(v3)
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _schemeCache@0150898) T{String??}
Branch if StrictCompare:12(===, v3, v0) goto (3, 4)
B3
ParallelMove r1 <- r0
v5 <- StaticCall:18( _computeScheme@0150898<0> v2, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0, r1 <- r0, r2 <- fp[-1]
StoreField(v2 T{_SimpleUri} . _schemeCache@0150898 = v5 T{String})
ParallelMove r0 <- r1 goto:26 B5
B4
ParallelMove r0 <- r1 goto:28 B5
B5
ParallelMove r0 <- r0
DartReturn:30(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _schemeEnd@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-1] <- r2
Branch if RelationalOp(<=, v3, v42 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:22(v18)
B4
ParallelMove r1 <- r0
v7 <- StaticCall:26( get:_isHttp@0150898<0> v2, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:30(===, v7 T{bool}, v6) goto (5, 6)
BoolTest
B5
ParallelMove r0 <- C
DartReturn:36(v17)
B6
ParallelMove r1 <- fp[-2]
v8 <- StaticCall:40( get:_isHttps@0150898<0> v2, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:44(===, v8 T{bool}, v6) goto (7, 8)
BoolTest
B7
ParallelMove r0 <- C
DartReturn:50(v16)
B8
ParallelMove r1 <- fp[-2]
v9 <- StaticCall:54( get:_isFile@0150898<0> v2, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:58(===, v9 T{bool}, v6) goto (9, 10)
BoolTest
B9
ParallelMove r0 <- C
DartReturn:64(v15)
B10
ParallelMove r1 <- fp[-2]
v10 <- StaticCall:68( get:_isPackage@0150898<0> v2, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:72(===, v10 T{bool}, v6) goto (11, 12)
BoolTest
B11
ParallelMove r0 <- C
DartReturn:78(v14)
B12
ParallelMove r0 <- fp[-2], r2 <- fp[-1]
v11 <- LoadField(v2 . _uri@0150898 {final}) T{String}
v41 <- BoxInt64(v3 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v41 T{int})
ParallelMove r1 <- r3, r2 <- C
v13 <- StaticCall:86( substring<0> v11, v42 T{_Smi}, v41 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:88(v13)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _schemeEnd@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v3 == v17 T{_Smi}) T{bool} goto (4, 5)
B4
v9 <- LoadField(v2 . _uri@0150898 {final}) T{String}
ParallelMove r1 <- r0, r2 <- C
v11 <- StaticCall:26( startsWith<0> v9, v10, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:30 B3
B5
ParallelMove r0 <- C goto:34 B3
B3
ParallelMove r0 <- r0
DartReturn:36(v8)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _schemeEnd@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v3 == v17 T{_Smi}) T{bool} goto (4, 5)
B4
v9 <- LoadField(v2 . _uri@0150898 {final}) T{String}
ParallelMove r1 <- r0, r2 <- C
v11 <- StaticCall:26( startsWith<0> v9, v10, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:30 B3
B5
ParallelMove r0 <- C goto:34 B3
B3
ParallelMove r0 <- r0
DartReturn:36(v8)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, r1 <- r2
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v2 . scheme {final}) T{String}
v16 <- LoadField(v3 T{_OneByteString} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v21 <- LoadField(v4 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare(!==, v16 T{_Smi}, v21 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:26(v11)
B4
ParallelMove r1 <- r1, r2 <- r2, r3 <- C
v10 <- StaticCall:30( _caseInsensitiveStartsWith@0150898<0> v3, v4, v30 T{_Smi}, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
DartReturn:32(v10)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r1, r2 <- r2, r3 <- r3
v5 <- StaticCall:10( _caseInsensitiveCompareStart@0150898<0> v2, v3, v4, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0
v7 <- RelationalOp(>=, v5, v9 T{_Smi}) T{bool}
ParallelMove r0 <- r1
DartReturn:14(v7)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1
v57 <- LoadField:108(v2 T{_OneByteString} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v89 <- UnboxInt64:108([non-speculative], v57 T{_Smi}) [0, 2305843009213693951] int64
v42 <- LoadField:108(v3 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v93 <- UnboxInt64:108([non-speculative], v42) [0, 2305843009213693951] int64
v44 <- LoadClassId:108(v3 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove r9 <- C, r8 <- C goto:108 B16
B16
  Loop 0
  Loop Header
CheckStackOverflow:112(stack=0, loop=1)
Branch if RelationalOp(<, v7, v89 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 0
v95 <- LoadIndexed:26([_OneByteString] v2, v7 T{int}) [0, 255] int64
v15 <- BinaryInt64Op(+ [tr], v4, v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r7, r1 <- r11
t0 <- GenericCheckBound:30(v93 T{_Smi}, v15 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:30(===, v44, v52 T{_Smi}) goto (21, 22)
B21
  Loop 0
v48 <- LoadIndexed([_OneByteString] v3 T{_OneByteString}, v15 T{int}) [0, 255] int64
ParallelMove r1 <- r1 goto:30 B20
B22
  Loop 0
v46 <- LoadIndexed([_TwoByteString] v3 T{_StringBase}, v15 T{int}) [0, 65535] int64
ParallelMove r1 <- r1 goto:30 B20
B20
  Loop 0
v17 <- BinaryInt64Op(^ [tr], v95, v47 T{_Smi}) [0, 65535] int64
Branch if EqualityCompare(v17 != v94 T{_Smi}) T{bool} goto (5, 15)
B5
  Loop 0
Branch if EqualityCompare(v17 == v96 T{_Smi}) T{bool} goto (6, 13)
B6
  Loop 0
v27 <- BinaryInt64Op(| [tr], v47 T{_Smi}, v17 T{int}) [0, 65535] int64
Branch if RelationalOp(<=, v97 T{_Smi}, v27) T{bool} goto (7, 11)
B7
  Loop 0
Branch if RelationalOp(<=, v27, v98 T{_Smi}) T{bool} goto (8, 12)
B8
  Loop 0
ParallelMove r9 <- C goto:78 B9
B12
B11
B10
B13
B14
ParallelMove r0 <- C
DartReturn:100(v69)
B15
B9
  Loop 0
v22 <- BinaryInt64Op(+ [tr], v7 T{int}, v99 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r9 <- r9, r8 <- r0 goto:110 B16
B4
ParallelMove r0 <- r9
DartReturn:114(v6)
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
v3 <- LoadField(v2 . _host@0150898 {final}) T{String??}
v4 <- StrictCompare:12(!==, v3, v0) T{bool}
ParallelMove r0 <- r0
DartReturn:16(v4 T{bool})
B0
B1
v3 <- LoadField(v2 . _hostStart@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
v5 <- RelationalOp(>, v3, v7 T{_Smi}) T{bool}
ParallelMove r0 <- r0
DartReturn:14(v5)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . scheme {final}) T{String}
MoveArgument(sp[0] <- v3 T{_StringBase})
v9 <- StaticCall:10( get:isEmpty<0> v3 T{_StringBase}, recognized_kind = StringBaseIsEmpty, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
v10 <- BooleanNegate(v9 T{bool}) T{bool}
ParallelMove r0 <- r1
DartReturn:14(v10 T{bool})
CheckStackOverflowSlowPath
B0
B1
v3 <- LoadField(v2 . _schemeEnd@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
v5 <- RelationalOp(>, v3, v7 T{_Smi}) T{bool}
ParallelMove r0 <- r0
DartReturn:14(v5)
B0
B1
v3 <- LoadField(v2 . _query@0150898 {final}) T{String??}
Branch if StrictCompare:12(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- C goto:22 B5
B4
ParallelMove r0 <- r2 goto:24 B5
B5
ParallelMove r0 <- r0
DartReturn:26(v4)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _queryStart@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
v4 <- LoadField(v2 . _fragmentStart@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v3, v4) T{bool} goto (3, 4)
B3
v9 <- LoadField(v2 . _uri@0150898 {final}) T{String}
v12 <- BinaryInt64Op(+ [tr], v3 T{int}, v19 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v16 <- BoxInt64(v4 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v16 T{int})
ParallelMove r1 <- r3, r2 <- r4
v14 <- StaticCall:32( substring<0> v9, v12, v16 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:38 B5
B4
ParallelMove r0 <- C goto:40 B5
B5
ParallelMove r0 <- r0
DartReturn:42(v8)
CheckStackOverflowSlowPath
B0
B1
v3 <- LoadField(v2 . _query@0150898 {final}) T{String??}
v4 <- StrictCompare:12(!==, v3, v0) T{bool}
ParallelMove r0 <- r0
DartReturn:16(v4 T{bool})
B0
B1
v3 <- LoadField(v2 . _queryStart@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
v4 <- LoadField(v2 . _fragmentStart@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
v5 <- RelationalOp(<, v3, v4) T{bool}
ParallelMove r0 <- r0
DartReturn:16(v5)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _host@0150898 {final}) T{String??}
ParallelMove fp[-1] <- r0
Branch if StrictCompare:12(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:18(v11)
B4
ParallelMove r1 <- r0, r2 <- C
v5 <- StaticCall:22( startsWith<0> v3 T{String?}, v4, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:26(===, v5 T{bool}, v6) goto (5, 6)
BoolTest
B5
ParallelMove r1 <- fp[-1]
v17 <- LoadField(v3 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v26 <- UnboxInt64([non-speculative], v17 T{_Smi}) [0, 2305843009213693951] int64
v9 <- BinaryInt64Op(- [tr], v26 T{_Smi}, v28 T{_Smi}) [v26-1, v26-1] int64
v27 <- BoxInt64(v9) [v26-1, v26-1] T{_Smi}
MoveArgument(sp[0] <- v27)
ParallelMove r1 <- r1, r2 <- C
v10 <- StaticCall:36( substring<0> v3 T{String?}, v28 T{_Smi}, v27, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:38(v10)
B6
ParallelMove r1 <- fp[-1]
ParallelMove r0 <- r1
DartReturn:42(v3 T{String?})
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _hostStart@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>, v3, v20 T{_Smi}) T{bool} goto (3, 4)
B3
v9 <- LoadField(v2 . _uri@0150898 {final}) T{String}
v11 <- LoadField(v2 . _portStart@0150898 {final}) [-9223372036854775808, 9223372036854775807] int64
v18 <- BoxInt64(v11) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v18 T{int})
ParallelMove r1 <- r3, r2 <- r2
v12 <- StaticCall:28( substring<0> v9, v3 T{int}, v18 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:34 B5
B4
ParallelMove r0 <- C goto:36 B5
B5
ParallelMove r0 <- r0
DartReturn:38(v8)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v3 <- LoadField(v2 . _current@4048458) T{X0??}
ParallelMove fp[-1] <- r3
Branch if StrictCompare:12(===, v3, v0) goto (3, 4)
B3
v6 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r3, r2 <- r2, r1 <- C
t0 <- AssertAssignable:18(v3 T{X0??}, v5, ' in type cast', instantiator_type_args(v6), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove  goto:24 B5
B4
B5
ParallelMove r0 <- fp[-1]
DartReturn:28(v3 T{X0??})
B0
B1
Enter frame
ParallelMove r1 <- C, r2 <- fp[2]
v4 <- AllocateClosure:6(v3, v2) T{_Closure}
ParallelMove r0 <- r0
DartReturn:8(v4)
B0
B1
Enter frame
ParallelMove r1 <- C, r2 <- fp[2]
v4 <- AllocateClosure:6(v3, v2) T{_Closure}
ParallelMove r0 <- r0
DartReturn:8(v4)
B0
B2
Enter frame
ParallelMove r0 <- fp[4]
v5 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r1, r2 <- fp[3], r3 <- fp[2]
v7 <- StaticCall:10( _addError@4048458<0> v5 T{*}, v3, v4) T{void?}
ParallelMove r0 <- r0
DartReturn:12(v7)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r1 <- C, r2 <- fp[2]
v4 <- AllocateClosure:6(v3, v2) T{_Closure}
ParallelMove r0 <- r0
DartReturn:8(v4)
B0
B1
Enter frame
ParallelMove r1 <- C, r2 <- fp[2]
v4 <- AllocateClosure:6(v3, v2) T{_Closure}
ParallelMove r0 <- r0
DartReturn:8(v4)
B0
B2
Enter frame
ParallelMove r0 <- fp[3]
v4 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r1, r2 <- fp[2]
v6 <- StaticCall:10( _add@4048458<0> v4 T{*}, v3) T{void?}
ParallelMove r0 <- r0
DartReturn:12(v6)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v92 <- LoadField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v92, v133) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:20(v0)
B4
Branch if RelationalOp(>=, v92 T{int}, v135 T{_Smi}) T{bool} goto (5, 18)
B5
ParallelMove r1 <- r0
StaticCall:34( _decrementPauseCount@4048458<0> v2, using unchecked entrypoint)
ParallelMove r0 <- fp[-1]
v77 <- LoadField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v77, v135 T{_Smi}) T{bool} goto (6, 16)
B6
Branch if TestInt(v77, v136) goto (7, 10)
B7
v14 <- LoadField(v2 . _pending@4048458) T{_PendingEvents?}
CheckNull:56(v14, CastError) T{_PendingEvents}
v60 <- LoadField(v14 T{_PendingEvents} . lastPendingEvent) T{_DelayedEvent<dynamic>??}
Branch if StrictCompare:12(!==, v60, v0 T{Null?}) T{bool} goto (8, 11)
B8
ParallelMove r1 <- r2, r2 <- r0
StaticCall:74( schedule<0> v14 T{_PendingEvents}, v2)
ParallelMove  goto:118 B15
B11
B10
B9
v11 <- BinaryInt64Op(& [tr], v77 T{int}, v111) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458 = v11 T{int} <int64>)
Branch if TestInt(v11, v137) goto (12, 13)
B12
v35 <- LoadClassId(v2) [440, 441] int64
Branch if EqualityCompare:104(v35 == v36) goto (20, 23)
B20
ParallelMove r1 <- C, r2 <- r0
v24 <- AllocateClosure:6(v26 T{Function}, v2 T{_BufferingStreamSubscription<X0>}) T{_Closure}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:8 B24
B23
ParallelMove r1 <- C, r2 <- fp[-1]
v32 <- AllocateClosure:6(v34 T{Function}, v2 T{_BroadcastSubscription}) T{_Closure}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:8 B24
B24
ParallelMove r1 <- fp[-1], r2 <- r2
StaticCall:106( _guardCallback@4048458<0> v2, v37, using unchecked entrypoint)
ParallelMove  goto:112 B14
B13
B14
B15
B16
B17
B18
B19
ParallelMove r0 <- C
DartReturn:138(v0)
CheckStackOverflowSlowPath
slow path check null (cast) operation
B0
B1
v3 <- LoadField(v2 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
v5 <- BinaryInt64Op(- [tr], v3, v13 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458 = v5 T{int} <int64>)
ParallelMove r0 <- C
DartReturn:16(v0)
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r1
v5 <- StaticCall:10( _onResume@4048458<0> v3 T{*}) T{void?}
ParallelMove r0 <- r0
DartReturn:12(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
v6 <- BinaryInt64Op(& [tr], v3, v37) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458 = v6 T{int} <int64>)
Branch if TestInt(v6, v43) goto (3, 4)
B3
ParallelMove r1 <- r0
StaticCall:28( _cancel@4048458<0> v2, using unchecked entrypoint)
ParallelMove  goto:34 B5
B4
B5
v9 <- LoadField(v2 . _cancelFuture@4048458) T{_Future?}
Branch if StrictCompare:40(===, v9, v0) goto (6, 7)
B6
v15 <- LoadStaticField:4(_nullFuture@4048458, CallsInitializer) T{_Future}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:52 B8
B7
ParallelMove r0 <- r1 goto:54 B8
B8
ParallelMove r0 <- r0
DartReturn:56(v10)
CheckStackOverflowSlowPath
B0
B3
Enter frame
ParallelMove r4 <- r1, r3 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v5 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r3, r2 <- r2, r1 <- C
t0 <- AssertAssignable:10(v3, v4, 'dispatch', instantiator_type_args(v5), function_type_args(v0)) T{_EventDispatch<X0>}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
v7 <- LoadField(v2 . value {final}) T{X0?}
ParallelMove r1 <- fp[-2], r2 <- r2
StaticCall:14( _sendData@4048458<0> v3 T{_EventDispatch<X0>}, v7)
ParallelMove r0 <- C
DartReturn:16(v0)
CheckStackOverflowSlowPath
B0
B3
Enter frame
ParallelMove r4 <- r1, r3 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- r3, r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v3, v4, 'dispatch', instantiator_type_args(v0), function_type_args(v0)) T{_EventDispatch<dynamic>}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
v6 <- LoadField(v2 . error {final}) T{Object}
v7 <- LoadField(v2 . stackTrace {final}) T{StackTrace}
ParallelMove r1 <- fp[-2], r2 <- r2, r3 <- r3
StaticCall:16( _sendError@4048458<0> v3 T{_EventDispatch<dynamic>}, v6, v7, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:18(v0)
CheckStackOverflowSlowPath
B0
B3
Enter frame
ParallelMove r3 <- r2, fp[-1] <- r2
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- r3, r2 <- C, r1 <- C
t0 <- AssertAssignable:10(v3, v4, 'dispatch', instantiator_type_args(v0), function_type_args(v0)) T{_EventDispatch<dynamic>}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-1]
StaticCall:12( _sendDone@4048458<0> v3 T{_EventDispatch<dynamic>}, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:14(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r2 <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _controller@4048458 {final}) T{_StreamControllerLifecycle<X0>}
v4 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r1, r2 <- r2
DispatchTableCall( cid=v4 _StreamControllerLifecycle._recordResume<0>, v3, v2)
ParallelMove r0 <- C
DartReturn:14(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r2 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v78 <- LoadField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v78, v114) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:20(v0)
B4
ParallelMove r1 <- C
ParallelMove r3 <- r0
v131 <- IntConverter(int64->uint32[tr], v78 T{int}) uint32
v64 <- BinaryUint32Op(& [tr], v131 T{int}, v133 T{_Smi}) [0, 4] uint32
ParallelMove r4 <- r4
v132 <- IntConverter(uint32->int64, v64) int64
ParallelMove fp[-1] <- r4
v9 <- BinaryInt64Op(+ [tr], v78 T{int}, v116 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v11 <- BinaryInt64Op(| [tr], v9, v117 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458 = v11 T{int} <int64>)
Branch if RelationalOp(<, v78 T{int}, v116 T{_Smi}) T{bool} goto (5, 9)
B5
v16 <- LoadField(v2 . _pending@4048458) T{_PendingEvents?}
Branch if StrictCompare:46(===, v16, v0) goto (6, 7)
B6
B7
ParallelMove r1 <- r1
v17 <- StaticCall:54( cancelSchedule<0> v16 T{_PendingEvents}, using unchecked entrypoint) T{void?}
ParallelMove  goto:60 B8
B8
B9
B10
Branch if EqualityCompare(v132 T{_Smi} == v115 T{_Smi}) T{bool} goto (11, 14)
B11
ParallelMove r0 <- fp[-2]
v43 <- LoadField(v2 T{_BufferingStreamSubscription<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v43, v118) goto (12, 15)
B12
v36 <- LoadClassId(v2) [440, 441] int64
Branch if EqualityCompare:88(v36 == v37) goto (17, 20)
B17
ParallelMove r1 <- C, r2 <- r0
v25 <- AllocateClosure:6(v27 T{Function}, v2 T{_BufferingStreamSubscription<X0>}) T{_Closure}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:8 B21
B20
ParallelMove r1 <- C, r2 <- fp[-2]
v33 <- AllocateClosure:6(v35 T{Function}, v2 T{_BroadcastSubscription}) T{_Closure}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:8 B21
B21
ParallelMove r1 <- fp[-2], r2 <- r2
StaticCall:90( _guardCallback@4048458<0> v2, v38, using unchecked entrypoint)
ParallelMove  goto:104 B16
B15
B14
B13
B16
ParallelMove r0 <- C
DartReturn:108(v0)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r1
v5 <- StaticCall:10( _onPause@4048458<0> v3 T{*}) T{void?}
ParallelMove r0 <- r0
DartReturn:12(v5)
CheckStackOverflowSlowPath
B0
B1
v3 <- LoadField(v2 . next) T{_DelayedEvent<dynamic>??}
ParallelMove r0 <- r0
DartReturn:4(v3)
B0
B2
ParallelMove r0 <- C
DartReturn:10(v0)
B0
B1
Enter frame
v3 <- LoadField(v2 . _map@3220832 {final}) T{_Map}
ParallelMove fp[-1] <- r0
v9 <- LoadField(v3 T{_Map} . :type_arguments {final}) T{TypeArguments}
ParallelMove r1 <- r1
v10 <- AllocateObject:10(cls=_CompactIterable, v9, <not-aliased>) T{_CompactIterable}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v10 T{_CompactIterable} . _table@3220832 = v3 T{_Map}, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v10 T{_CompactIterable} . _offset@3220832 = v14 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v10 T{_CompactIterable} . _step@3220832 = v30 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:14(v10)
B0
B1
Enter frame
v3 <- LoadField(v2 . _current@3220832) T{X0??}
ParallelMove fp[-1] <- r3
Branch if StrictCompare:12(===, v3, v0) goto (3, 4)
B3
v6 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r3, r2 <- r2, r1 <- C
t0 <- AssertAssignable:18(v3 T{X0??}, v5, ' in type cast', instantiator_type_args(v6), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove  goto:24 B5
B4
B5
ParallelMove r0 <- fp[-1]
DartReturn:28(v3 T{X0??})
B0
B1
Enter frame
v3 <- LoadField(v2 . _current@3220832) T{X0??}
ParallelMove fp[-1] <- r3
Branch if StrictCompare:12(===, v3, v0) goto (3, 4)
B3
v6 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r3, r2 <- r2, r1 <- C
t0 <- AssertAssignable:18(v3 T{X0??}, v5, ' in type cast', instantiator_type_args(v6), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove  goto:24 B5
B4
B5
ParallelMove r0 <- fp[-1]
DartReturn:28(v3 T{X0??})
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v2 . _map@3220832 {final}) T{_Map}
ParallelMove r1 <- r0, r2 <- r2
StaticCall:12( forEach<0> v4, v3, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:14(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v3 <- LoadField(v2 . _current@9040228) T{X0??}
ParallelMove fp[-1] <- r3
Branch if StrictCompare:12(===, v3, v0) goto (3, 4)
B3
v6 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r3, r2 <- r2, r1 <- C
t0 <- AssertAssignable:18(v3 T{X0??}, v5, ' in type cast', instantiator_type_args(v6), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove  goto:24 B5
B4
B5
ParallelMove r0 <- fp[-1]
DartReturn:28(v3 T{X0??})
B0
B1
Enter frame
v10 <- LoadField(v2 T{_UnmodifiableInt8ArrayView} . TypedDataView.typed_data {final}) T{*}
ParallelMove fp[-1] <- r0
v3 <- AllocateObject:10(cls=_UnmodifiableByteBufferView, <not-aliased>) T{_UnmodifiableByteBufferView}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v3 T{_UnmodifiableByteBufferView} . _data@7027147 = v10 T{_TypedList}, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:18(v3)
B0
B1
Enter frame
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t2 <- AssertAssignable:12(v3, v5, '', instantiator_type_args(v0), function_type_args(v0)) T{_TypedList}
AssertAssignable for compile-time type
TTSCall
v4 <- AllocateObject:10(cls=_ByteBuffer) T{_ByteBuffer}
ParallelMove r0 <- r0, r1 <- fp[2]
StoreField(v4 T{_ByteBuffer} . _data@7027147 = v3 T{_TypedList}, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:16(v4)
B0
B1
Enter frame
v9 <- LoadField(v2 T{_TypedListView} . TypedDataView.typed_data {final}) T{*}
ParallelMove fp[-1] <- r0
v14 <- AllocateObject:10(cls=_ByteBuffer, <not-aliased>) T{_ByteBuffer}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v14 T{_ByteBuffer} . _data@7027147 = v9 T{_TypedList}, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:14(v14 T{_ByteBuffer})
B0
B1
Enter frame
ParallelMove fp[-1] <- r1
v3 <- AllocateObject:10(cls=_ByteBuffer) T{_ByteBuffer}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v3 T{_ByteBuffer} . _data@7027147 = v2 T{_TypedList}, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:14(v3)
B0
B1
Enter frame
v3 <- LoadField(v2 . _current@7027147) T{X0??}
ParallelMove fp[-1] <- r3
Branch if StrictCompare:12(===, v3, v0) goto (3, 4)
B3
v6 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r3, r2 <- r2, r1 <- C
t0 <- AssertAssignable:18(v3 T{X0??}, v5, ' in type cast', instantiator_type_args(v6), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove  goto:24 B5
B4
B5
ParallelMove r0 <- fp[-1]
DartReturn:28(v3 T{X0??})
B0
B36
Enter frame
ParallelMove fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v90 <- LoadField(v2 T{__ConstSet&_HashVMImmutableBase&SetMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashSetMixin<X0>} . ImmutableLinkedHashBase.data {final}) T{_ImmutableList}
v95 <- LoadField(v90 T{_ImmutableList} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v206 <- UnboxInt64([non-speculative], v95 T{_Smi}) [0, 576460752303423487] int64
Branch if RelationalOp(>, v206 T{_Smi}, v214 T{_Smi}) T{bool} goto (37, 38)
B37
ParallelMove r2 <- r0 goto:48 B46
B38
Branch if RelationalOp(<, v206 T{_Smi}, v214 T{_Smi}) T{bool} goto (39, 43)
B39
ParallelMove r2 <- C goto:62 B46
B43
ParallelMove r2 <- r0 goto:98 B46
B46
v132 <- BinaryInt64Op(- [tr], v126 T{_Smi}, v215 T{_Smi}) [-1, 576460752303423486] int64
v133 <- ShiftInt64Op(>> [tr], v132, v215 T{_Smi}) [-1, 288230376151711743] int64
v134 <- BinaryInt64Op(| [tr], v132, v133) [-576460752303423488, 576460752303423487] int64
v136 <- ShiftInt64Op(>> [tr], v134, v216 T{_Smi}) [-144115188075855872, 144115188075855871] int64
v137 <- BinaryInt64Op(| [tr], v134, v136) [-576460752303423488, 576460752303423487] int64
v139 <- ShiftInt64Op(>> [tr], v137, v217 T{_Smi}) [-36028797018963968, 36028797018963967] int64
v140 <- BinaryInt64Op(| [tr], v137, v139) [-576460752303423488, 576460752303423487] int64
v142 <- ShiftInt64Op(>> [tr], v140, v214 T{_Smi}) [-2251799813685248, 2251799813685247] int64
v143 <- BinaryInt64Op(| [tr], v140, v142) [-576460752303423488, 576460752303423487] int64
v145 <- ShiftInt64Op(>> [tr], v143, v218 T{_Smi}) [-8796093022208, 8796093022207] int64
v146 <- BinaryInt64Op(| [tr], v143, v145) [-576460752303423488, 576460752303423487] int64
v148 <- ShiftInt64Op(>> [tr], v146, v219 T{_Smi}) [-134217728, 134217727] int64
v149 <- BinaryInt64Op(| [tr], v146, v148) [-576460752303423488, 576460752303423487] int64
v150 <- BinaryInt64Op(+ [tr], v149, v215 T{_Smi}) [-576460752303423487, 576460752303423488] int64
Branch if EqualityCompare(v206 T{_Smi} == v220 T{_Smi}) T{bool} goto (3, 4)
B3
v85 <- LoadStaticField:4(_uninitializedIndex@3220832, CallsInitializer) T{_Uint32List}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:40 B5
B4
v209 <- BoxInt64(v150 T{int}) [-576460752303423487, 576460752303423488] T{_Smi}
ParallelMove r4 <- r4
v82 <- AllocateTypedData:10(v209) T{_Uint32List}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:42 B5
B5
ParallelMove r0 <- r2
StoreField(v2 T{__ConstSet&_HashVMImmutableBase&SetMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashSetMixin<X0>} . ImmutableLinkedHashBase.index = v15)
v36 <- LoadField(v15 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
Branch if StrictCompare(===, v36 T{_Smi}, v66 T{_Smi}) T{bool} goto (14, 18)
B14
ParallelMove r3 <- C, r2 <- r1 goto:20 B19
B18
MoveArgument(sp[0] <- v36 T{_Smi})
v44 <- StaticCall:24( get:bitLength<0> v36 T{_Smi}, recognized_kind = Smi_bitLength, result_type = T{_Smi}) [-4611686018427387904, 4611686018427387903] T{_Smi}
ParallelMove r0 <- r0
v212 <- UnboxInt64([non-speculative], v44) [-4611686018427387904, 4611686018427387903] int64
v46 <- BinaryInt64Op(- [tr], v212 T{_Smi}, v216 T{_Smi}) [-4611686018427387906, 4611686018427387901] int64
ParallelMove r1 <- C
v54 <- BinaryInt64Op(- [tr], v219 T{_Smi}, v46) [-4611686018427387869, 4611686018427387938] int64
ParallelMove r0 <- C
v55 <- ShiftInt64Op(<< [tr], v215 T{_Smi}, v54) [-9223372036854775808, 9223372036854775807] int64
v56 <- BinaryInt64Op(- [tr], v55, v215 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0, r2 <- fp[-1] goto:58 B19
B19
v213 <- BoxInt64(v70 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v2 T{__ConstSet&_HashVMImmutableBase&SetMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.hash_mask = v213 T{int}, NoStoreBarrier)
ParallelMove r1 <- r2
StaticCall:54( _rehash@3220832<0> v2, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:56(v0)
CheckStackOverflowSlowPath
slow path int64 shift operation
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v77 <- LoadField(v2 T{__ConstSet&_HashVMImmutableBase&SetMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.deleted_keys) [0, 4611686018427387903] T{_Smi}
v100 <- UnboxInt64([non-speculative], v77 T{_Smi}) [0, 4611686018427387903] int64
v5 <- ShiftInt64Op(<< [tr], v100 T{_Smi}, v109 T{_Smi}) [0, 9223372036854775806] int64
v82 <- LoadField(v2 T{__ConstSet&_HashVMImmutableBase&SetMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.used_data) [0, 4611686018427387903] T{_Smi}
v101 <- UnboxInt64([non-speculative], v82 T{_Smi}) [0, 4611686018427387903] int64
Branch if RelationalOp(>, v5, v101 T{_Smi}) T{bool} goto (3, 4)
B3
v92 <- LoadField(v2 T{__ConstSet&_HashVMImmutableBase&SetMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashSetMixin<X0>} . ImmutableLinkedHashBase.index) T{_Uint32List?}
CheckNull:12(v92, CastError) T{_Uint32List}
v57 <- LoadField(v92 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v62 <- LoadField(v2 T{__ConstSet&_HashVMImmutableBase&SetMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.hash_mask) [0, 4611686018427387903] T{_Smi}
v67 <- LoadField(v2 T{__ConstSet&_HashVMImmutableBase&SetMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashSetMixin<X0>} . ImmutableLinkedHashBase.data {final}) T{_ImmutableList}
v102 <- UnboxInt64([non-speculative], v57 T{_Smi}) [0, 4611686018427387903] int64
v103 <- UnboxInt64([non-speculative], v62 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- r1, r2 <- r3, r3 <- r2, r5 <- r5, r6 <- r6
StaticCall:36( _init@3220832<0> v2, v102 T{_Smi}, v103 T{_Smi}, v67 T{_ImmutableList}, v101 T{_Smi}, using unchecked entrypoint)
ParallelMove  goto:58 B5
B4
v87 <- LoadField(v2 T{__ConstSet&_HashVMImmutableBase&SetMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashSetMixin<X0>} . ImmutableLinkedHashBase.index) T{_Uint32List?}
CheckNull:12(v87, CastError) T{_Uint32List}
v31 <- LoadField(v87 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v105 <- UnboxInt64([non-speculative], v31 T{_Smi}) [0, 4611686018427387903] int64
v11 <- ShiftInt64Op(<< [tr], v105 T{_Smi}, v109 T{_Smi}) [0, 9223372036854775806] int64
v36 <- LoadField(v2 T{__ConstSet&_HashVMImmutableBase&SetMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.hash_mask) [0, 4611686018427387903] T{_Smi}
v106 <- UnboxInt64([non-speculative], v36 T{_Smi}) [0, 4611686018427387903] int64
v13 <- ShiftInt64Op(>> [tr], v106 T{_Smi}, v109 T{_Smi}) [0, 2305843009213693951] int64
v41 <- LoadField(v2 T{__ConstSet&_HashVMImmutableBase&SetMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashSetMixin<X0>} . ImmutableLinkedHashBase.data {final}) T{_ImmutableList}
ParallelMove r1 <- r1, r2 <- r2, r3 <- r0, r5 <- r5, r6 <- r6
StaticCall:54( _init@3220832<0> v2, v11, v13, v41 T{_ImmutableList}, v101 T{_Smi}, using unchecked entrypoint)
ParallelMove  goto:60 B5
B5
ParallelMove r0 <- C
DartReturn:62(v0)
CheckStackOverflowSlowPath
slow path check null (cast) operation
slow path check null (cast) operation
B0
B1
Enter frame
ParallelMove r7 <- r1, fp[-3] <- r1, fp[-4] <- r5, fp[-5] <- r6
CheckStackOverflow:8(stack=0, loop=0)
Branch if RelationalOp(<, v3, v149 T{_Smi}) T{bool} goto (37, 4)
B37
ParallelMove r3 <- C, r2 <- C goto:26 B5
B4
ParallelMove r3 <- r2, r2 <- r3 goto:28 B5
B5
ParallelMove fp[-1] <- r3, fp[-2] <- r2
v144 <- BoxInt64(v10 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v50 <- AllocateTypedData:10(v144 T{int}) T{_Uint32List}
ParallelMove r0 <- r0, r3 <- fp[-3]
StoreField(v2 T{__ConstSet&_HashVMImmutableBase&SetMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashSetMixin<X0>} . ImmutableLinkedHashBase.index = v50 T{_Uint32List})
ParallelMove r2 <- fp[-2]
v145 <- BoxInt64(v11 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v2 T{__ConstSet&_HashVMImmutableBase&SetMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.hash_mask = v145 T{int}, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
v15 <- ShiftInt64Op(>> [tr], v10, v150 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v146 <- BoxInt64(v15 T{int}) [-4611686018427387904, 4611686018427387903] T{_Smi}
ParallelMove r1 <- C, r2 <- r2
v69 <- CreateArray:10(v13 T{TypeArguments}, v146) T{_List}
ParallelMove r0 <- r0, r1 <- fp[-3]
StoreField(v2 T{__ConstSet&_HashVMImmutableBase&SetMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.data = v69 T{_List})
StoreField(v2 T{__ConstSet&_HashVMImmutableBase&SetMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.used_data = v17 T{_Smi}, NoStoreBarrier)
StoreField(v2 T{__ConstSet&_HashVMImmutableBase&SetMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.deleted_keys = v17 T{_Smi}, NoStoreBarrier)
ParallelMove r3 <- fp[-4]
v28 <- LoadField:86(v5 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v147 <- UnboxInt64:86([non-speculative], v28) [0, 576460752303423487] int64
ParallelMove fp[-2] <- r4
v25 <- LoadField:86(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove fp[-6] <- r5
ParallelMove r7 <- C goto:86 B11
B11
  Loop 0
  Loop Header
ParallelMove fp[-1] <- r7
CheckStackOverflow:90(stack=0, loop=1)
Branch if RelationalOp(<, v18, v6) T{bool} goto (6, 7)
B6
  Loop 0
ParallelMove r0 <- r4, r1 <- r7
GenericCheckBound:60(v147 T{_Smi}, v18) [-9223372036854775808, 9223372036854775807] int64
v152 <- LoadIndexed:60([_List] v5, v18 T{int}) T{*?}
Branch if StrictCompare:10(!==, v152 T{Object??}, v5 T{_ImmutableList}) T{bool} goto (8, 9)
B8
  Loop 0
ParallelMove r0 <- r0, r2 <- r5, r1 <- C
t1 <- AssertAssignable:72(v152 T{*?}, v24, '', instantiator_type_args(v25), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
v37 <- StaticCall:10( _throwUnmodifiable@3220832<0> , result_type = T{!null}) T{Never}
ParallelMove  goto:80 B10
B9
B10
  Loop 0
v23 <- BinaryInt64Op(+ [tr], v18 T{int}, v150 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r7 <- r7, r3 <- fp[-4], r5 <- fp[-6], r4 <- fp[-2] goto:88 B11
B7
ParallelMove r0 <- C
DartReturn:92(v0)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
B0
B36
Enter frame
ParallelMove fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v89 <- LoadField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.data) T{_List}
v94 <- LoadField(v89 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v200 <- UnboxInt64([non-speculative], v94 T{_Smi}) [0, 576460752303423487] int64
Branch if RelationalOp(>, v200 T{_Smi}, v208 T{_Smi}) T{bool} goto (37, 38)
B37
ParallelMove r2 <- r0 goto:48 B46
B38
Branch if RelationalOp(<, v200 T{_Smi}, v208 T{_Smi}) T{bool} goto (39, 43)
B39
ParallelMove r2 <- C goto:62 B46
B43
ParallelMove r2 <- r0 goto:98 B46
B46
v131 <- BinaryInt64Op(- [tr], v125 T{_Smi}, v209 T{_Smi}) [-1, 576460752303423486] int64
v132 <- ShiftInt64Op(>> [tr], v131, v209 T{_Smi}) [-1, 288230376151711743] int64
v133 <- BinaryInt64Op(| [tr], v131, v132) [-576460752303423488, 576460752303423487] int64
v135 <- ShiftInt64Op(>> [tr], v133, v210 T{_Smi}) [-144115188075855872, 144115188075855871] int64
v136 <- BinaryInt64Op(| [tr], v133, v135) [-576460752303423488, 576460752303423487] int64
v138 <- ShiftInt64Op(>> [tr], v136, v211 T{_Smi}) [-36028797018963968, 36028797018963967] int64
v139 <- BinaryInt64Op(| [tr], v136, v138) [-576460752303423488, 576460752303423487] int64
v141 <- ShiftInt64Op(>> [tr], v139, v208 T{_Smi}) [-2251799813685248, 2251799813685247] int64
v142 <- BinaryInt64Op(| [tr], v139, v141) [-576460752303423488, 576460752303423487] int64
v144 <- ShiftInt64Op(>> [tr], v142, v212 T{_Smi}) [-8796093022208, 8796093022207] int64
v145 <- BinaryInt64Op(| [tr], v142, v144) [-576460752303423488, 576460752303423487] int64
v147 <- ShiftInt64Op(>> [tr], v145, v213 T{_Smi}) [-134217728, 134217727] int64
v148 <- BinaryInt64Op(| [tr], v145, v147) [-576460752303423488, 576460752303423487] int64
v149 <- BinaryInt64Op(+ [tr], v148, v209 T{_Smi}) [-576460752303423487, 576460752303423488] int64
Branch if EqualityCompare(v200 T{_Smi} == v214 T{_Smi}) T{bool} goto (3, 4)
B3
v84 <- LoadStaticField:4(_uninitializedIndex@3220832, CallsInitializer) T{_Uint32List}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:40 B5
B4
v203 <- BoxInt64(v149 T{int}) [-576460752303423487, 576460752303423488] T{_Smi}
ParallelMove r4 <- r4
v81 <- AllocateTypedData:10(v203) T{_Uint32List}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:42 B5
B5
ParallelMove r0 <- r2
StoreField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.index = v15)
v35 <- LoadField(v15 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
Branch if StrictCompare(===, v35 T{_Smi}, v65 T{_Smi}) T{bool} goto (14, 18)
B14
ParallelMove r3 <- C, r2 <- r1 goto:20 B19
B18
MoveArgument(sp[0] <- v35 T{_Smi})
v43 <- StaticCall:24( get:bitLength<0> v35 T{_Smi}, recognized_kind = Smi_bitLength, result_type = T{_Smi}) [-4611686018427387904, 4611686018427387903] T{_Smi}
ParallelMove r0 <- r0
v206 <- UnboxInt64([non-speculative], v43) [-4611686018427387904, 4611686018427387903] int64
v45 <- BinaryInt64Op(- [tr], v206 T{_Smi}, v210 T{_Smi}) [-4611686018427387906, 4611686018427387901] int64
ParallelMove r1 <- C
v53 <- BinaryInt64Op(- [tr], v213 T{_Smi}, v45) [-4611686018427387869, 4611686018427387938] int64
ParallelMove r0 <- C
v54 <- ShiftInt64Op(<< [tr], v209 T{_Smi}, v53) [-9223372036854775808, 9223372036854775807] int64
v55 <- BinaryInt64Op(- [tr], v54, v209 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0, r2 <- fp[-1] goto:58 B19
B19
v207 <- BoxInt64(v69 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.hash_mask = v207 T{int}, NoStoreBarrier)
ParallelMove r1 <- r2
StaticCall:54( _rehash@3220832<0> v2, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:56(v0)
CheckStackOverflowSlowPath
slow path int64 shift operation
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v75 <- LoadField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.deleted_keys) [0, 4611686018427387903] T{_Smi}
v88 <- UnboxInt64([non-speculative], v75 T{_Smi}) [0, 4611686018427387903] int64
v5 <- ShiftInt64Op(<< [tr], v88 T{_Smi}, v96 T{_Smi}) [0, 9223372036854775806] int64
v80 <- LoadField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.used_data) [0, 4611686018427387903] T{_Smi}
v89 <- UnboxInt64([non-speculative], v80 T{_Smi}) [0, 4611686018427387903] int64
Branch if RelationalOp(>, v5, v89 T{_Smi}) T{bool} goto (3, 4)
B3
v50 <- LoadField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.index) T{_Uint32List}
v55 <- LoadField(v50 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v60 <- LoadField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.hash_mask) [0, 4611686018427387903] T{_Smi}
v65 <- LoadField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.data) T{_List}
v90 <- UnboxInt64([non-speculative], v55 T{_Smi}) [0, 4611686018427387903] int64
v91 <- UnboxInt64([non-speculative], v60 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r1 <- r1, r2 <- r3, r3 <- r2, r5 <- r5, r6 <- r6
StaticCall:36( _init@3220832<0> v2, v90 T{_Smi}, v91 T{_Smi}, v65 T{_List}, v89 T{_Smi}, using unchecked entrypoint)
ParallelMove  goto:58 B5
B4
v25 <- LoadField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.index) T{_Uint32List}
v30 <- LoadField(v25 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v93 <- UnboxInt64([non-speculative], v30 T{_Smi}) [0, 4611686018427387903] int64
v11 <- ShiftInt64Op(<< [tr], v93 T{_Smi}, v96 T{_Smi}) [0, 9223372036854775806] int64
v35 <- LoadField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.hash_mask) [0, 4611686018427387903] T{_Smi}
v94 <- UnboxInt64([non-speculative], v35 T{_Smi}) [0, 4611686018427387903] int64
v13 <- ShiftInt64Op(>> [tr], v94 T{_Smi}, v96 T{_Smi}) [0, 2305843009213693951] int64
v40 <- LoadField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.data) T{_List}
ParallelMove r1 <- r1, r2 <- r2, r3 <- r0, r5 <- r5, r6 <- r6
StaticCall:54( _init@3220832<0> v2, v11, v13, v40 T{_List}, v89 T{_Smi}, using unchecked entrypoint)
ParallelMove  goto:60 B5
B5
ParallelMove r0 <- C
DartReturn:62(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r7 <- r1, fp[-3] <- r1, fp[-4] <- r5, fp[-5] <- r6
CheckStackOverflow:8(stack=0, loop=0)
Branch if RelationalOp(<, v3, v150 T{_Smi}) T{bool} goto (37, 4)
B37
ParallelMove r3 <- C, r2 <- C goto:26 B5
B4
ParallelMove r3 <- r2, r2 <- r3 goto:28 B5
B5
ParallelMove fp[-1] <- r3, fp[-2] <- r2
v145 <- BoxInt64(v10 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v51 <- AllocateTypedData:10(v145 T{int}) T{_Uint32List}
ParallelMove r0 <- r0, r3 <- fp[-3]
StoreField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.index = v51 T{_Uint32List})
ParallelMove r2 <- fp[-2]
v146 <- BoxInt64(v11 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.hash_mask = v146 T{int}, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
v15 <- ShiftInt64Op(>> [tr], v10, v151 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v147 <- BoxInt64(v15 T{int}) [-4611686018427387904, 4611686018427387903] T{_Smi}
ParallelMove r1 <- C, r2 <- r2
v70 <- CreateArray:10(v13 T{TypeArguments}, v147) T{_List}
ParallelMove r0 <- r0, r3 <- fp[-3]
StoreField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.data = v70 T{_List})
StoreField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.used_data = v17 T{_Smi}, NoStoreBarrier)
StoreField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.deleted_keys = v17 T{_Smi}, NoStoreBarrier)
ParallelMove r4 <- fp[-4]
v28 <- LoadField:86(v5 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v148 <- UnboxInt64:86([non-speculative], v28) [0, 576460752303423487] int64
ParallelMove fp[-2] <- r5
v25 <- LoadField:86(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove fp[-7] <- r6
ParallelMove r8 <- C goto:86 B11
B11
  Loop 0
  Loop Header
ParallelMove fp[-1] <- r8
CheckStackOverflow:90(stack=0, loop=1)
Branch if RelationalOp(<, v18, v6) T{bool} goto (6, 7)
B6
  Loop 0
ParallelMove r0 <- r5, r1 <- r8
GenericCheckBound:60(v148 T{_Smi}, v18) [-9223372036854775808, 9223372036854775807] int64
v153 <- LoadIndexed:60([_List] v5, v18 T{int}) T{*?}
ParallelMove fp[-6] <- r9
Branch if StrictCompare:10(!==, v153 T{Object??}, v5 T{_List}) T{bool} goto (8, 9)
B8
  Loop 0
ParallelMove r0 <- r9, r2 <- r6, r1 <- C
t1 <- AssertAssignable:72(v153 T{*?}, v24, '', instantiator_type_args(v25), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-3], r2 <- fp[-6]
v37 <- StaticCall:10( _hashCode@3220832<0> v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>}, v153 T{X0?}, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-3], r2 <- fp[-6], r3 <- r0
v38 <- StaticCall:12( _add@3220832<0> v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>}, v153 T{X0?}, v37, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove  goto:80 B10
B9
B10
  Loop 0
v23 <- BinaryInt64Op(+ [tr], v18 T{int}, v151 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r8 <- r8, r3 <- fp[-3], r4 <- fp[-4], r6 <- fp[-7], r5 <- fp[-2] goto:88 B11
B7
ParallelMove r0 <- C
DartReturn:92(v0)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-6] <- r1, fp[-7] <- r2, fp[-8] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v140 <- LoadField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.index) T{_Uint32List}
v145 <- LoadField(v140 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v232 <- UnboxInt64([non-speculative], v145 T{_Smi}) [0, 4611686018427387903] int64
v8 <- BinaryInt64Op(- [tr], v232 T{_Smi}, v257 T{_Smi}) [v232-1, v232-1] int64
ParallelMove fp[-5] <- r7
v9 <- ShiftInt64Op(>> [tr], v232 T{_Smi}, v257 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove fp[-4] <- r8
v150 <- LoadField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.hash_mask) [0, 4611686018427387903] T{_Smi}
v233 <- UnboxInt64([non-speculative], v150 T{_Smi}) [0, 4611686018427387903] int64
v159 <- BinaryInt64Op(& [tr], v4 T{int}, v233 T{_Smi}) [0, 4611686018427387903] int64
Branch if EqualityCompare(v159 == v258 T{_Smi}) T{bool} goto (60, 61)
B60
ParallelMove r9 <- r8 goto:32 B62
B61
v165 <- BinaryInt64Op(* [tr], v159, v9 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r9 <- r9 goto:34 B62
B62
ParallelMove fp[-3] <- r9
v178 <- BinaryInt64Op(& [tr], v4 T{int}, v8 T{int}) [-9223372036854775808, 9223372036854775807] int64
v180 <- ShiftInt64Op(<< [tr], v178, v257 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v181 <- BinaryInt64Op(+ [tr], v180, v178) [-9223372036854775808, 9223372036854775807] int64
v182 <- BinaryInt64Op(& [tr], v181, v8 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0, r1 <- r10
GenericCheckBound:28(v232 T{_Smi}, v182 T{int}) [-9223372036854775808, 9223372036854775807] int64
v259 <- LoadIndexed:28([_Uint32List] v140 T{_Uint32List}, v182 T{int}) [0, 4294967295] uint32
v289 <- UnboxInt64([non-speculative], v145) int64
ParallelMove r10 <- r10, r6 <- C, r1 <- r0, r5 <- r5, r0 <- r1 goto:126 B15
B15
  Loop 0
  Loop Header
ParallelMove fp[-1] <- r10, fp[-2] <- r6
CheckStackOverflow:124(stack=0, loop=1)
ParallelMove r1 <- r1
v238 <- IntConverter(uint32->int64, v18) [0, 4294967295] int64
Branch if EqualityCompare(v238 T{_Smi} != v258 T{_Smi}) T{bool} goto (14, 16)
B14
  Loop 0
Branch if EqualityCompare(v238 T{_Smi} == v257 T{_Smi}) T{bool} goto (3, 7)
B3
  Loop 0
Branch if RelationalOp(<, v17, v258 T{_Smi}) T{bool} goto (4, 5)
B4
  Loop 0
ParallelMove r6 <- r10 goto:62 B6
B5
B6
  Loop 0
ParallelMove r6 <- r6, r2 <- r4, r3 <- r7, r4 <- r10 goto:108 B13
B7
  Loop 0
v37 <- BinaryInt64Op(^ [tr], v166 T{int}, v238 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v37, v9) T{bool} goto (8, 11)
B8
  Loop 0
v126 <- LoadField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.data) T{_List}
v53 <- LoadField(v126 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v239 <- UnboxInt64([non-speculative], v53) [0, 576460752303423487] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound:80(v239 T{_Smi}, v37) [-9223372036854775808, 9223372036854775807] int64
v260 <- LoadIndexed:80([_List] v126 T{_List}, v37 T{int}) T{*?}
v292 <- LoadClassId(v3 T{X0?}) int64
MoveArgument(sp[1] <- v3 T{X0?})
MoveArgument(sp[0] <- v260 T{Object??})
ParallelMove r0 <- r1
v135 <- DispatchTableCall( cid=v292 Object.==<0>, v3 T{X0?}, v260 T{Object??}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:86(===, v135 T{bool}, v22) goto (9, 12)
BoolTest
B12
B9
ParallelMove r0 <- C
DartReturn:94(v42)
B11
B10
  Loop 0
ParallelMove r6 <- fp[-2], r2 <- fp[-6], r3 <- fp[-5], r4 <- fp[-1] goto:110 B13
B13
  Loop 0
v115 <- BinaryInt64Op(+ [tr], v16 T{int}, v257 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v116 <- BinaryInt64Op(& [tr], v115, v8 T{int}) [-9223372036854775808, 9223372036854775807] int64
v121 <- LoadField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.index) T{_Uint32List}
v56 <- LoadField(v121 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v241 <- UnboxInt64([non-speculative], v56) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r4
GenericCheckBound:116(v241 T{_Smi}, v116 T{int}) [-9223372036854775808, 9223372036854775807] int64
v261 <- LoadIndexed:116([_Uint32List] v121 T{_Uint32List}, v116 T{int}) [0, 4294967295] uint32
v291 <- UnboxInt64([non-speculative], v56) int64
ParallelMove r10 <- r4, r6 <- r6, r1 <- r1, r5 <- r5, r0 <- r0, r4 <- r2, r2 <- fp[-7], r3 <- fp[-8], r7 <- r3, r8 <- fp[-4], r9 <- fp[-3] goto:122 B15
B16
ParallelMove r2 <- r4, r4 <- r10
v97 <- LoadField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.used_data) [0, 4611686018427387903] T{_Smi}
v102 <- LoadField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.data) T{_List}
ParallelMove fp[-9] <- r3
v107 <- LoadField(v102 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v243 <- UnboxInt64([non-speculative], v97 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove fp[-5] <- r7
v244 <- UnboxInt64([non-speculative], v107 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-4] <- r8
Branch if EqualityCompare(v243 T{_Smi} == v244 T{_Smi}) T{bool} goto (17, 18)
B17
ParallelMove r1 <- r2
StaticCall:146( _rehash@3220832<0> v2, using unchecked entrypoint)
ParallelMove r1 <- fp[-6], r2 <- fp[-7], r3 <- fp[-8]
StaticCall:148( _add@3220832<0> v2, v3, v4, using unchecked entrypoint)
ParallelMove  goto:190 B22
B18
ParallelMove r1 <- fp[-2]
Branch if RelationalOp(>=, v17, v258 T{_Smi}) T{bool} goto (19, 20)
B19
ParallelMove r4 <- r1 goto:166 B21
B20
B21
v31 <- BinaryInt64Op(| [tr], v166 T{int}, v243 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0, r1 <- r4
GenericCheckBound:176(v266 T{_Smi}, v28) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r6
v262 <- IntConverter(int64->uint32[tr], v31) [0, 4294967295] uint32
StoreIndexed:176([_Uint32List] v254 T{_Uint32List}, v28 T{int}, v262 T{_Smi}, NoStoreBarrier)
v34 <- BinaryInt64Op(+ [tr], v243 T{_Smi}, v257 T{_Smi}) [1, 4611686018427387904] int64
v251 <- BoxInt64(v34 T{int}) [1, 4611686018427387904] T{int}
ParallelMove r0 <- r0
StoreField(v2 T{__Set&_HashVMBase&SetMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashSetMixin<X0>} . LinkedHashBase.used_data = v251 T{int}, NoStoreBarrier)
v62 <- LoadField(v102 T{_List} . Array.type_arguments {final}) T{TypeArguments?}
ParallelMove r0 <- fp[-7], r2 <- r2, r1 <- C
AssertAssignable:186(v3, v63, 'value', instantiator_type_args(v62), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-4], r1 <- fp[-5]
GenericCheckBound:186(v244 T{_Smi}, v243 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r1 <- fp[-9], r0 <- fp[-7], r2 <- fp[-5]
StoreIndexed:186([_List] v102 T{_List}, v243 T{_Smi}, v3 T{X0?})
ParallelMove  goto:192 B22
B22
ParallelMove r0 <- C
DartReturn:194(v22)
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove fp[-3] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v171 <- LoadField(v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin<X0, X1>} . ImmutableLinkedHashBase.data {final}) T{_ImmutableList}
ParallelMove fp[-2] <- r0
v176 <- LoadField(v171 T{_ImmutableList} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v217 <- UnboxInt64([non-speculative], v176 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-1] <- r2
Branch if EqualityCompare(v217 T{_Smi} == v233 T{_Smi}) T{bool} goto (3, 4)
B3
v166 <- LoadStaticField:4(_uninitializedIndex@3220832, CallsInitializer) T{_Uint32List}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:36 B5
B4
ParallelMove r4 <- r4
v163 <- AllocateTypedData:10(v176 T{_Smi}) T{_Uint32List}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:38 B5
B5
ParallelMove r0 <- r2
StoreField(v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin<X0, X1>} . ImmutableLinkedHashBase.index = v11)
v92 <- LoadField(v11 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
Branch if StrictCompare(===, v92 T{_Smi}, v29 T{_Smi}) T{bool} goto (35, 39)
B35
ParallelMove r3 <- C, r2 <- r1 goto:20 B40
B39
MoveArgument(sp[0] <- v92 T{_Smi})
v100 <- StaticCall:24( get:bitLength<0> v92 T{_Smi}, recognized_kind = Smi_bitLength, result_type = T{_Smi}) [-4611686018427387904, 4611686018427387903] T{_Smi}
ParallelMove r0 <- r0
v219 <- UnboxInt64([non-speculative], v100) [-4611686018427387904, 4611686018427387903] int64
v102 <- BinaryInt64Op(- [tr], v219 T{_Smi}, v236 T{_Smi}) [-4611686018427387906, 4611686018427387901] int64
ParallelMove r1 <- C
v110 <- BinaryInt64Op(- [tr], v237 T{_Smi}, v102) [-4611686018427387869, 4611686018427387938] int64
ParallelMove r0 <- C
v111 <- ShiftInt64Op(<< [tr], v234 T{_Smi}, v110) [-9223372036854775808, 9223372036854775807] int64
v112 <- BinaryInt64Op(- [tr], v111, v234 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0, r2 <- fp[-3] goto:58 B40
B40
v220 <- BoxInt64(v124 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.hash_mask = v220 T{int}, NoStoreBarrier)
v135 <- LoadField(v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.used_data) [0, 4611686018427387903] T{_Smi}
StoreField(v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.used_data = v5 T{_Smi}, NoStoreBarrier)
StoreField(v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.deleted_keys = v5 T{_Smi}, NoStoreBarrier)
v221 <- UnboxInt64:108([non-speculative], v135 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r5 <- C, r4 <- fp[-2] goto:108 B11
B11
  Loop 0
  Loop Header
ParallelMove fp[-5] <- r5
CheckStackOverflow:112(stack=0, loop=1)
Branch if RelationalOp(<, v16, v221 T{_Smi}) T{bool} goto (6, 7)
B6
  Loop 0
ParallelMove r0 <- fp[-1], r1 <- r5
GenericCheckBound:72(v217 T{_Smi}, v16) [-9223372036854775808, 9223372036854775807] int64
v238 <- LoadIndexed:72([_List] v171 T{_ImmutableList}, v16 T{int}) T{*?}
Branch if StrictCompare:10(!==, v238 T{Object??}, v171 T{_ImmutableList}) T{bool} goto (18, 10)
B10
  Loop 0
v24 <- BinaryInt64Op(+ [tr], v16 T{int}, v236 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:110 B11
B7
ParallelMove r0 <- C
DartReturn:114(v0)
B18
v26 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r0, r2 <- r3, r1 <- C, fp[-4] <- r3
t1 <- AssertAssignable:86(v238 T{*?}, v25, ' in type cast', instantiator_type_args(v26), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-5]
v30 <- BinaryInt64Op(+ [tr], v16 T{int}, v234 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-1], r1 <- r2
GenericCheckBound:92(v217 T{_Smi}, v30) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-2]
v239 <- LoadIndexed:92([_List] v171 T{_ImmutableList}, v30 T{int}) T{*?}
ParallelMove r0 <- r1, r2 <- fp[-4], r1 <- C
t2 <- AssertAssignable:94(v239 T{*?}, v32, ' in type cast', instantiator_type_args(v26 T{TypeArguments}), function_type_args(v0)) T{X1?}
AssertAssignable for compile-time type
TTSCall
v55 <- AllocateObject:14(cls=UnsupportedError, <not-aliased>) T{UnsupportedError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v55 T{UnsupportedError} . message = v57 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:18(v55)
CheckStackOverflowSlowPath
slow path int64 shift operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v167 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.data) T{_List}
v172 <- LoadField(v167 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
Branch if StrictCompare(===, v172 T{_Smi}, v5 T{_Smi}) T{bool} goto (3, 4)
B3
v162 <- LoadStaticField:4(_uninitializedIndex@3220832, CallsInitializer) T{_Uint32List}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:36 B5
B4
ParallelMove r4 <- r4
v159 <- AllocateTypedData:10(v172 T{_Smi}) T{_Uint32List}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:38 B5
B5
ParallelMove r0 <- r2
StoreField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.index = v11)
v88 <- LoadField(v11 T{_Uint32List} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
Branch if StrictCompare(===, v88 T{_Smi}, v29 T{_Smi}) T{bool} goto (34, 38)
B34
ParallelMove r2 <- C, r3 <- r1 goto:20 B39
B38
MoveArgument(sp[0] <- v88 T{_Smi})
v96 <- StaticCall:24( get:bitLength<0> v88 T{_Smi}, recognized_kind = Smi_bitLength, result_type = T{_Smi}) [-4611686018427387904, 4611686018427387903] T{_Smi}
ParallelMove r0 <- r0
v200 <- UnboxInt64([non-speculative], v96) [-4611686018427387904, 4611686018427387903] int64
v98 <- BinaryInt64Op(- [tr], v200 T{_Smi}, v213 T{_Smi}) [-4611686018427387906, 4611686018427387901] int64
ParallelMove r1 <- C
v106 <- BinaryInt64Op(- [tr], v214 T{_Smi}, v98) [-4611686018427387869, 4611686018427387938] int64
ParallelMove r0 <- C
v107 <- ShiftInt64Op(<< [tr], v211 T{_Smi}, v106) [-9223372036854775808, 9223372036854775807] int64
v108 <- BinaryInt64Op(- [tr], v107, v211 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0, r3 <- fp[-1] goto:58 B39
B39
v201 <- BoxInt64(v120 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.hash_mask = v201 T{int}, NoStoreBarrier)
v131 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.used_data) [0, 4611686018427387903] T{_Smi}
StoreField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.used_data = v5 T{_Smi}, NoStoreBarrier)
StoreField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.deleted_keys = v5 T{_Smi}, NoStoreBarrier)
v202 <- UnboxInt64:108([non-speculative], v131 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove fp[-7] <- r4
v26 <- LoadField:108(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove fp[-6] <- r5
ParallelMove r6 <- C goto:108 B11
B11
  Loop 0
  Loop Header
ParallelMove fp[-5] <- r6
CheckStackOverflow:112(stack=0, loop=1)
Branch if RelationalOp(<, v16, v202 T{_Smi}) T{bool} goto (6, 7)
B6
  Loop 0
v60 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.data) T{_List}
ParallelMove fp[-4] <- r7
v36 <- LoadField(v60 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v203 <- UnboxInt64([non-speculative], v36) [0, 576460752303423487] int64
ParallelMove r0 <- r8, r1 <- r6, fp[-3] <- r8
GenericCheckBound:72(v203 T{_Smi}, v16) [-9223372036854775808, 9223372036854775807] int64
v215 <- LoadIndexed:72([_List] v60 T{_List}, v16 T{int}) T{*?}
ParallelMove fp[-2] <- r9
Branch if StrictCompare:10(!==, v215 T{Object??}, v60 T{_List}) T{bool} goto (8, 9)
B8
  Loop 0
ParallelMove r0 <- r9, r2 <- r5, r1 <- C
t1 <- AssertAssignable:86(v215 T{*?}, v25, ' in type cast', instantiator_type_args(v26), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r3 <- fp[-5]
v30 <- BinaryInt64Op(+ [tr], v16 T{int}, v211 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-3], r1 <- r2
GenericCheckBound:92(v203 T{_Smi}, v30) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-4]
v216 <- LoadIndexed:92([_List] v60 T{_List}, v30 T{int}) T{*?}
ParallelMove r0 <- r4, r2 <- fp[-6], r1 <- C, fp[-8] <- r4
t2 <- AssertAssignable:94(v216 T{*?}, v32, ' in type cast', instantiator_type_args(v26 T{TypeArguments}), function_type_args(v0)) T{X1?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-1], r2 <- fp[-2]
v55 <- StaticCall:14( _hashCode@3220832<0> v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>}, v215 T{X0?}, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-1], r2 <- fp[-2], r3 <- fp[-8], r5 <- r0
StaticCall:16( _set@3220832<0> v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>}, v215 T{X0?}, v216 T{X1?}, v55, using unchecked entrypoint)
ParallelMove  goto:102 B10
B9
B10
  Loop 0
v24 <- BinaryInt64Op(+ [tr], v16 T{int}, v213 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r6, r3 <- fp[-1], r5 <- fp[-6], r4 <- fp[-7] goto:110 B11
B7
ParallelMove r0 <- C
DartReturn:114(v0)
CheckStackOverflowSlowPath
slow path int64 shift operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
B0
B3
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v32 <- LoadField(v3 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
ParallelMove fp[-3] <- r1
v46 <- UnboxInt64([non-speculative], v32 T{_Smi}) [0, 2305843009213693951] int64
Branch if RelationalOp(>, v47 T{_Smi}, v46 T{_Smi}) T{bool} goto (4, 7)
B7
ParallelMove r1 <- C
v10 <- AllocateObject:50(cls=_StringAllMatchesIterable, v9, <not-aliased>) T{_StringAllMatchesIterable}
ParallelMove r1 <- r0, r0 <- fp[-2]
StoreField(v10 T{_StringAllMatchesIterable} . _input@0150898 = v3 T{String}, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
StoreField(v10 T{_StringAllMatchesIterable} . _pattern@0150898 = v2 T{_StringBase}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v10 T{_StringAllMatchesIterable} . _index@0150898 = v47 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r0 <- r1
DartReturn:54(v10)
B4
v11 <- AllocateObject:40(cls=RangeError) T{RangeError}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
MoveArgument(sp[4] <- v11)
MoveArgument(sp[3] <- v4)
MoveArgument(sp[2] <- v4)
MoveArgument(sp[1] <- v32 T{_Smi})
MoveArgument(sp[0] <- v13)
StaticCall:44( RangeError.range<0> v11, v4, v4, v32 T{_Smi}, v13)
ParallelMove r0 <- fp[-1]
Throw:46(v11)
CheckStackOverflowSlowPath
B0
B3
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v31 <- LoadField(v3 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
ParallelMove fp[-3] <- r1
v45 <- UnboxInt64([non-speculative], v31 T{_Smi}) [0, 2305843009213693951] int64
Branch if RelationalOp(>, v46 T{_Smi}, v45 T{_Smi}) T{bool} goto (4, 7)
B7
ParallelMove r1 <- C
v10 <- AllocateObject:50(cls=_AllMatchesIterable, v9, <not-aliased>) T{_AllMatchesIterable}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v10 T{_AllMatchesIterable} . _re@0150898 = v2 T{_RegExp}, NoStoreBarrier)
ParallelMove r0 <- fp[-2]
StoreField(v10 T{_AllMatchesIterable} . _str@0150898 = v3 T{String}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v10 T{_AllMatchesIterable} . _start@0150898 = v46 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r0 <- r1
DartReturn:54(v10)
B4
v11 <- AllocateObject:40(cls=RangeError) T{RangeError}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
MoveArgument(sp[3] <- v11)
MoveArgument(sp[2] <- v4)
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v31 T{_Smi})
StaticCall:44( RangeError.range<0> v11, v4, v4, v31 T{_Smi})
ParallelMove r0 <- fp[-1]
Throw:46(v11)
CheckStackOverflowSlowPath
B0
B1
v10 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase<X0, X1>} . LinkedHashBase.used_data) [0, 4611686018427387903] T{_Smi}
v15 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase<X0, X1>} . LinkedHashBase.deleted_keys) [0, 4611686018427387903] T{_Smi}
v16 <- UnboxInt64([non-speculative], v10 T{_Smi}) [0, 4611686018427387903] int64
v17 <- UnboxInt64([non-speculative], v15 T{_Smi}) [0, 4611686018427387903] int64
v5 <- BinaryInt64Op(+ [tr], v16 T{_Smi}, v17 T{_Smi}) [0, 9223372036854775806] int64
ParallelMove r0 <- r0
DartReturn:16(v5)
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-3] <- r1
v3 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
v13 <- LoadField(v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin&_UnmodifiableMapMixin&_ImmutableLinkedHashMapMixin<X0, X1>} . ImmutableLinkedHashBase.data {final}) T{_ImmutableList}
ParallelMove fp[-2] <- r2
v18 <- LoadField(v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin&_UnmodifiableMapMixin&_ImmutableLinkedHashMapMixin<X0, X1>} . LinkedHashBase.used_data) [0, 4611686018427387903] T{_Smi}
ParallelMove r1 <- r1, fp[-1] <- r3
v4 <- AllocateObject:10(cls=_CompactIterableImmutable, v3, <not-aliased>) T{_CompactIterableImmutable}
ParallelMove r0 <- r0, r1 <- fp[-3]
StoreField(v4 T{_CompactIterableImmutable} . _table@3220832 = v2 T{_ConstMap}, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreField(v4 T{_CompactIterableImmutable} . _data@3220832 = v13 T{_ImmutableList}, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
v38 <- UnboxInt64([non-speculative], v18 T{_Smi}) [0, 4611686018427387903] int64
StoreField(v4 T{_CompactIterableImmutable} . _len@3220832 = v38 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v4 T{_CompactIterableImmutable} . _offset@3220832 = v36 <int64>, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v4 T{_CompactIterableImmutable} . _step@3220832 = v39 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:20(v4)
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
v3 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r1 <- r1
v4 <- AllocateObject:10(cls=_CompactIterable, v3, <not-aliased>) T{_CompactIterable}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v4 T{_CompactIterable} . _table@3220832 = v2 T{_Map}, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v4 T{_CompactIterable} . _offset@3220832 = v20 <int64>, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v4 T{_CompactIterable} . _step@3220832 = v22 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:16(v4)
B0
B1
Enter frame
ParallelMove r0 <- C
ParallelMove fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v35 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v58 <- UnboxInt64([non-speculative], v35 T{_Smi}) [0, 2305843009213693951] int64
v8 <- BinaryInt64Op(- [tr], v60 T{_Smi}, v58 T{_Smi}) [-2305843009213693945, 6] int64
ParallelMove fp[-1] <- r2
Branch if RelationalOp(<=, v8, v61 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r0 <- r1
DartReturn:24(v2)
B4
v12 <- AllocateObject:28(cls=StringBuffer) T{StringBuffer}
ParallelMove r1 <- r0, r0 <- r0
ParallelMove fp[-3] <- r0
StaticCall:30( StringBuffer.<0> v12)
ParallelMove r2 <- C goto:50 B7
B7
  Loop 0
  Loop Header
ParallelMove fp[-4] <- r2
CheckStackOverflow:54(stack=0, loop=1)
Branch if RelationalOp(<, v13, v8) T{bool} goto (12, 6)
B12
  Loop 0
ParallelMove r1 <- fp[-3]
StaticCall:26( _consumeBuffer@0150898<0> v12 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-3], r2 <- C
StaticCall:28( _addPart@0150898<0> v12 T{StringBuffer}, v6 T{_OneByteString}, using unchecked entrypoint)
ParallelMove r0 <- fp[-4]
v17 <- BinaryInt64Op(+ [tr], v13, v62 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r2 goto:52 B7
B6
ParallelMove r1 <- fp[-3], r2 <- fp[-2]
StaticCall:56( write<0> v12, v2, using unchecked entrypoint)
MoveArgument(sp[0] <- v12)
v15 <- StaticCall:58( toString<0> v12, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:60(v15)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B4
Enter frame
ParallelMove r0 <- C
ParallelMove fp[-3] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v103 <- LoadField(v2 T{_OneByteString} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v134 <- UnboxInt64([non-speculative], v103 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove fp[-2] <- r3
v12 <- BinaryInt64Op(- [tr], v142 T{_Smi}, v134 T{_Smi}) [-2305843009213693945, 6] int64
ParallelMove fp[-1] <- r2
Branch if RelationalOp(<=, v12, v143 T{_Smi}) T{bool} goto (5, 7)
B5
ParallelMove r0 <- r1
DartReturn:42(v2)
B7
v17 <- BinaryInt64Op(+ [tr], v12 T{int}, v134 T{_Smi}) [-2305843009213693945, 2305843009213693957] int64
v135 <- BoxInt64(v17 T{int}) [-2305843009213693945, 2305843009213693957] T{_Smi}
MoveArgument(sp[0] <- v135)
v98 <- StaticCall:10( allocateOneByteString<0> v135, recognized_kind = AllocateOneByteString, result_type = T{_OneByteString}) T{_OneByteString}
ParallelMove r0 <- r0
ParallelMove r4 <- C, r3 <- C, r1 <- fp[-1], r2 <- C goto:86 B10
B10
  Loop 1
  Loop Header
CheckStackOverflow:90(stack=0, loop=1)
Branch if RelationalOp(<, v43, v12) T{bool} goto (8, 18)
B8
  Loop 1
v45 <- BinaryInt64Op(+ [tr], v42, v144 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreIndexed:10([_OneByteString] v98 T{_OneByteString}, v42 T{int}, v122 T{_Smi}, NoStoreBarrier)
v46 <- BinaryInt64Op(+ [tr], v43, v144 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- r5, r3 <- r6 goto:88 B10
B18
ParallelMove r4 <- r4, r3 <- C, r1 <- fp[-3], r2 <- fp[-2] goto:172 B21
B21
  Loop 0
  Loop Header
CheckStackOverflow:176(stack=0, loop=1)
Branch if RelationalOp(<, v36, v134 T{_Smi}) T{bool} goto (19, 20)
B19
  Loop 0
v38 <- BinaryInt64Op(+ [tr], v35, v144 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v145 <- LoadIndexed:166([_OneByteString] v2, v36 T{int}) [0, 255] int64
StoreIndexed:10([_OneByteString] v98 T{_OneByteString}, v35 T{int}, v145 T{_Smi}, NoStoreBarrier)
v40 <- BinaryInt64Op(+ [tr], v36 T{int}, v144 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- r5, r3 <- r6 goto:174 B21
B20
ParallelMove r0 <- r0
DartReturn:178(v98 T{_OneByteString})
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r2 <- fp[2]
v106 <- LoadField:172(v2 T{_OneByteString} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v147 <- UnboxInt64:172([non-speculative], v106 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove fp[-2] <- r4
ParallelMove r6 <- C, r5 <- C goto:172 B22
B22
  Loop 3
  Loop Header
ParallelMove fp[-1] <- r6
CheckStackOverflow:176(stack=0, loop=1)
Branch if RelationalOp(<, v4, v147 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 3
v176 <- LoadIndexed:26([_OneByteString] v2, v4 T{int}) [0, 255] int64
v178 <- LoadIndexed:28([_OneByteString] v9, v176 T{_Smi}) [0, 255] int64
Branch if EqualityCompare(v176 T{_Smi} == v178) T{bool} goto (6, 7)
B6
  Loop 3
v35 <- BinaryInt64Op(+ [tr], v4 T{int}, v179 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r0 goto:174 B22
B7
ParallelMove r7 <- r6 goto:102 B15
B15
  Loop 2
  Loop Header
CheckStackOverflow:106(stack=0, loop=2)
Branch if RelationalOp(<, v12, v147 T{_Smi}) T{bool} goto (8, 9)
B8
  Loop 2
ParallelMove r0 <- r4, r1 <- r7
GenericCheckBound:62(v147 T{_Smi}, v12) [-9223372036854775808, 9223372036854775807] int64
v180 <- LoadIndexed:62([_OneByteString] v2, v12 T{int}) [0, 255] int64
v181 <- LoadIndexed:64([_OneByteString] v9, v180 T{_Smi}) [0, 255] int64
Branch if EqualityCompare(v181 == v175 T{_Smi}) T{bool} goto (10, 13)
B10
  Loop 2
Branch if EqualityCompare(v180 T{_Smi} != v175 T{_Smi}) T{bool} goto (11, 14)
B14
B11
MoveArgument(sp[0] <- v2)
v34 <- StaticCall:86( toUpperCase<0> v2, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:88(v34)
B13
B12
  Loop 2
v32 <- BinaryInt64Op(+ [tr], v12 T{int}, v179 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r7 <- r0 goto:104 B15
B9
MoveArgument(sp[0] <- v106 T{_Smi})
v96 <- StaticCall:10( allocateOneByteString<0> v106 T{_Smi}, recognized_kind = AllocateOneByteString, result_type = T{_OneByteString}) T{_OneByteString}
ParallelMove r2 <- r0
ParallelMove r5 <- C, r3 <- fp[2], r4 <- fp[-1] goto:132 B18
B18
  Loop 1
  Loop Header
CheckStackOverflow:136(stack=0, loop=2)
Branch if RelationalOp(<, v18, v4 T{int}) T{bool} goto (16, 17)
B16
  Loop 1
ParallelMove r0 <- fp[-2], r1 <- r5
GenericCheckBound:126(v147 T{_Smi}, v18) [-9223372036854775808, 9223372036854775807] int64
v182 <- LoadIndexed:126([_OneByteString] v2, v18 T{int}) [0, 255] int64
StoreIndexed:10([_OneByteString] v96 T{_OneByteString}, v18 T{int}, v182 T{_Smi}, NoStoreBarrier)
v28 <- BinaryInt64Op(+ [tr], v18 T{int}, v179 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:134 B18
B17
ParallelMove r6 <- r4, r5 <- C, r4 <- fp[-2] goto:162 B21
B21
  Loop 0
  Loop Header
CheckStackOverflow:166(stack=0, loop=2)
Branch if RelationalOp(<, v20, v147 T{_Smi}) T{bool} goto (19, 20)
B19
  Loop 0
ParallelMove r0 <- r4, r1 <- r6
GenericCheckBound:154(v147 T{_Smi}, v20) [-9223372036854775808, 9223372036854775807] int64
v183 <- LoadIndexed:154([_OneByteString] v2, v20 T{int}) [0, 255] int64
v184 <- LoadIndexed:156([_OneByteString] v9, v183 T{_Smi}) [0, 255] int64
StoreIndexed:10([_OneByteString] v96 T{_OneByteString}, v20 T{int}, v184 T{_Smi}, NoStoreBarrier)
v26 <- BinaryInt64Op(+ [tr], v20 T{int}, v179 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r0 goto:164 B21
B20
ParallelMove r0 <- r2
DartReturn:168(v96 T{_OneByteString})
B4
ParallelMove r3 <- r2
ParallelMove r0 <- r3
DartReturn:178(v2)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-1] <- r1, fp[-2] <- r3
CheckStackOverflow:8(stack=0, loop=0)
Branch if RelationalOp(<, v4, v128 T{_Smi}) T{bool} goto (5, 3)
B3
v91 <- LoadField(v3 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v120 <- UnboxInt64([non-speculative], v91 T{_Smi}) [0, 2305843009213693951] int64
Branch if RelationalOp(>, v4, v120 T{_Smi}) T{bool} goto (6, 7)
B7
v76 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v121 <- UnboxInt64([non-speculative], v76 T{_Smi}) [0, 2305843009213693951] int64
v11 <- BinaryInt64Op(+ [tr], v4, v121 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>, v11, v120 T{_Smi}) T{bool} goto (8, 9)
B8
ParallelMove r0 <- C
DartReturn:66(v0)
B9
v42 <- LoadClassId:108(v3 T{_StringBase}) [93, 94] T{_Smi}
v59 <- LoadClassId:108(v2 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove r9 <- C goto:108 B14
B14
  Loop 0
  Loop Header
CheckStackOverflow:112(stack=0, loop=1)
Branch if RelationalOp(<, v14, v121 T{_Smi}) T{bool} goto (10, 11)
B10
  Loop 0
v18 <- BinaryInt64Op(+ [tr], v4, v14) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r5, r1 <- r10
t0 <- GenericCheckBound:88(v120 T{_Smi}, v18 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:88(===, v42, v50 T{_Smi}) goto (21, 22)
B21
  Loop 0
v46 <- LoadIndexed([_OneByteString] v3 T{_OneByteString}, v18 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:88 B20
B22
  Loop 0
v44 <- LoadIndexed([_TwoByteString] v3 T{_StringBase}, v18 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:88 B20
B20
  Loop 0
Branch if StrictCompare:90(===, v59, v50 T{_Smi}) goto (26, 27)
B26
  Loop 0
v63 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v14 T{int}) [0, 255] int64
ParallelMove r1 <- r1 goto:90 B25
B27
  Loop 0
v61 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v14 T{int}) [0, 65535] int64
ParallelMove r1 <- r1 goto:90 B25
B25
  Loop 0
Branch if EqualityCompare(v45 T{_Smi} != v62 T{_Smi}) T{bool} goto (12, 13)
B13
  Loop 0
v23 <- BinaryInt64Op(+ [tr], v14 T{int}, v129 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r9 <- r0 goto:110 B14
B12
ParallelMove r0 <- C
DartReturn:102(v0)
B11
v17 <- AllocateObject:114(cls=_StringMatch, <not-aliased>) T{_StringMatch}
ParallelMove r0 <- r0, r3 <- fp[-2]
StoreField(v17 T{_StringMatch} . start = v4 T{int} <int64>, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
StoreField(v17 T{_StringMatch} . pattern = v2 T{_StringBase}, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:118(v17)
B5
B6
B4
v86 <- LoadField(v3 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
ParallelMove fp[-3] <- r4
v119 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
v24 <- AllocateObject:40(cls=RangeError) T{RangeError}
ParallelMove r0 <- r0
ParallelMove fp[-4] <- r0
MoveArgument(sp[3] <- v24)
MoveArgument(sp[2] <- v119 T{int})
MoveArgument(sp[1] <- v5)
MoveArgument(sp[0] <- v86 T{_Smi})
StaticCall:44( RangeError.range<0> v24, v119 T{int}, v5, v86 T{_Smi})
ParallelMove r0 <- fp[-4]
Throw:46(v24)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
B0
B5
Enter frame
ParallelMove r0 <- r2, fp[-1] <- r2
CheckStackOverflow:26(stack=0, loop=0)
v27 <- LoadClassId(v3) [78, 94] int64
Branch if TestRange(v27 in [93-94]) T{bool} goto (7, 12)
B7
v37 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
ParallelMove fp[-2] <- r2
v48 <- UnboxInt64([non-speculative], v37 T{_Smi}) [0, 2305843009213693951] int64
Branch if RelationalOp(>, v49 T{_Smi}, v48 T{_Smi}) T{bool} goto (8, 11)
B11
v52 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[0] <- v12)
ParallelMove r0 <- r2, r1 <- r1, r2 <- r0
v21 <- DispatchTableCall( cid=v52 _StringBase.indexOf<0>, v2, v3 T{String}, v12) int64
ParallelMove r0 <- r0
v22 <- RelationalOp(>=, v21 T{int}, v49 T{_Smi}) T{bool}
ParallelMove r0 <- r1
DartReturn:82(v22)
B12
ParallelMove r1 <- r1, r2 <- C
v15 <- StaticCall:86( substring<0> v2, v49 T{_Smi}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0, r1 <- fp[-1]
v53 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r2, r1 <- r1, r2 <- r0
v16 <- DispatchTableCall( cid=v53 Pattern.allMatches<0>, v3, v15) T{Iterable<Match>}
ParallelMove r1 <- r0
v17 <- StaticCall:90( get:isNotEmpty<0> v16 T{Iterable<Match>}, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
DartReturn:92(v17)
B8
v23 <- AllocateObject:68(cls=RangeError) T{RangeError}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
MoveArgument(sp[3] <- v23)
MoveArgument(sp[2] <- v12)
MoveArgument(sp[1] <- v12)
MoveArgument(sp[0] <- v37 T{_Smi})
StaticCall:72( RangeError.range<0> v23, v12, v12, v37 T{_Smi})
ParallelMove r0 <- fp[-1]
Throw:74(v23)
CheckStackOverflowSlowPath
B0
B5
Enter frame
ParallelMove r3 <- r1
CheckStackOverflow:26(stack=0, loop=0)
v36 <- LoadClassId(v3) [78, 94] T{_Smi}
v108 <- UnboxInt64([non-speculative], v36) [78, 94] int64
Branch if EqualityCompare(v108 T{_Smi} == v120 T{_Smi}) T{bool} goto (8, 6)
B8
B6
Branch if EqualityCompare(v108 T{_Smi} == v121 T{_Smi}) T{bool} goto (9, 24)
B9
B7
v61 <- LoadField(v2 T{_OneByteString} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v66 <- LoadField(v3 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v111 <- UnboxInt64([non-speculative], v66 T{_Smi}) [0, 2305843009213693951] int64
Branch if EqualityCompare(v111 T{_Smi} == v122 T{_Smi}) T{bool} goto (11, 21)
B11
v110 <- UnboxInt64([non-speculative], v61 T{_Smi}) [0, 2305843009213693951] int64
Branch if RelationalOp(<, v123 T{_Smi}, v110 T{_Smi}) T{bool} goto (12, 23)
B12
ParallelMove r0 <- r5, r1 <- C
t0 <- GenericCheckBound:92(v111 T{_Smi}, v123 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
Branch if StrictCompare:92(===, v36 T{_Smi}, v14 T{_Smi}) goto (31, 32)
B31
v53 <- LoadIndexed([_OneByteString] v3 T{_OneByteString}, v123 T{_Smi}) [0, 255] int64
ParallelMove r0 <- r0 goto:92 B30
B32
v51 <- LoadIndexed([_TwoByteString] v3 T{_StringBase}, v123 T{_Smi}) [0, 65535] int64
ParallelMove r0 <- r0 goto:92 B30
B30
Branch if RelationalOp(>, v52 T{_Smi}, v124 T{_Smi}) T{bool} goto (13, 14)
B13
ParallelMove r0 <- C
DartReturn:104(v31)
B14
ParallelMove r1 <- C goto:140 B19
B19
  Loop 0
  Loop Header
CheckStackOverflow:144(stack=0, loop=1)
Branch if RelationalOp(<, v29, v110 T{_Smi}) T{bool} goto (15, 16)
B15
  Loop 0
v125 <- LoadIndexed:122([_OneByteString] v2, v29 T{int}) [0, 255] int64
Branch if EqualityCompare(v125 == v52 T{_Smi}) T{bool} goto (17, 18)
B18
  Loop 0
v34 <- BinaryInt64Op(+ [tr], v29 T{int}, v122 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r2 goto:142 B19
B17
ParallelMove r0 <- C
DartReturn:134(v11)
B16
ParallelMove r0 <- C
DartReturn:146(v31)
B23
B21
B20
B24
B25
MoveArgument(sp[0] <- v12)
ParallelMove r1 <- r3, r2 <- r2
v20 <- StaticCall:170( contains<0> v2, v3, v12, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
DartReturn:172(v20)
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
v83 <- LoadField:110(v2 T{_OneByteString} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v108 <- UnboxInt64:110([non-speculative], v83 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove fp[-2] <- r2
ParallelMove r4 <- C, r3 <- C goto:110 B14
B14
  Loop 2
  Loop Header
ParallelMove fp[-1] <- r4
CheckStackOverflow:114(stack=0, loop=1)
Branch if RelationalOp(<, v4, v108 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 2
v127 <- LoadIndexed:26([_OneByteString] v2, v4 T{int}) [0, 255] int64
v129 <- LoadIndexed:28([_OneByteString] v9, v127 T{_Smi}) [0, 255] int64
Branch if EqualityCompare(v127 T{_Smi} == v129) T{bool} goto (6, 7)
B6
  Loop 2
v25 <- BinaryInt64Op(+ [tr], v4 T{int}, v130 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- r5 goto:112 B14
B7
MoveArgument(sp[0] <- v83 T{_Smi})
v78 <- StaticCall:10( allocateOneByteString<0> v83 T{_Smi}, recognized_kind = AllocateOneByteString, result_type = T{_OneByteString}) T{_OneByteString}
ParallelMove r2 <- r0
ParallelMove r5 <- C, r3 <- fp[2], r4 <- fp[-1] goto:70 B10
B10
  Loop 1
  Loop Header
CheckStackOverflow:74(stack=0, loop=2)
Branch if RelationalOp(<, v14, v4 T{int}) T{bool} goto (8, 9)
B8
  Loop 1
ParallelMove r0 <- fp[-2], r1 <- r5
GenericCheckBound:64(v108 T{_Smi}, v14) [-9223372036854775808, 9223372036854775807] int64
v131 <- LoadIndexed:64([_OneByteString] v2, v14 T{int}) [0, 255] int64
StoreIndexed:10([_OneByteString] v78 T{_OneByteString}, v14 T{int}, v131 T{_Smi}, NoStoreBarrier)
v24 <- BinaryInt64Op(+ [tr], v14 T{int}, v130 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:72 B10
B9
ParallelMove r6 <- r4, r5 <- C, r4 <- fp[-2] goto:100 B13
B13
  Loop 0
  Loop Header
CheckStackOverflow:104(stack=0, loop=2)
Branch if RelationalOp(<, v16, v108 T{_Smi}) T{bool} goto (11, 12)
B11
  Loop 0
ParallelMove r0 <- r4, r1 <- r6
GenericCheckBound:92(v108 T{_Smi}, v16) [-9223372036854775808, 9223372036854775807] int64
v132 <- LoadIndexed:92([_OneByteString] v2, v16 T{int}) [0, 255] int64
v133 <- LoadIndexed:94([_OneByteString] v9, v132 T{_Smi}) [0, 255] int64
StoreIndexed:10([_OneByteString] v78 T{_OneByteString}, v16 T{int}, v133 T{_Smi}, NoStoreBarrier)
v22 <- BinaryInt64Op(+ [tr], v16 T{int}, v130 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r0 goto:102 B13
B12
ParallelMove r0 <- r2
DartReturn:106(v78 T{_OneByteString})
B4
ParallelMove r3 <- r0
ParallelMove r0 <- r3
DartReturn:116(v2)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove r0 <- r1, r1 <- r2, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v177 <- LoadField(v3 T{_OneByteString} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v177, v10 T{_Smi}) T{bool} goto (3, 4)
B3
v148 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v306 <- UnboxInt64([non-speculative], v148 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove r1 <- C, r2 <- r2
v157 <- StaticCall:10( _GrowableList@0150898.<0> v12 T{TypeArguments}, v306 T{_Smi}, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r2 <- r0
ParallelMove fp[-5] <- r2
v236 <- LoadField:36(v157 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v308 <- UnboxInt64:36([non-speculative], v236 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-4] <- r3
v168 <- LoadField:36(v157 . GrowableObjectArray.data) T{_List}
ParallelMove fp[-3] <- r4
ParallelMove r5 <- C goto:36 B76
B76
  Loop 1
  Loop Header
ParallelMove fp[-2] <- r5
CheckStackOverflow:40(stack=0, loop=1)
Branch if RelationalOp(<, v159, v308 T{_Smi}) T{bool} goto (74, 75)
B74
  Loop 1
v307 <- BoxInt64(v159 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[1] <- v2 T{_StringBase})
MoveArgument(sp[0] <- v307 T{int})
v245 <- StaticCall:10( []<0> v2 T{_StringBase}, v307 T{int}, using unchecked entrypoint, recognized_kind = StringBaseCharAt, result_type = T{!null}) T{String}
ParallelMove r1 <- fp[-3], r0 <- r0, r2 <- fp[-2]
StoreIndexed:32([_List] v168, v159 T{int}, v245)
v165 <- BinaryInt64Op(+ [tr], v159 T{int}, v352 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r5, r2 <- fp[-5], r4 <- fp[-3], r3 <- fp[-4] goto:38 B76
B75
ParallelMove r0 <- fp[-5]
DartReturn:28(v157 T{_GrowableList})
B4
v135 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
ParallelMove r1 <- r1, r2 <- r0, fp[-3] <- r3
v8 <- StaticCall:34( allMatches<0> v3, v2, using unchecked entrypoint, result_type = T{_StringAllMatchesIterable}) T{_StringAllMatchesIterable}
ParallelMove r0 <- r0
v140 <- LoadField(v8 T{_StringAllMatchesIterable} . _input@0150898 {final}) T{String}
ParallelMove fp[-6] <- r1
v141 <- LoadField(v8 T{_StringAllMatchesIterable} . _pattern@0150898 {final}) T{String}
ParallelMove fp[-5] <- r2
v143 <- AllocateObject:16(cls=_StringAllMatchesIterator) T{_StringAllMatchesIterator}
ParallelMove r2 <- r0, r0 <- fp[-6]
ParallelMove fp[-7] <- r2
StoreField(v143 T{_StringAllMatchesIterator} . _input@0150898 = v140 T{String}, NoStoreBarrier)
ParallelMove r0 <- fp[-5]
StoreField(v143 T{_StringAllMatchesIterator} . _pattern@0150898 = v141 T{String}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v143 T{_StringAllMatchesIterator} . _index@0150898 = v351 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r3 <- fp[-3]
v313 <- UnboxInt64([non-speculative], v135 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove fp[-2] <- r4
Branch if EqualityCompare(v313 T{_Smi} == v351 T{_Smi}) T{bool} goto (5, 8)
B5
ParallelMove r1 <- r2
v35 <- StaticCall:46( moveNext<0> v143, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:50(===, v35 T{bool}, v6) goto (6, 9)
BoolTest
B6
ParallelMove r1 <- C, r2 <- C
v36 <- StaticCall:58( _GrowableList@0150898.<0> v12, v351 T{_Smi}, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r0 <- r0
DartReturn:60(v36)
B9
B8
B7
ParallelMove r1 <- C, r2 <- C
v13 <- StaticCall:72( _GrowableList@0150898.<0> v12, v351 T{_Smi}, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r0 <- r0
ParallelMove fp[-5] <- r0
ParallelMove r5 <- C, r4 <- C goto:194 B24
B24
  Loop 0
  Loop Header
ParallelMove fp[-4] <- r5, fp[-8] <- r4
CheckStackOverflow:192(stack=0, loop=1)
Branch if EqualityCompare(v14 == v313 T{_Smi}) T{bool} goto (12, 10)
B10
  Loop 0
ParallelMove r1 <- r2
v20 <- StaticCall:88( moveNext<0> v143, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:92(!==, v20 T{bool}, v6 T{bool}) goto (13, 15)
BoolTest
B15
  Loop 0
ParallelMove r3 <- fp[-7]
v103 <- LoadField(v143 T{_StringAllMatchesIterator} . _current@0150898) T{_StringMatch?}
ParallelMove fp[-6] <- r4
Branch if StrictCompare:12(===, v103, v0 T{Null?}) goto (54, 55)
B54
  Loop 0
ParallelMove r0 <- r4, r2 <- C, r1 <- C
t0 <- AssertAssignable:18(v103 T{_StringMatch?}, v111 T{_Type}, ' in type cast', instantiator_type_args(v0 T{Null?}), function_type_args(v0 T{Null?})) T{Match}
AssertAssignable for compile-time type
TTSCall
ParallelMove  goto:24 B56
B55
B56
  Loop 0
v22 <- LoadField(v103 T{_StringMatch} . start {final}) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v22 == v313 T{_Smi}) T{bool} goto (16, 17)
B17
  Loop 0
ParallelMove r1 <- fp[-4]
v77 <- LoadField(v103 T{_StringMatch} . pattern {final}) T{String}
v200 <- LoadField(v77 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v328 <- UnboxInt64([non-speculative], v200 T{_Smi}) [0, 2305843009213693951] int64
v79 <- BinaryInt64Op(+ [tr], v22 T{int}, v328 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-9] <- r5
Branch if EqualityCompare(v14 == v79 T{int}) T{bool} goto (18, 22)
B18
  Loop 0
ParallelMove r6 <- fp[-8]
Branch if EqualityCompare(v79 T{int} == v15) T{bool} goto (19, 23)
B19
  Loop 0
v32 <- BinaryInt64Op(+ [tr], v14, v352 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0, r4 <- r6, r3 <- fp[-5] goto:166 B20
B23
B22
  Loop 0
ParallelMove r6 <- fp[-8]
ParallelMove  goto:172 B21
B21
  Loop 0
v329 <- BoxInt64(v22 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r6, r2 <- r0, r3 <- r4
v50 <- StaticCall:30( checkValidRange<0> v15 T{int}, v329 T{int?}, v313 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-1], r2 <- fp[-8], r3 <- r0
v51 <- StaticCall:32( _substringUnchecked@0150898<0> v2 T{_StringBase}, v15 T{int}, v50, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r2 <- r0, r0 <- fp[-5]
ParallelMove fp[-6] <- r2
v189 <- LoadField(v13 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v194 <- LoadField(v13 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v195 <- LoadField(v194 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v333 <- UnboxInt64([non-speculative], v189 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-4] <- r3
v334 <- UnboxInt64([non-speculative], v195 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v333 T{_Smi} == v334 T{_Smi}) T{bool} goto (34, 35)
B34
  Loop 0
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v13 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B36
B35
B36
  Loop 0
v64 <- BinaryInt64Op(+ [tr], v333 T{_Smi}, v352 T{_Smi}) [1, 576460752303423488] int64
v335 <- BoxInt64(v64) [1, 576460752303423488] T{_Smi}
StoreField(v13 T{_GrowableList} . GrowableObjectArray.length = v335, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r2
GenericCheckBound:40(v64 T{_Smi}, v333 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v67 <- LoadField(v13 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-6]
StoreIndexed:40([_List] v67, v333 T{_Smi}, v51 T{String})
ParallelMove r5 <- fp[-9], r4 <- fp[-9] goto:184 B20
B20
  Loop 0
ParallelMove r5 <- r5, r4 <- r4, r0 <- r3 goto:190 B24
B16
ParallelMove r3 <- fp[-5]
MoveArgument(sp[0] <- v135 T{_Smi})
ParallelMove r1 <- fp[-1], r2 <- fp[-8]
v33 <- StaticCall:132( substring<0> v2, v15, v135 T{_Smi}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r2 <- r0, r0 <- fp[-5]
ParallelMove fp[-6] <- r2
v205 <- LoadField(v13 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v210 <- LoadField(v13 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v211 <- LoadField(v210 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v323 <- UnboxInt64([non-speculative], v205 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-2] <- r3
v324 <- UnboxInt64([non-speculative], v211 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v323 T{_Smi} == v324 T{_Smi}) T{bool} goto (45, 46)
B45
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v13 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B47
B46
B47
v91 <- BinaryInt64Op(+ [tr], v323 T{_Smi}, v352 T{_Smi}) [1, 576460752303423488] int64
v325 <- BoxInt64(v91) [1, 576460752303423488] T{_Smi}
StoreField(v13 T{_GrowableList} . GrowableObjectArray.length = v325, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r2
GenericCheckBound:40(v91 T{_Smi}, v323 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v94 <- LoadField(v13 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-6]
StoreIndexed:40([_List] v94, v323 T{_Smi}, v33 T{String})
ParallelMove r2 <- r3 goto:136 B14
B13
ParallelMove r3 <- fp[-5]
ParallelMove  goto:106 B11
B12
ParallelMove r3 <- r0
ParallelMove  goto:102 B11
B11
MoveArgument(sp[0] <- v135 T{_Smi})
ParallelMove r1 <- fp[-1], r2 <- fp[-8]
v34 <- StaticCall:108( substring<0> v2, v15, v135 T{_Smi}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r2 <- r0, r0 <- fp[-5]
ParallelMove fp[-1] <- r2
v216 <- LoadField(v13 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v221 <- LoadField(v13 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v222 <- LoadField(v221 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v316 <- UnboxInt64([non-speculative], v216 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-2] <- r3
v317 <- UnboxInt64([non-speculative], v222 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v316 T{_Smi} == v317 T{_Smi}) T{bool} goto (59, 60)
B59
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v13 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B61
B60
B61
v123 <- BinaryInt64Op(+ [tr], v316 T{_Smi}, v352 T{_Smi}) [1, 576460752303423488] int64
v318 <- BoxInt64(v123) [1, 576460752303423488] T{_Smi}
StoreField(v13 T{_GrowableList} . GrowableObjectArray.length = v318, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v123 T{_Smi}, v316 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v126 <- LoadField(v13 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-1]
StoreIndexed:40([_List] v126, v316 T{_Smi}, v34 T{String})
ParallelMove  goto:114 B14
B14
ParallelMove r0 <- r2
DartReturn:200(v13)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B3
Enter frame
ParallelMove r3 <- r1
CheckStackOverflow:8(stack=0, loop=0)
v25 <- LoadField(v3 T{_OneByteString} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v33 <- UnboxInt64([non-speculative], v25 T{_Smi}) [0, 2305843009213693951] int64
Branch if EqualityCompare(v33 T{_Smi} == v37 T{_Smi}) T{bool} goto (4, 7)
B4
ParallelMove r0 <- r1, r1 <- C
GenericCheckBound:34(v33 T{_Smi}, v38 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v39 <- LoadIndexed:34([_OneByteString] v3, v38 T{_Smi}) [0, 255] int64
ParallelMove r1 <- r3, r2 <- r0
v15 <- StaticCall:36( _splitWithCharCode@0150898<0> v2, v39, using unchecked entrypoint, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r0 <- r0
DartReturn:38(v15)
B7
ParallelMove r1 <- r3, r2 <- r2
v9 <- StaticCall:50( split<0> v2, v3, using unchecked entrypoint, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r0 <- r0
DartReturn:52(v9)
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove r3 <- r1, r0 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v6 <- StaticCall:10( _GrowableList@0150898.<0> v4, v276 T{_Smi}, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r3 <- r0, r2 <- fp[-1]
ParallelMove fp[-5] <- r3
v151 <- LoadField:56(v2 T{_OneByteString} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v247 <- UnboxInt64:56([non-speculative], v151 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove fp[-4] <- r4
ParallelMove r7 <- C, r6 <- C goto:56 B8
B8
  Loop 0
  Loop Header
ParallelMove fp[-3] <- r7
CheckStackOverflow:60(stack=0, loop=1)
Branch if RelationalOp(<, v7, v247 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 0
v249 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r8 <- r0
v277 <- LoadIndexed:28([_OneByteString] v2, v7 T{int}) [0, 255] int64
Branch if EqualityCompare(v277 == v3) T{bool} goto (5, 6)
B5
  Loop 0
Branch if EqualityCompare(v8 T{int} == v7 T{int}) T{bool} goto (34, 35)
B34
  Loop 0
ParallelMove r2 <- C, r0 <- r3 goto:20 B44
B35
  Loop 0
Branch if EqualityCompare(v8 T{int} == v276 T{_Smi}) T{bool} goto (36, 39)
B36
  Loop 0
Branch if EqualityCompare(v7 T{int} == v247 T{_Smi}) T{bool} goto (37, 40)
B37
  Loop 0
ParallelMove r2 <- r2, r0 <- r3 goto:46 B44
B40
B39
B38
  Loop 0
v99 <- BinaryInt64Op(+ [tr], v8 T{int}, v278 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v99 == v7 T{int}) T{bool} goto (41, 42)
B41
  Loop 0
ParallelMove r0 <- r4, r1 <- r6
GenericCheckBound:70(v247 T{_Smi}, v8 T{int}) [-9223372036854775808, 9223372036854775807] int64
v279 <- LoadIndexed:70([_OneByteString] v2 T{_OneByteString}, v8 T{int}) [0, 255] int64
v109 <- BoxInt64(v279 T{_Smi}) [0, 255] T{_Smi}
v110 <- OneByteStringFromCharCode(v109) T{_OneByteString}
ParallelMove r2 <- r0, r0 <- r3 goto:72 B44
B42
  Loop 0
v245 <- BoxInt64(v8 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[2] <- v2 T{_OneByteString})
MoveArgument(sp[1] <- v245 T{int})
MoveArgument(sp[0] <- v249 T{int})
v101 <- StaticCall:76( _substringUncheckedNative@0150898<0> v2 T{_OneByteString}, v245 T{int}, v249 T{int}, using unchecked entrypoint, recognized_kind = OneByteString_substringUnchecked, result_type = T{!null}) T{_OneByteString}
ParallelMove r0 <- r0
ParallelMove r2 <- r0, r0 <- fp[-5] goto:78 B44
B44
  Loop 0
ParallelMove fp[-7] <- r2
v177 <- LoadField(v6 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v182 <- LoadField(v6 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v183 <- LoadField(v182 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v256 <- UnboxInt64([non-speculative], v177 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-6] <- r3
v257 <- UnboxInt64([non-speculative], v183 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v256 T{_Smi} == v257 T{_Smi}) T{bool} goto (47, 48)
B47
  Loop 0
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v6 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B49
B48
B49
  Loop 0
v139 <- BinaryInt64Op(+ [tr], v256 T{_Smi}, v278 T{_Smi}) [1, 576460752303423488] int64
v258 <- BoxInt64(v139) [1, 576460752303423488] T{_Smi}
StoreField(v6 T{_GrowableList} . GrowableObjectArray.length = v258, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v139 T{_Smi}, v256 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v142 <- LoadField(v6 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-7]
StoreIndexed:40([_List] v142, v256 T{_Smi}, v127)
v19 <- BinaryInt64Op(+ [tr], v7 T{int}, v278 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r0 goto:50 B7
B6
  Loop 0
ParallelMove r2 <- r3, r4 <- r7
ParallelMove r6 <- r6 goto:52 B7
B7
  Loop 0
v17 <- BinaryInt64Op(+ [tr], v7 T{int}, v278 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r7 <- r7, r6 <- r6, r2 <- fp[-1], r3 <- r2, r4 <- fp[-4] goto:58 B8
B4
ParallelMove r2 <- r3, r4 <- r7
Branch if EqualityCompare(v8 T{int} == v7 T{int}) T{bool} goto (12, 13)
B12
ParallelMove r2 <- C, r0 <- r2 goto:20 B22
B13
Branch if EqualityCompare(v8 T{int} == v276 T{_Smi}) T{bool} goto (14, 17)
B14
ParallelMove r0 <- fp[-4]
Branch if EqualityCompare(v7 T{int} == v247 T{_Smi}) T{bool} goto (15, 18)
B15
ParallelMove r2 <- fp[-1], r0 <- r2 goto:46 B22
B18
B17
ParallelMove r0 <- fp[-4]
ParallelMove  goto:52 B16
B16
v37 <- BinaryInt64Op(+ [tr], v8 T{int}, v278 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v37 == v7 T{int}) T{bool} goto (19, 20)
B19
ParallelMove r3 <- fp[-1]
ParallelMove r0 <- r0, r1 <- r6
GenericCheckBound:70(v247 T{_Smi}, v8 T{int}) [-9223372036854775808, 9223372036854775807] int64
v280 <- LoadIndexed:70([_OneByteString] v2 T{_OneByteString}, v8 T{int}) [0, 255] int64
v47 <- BoxInt64(v280 T{_Smi}) [0, 255] T{_Smi}
v48 <- OneByteStringFromCharCode(v47) T{_OneByteString}
ParallelMove r2 <- r0, r0 <- r2 goto:72 B22
B20
ParallelMove r3 <- fp[-1]
v244 <- BoxInt64(v7 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r4 <- r0
v246 <- BoxInt64(v8 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[2] <- v2 T{_OneByteString})
MoveArgument(sp[1] <- v246 T{int})
MoveArgument(sp[0] <- v244 T{int})
v39 <- StaticCall:76( _substringUncheckedNative@0150898<0> v2 T{_OneByteString}, v246 T{int}, v244 T{int}, using unchecked entrypoint, recognized_kind = OneByteString_substringUnchecked, result_type = T{!null}) T{_OneByteString}
ParallelMove r0 <- r0
ParallelMove r2 <- r0, r0 <- fp[-5] goto:78 B22
B22
ParallelMove fp[-1] <- r2
v161 <- LoadField(v6 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v166 <- LoadField(v6 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v167 <- LoadField(v166 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v266 <- UnboxInt64([non-speculative], v161 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-2] <- r3
v267 <- UnboxInt64([non-speculative], v167 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v266 T{_Smi} == v267 T{_Smi}) T{bool} goto (25, 26)
B25
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v6 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B27
B26
B27
v78 <- BinaryInt64Op(+ [tr], v266 T{_Smi}, v278 T{_Smi}) [1, 576460752303423488] int64
v268 <- BoxInt64(v78) [1, 576460752303423488] T{_Smi}
StoreField(v6 T{_GrowableList} . GrowableObjectArray.length = v268, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v78 T{_Smi}, v266 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v81 <- LoadField(v6 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-1]
StoreIndexed:40([_List] v81, v266 T{_Smi}, v66)
ParallelMove r0 <- r2
DartReturn:66(v6)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
v22 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase<X0, X1>} . LinkedHashBase.data) T{_List}
Branch if StrictCompare:14(!==, v22 T{_List}, v3) goto (5, 4)
B5
ParallelMove r0 <- C goto:30 B3
B4
v27 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase<X0, X1>} . LinkedHashBase.used_data) [0, 4611686018427387903] T{_Smi}
v32 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase<X0, X1>} . LinkedHashBase.deleted_keys) [0, 4611686018427387903] T{_Smi}
v33 <- UnboxInt64([non-speculative], v27 T{_Smi}) [0, 4611686018427387903] int64
v34 <- UnboxInt64([non-speculative], v32 T{_Smi}) [0, 4611686018427387903] int64
v17 <- BinaryInt64Op(+ [tr], v33 T{_Smi}, v34 T{_Smi}) [0, 9223372036854775806] int64
v7 <- EqualityCompare(v17 T{int} != v4) T{bool}
ParallelMove r0 <- r1 goto:26 B3
B3
ParallelMove r0 <- r0
DartReturn:32(v9)
B0
B1
Enter frame
ParallelMove r3 <- r1, fp[-6] <- r1, fp[-7] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v59 <- LoadField(v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin<X0, X1>} . ImmutableLinkedHashBase.data {final}) T{_ImmutableList}
ParallelMove fp[-5] <- r4
v92 <- LoadField(v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.used_data) [0, 4611686018427387903] T{_Smi}
v97 <- LoadField(v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.deleted_keys) [0, 4611686018427387903] T{_Smi}
v115 <- UnboxInt64([non-speculative], v92 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove fp[-4] <- r5
v116 <- UnboxInt64([non-speculative], v97 T{_Smi}) [0, 4611686018427387903] int64
v66 <- BinaryInt64Op(+ [tr], v115 T{_Smi}, v116 T{_Smi}) [0, 9223372036854775806] int64
ParallelMove fp[-3] <- r6
v22 <- LoadField:78(v59 T{_ImmutableList} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v118 <- UnboxInt64:78([non-speculative], v22) [0, 576460752303423487] int64
ParallelMove fp[-2] <- r7
ParallelMove r8 <- C goto:78 B10
B10
  Loop 0
  Loop Header
ParallelMove fp[-1] <- r8
CheckStackOverflow:82(stack=0, loop=1)
Branch if RelationalOp(<, v8, v115 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 0
ParallelMove r0 <- r7, r1 <- r8
GenericCheckBound:30(v118 T{_Smi}, v8) [-9223372036854775808, 9223372036854775807] int64
v132 <- LoadIndexed:30([_List] v59 T{_ImmutableList}, v8 T{int}) T{*?}
Branch if StrictCompare:10(===, v132 T{Object??}, v59 T{_ImmutableList}) T{bool} goto (5, 18)
B5
  Loop 0
ParallelMove r0 <- r3, r2 <- r8, r1 <- r6 goto:44 B6
B18
  Loop 0
v15 <- BinaryInt64Op(+ [tr], v8 T{int}, v133 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r7, r1 <- r10
GenericCheckBound:50(v118 T{_Smi}, v15) [-9223372036854775808, 9223372036854775807] int64
v134 <- LoadIndexed:50([_List] v59 T{_ImmutableList}, v15 T{int}) T{*?}
MoveArgument(sp[2] <- v3)
MoveArgument(sp[1] <- v132 T{*?})
MoveArgument(sp[0] <- v134 T{*?})
ParallelMove r0 <- r2
v17 <- ClosureCall:54( closure=v3<0>, v3, v132 T{*?}, v134 T{*?}) T{*?}
ParallelMove r0 <- fp[-6]
v102 <- LoadField(v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.used_data) [0, 4611686018427387903] T{_Smi}
v107 <- LoadField(v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.deleted_keys) [0, 4611686018427387903] T{_Smi}
v122 <- UnboxInt64([non-speculative], v102 T{_Smi}) [0, 4611686018427387903] int64
v123 <- UnboxInt64([non-speculative], v107 T{_Smi}) [0, 4611686018427387903] int64
v82 <- BinaryInt64Op(+ [tr], v122 T{_Smi}, v123 T{_Smi}) [0, 9223372036854775806] int64
ParallelMove r1 <- fp[-3]
Branch if EqualityCompare(v82 T{int} != v66 T{int}) T{bool} goto (8, 9)
B9
  Loop 0
ParallelMove r2 <- fp[-1] goto:74 B6
B6
  Loop 0
v21 <- BinaryInt64Op(+ [tr], v8 T{int}, v135 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r8 <- r8, r3 <- r0, r2 <- fp[-7], r4 <- fp[-5], r6 <- r1, r5 <- fp[-4], r7 <- fp[-2] goto:80 B10
B4
ParallelMove r0 <- C
DartReturn:84(v0)
B8
v19 <- AllocateObject:66(cls=ConcurrentModificationError, <not-aliased>) T{ConcurrentModificationError}
ParallelMove r1 <- r0, r0 <- fp[-6]
StoreField(v19 T{ConcurrentModificationError} . modifiedObject = v2 T{__ConstMap&_HashVMImmutableBase&MapMixin&_HashBase&_OperatorEqualsAndCanonicalHashCode&_LinkedHashMapMixin<X0, X1>}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:70(v19)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r3 <- r1, fp[-6] <- r1, fp[-7] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v59 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.data) T{_List}
ParallelMove fp[-5] <- r4
v92 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.used_data) [0, 4611686018427387903] T{_Smi}
v97 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.deleted_keys) [0, 4611686018427387903] T{_Smi}
v115 <- UnboxInt64([non-speculative], v92 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove fp[-4] <- r5
v116 <- UnboxInt64([non-speculative], v97 T{_Smi}) [0, 4611686018427387903] int64
v66 <- BinaryInt64Op(+ [tr], v115 T{_Smi}, v116 T{_Smi}) [0, 9223372036854775806] int64
ParallelMove fp[-3] <- r6
v22 <- LoadField:78(v59 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v118 <- UnboxInt64:78([non-speculative], v22) [0, 576460752303423487] int64
ParallelMove fp[-2] <- r7
ParallelMove r8 <- C goto:78 B10
B10
  Loop 0
  Loop Header
ParallelMove fp[-1] <- r8
CheckStackOverflow:82(stack=0, loop=1)
Branch if RelationalOp(<, v8, v115 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 0
ParallelMove r0 <- r7, r1 <- r8
GenericCheckBound:30(v118 T{_Smi}, v8) [-9223372036854775808, 9223372036854775807] int64
v132 <- LoadIndexed:30([_List] v59 T{_List}, v8 T{int}) T{*?}
Branch if StrictCompare:10(===, v132 T{Object??}, v59 T{_List}) T{bool} goto (5, 7)
B5
  Loop 0
ParallelMove r0 <- r3, r3 <- r8, r2 <- r4, r1 <- r6 goto:44 B6
B7
  Loop 0
v15 <- BinaryInt64Op(+ [tr], v8 T{int}, v133 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r7, r1 <- r10
GenericCheckBound:50(v118 T{_Smi}, v15) [-9223372036854775808, 9223372036854775807] int64
v134 <- LoadIndexed:50([_List] v59 T{_List}, v15 T{int}) T{*?}
MoveArgument(sp[2] <- v3)
MoveArgument(sp[1] <- v132 T{*?})
MoveArgument(sp[0] <- v134 T{*?})
ParallelMove r0 <- r2
v17 <- ClosureCall:54( closure=v3<0>, v3, v132 T{*?}, v134 T{*?}) T{*?}
ParallelMove r0 <- fp[-6]
v87 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.data) T{_List}
ParallelMove r2 <- fp[-5]
Branch if StrictCompare:14(!==, v87 T{_List}, v59 T{_List}) goto (45, 18)
B18
  Loop 0
ParallelMove r1 <- fp[-3]
v102 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.used_data) [0, 4611686018427387903] T{_Smi}
v107 <- LoadField(v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>} . LinkedHashBase.deleted_keys) [0, 4611686018427387903] T{_Smi}
v122 <- UnboxInt64([non-speculative], v102 T{_Smi}) [0, 4611686018427387903] int64
v123 <- UnboxInt64([non-speculative], v107 T{_Smi}) [0, 4611686018427387903] int64
v82 <- BinaryInt64Op(+ [tr], v122 T{_Smi}, v123 T{_Smi}) [0, 9223372036854775806] int64
Branch if EqualityCompare(v82 T{int} != v66 T{int}) T{bool} goto (43, 9)
B9
  Loop 0
ParallelMove r3 <- fp[-1] goto:74 B6
B6
  Loop 0
v21 <- BinaryInt64Op(+ [tr], v8 T{int}, v135 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r8 <- r8, r3 <- r0, r2 <- fp[-7], r4 <- r2, r6 <- r1, r5 <- fp[-4], r7 <- fp[-2] goto:80 B10
B4
ParallelMove r0 <- C
DartReturn:84(v0)
B43
B45
B8
v19 <- AllocateObject:66(cls=ConcurrentModificationError, <not-aliased>) T{ConcurrentModificationError}
ParallelMove r1 <- r0, r0 <- fp[-6]
StoreField(v19 T{ConcurrentModificationError} . modifiedObject = v2 T{__Map&_HashVMBase&MapMixin&_HashBase&_OperatorEqualsAndHashCode&_LinkedHashMapMixin<X0, X1>}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:70(v19)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r4 <- r1
CheckStackOverflow:8(stack=0, loop=0)
Branch if RelationalOp(<, v4, v45 T{_Smi}) T{bool} goto (5, 3)
B3
v30 <- LoadField(v3 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v44 <- UnboxInt64([non-speculative], v30 T{_Smi}) [0, 2305843009213693951] int64
Branch if RelationalOp(>, v4, v44 T{_Smi}) T{bool} goto (6, 7)
B7
v43 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v43 T{int})
v10 <- StaticCall:50( _ExecuteMatchSticky@0150898<0> v2, v3, v43 T{int}, using unchecked entrypoint, recognized_kind = RegExp_ExecuteMatchSticky) T{List<int>??}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
Branch if StrictCompare:52(===, v10, v0) goto (8, 9)
B8
ParallelMove r0 <- C
DartReturn:58(v0)
B9
v11 <- AllocateObject:62(cls=_RegExpMatch, <not-aliased>) T{_RegExpMatch}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v11 T{_RegExpMatch} . _match@0150898 = v10 T{List<int>}, NoStoreBarrier)
ParallelMove r0 <- r1
DartReturn:66(v11)
B5
B6
B4
v25 <- LoadField(v3 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
ParallelMove fp[-2] <- r4
v42 <- BoxInt64(v4) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
v12 <- AllocateObject:40(cls=RangeError) T{RangeError}
ParallelMove r0 <- r0
ParallelMove fp[-3] <- r0
MoveArgument(sp[3] <- v12)
MoveArgument(sp[2] <- v42 T{int})
MoveArgument(sp[1] <- v5)
MoveArgument(sp[0] <- v25 T{_Smi})
StaticCall:44( RangeError.range<0> v12, v42 T{int}, v5, v25 T{_Smi})
ParallelMove r0 <- fp[-3]
Throw:46(v12)
CheckStackOverflowSlowPath
B0
B1
ParallelMove r0 <- sp[0]
DartReturn:10(v2)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[1] <- v0)
MoveArgument(sp[0] <- v2)
v3 <- StaticCall:10( _Double@0150898.fromInteger<0> v0, v2, recognized_kind = DoubleFromInteger, result_type = T{_Double}) T{_Double}
ParallelMove r0 <- r0
DartReturn:12(v3)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r3 <- fp[3]
v5 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- fp[2], r2 <- r2, r1 <- C
AssertAssignable:4(v3, v4, 'value', instantiator_type_args(v5), function_type_args(v0)) T{Iterable<X0>??}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[2], r1 <- fp[3]
StoreField(v2 . _yieldStarIterable@4048458 = v3 T{Iterable<X0>??})
ParallelMove r0 <- C
DartReturn:6(v0)
B0
B1
ParallelMove r1 <- sp[0]
v3 <- LoadField(v2 . _hash@0150898) T{*?}
ParallelMove r0 <- r0
DartReturn:4(v3)
B0
B1
Enter frame
ParallelMove r3 <- fp[3]
v5 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- fp[2], r2 <- r2, r1 <- C
AssertAssignable:4(v3, v4, 'value', instantiator_type_args(v5), function_type_args(v0)) T{X0??}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[2], r1 <- fp[3]
StoreField(v2 . _current@4048458 = v3 T{X0??})
ParallelMove r0 <- C
DartReturn:6(v0)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[4]
v29 <- LoadClassId(v2) [44, 599] int64
Branch if EqualityCompare(v29 == v30) T{bool} goto (3, 4)
B3
v39 <- LoadField(v2 T{_SuspendState} . SuspendState.function_data) T{*?}
ParallelMove r4 <- r1, r0 <- C goto:26 B5
B4
ParallelMove r4 <- r0, r0 <- C goto:28 B5
B5
ParallelMove fp[-1] <- r4
v31 <- LoadClassId(v9) [44, 599] int64
Branch if EqualityCompare(v31 == v32) T{bool} goto (6, 10)
B6
Branch if StrictCompare:42(!==, v10 T{bool}, v5) goto (7, 8)
BoolTest
B7
ParallelMove r1 <- r4, r2 <- fp[3], r3 <- fp[2]
StaticCall:48( _asyncCompleteError@4048458<0> v9 T{_Future}, v3, v4, using unchecked entrypoint)
ParallelMove  goto:56 B9
B8
ParallelMove r1 <- fp[-1], r2 <- fp[3], r3 <- fp[2]
StaticCall:52( _completeError@4048458<0> v9 T{_Future}, v3, v4, using unchecked entrypoint)
ParallelMove  goto:58 B9
B9
B10
Branch if EqualityCompare(v31 T{_Smi} == v34) T{bool} goto (11, 12)
B11
ParallelMove r1 <- fp[-1], r2 <- fp[3], r3 <- fp[2]
StaticCall:72( addError<0> v9 T{_AsyncStarStreamController}, v3, v4, using unchecked entrypoint)
ParallelMove r1 <- fp[-1]
StaticCall:74( close<0> v9 T{_AsyncStarStreamController}, using unchecked entrypoint)
ParallelMove  goto:90 B13
B13
ParallelMove r0 <- fp[-1]
DartReturn:92(v9)
B12
ParallelMove r1 <- C, r2 <- C
v16 <- CreateArray:78(v0, v15) T{_List}
ParallelMove r0 <- r0
ParallelMove fp[-2] <- r0
StoreIndexed([_List] v16, v17, v18, NoStoreBarrier)
MoveArgument(sp[0] <- v9)
v20 <- StaticCall:80( get:runtimeType<0> v9, recognized_kind = ObjectRuntimeType) T{Type}
ParallelMove r1 <- fp[-2], r0 <- r0
StoreIndexed([_List] v16, v19, v20)
ParallelMove r2 <- fp[-2]
StoreIndexed([_List] v16, v21, v22, NoStoreBarrier)
ParallelMove r1 <- r2, r0 <- fp[-1]
StoreIndexed([_List] v16, v23, v9)
MoveArgument(sp[0] <- v16)
v24 <- StaticCall:82( _interpolate@0150898<0> v16, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
Throw:84(v24)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . cancellationFuture) T{_Future?}
Branch if StrictCompare:12(!==, v3, v0) goto (3, 6)
B3
v12 <- LoadField(v3 T{_Future} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v12, v27) goto (4, 7)
B4
ParallelMove r1 <- r1, r2 <- C
StaticCall:28( _completeWithValue@4048458<0> v3 T{_Future}, v0, using unchecked entrypoint)
ParallelMove  goto:42 B8
B7
B6
B5
B8
v4 <- LoadField(v2 . controller) T{StreamController<X0>}
v32 <- LoadClassId(<non-smi> v4) int64
ParallelMove r0 <- r0, r1 <- r1
DispatchTableCall( cid=v32 StreamController.close<0>, v4)
ParallelMove r0 <- C
DartReturn:50(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v6 <- LoadField(v2 . cancellationFuture) T{_Future?}
Branch if StrictCompare:14(!==, v6, v0) goto (3, 6)
B3
v17 <- LoadField(v6 T{_Future} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v17, v43) goto (4, 7)
B4
ParallelMove r1 <- r1, r2 <- r2, r3 <- r3
StaticCall:30( _completeError@4048458<0> v6 T{_Future}, v3, v4, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:32(v0)
B7
B6
B5
v7 <- LoadField(v2 . controller) T{StreamController<X0>}
v52 <- LoadClassId(<non-smi> v7) int64
ParallelMove r0 <- r0, r1 <- r1
v8 <- DispatchTableCall( cid=v52 StreamController.hasListener<0>, v7) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:50(!==, v8 T{bool}, v9) goto (8, 9)
BoolTest
B8
ParallelMove r0 <- C
DartReturn:56(v0)
B9
ParallelMove r0 <- fp[-1]
v10 <- LoadField(v2 . controller) T{StreamController<X0>}
v53 <- LoadClassId(<non-smi> v10) int64
ParallelMove r0 <- r0, r1 <- r1, r2 <- fp[-2], r3 <- fp[-3]
DispatchTableCall( cid=v53 StreamController.addError<0>, v10, v3, v4)
ParallelMove r0 <- C
DartReturn:64(v0)
CheckStackOverflowSlowPath
B0
B1
ParallelMove r0 <- sp[1]
v9 <- LoadField(v2 T{_SuspendState} . SuspendState.function_data) T{*?}
ParallelMove r0 <- r0
StoreField(v9 T{_SyncStarIterable} . _stateAtStart@4048458 = v2 T{_SuspendState})
ParallelMove r0 <- r1
DartReturn:14(v9 T{Object})
B0
B1
Enter frame
v3 <- LoadField(v2 . ArgumentsDescriptor.type_args_len {final}) [0, 4611686018427387903] T{_Smi}
Branch if StrictCompare:4(===, v3, v4) goto (2, 3)
B2
ParallelMove r1 <- C goto:14 B5
B3
v5 <- LoadField(v2 . ArgumentsDescriptor.size {final}) [0, 4611686018427387903] T{_Smi}
v6 <- LoadIndexedUnsafe(fp[v5 + 16]) T{TypeArguments?}
ParallelMove r1 <- r1 goto:16 B5
B5
ParallelMove r1 <- r1
v8 <- AllocateObject:24(cls=_SyncStarIterable, v7) T{_SyncStarIterable}
ParallelMove r0 <- r0
DartReturn:28(v8)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[3]
v9 <- LoadField(v2 T{_SuspendState} . SuspendState.function_data) T{*?}
ParallelMove r1 <- r1
StaticCall:12( close<0> v9 T{Object}, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:14(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[3]
v13 <- LoadField(v2 T{_SuspendState} . SuspendState.function_data) T{*?}
ParallelMove fp[-1] <- r0
v5 <- LoadField(v13 T{Object} . asyncStarBody) T{((dynamic, Object?) => void)??}
Branch if StrictCompare:14(===, v5, v0) goto (3, 4)
B3
ParallelMove r1 <- r1, r2 <- r0
StaticCall:20( _createAsyncStarCallback@4048458<0> v2, v13 T{Object}, using unchecked entrypoint)
ParallelMove r1 <- fp[-1]
v6 <- StaticCall:22( get:stream<0> v13 T{Object}, result_type = T{!null}) T{Stream<X0>}
ParallelMove r0 <- r0
DartReturn:24(v6)
B4
ParallelMove r0 <- C
DartReturn:28(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r2 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . controller) T{StreamController<X0>}
v29 <- LoadClassId(<non-smi> v3) int64
ParallelMove r0 <- r0, r1 <- r1
v4 <- DispatchTableCall( cid=v29 StreamController.stream<0>, v3) T{*?}
ParallelMove r4 <- r0, r3 <- fp[-1]
ParallelMove fp[-2] <- r4
v5 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r4, r2 <- r2, r1 <- C
v7 <- InstanceOf:14(v4 T{Stream<X0>} IS _StreamImpl@4048458<X0>, instantiator_type_args(v5), function_type_args(v0)) T{bool}
InlineInstanceof
UninstantiatedTypeTest
BoolTest
ParallelMove r0 <- r0
Branch if StrictCompare:18(===, v7 T{bool}, v8) goto (3, 4)
BoolTest
B3
ParallelMove r1 <- fp[-1]
v9 <- LoadField(v2 . asyncStarBody) T{((dynamic, Object?) => void)??}
CheckNull:26(v9, CastError) T{((dynamic, Object?) => void)?}
ParallelMove  goto:34 B5
B4
B5
ParallelMove r0 <- fp[-2]
DartReturn:38(v4 T{Stream<X0>})
CheckStackOverflowSlowPath
slow path check null (cast) operation
B0
B1
Enter frame
ParallelMove fp[-1] <- r1, fp[-2] <- r2
v4 <- AllocateContext:10(num_variables=1) T{Context}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v4 . suspendState = v2, NoStoreBarrier)
ParallelMove r1 <- C, r2 <- r1
v6 <- AllocateClosure:12(v5, v4) T{_Closure}
ParallelMove r0 <- r0, r1 <- fp[-2]
StoreField(v3 T{_AsyncStarStreamController} . asyncStarBody = v6 T{_Closure})
ParallelMove r0 <- C
DartReturn:16(v0)
B0
B1
Enter frame
v3 <- LoadField(v2 . ArgumentsDescriptor.type_args_len {final}) [0, 4611686018427387903] T{_Smi}
Branch if StrictCompare:4(===, v3, v4) goto (2, 3)
B2
ParallelMove r1 <- C goto:14 B5
B3
v5 <- LoadField(v2 . ArgumentsDescriptor.size {final}) [0, 4611686018427387903] T{_Smi}
v6 <- LoadIndexedUnsafe(fp[v5 + 16]) T{TypeArguments?}
ParallelMove r1 <- r1 goto:16 B5
B5
CheckStackOverflow:22(stack=0, loop=0)
ParallelMove r1 <- r1
v8 <- AllocateObject:24(cls=_AsyncStarStreamController, v7) T{_AsyncStarStreamController}
ParallelMove r1 <- r0, r0 <- r0
ParallelMove fp[-1] <- r0
StaticCall:26( _AsyncStarStreamController@4048458.<0> v8)
ParallelMove r0 <- fp[-1]
DartReturn:28(v8)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- C
ParallelMove r2 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
StoreField(v2 . isAdding = v3)
StoreField(v2 . onListenReceived = v3)
StoreField(v2 . isScheduled = v3)
StoreField(v2 . isSuspendedAtYield = v3)
v4 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r1 <- r1
v18 <- AllocateObject:18(cls=_SyncStreamController, v4 T{TypeArguments}) T{_SyncStreamController}
ParallelMove r3 <- r0, r0 <- C
ParallelMove fp[-2] <- r3
StoreField(v18 T{_SyncStreamController} . _state@4048458 = v51 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r0 <- r3, r4 <- fp[-1]
StoreField(v2 . controller = v18)
ParallelMove r1 <- C, r2 <- r4
v24 <- AllocateClosure:6(v25 T{Function}, v2 T{_AsyncStarStreamController}) T{_Closure}
ParallelMove r1 <- fp[-2], r2 <- r0
v52 <- StaticCall:18( set:onListen<0> v18, v24) T{void?}
ParallelMove r0 <- fp[-1]
v8 <- LoadField(v2 . controller) T{StreamController<X0>}
ParallelMove r1 <- C, r2 <- r0, fp[-2] <- r3
v31 <- AllocateClosure:6(v32 T{Function}, v2 T{_AsyncStarStreamController}) T{_Closure}
ParallelMove r0 <- r0, r1 <- fp[-2]
v53 <- LoadClassId(<non-smi> v8) int64
ParallelMove r0 <- r2, r1 <- r1, r2 <- r0
DispatchTableCall( cid=v53 StreamController.onResume=<0>, v8, v31)
ParallelMove r2 <- fp[-1]
v10 <- LoadField(v2 . controller) T{StreamController<X0>}
ParallelMove r1 <- C, r2 <- r2, fp[-2] <- r0
v38 <- AllocateClosure:6(v39 T{Function}, v2 T{_AsyncStarStreamController}) T{_Closure}
ParallelMove r0 <- r0, r1 <- fp[-2]
v54 <- LoadClassId(<non-smi> v10) int64
ParallelMove r0 <- r2, r1 <- r1, r2 <- r0
DispatchTableCall( cid=v54 StreamController.onCancel=<0>, v10, v38)
ParallelMove r0 <- C
DartReturn:32(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . isSuspendedAtYield) T{bool}
Branch if StrictCompare:14(===, v3 T{bool}, v4) goto (3, 4)
BoolTest
B3
ParallelMove r1 <- r1
StaticCall:20( scheduleGenerator<0> v2, using unchecked entrypoint)
ParallelMove  goto:26 B5
B4
B5
ParallelMove r0 <- C
DartReturn:30(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- C
CheckStackOverflow:8(stack=0, loop=0)
StoreField(v2 T{_AsyncStarStreamController} . onListenReceived = v3 T{bool})
ParallelMove r1 <- r1
StaticCall:12( scheduleGenerator<0> v2, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:14(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[3]
v10 <- LoadClassId(v2) [44, 599] int64
Branch if EqualityCompare(v10 == v11) T{bool} goto (3, 4)
B3
v16 <- LoadField(v2 T{_SuspendState} . SuspendState.function_data) T{*?}
ParallelMove r0 <- r1 goto:26 B5
B4
B5
ParallelMove r1 <- r0, r2 <- fp[2], fp[-1] <- r0
StaticCall:30( _completeWithValue@4048458<0> v7, v3)
ParallelMove r0 <- fp[-1]
DartReturn:32(v7)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[3]
v13 <- LoadClassId(v2) [44, 599] int64
Branch if EqualityCompare(v13 == v14) T{bool} goto (3, 4)
B3
v21 <- LoadField(v2 T{_SuspendState} . SuspendState.function_data) T{*?}
ParallelMove r0 <- r1 goto:26 B5
B4
B5
ParallelMove fp[-1] <- r0
v15 <- LoadClassId(v3) [1, 600] int64
Branch if EqualityCompare(v15 == v16) T{bool} goto (6, 7)
B6
ParallelMove r1 <- r0, r2 <- r2
StaticCall:40( _asyncCompleteUnchecked@4048458<0> v7, v3 T{_Future}, using unchecked entrypoint)
ParallelMove  goto:48 B8
B7
ParallelMove r1 <- fp[-1], r2 <- r2
StaticCall:44( _completeWithValue@4048458<0> v7, v3)
ParallelMove  goto:50 B8
B8
ParallelMove r0 <- fp[-1]
DartReturn:52(v7)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, r3 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r3, r2 <- r2, r1 <- C
v6 <- InstanceOf:10(v3 IS Future<X0>, instantiator_type_args(v4), function_type_args(v0)) T{bool}
InlineInstanceof
UninstantiatedTypeTest
BoolTest
ParallelMove r0 <- r0
Branch if StrictCompare:14(===, v6, v7) goto (3, 4)
BoolTest
B3
ParallelMove r1 <- fp[-1], r2 <- fp[-2]
StaticCall:20( _chainFuture@4048458<0> v2, v3 T{_Future}, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:22(v0)
B4
ParallelMove r1 <- fp[-1], r2 <- fp[-2]
StaticCall:26( _asyncCompleteWithValue@4048458<0> v2, v3, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:28(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v5 <- LoadField(v4 . ArgumentsDescriptor.type_args_len {final}) [0, 4611686018427387903] T{_Smi}
Branch if StrictCompare:4(===, v5, v6) goto (2, 3)
B2
ParallelMove r2 <- C goto:14 B5
B3
v7 <- LoadField(v4 . ArgumentsDescriptor.size {final}) [0, 4611686018427387903] T{_Smi}
v8 <- LoadIndexedUnsafe(fp[v7 + 16]) T{TypeArguments?}
ParallelMove r2 <- r1 goto:16 B5
B5
ParallelMove fp[-1] <- r2
CheckStackOverflow:22(stack=0, loop=0)
v108 <- LoadField(v2 T{_SuspendState} . SuspendState.then_callback) T{_Closure?}
Branch if StrictCompare:26(===, v108, v0) goto (6, 7)
B6
ParallelMove r1 <- r0
StaticCall:32( _createAsyncCallbacks@4048458<0> v2, using unchecked entrypoint)
ParallelMove  goto:38 B8
B7
B8
ParallelMove r0 <- fp[2], r2 <- C, r1 <- fp[-1]
v12 <- InstanceOf:42(v3 IS Future<Y0>, instantiator_type_args(v0), function_type_args(v9)) T{bool}
InlineInstanceof
UninstantiatedTypeTest
BoolTest
ParallelMove r0 <- r0
Branch if StrictCompare:46(===, v12 T{bool}, v13) goto (10, 16)
BoolTest
B10
ParallelMove r0 <- fp[2]
v94 <- LoadField(v3 T{_Future} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v94, v103) goto (11, 12)
B11
ParallelMove r1 <- fp[3]
v71 <- AllocateContext:10(num_variables=3) T{Context}
ParallelMove r1 <- r0, r0 <- fp[3]
ParallelMove fp[-1] <- r1
StoreField(v71 . this = v2 T{_SuspendState}, NoStoreBarrier)
ParallelMove r2 <- fp[2]
StoreField(v71 . future = v3 T{_Future}, NoStoreBarrier)
v119 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r0 <- r0, r2 <- fp[-1]
StoreField(v71 . zone = v119, NoStoreBarrier)
v73 <- LoadField(v71 . future) T{_Future}
v124 <- LoadField(v73 T{_Future} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v124, v154) goto (30, 31)
B30
v83 <- LoadField(v73 T{_Future} . _zone@4048458 {final}) T{_RootZone}
ParallelMove r1 <- C, r2 <- r2, fp[-2] <- r3
v81 <- AllocateClosure:24(v89 T{Function}, v71) T{_Closure}
ParallelMove r1 <- fp[-2], r2 <- r0
StaticCall:28( scheduleMicrotask<0> v83, v81, using unchecked entrypoint)
ParallelMove  goto:40 B32
B31
v79 <- LoadField(v73 T{_Future} . _zone@4048458 {final}) T{_RootZone}
ParallelMove r1 <- C, r2 <- r2, fp[-2] <- r3
v77 <- AllocateClosure:32(v88 T{Function}, v71) T{_Closure}
ParallelMove r1 <- fp[-2], r2 <- r0
StaticCall:36( scheduleMicrotask<0> v79, v77, using unchecked entrypoint)
ParallelMove  goto:42 B32
B32
B12
ParallelMove r0 <- fp[3], r2 <- r0
v59 <- LoadField(v2 T{_SuspendState} . SuspendState.then_callback) T{_Closure?}
v64 <- LoadField(v2 T{_SuspendState} . SuspendState.error_callback) T{_Closure?}
MoveArgument(sp[3] <- v0)
MoveArgument(sp[2] <- v3 T{_Future})
MoveArgument(sp[1] <- v59)
MoveArgument(sp[0] <- v64)
StaticCall:80( _thenAwait@4048458<1> v0, v3 T{_Future}, v59, v64, using unchecked entrypoint)
ParallelMove  goto:86 B15
B15
B16
ParallelMove r0 <- fp[3], r2 <- fp[2]
v37 <- AllocateContext:10(num_variables=3) T{Context}
ParallelMove r1 <- r0, r0 <- fp[3]
ParallelMove fp[-1] <- r1
StoreField(v37 . this = v2 T{_SuspendState}, NoStoreBarrier)
ParallelMove r2 <- fp[2]
StoreField(v37 . object = v3 T{Object??}, NoStoreBarrier)
v111 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r0 <- r0, r2 <- fp[-1]
ParallelMove fp[-2] <- r0
StoreField(v37 . zone = v111, NoStoreBarrier)
ParallelMove r1 <- C, r2 <- r2
v40 <- AllocateClosure:14(v42 T{Function}, v37) T{_Closure}
ParallelMove r1 <- fp[-2], r2 <- r0
StaticCall:16( scheduleMicrotask<0> v111, v40, using unchecked entrypoint)
ParallelMove  goto:106 B17
B17
v30 <- LoadField(v2 T{_SuspendState} . SuspendState.function_data) T{*?}
ParallelMove r0 <- r0
DartReturn:110(v30 T{Object})
CheckStackOverflowSlowPath
B0
B1
Enter frame
v6 <- LoadField(v5 . ArgumentsDescriptor.type_args_len {final}) [0, 4611686018427387903] T{_Smi}
Branch if StrictCompare:4(===, v6, v7) goto (2, 3)
B2
ParallelMove r4 <- C goto:14 B5
B3
v8 <- LoadField(v5 . ArgumentsDescriptor.size {final}) [0, 4611686018427387903] T{_Smi}
v9 <- LoadIndexedUnsafe(fp[v8 + 16]) T{TypeArguments?}
ParallelMove r4 <- r1 goto:16 B5
B5
ParallelMove fp[-1] <- r4
CheckStackOverflow:22(stack=0, loop=0)
ParallelMove r1 <- r4
v11 <- AllocateObject:24(cls=_Future, v10) T{_Future}
ParallelMove r1 <- r0, r0 <- C
ParallelMove fp[-2] <- r1
StoreField(v11 T{_Future} . _state@4048458 = v41 T{_Smi} <int64>, NoStoreBarrier)
v36 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r1 <- r0, r0 <- fp[-2]
StoreField(v11 T{_Future} . _zone@4048458 = v36, NoStoreBarrier)
ParallelMove r4 <- fp[4]
v12 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r2 <- r2, r1 <- fp[-1], r3 <- C
v14 <- InstantiateTypeArguments:28(v13, instantiator_type_args(v12), function_type_args(v10), instantiator_class(Library:'dart:async' Class: _Future@4048458)) T{*?}
ParallelMove r1 <- r0
v15 <- AllocateObject:30(cls=_FutureListener, v14) T{_FutureListener}
ParallelMove r1 <- r0, r0 <- fp[-2]
StoreField(v15 T{_FutureListener} . result = v11 T{_Future}, NoStoreBarrier)
ParallelMove r2 <- fp[3]
StoreField(v15 T{_FutureListener} . callback = v3 T{_Closure}, NoStoreBarrier)
ParallelMove r2 <- fp[2]
StoreField(v15 T{_FutureListener} . errorCallback = v4 T{_Closure}, NoStoreBarrier)
ParallelMove r2 <- C
StoreField(v15 T{_FutureListener} . state = v42 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r1 <- fp[4], r2 <- r1
StaticCall:34( _addListener@4048458<0> v2, v15, using unchecked entrypoint)
ParallelMove r0 <- fp[-2]
DartReturn:36(v11)
CheckStackOverflowSlowPath
B0
B14
Enter frame
ParallelMove fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- AllocateContext:10(num_variables=1) T{Context}
ParallelMove r1 <- r0, r0 <- fp[-1]
ParallelMove fp[-2] <- r1
StoreField(v3 . suspendState = v2, NoStoreBarrier)
v83 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r1 <- C, r2 <- fp[-2]
v5 <- AllocateClosure:12(v4, v3) T{_Closure}
ParallelMove r0 <- r0, r3 <- fp[-1]
StoreField(v2 T{_SuspendState} . SuspendState.then_callback = v5 T{_Closure})
ParallelMove r1 <- C, r2 <- fp[-2]
v7 <- AllocateClosure:14(v6, v3) T{_Closure}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v2 T{_SuspendState} . SuspendState.error_callback = v7 T{_Closure})
ParallelMove r0 <- C
DartReturn:94(v0)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
v5 <- LoadField(v3 . zone {final}) T{_RootZone}
v6 <- LoadField(v3 . this) T{_SuspendState}
v13 <- LoadField(v6 T{_SuspendState} . SuspendState.then_callback) T{_Closure?}
v8 <- LoadField(v3 . object) T{Object??}
MoveArgument(sp[3] <- v4)
MoveArgument(sp[2] <- v5)
MoveArgument(sp[1] <- v13)
MoveArgument(sp[0] <- v8)
StaticCall:12( runUnary<2> v4, v5, v13, v8, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:14(v0)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v3 . zone {final}) T{_RootZone}
v5 <- LoadField(v3 . this) T{_SuspendState}
v13 <- LoadField(v5 T{_SuspendState} . SuspendState.then_callback) T{_Closure?}
v7 <- LoadField(v3 . future) T{_Future}
v8 <- LoadField(v7 . _resultOrListeners@4048458) T{*?}
MoveArgument(sp[3] <- v0)
MoveArgument(sp[2] <- v4)
MoveArgument(sp[1] <- v13)
MoveArgument(sp[0] <- v8)
StaticCall:14( runUnary<2> v0, v4, v13, v8, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:16(v0)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . Closure.context {final}) T{*}
ParallelMove fp[-3] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v3 . future) T{_Future}
v5 <- LoadField(v4 . _resultOrListeners@4048458) T{*?}
ParallelMove fp[-2] <- r4
v7 <- LoadField(v4 T{_Future} . _zone@4048458 {final}) T{_RootZone}
v8 <- LoadField(v3 . zone {final}) T{_RootZone}
ParallelMove r1 <- r1, r2 <- r0, fp[-1] <- r0
v9 <- StaticCall:14( inSameErrorZone<0> v7, v8, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:18(!==, v9 T{bool}, v10) goto (3, 4)
BoolTest
B3
ParallelMove r0 <- fp[-2]
v19 <- LoadField(v5 . error {final}) T{Object}
v20 <- LoadField(v5 . stackTrace {final}) T{StackTrace}
ParallelMove r1 <- r1, r2 <- r2
StaticCall:10( _rootHandleError@4048458<0> v19 T{Object}, v20 T{StackTrace})
ParallelMove  goto:44 B5
B4
ParallelMove r1 <- fp[-3], r0 <- fp[-2]
v13 <- LoadField(v3 . this) T{_SuspendState}
v25 <- LoadField(v13 T{_SuspendState} . SuspendState.error_callback) T{_Closure?}
v15 <- LoadField(v5 . error {final}) T{Object}
v16 <- LoadField(v5 . stackTrace {final}) T{StackTrace}
MoveArgument(sp[4] <- v11)
MoveArgument(sp[3] <- v8 T{_RootZone})
MoveArgument(sp[2] <- v25)
MoveArgument(sp[1] <- v15)
MoveArgument(sp[0] <- v16)
StaticCall:40( runBinary<3> v11, v8 T{_RootZone}, v25, v15, v16, using unchecked entrypoint)
ParallelMove  goto:46 B5
B5
ParallelMove r0 <- C
DartReturn:48(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[3]
v104 <- LoadField(v2 T{_SuspendState} . SuspendState.then_callback) T{_Closure?}
Branch if StrictCompare:12(===, v104, v0) goto (3, 4)
B3
ParallelMove r1 <- r0
StaticCall:18( _createAsyncCallbacks@4048458<0> v2, using unchecked entrypoint)
ParallelMove  goto:24 B5
B4
B5
v17 <- LoadClassId(v3) [1, 600] int64
Branch if EqualityCompare(v17 == v18) T{bool} goto (6, 10)
B6
v89 <- LoadField(v3 T{_Future} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v89, v99) goto (7, 8)
B7
ParallelMove r1 <- fp[3]
v66 <- AllocateContext:10(num_variables=3) T{Context}
ParallelMove r1 <- r0, r0 <- fp[3]
ParallelMove fp[-1] <- r1
StoreField(v66 . this = v2 T{_SuspendState}, NoStoreBarrier)
ParallelMove r2 <- fp[2]
StoreField(v66 . future = v3 T{_Future}, NoStoreBarrier)
v115 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r0 <- r0, r2 <- fp[-1]
StoreField(v66 . zone = v115, NoStoreBarrier)
v68 <- LoadField(v66 . future) T{_Future}
v120 <- LoadField(v68 T{_Future} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v120, v148) goto (27, 28)
B27
v78 <- LoadField(v68 T{_Future} . _zone@4048458 {final}) T{_RootZone}
ParallelMove r1 <- C, r2 <- r2, fp[-2] <- r3
v76 <- AllocateClosure:24(v84 T{Function}, v66) T{_Closure}
ParallelMove r1 <- fp[-2], r2 <- r0
StaticCall:28( scheduleMicrotask<0> v78, v76, using unchecked entrypoint)
ParallelMove  goto:40 B29
B28
v74 <- LoadField(v68 T{_Future} . _zone@4048458 {final}) T{_RootZone}
ParallelMove r1 <- C, r2 <- r2, fp[-2] <- r3
v72 <- AllocateClosure:32(v83 T{Function}, v66) T{_Closure}
ParallelMove r1 <- fp[-2], r2 <- r0
StaticCall:36( scheduleMicrotask<0> v74, v72, using unchecked entrypoint)
ParallelMove  goto:42 B29
B29
B8
ParallelMove r0 <- fp[3], r2 <- r0
v54 <- LoadField(v2 T{_SuspendState} . SuspendState.then_callback) T{_Closure?}
v59 <- LoadField(v2 T{_SuspendState} . SuspendState.error_callback) T{_Closure?}
MoveArgument(sp[3] <- v0)
MoveArgument(sp[2] <- v3 T{_Future})
MoveArgument(sp[1] <- v54)
MoveArgument(sp[0] <- v59)
StaticCall:56( _thenAwait@4048458<1> v0, v3 T{_Future}, v54, v59, using unchecked entrypoint)
ParallelMove  goto:62 B9
B9
B10
ParallelMove r2 <- r0
Branch if EqualityCompare(v17 T{_Smi} != v18) T{bool} goto (11, 12)
B11
ParallelMove r0 <- fp[3]
v44 <- AllocateContext:10(num_variables=3) T{Context}
ParallelMove r1 <- r0, r0 <- fp[3]
ParallelMove fp[-1] <- r1
StoreField(v44 . this = v2 T{_SuspendState}, NoStoreBarrier)
ParallelMove r2 <- fp[2]
StoreField(v44 . object = v3 T{Object??}, NoStoreBarrier)
v112 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r0 <- r0, r2 <- fp[-1]
ParallelMove fp[-2] <- r0
StoreField(v44 . zone = v112, NoStoreBarrier)
ParallelMove r1 <- C, r2 <- r2
v47 <- AllocateClosure:14(v49 T{Function}, v44) T{_Closure}
ParallelMove r1 <- fp[-2], r2 <- r0
StaticCall:16( scheduleMicrotask<0> v112, v47, using unchecked entrypoint)
ParallelMove  goto:84 B13
B12
ParallelMove r0 <- fp[3]
v32 <- AllocateContext:10(num_variables=1) T{Context}
ParallelMove r1 <- r0, r0 <- fp[3]
StoreField(v32 . this = v2 T{_SuspendState}, NoStoreBarrier)
ParallelMove r1 <- C, r2 <- r1
v34 <- AllocateClosure:12(v37 T{Function}, v32) T{_Closure}
ParallelMove r0 <- r0
MoveArgument(sp[1] <- v34)
MoveArgument(sp[0] <- v3 T{_Future})
v35 <- StaticCall:14( _instantiateClosureWithFutureTypeArgument@4048458<0> v34, v3 T{_Future}, result_type = T{!null}) T{_Closure}
ParallelMove r1 <- r0, r0 <- fp[3]
v109 <- LoadField(v2 T{_SuspendState} . SuspendState.error_callback) T{_Closure?}
MoveArgument(sp[3] <- v0 T{Null?})
MoveArgument(sp[2] <- v3 T{_Future})
MoveArgument(sp[1] <- v35)
MoveArgument(sp[0] <- v109)
StaticCall:18( then<1> v0 T{Null?}, v3 T{_Future}, v35, v109, using unchecked entrypoint)
ParallelMove  goto:86 B13
B13
B14
v25 <- LoadField(v2 T{_SuspendState} . SuspendState.function_data) T{*?}
ParallelMove r0 <- r0
DartReturn:96(v25 T{Object})
CheckStackOverflowSlowPath
B0
B8
Enter frame
ParallelMove r0 <- fp[3]
v5 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:36(stack=0, loop=0)
v13 <- LoadField(v5 . this) T{_SuspendState}
v21 <- LoadField(v13 T{_SuspendState} . SuspendState.then_callback) T{_Closure?}
CheckNull:40(v21, NoSuchMethodError) T{_Closure}
MoveArgument(sp[1] <- v21 T{_Closure})
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r1
v15 <- ClosureCall:42( closure=v21 T{_Closure}<0>, v21 T{_Closure}, v3) T{*?}
ParallelMove r0 <- r0
DartReturn:44(v15)
CheckStackOverflowSlowPath
slow path check null (nsm) operation
B0
B1
Enter frame
v3 <- LoadField(v2 . ArgumentsDescriptor.type_args_len {final}) [0, 4611686018427387903] T{_Smi}
Branch if StrictCompare:4(===, v3, v4) goto (2, 3)
B2
ParallelMove r1 <- C goto:14 B5
B3
v5 <- LoadField(v2 . ArgumentsDescriptor.size {final}) [0, 4611686018427387903] T{_Smi}
v6 <- LoadIndexedUnsafe(fp[v5 + 16]) T{TypeArguments?}
ParallelMove r1 <- r1 goto:16 B5
B5
CheckStackOverflow:22(stack=0, loop=0)
ParallelMove r1 <- r1
v8 <- AllocateObject:24(cls=_Future, v7, <not-aliased>) T{_Future}
ParallelMove r1 <- r0, r0 <- C
ParallelMove fp[-1] <- r1
StoreField(v8 T{_Future} . _state@4048458 = v21 T{_Smi} <int64>, NoStoreBarrier)
v17 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v8 T{_Future} . _zone@4048458 = v17, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:28(v8)
CheckStackOverflowSlowPath
B0
B8
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r3 <- fp[3]
v5 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- fp[2], r2 <- r2, r1 <- C
t0 <- AssertAssignable:10(v3, v4, 'stream', instantiator_type_args(v5), function_type_args(v0)) T{Stream<X0>}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[3]
v8 <- LoadField(v2 . onListenReceived) T{bool}
Branch if StrictCompare:18(!==, v8 T{bool}, v9) goto (3, 4)
BoolTest
B3
MoveArgument(sp[0] <- v18)
StaticCall:24( _fatal@4048458<0> v18)
ParallelMove  goto:30 B5
B4
B5
v10 <- LoadField(v2 . controller) T{StreamController<X0>}
v41 <- LoadClassId(<non-smi> v10) int64
ParallelMove r0 <- r0, r1 <- r1
v11 <- DispatchTableCall( cid=v41 StreamController.hasListener<0>, v10) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:40(!==, v11 T{bool}, v9) goto (6, 7)
BoolTest
B6
ParallelMove r0 <- C
DartReturn:46(v9)
B7
ParallelMove r4 <- fp[3], r0 <- C
StoreField(v2 T{_AsyncStarStreamController} . isAdding = v9 T{bool})
v12 <- LoadField(v2 . controller) T{StreamController<X0>}
v42 <- LoadClassId(<non-smi> v12) int64
ParallelMove r0 <- r0, r1 <- r1, r2 <- fp[2], r3 <- C
v14 <- DispatchTableCall( cid=v42 StreamController.addStream<0>, v12, v3 T{Stream<X0>}, v13) T{_Future}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
v7 <- AllocateContext:12(num_variables=1) T{Context}
ParallelMove r1 <- r0, r0 <- fp[3]
StoreField(v7 . self = v2, NoStoreBarrier)
ParallelMove r1 <- C, r2 <- r1
v17 <- AllocateClosure:56(v16, v7) T{_Closure}
ParallelMove r0 <- r0
MoveArgument(sp[2] <- v15)
MoveArgument(sp[1] <- v14 T{_Future})
MoveArgument(sp[0] <- v17)
StaticCall:58( then<1> v15, v14 T{_Future}, v17, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:60(v13)
CheckStackOverflowSlowPath
B0
B11
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r3 <- fp[3]
v5 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- fp[2], r2 <- r2, r1 <- C
t0 <- AssertAssignable:10(v3, v4, 'event', instantiator_type_args(v5), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[3]
v7 <- LoadField(v2 . onListenReceived) T{bool}
Branch if StrictCompare:16(!==, v7 T{bool}, v8) goto (3, 4)
BoolTest
B3
MoveArgument(sp[0] <- v15)
StaticCall:22( _fatal@4048458<0> v15)
ParallelMove  goto:28 B5
B4
B5
v9 <- LoadField(v2 . isSuspendedAtYield) T{bool}
Branch if StrictCompare:36(===, v9 T{bool}, v8) goto (6, 7)
BoolTest
B6
MoveArgument(sp[0] <- v14)
StaticCall:42( _fatal@4048458<0> v14)
ParallelMove  goto:48 B8
B7
B8
v10 <- LoadField(v2 . controller) T{StreamController<X0>}
v46 <- LoadClassId(<non-smi> v10) int64
ParallelMove r0 <- r0, r1 <- r1, r2 <- fp[2]
DispatchTableCall( cid=v46 StreamController.add<0>, v10, v3 T{X0?})
ParallelMove r2 <- fp[3]
v11 <- LoadField(v2 . controller) T{StreamController<X0>}
v47 <- LoadClassId(<non-smi> v11) int64
ParallelMove r0 <- r0, r1 <- r1
v12 <- DispatchTableCall( cid=v47 StreamController.hasListener<0>, v11) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:62(!==, v12 T{bool}, v8) goto (9, 10)
BoolTest
B9
ParallelMove r0 <- C
DartReturn:68(v8)
B10
ParallelMove r0 <- fp[3]
ParallelMove r1 <- r0
StaticCall:72( scheduleGenerator<0> v2, using unchecked entrypoint)
ParallelMove r1 <- fp[3], r2 <- C
StoreField(v2 T{_AsyncStarStreamController} . isSuspendedAtYield = v8 T{bool})
ParallelMove r0 <- C
DartReturn:76(v13)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r1 <- C, r2 <- C
v3 <- AllocateClosure:6(v2, v0) T{_Closure}
ParallelMove r0 <- r0
DartReturn:8(v3)
B0
B1
Enter frame
v2 <- LoadStaticField:4(_httpConnectionHook@17463476, CallsInitializer) T{_Closure}
ParallelMove r0 <- r0
DartReturn:6(v2)
B0
B1
ParallelMove r1 <- C
StoreStaticField(_setupCompleted@16225868, v2)
ParallelMove r0 <- C
DartReturn:10(v0)
B0
B4
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v25 <- LoadStaticField:4(_workingDirectory@16225868, CallsInitializer) T{_Uri}
ParallelMove r1 <- fp[2]
v5 <- StaticCall:28( _sanitizeWindowsPath@16225868<0> v2, result_type = T{!null}) T{*}
ParallelMove r1 <- r0
v6 <- StaticCall:30( parse<0> v5, result_type = T{!null}) T{Uri}
ParallelMove r2 <- r0
ParallelMove fp[-1] <- r2
v34 <- LoadClassId(<non-smi> v6) int64
ParallelMove r0 <- r0, r1 <- r2
v7 <- DispatchTableCall( cid=v34 Uri.hasScheme<0>, v6) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:36(!==, v7 T{bool}, v4) goto (5, 6)
BoolTest
B5
v22 <- LoadStaticField:4(_workingDirectory@16225868) T{_Uri}
ParallelMove r1 <- r1, r2 <- fp[-1]
v17 <- StaticCall:44( resolveUri<0> v22, v6, using unchecked entrypoint, result_type = T{!null}) T{Uri}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:50 B9
B6
ParallelMove r0 <- fp[-1] goto:52 B9
B9
StoreStaticField(_rootScript@16225868, v8)
v35 <- LoadClassId(<non-smi> v8) int64
MoveArgument(sp[0] <- v8)
ParallelMove r0 <- r1
v9 <- DispatchTableCall( cid=v35 Uri.toString<0>, v8) T{String}
ParallelMove r0 <- r0
DartReturn:74(v9 T{String})
CheckStackOverflowSlowPath
slow path late initialization error operation
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-3] <- r1
v5 <- LoadField(v3 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v7 <- BinarySmiOp:4(- [tr], v5, v6) [-1, 4611686018427387902] T{_Smi}
Branch if RelationalOp:6(<=, v6, v7) T{bool} goto (2, 3)
B2
Branch if RelationalOp:20(<=, v20, v7 T{_Smi}) T{bool} goto (5, 6)
B5
B6
B3
B4
B8
CheckStackOverflow:42(stack=0, loop=0)
v526 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
ParallelMove fp[-2] <- r2
v780 <- UnboxInt64([non-speculative], v526 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove fp[-1] <- r3
Branch if RelationalOp(>=, v780 T{_Smi}, v532) T{bool} goto (9, 20)
B9
ParallelMove r1 <- r0
v369 <- StaticCall:58( _startsWithData@0150898<0> v2, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0
Branch if EqualityCompare(v369 == v871 T{_Smi}) T{bool} goto (11, 17)
B11
ParallelMove r3 <- fp[-1]
Branch if RelationalOp(<, v780 T{_Smi}, v780 T{_Smi}) T{bool} goto (12, 15)
B12
MoveArgument(sp[0] <- v526 T{_Smi})
ParallelMove r1 <- fp[-3], r2 <- C
v383 <- StaticCall:100( substring<0> v2, v871 T{_Smi}, v526 T{_Smi}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r1 <- r0 goto:106 B16
B15
ParallelMove r1 <- fp[-3] goto:108 B16
B16
ParallelMove r1 <- r1, r2 <- C, r3 <- C
v381 <- StaticCall:110( _parse@0150898<0> v380, v532 T{_Smi}, v0, result_type = T{UriData}) T{UriData}
ParallelMove r1 <- r0
v382 <- StaticCall:112( get:uri<0> v381, result_type = T{!null}) T{Uri}
ParallelMove r0 <- r0
DartReturn:114(v382)
B17
ParallelMove r3 <- fp[-1]
Branch if EqualityCompare(v369 == v872 T{_Smi}) T{bool} goto (18, 19)
B18
MoveArgument(sp[0] <- v526 T{_Smi})
ParallelMove r1 <- fp[-3], r2 <- C
v374 <- StaticCall:130( substring<0> v2, v532, v526 T{_Smi}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r1 <- r0, r2 <- C, r3 <- C
v375 <- StaticCall:132( _parse@0150898<0> v374, v871 T{_Smi}, v0, result_type = T{UriData}) T{UriData}
ParallelMove r1 <- r0
v376 <- StaticCall:134( get:uri<0> v375, result_type = T{!null}) T{Uri}
ParallelMove r0 <- r0
DartReturn:136(v376)
B19
B20
B21
ParallelMove r1 <- C, r2 <- C
v505 <- CreateArray:10(v16 T{TypeArguments}, v17 T{_Smi}) T{_List}
ParallelMove r0 <- r0
ParallelMove fp[-4] <- r0
ParallelMove r1 <- C goto:38 B187
B187
  Loop 0
  Loop Header
CheckStackOverflow:42(stack=0, loop=1)
Branch if RelationalOp(<, v499, v873 T{_Smi}) T{bool} goto (185, 189)
B185
  Loop 0
StoreIndexed:34([_List] v505, v499 T{int}, v10, NoStoreBarrier)
v504 <- BinaryInt64Op(+ [tr], v499 T{int}, v536 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r2 goto:40 B187
B189
ParallelMove r4 <- fp[-2]
StoreIndexed:150([_List] v505 T{_List}, v10 T{_Smi}, v10, NoStoreBarrier)
StoreIndexed:154([_List] v505 T{_List}, v6 T{_Smi}, v875 T{_Smi}, NoStoreBarrier)
StoreIndexed:158([_List] v505 T{_List}, v20 T{_Smi}, v875 T{_Smi}, NoStoreBarrier)
StoreIndexed:162([_List] v505 T{_List}, v22 T{_Smi}, v875 T{_Smi}, NoStoreBarrier)
StoreIndexed:164([_List] v505 T{_List}, v24 T{_Smi}, v10, NoStoreBarrier)
StoreIndexed:166([_List] v505 T{_List}, v25 T{_Smi}, v10, NoStoreBarrier)
StoreIndexed:168([_List] v505 T{_List}, v12 T{_Smi}, v526 T{_Smi}, NoStoreBarrier)
StoreIndexed:170([_List] v505 T{_List}, v26 T{_Smi}, v526 T{_Smi}, NoStoreBarrier)
ParallelMove r1 <- fp[-3], r2 <- fp[-1], r3 <- C, r5 <- r0
v27 <- StaticCall:172( _scan@0150898<0> v2, v780 T{_Smi}, v871 T{_Smi}, v505 T{_List}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0
Branch if RelationalOp(>=, v27, v876 T{_Smi}) T{bool} goto (22, 23)
B22
ParallelMove r0 <- fp[-4], r4 <- fp[-2]
StoreIndexed:184([_List] v505 T{_List}, v22 T{_Smi}, v526 T{_Smi}, NoStoreBarrier)
ParallelMove  goto:190 B24
B23
ParallelMove r0 <- fp[-4], r4 <- fp[-2]
ParallelMove  goto:192 B24
B24
v407 <- LoadIndexed:194([_List] v505 T{_List}, v6 T{_Smi}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove fp[-6] <- r6
v801 <- UnboxInt64([non-speculative], v407) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-5] <- r7
Branch if RelationalOp(>=, v801 T{int}, v871 T{_Smi}) T{bool} goto (25, 29)
B25
ParallelMove r1 <- fp[-3], r2 <- r7, r3 <- C, r5 <- r0
v367 <- StaticCall:206( _scan@0150898<0> v2, v801 T{int}, v877 T{_Smi}, v505 T{_List}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0
Branch if EqualityCompare(v367 == v877 T{_Smi}) T{bool} goto (26, 27)
B26
ParallelMove r1 <- fp[-4], r0 <- fp[-6]
StoreIndexed:218([_List] v505 T{_List}, v22 T{_Smi}, v407)
ParallelMove  goto:224 B28
B27
B28
B29
B30
v412 <- LoadIndexed:236([_List] v505 T{_List}, v20 T{_Smi}) [-9223372036854775808, 9223372036854775807] T{int}
v803 <- UnboxInt64([non-speculative], v412) [-9223372036854775808, 9223372036854775807] int64
v33 <- BinaryInt64Op(+ [tr], v803 T{int}, v536 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-12] <- r3
v415 <- LoadIndexed:240([_List] v505 T{_List}, v24 T{_Smi}) [-9223372036854775808, 9223372036854775807] T{int}
v418 <- LoadIndexed:242([_List] v505 T{_List}, v25 T{_Smi}) [-9223372036854775808, 9223372036854775807] T{int}
v421 <- LoadIndexed:244([_List] v505 T{_List}, v12 T{_Smi}) [-9223372036854775808, 9223372036854775807] T{int}
v424 <- LoadIndexed:246([_List] v505 T{_List}, v26 T{_Smi}) [-9223372036854775808, 9223372036854775807] T{int}
v809 <- UnboxInt64([non-speculative], v421) [-9223372036854775808, 9223372036854775807] int64
v818 <- UnboxInt64([non-speculative], v424) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-11] <- r4
Branch if RelationalOp(<, v818 T{int}, v809 T{int}) T{bool} goto (31, 32)
B31
ParallelMove r5 <- r4 goto:262 B33
B32
ParallelMove r5 <- r6 goto:264 B33
B33
ParallelMove fp[-10] <- r5
v807 <- UnboxInt64([non-speculative], v418) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v807 T{int}, v33) T{bool} goto (34, 35)
B34
ParallelMove r6 <- r5, r7 <- fp[-5] goto:300 B39
B35
ParallelMove r7 <- fp[-5]
Branch if RelationalOp(<=, v807 T{int}, v801 T{int}) T{bool} goto (36, 37)
B36
v43 <- BinaryInt64Op(+ [tr], v801 T{int}, v536 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r2 goto:294 B38
B37
ParallelMove r2 <- r6 goto:296 B38
B38
ParallelMove r6 <- r2 goto:302 B39
B39
ParallelMove fp[-9] <- r6
v804 <- UnboxInt64([non-speculative], v415) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v804 T{int}, v33) T{bool} goto (40, 41)
B40
ParallelMove r8 <- r6 goto:318 B42
B41
ParallelMove r8 <- r2 goto:320 B42
B42
ParallelMove fp[-8] <- r8
v427 <- LoadIndexed:322([_List] v505 T{_List}, v22 T{_Smi}) [-9223372036854775808, 9223372036854775807] T{int}
v839 <- UnboxInt64([non-speculative], v427) [-9223372036854775808, 9223372036854775807] int64
v48 <- RelationalOp(<, v839 T{int}, v871 T{_Smi}) T{bool}
ParallelMove fp[-7] <- r9
Branch if StrictCompare:328(===, v48, v9) goto (43, 136)
BoolTest
B43
v81 <- BinaryInt64Op(+ [tr], v801 T{int}, v538 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>, v33, v81) T{bool} goto (44, 45)
B44
ParallelMove r8 <- fp[-3], r7 <- C, r6 <- fp[-1], r5 <- C, r4 <- r3, r3 <- r8, r2 <- r6, r1 <- r5, r0 <- r4 goto:1044 B135
B45
v83 <- RelationalOp(>, v46, v871 T{_Smi}) T{bool}
ParallelMove fp[-6] <- r10
Branch if StrictCompare:352(===, v83, v9) goto (46, 49)
BoolTest
B46
v351 <- BinaryInt64Op(+ [tr], v46, v536 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v351 == v44) T{bool} goto (47, 50)
B47
ParallelMove r8 <- fp[-3], r7 <- C, r6 <- fp[-1], r5 <- C, r4 <- r3, r3 <- r8, r2 <- r6, r1 <- r5, r0 <- r4 goto:1038 B134
B50
B49
B48
v836 <- BoxInt64(v44) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
ParallelMove fp[-4] <- r0
MoveArgument(sp[0] <- v836 T{int})
ParallelMove r1 <- fp[-3], r2 <- C
v85 <- StaticCall:380( startsWith<0> v2, v84, v836 T{int}, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:384(===, v85 T{bool}, v9) goto (55, 53)
BoolTest
B55
B53
ParallelMove r3 <- fp[-12]
Branch if RelationalOp(>, v33, v871 T{_Smi}) T{bool} goto (52, 59)
B52
v321 <- BinaryInt64Op(- [tr], v33, v536 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v840 <- BoxInt64(v321) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v840 T{int})
ParallelMove r1 <- fp[-3], r2 <- C
v322 <- StaticCall:398( startsWith<0> v2, v84, v840 T{int}, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:402(===, v322 T{bool}, v9) goto (56, 51)
BoolTest
B56
B51
ParallelMove r3 <- fp[-12]
v323 <- BinaryInt64Op(- [tr], v33, v878 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v841 <- BoxInt64(v323) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v841 T{int})
ParallelMove r1 <- fp[-3], r2 <- C
v324 <- StaticCall:408( startsWith<0> v2, v84, v841 T{int}, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:412(===, v324 T{bool}, v9) goto (57, 60)
BoolTest
B57
B54
ParallelMove r8 <- fp[-3], r7 <- C, r6 <- fp[-1], r5 <- C, r4 <- fp[-12], r3 <- fp[-8], r2 <- fp[-9], r1 <- fp[-10], r0 <- fp[-11] goto:1032 B133
B60
B59
B58
Branch if RelationalOp(<, v39, v780 T{_Smi}) T{bool} goto (62, 65)
B62
ParallelMove r4 <- fp[-9]
v317 <- BinaryInt64Op(+ [tr], v44, v878 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v39 == v317) T{bool} goto (61, 66)
B61
MoveArgument(sp[0] <- v836 T{int})
ParallelMove r1 <- fp[-3], r2 <- C
v320 <- StaticCall:464( startsWith<0> v2, v319, v836 T{int}, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:468(===, v320 T{bool}, v9) goto (69, 67)
BoolTest
B69
B67
B66
B65
B64
v88 <- BinaryInt64Op(+ [tr], v44, v878 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>, v39, v88) T{bool} goto (63, 72)
B63
v301 <- BinaryInt64Op(- [tr], v39, v538 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v842 <- BoxInt64(v301) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v842 T{int})
ParallelMove r1 <- fp[-3], r2 <- C
v302 <- StaticCall:488( startsWith<0> v2, v300, v842 T{int}, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:492(===, v302 T{bool}, v9) goto (70, 73)
BoolTest
B70
B68
ParallelMove r8 <- fp[-3], r7 <- C, r6 <- fp[-1], r5 <- C, r4 <- fp[-12], r3 <- fp[-8], r2 <- fp[-9], r1 <- fp[-10], r0 <- fp[-11] goto:1026 B132
B73
B72
B71
Branch if EqualityCompare(v801 T{int} == v534) T{bool} goto (74, 110)
B74
MoveArgument(sp[0] <- v10)
ParallelMove r1 <- fp[-3], r2 <- C
v165 <- StaticCall:544( startsWith<0> v2, v164, v10, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:548(===, v165 T{bool}, v9) goto (75, 91)
BoolTest
B75
ParallelMove r4 <- fp[-12]
Branch if RelationalOp(<=, v33, v871 T{_Smi}) T{bool} goto (76, 80)
B76
MoveArgument(sp[0] <- v836 T{int})
ParallelMove r1 <- fp[-3], r2 <- C
v288 <- StaticCall:564( startsWith<0> v2, v249, v836 T{int}, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:568(!==, v288 T{bool}, v9) goto (77, 78)
BoolTest
B77
ParallelMove r5 <- C, r4 <- C goto:578 B79
B78
ParallelMove r5 <- C, r4 <- C goto:580 B79
B79
ParallelMove fp[-13] <- r5, fp[-14] <- r4
MoveArgument(sp[0] <- v526 T{_Smi})
ParallelMove r1 <- fp[-3], r2 <- fp[-9]
v291 <- StaticCall:582( substring<0> v2, v44, v526 T{_Smi}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
MoveArgument(sp[1] <- v289)
MoveArgument(sp[0] <- v291)
v292 <- StaticCall:584( +<0> v289, v291, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r1 <- r0, r6 <- fp[-10], r0 <- fp[-14]
v295 <- BinaryInt64Op(+ [tr], v39, v290) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r7 <- fp[-11]
v297 <- BinaryInt64Op(+ [tr], v818 T{int}, v290) [-9223372036854775808, 9223372036854775807] int64
v488 <- LoadField(v292 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v843 <- UnboxInt64([non-speculative], v488 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove r6 <- r1, r5 <- r3, r4 <- r4, r3 <- r2, r2 <- C, r1 <- C, r0 <- C goto:692 B90
B80
ParallelMove r6 <- fp[-10], r8 <- fp[-9], r7 <- fp[-11]
Branch if EqualityCompare(v44 == v39) T{bool} goto (87, 88)
B87
ParallelMove r9 <- fp[-1]
v830 <- BoxInt64(v39) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- fp[-3], r2 <- r8, r3 <- r0, r5 <- C
v272 <- StaticCall:632( replaceRange<0> v2, v44, v830 T{int}, v249, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r1 <- r0, r0 <- fp[-10]
v273 <- BinaryInt64Op(+ [tr], v39, v536 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[-11]
v274 <- BinaryInt64Op(+ [tr], v818 T{int}, v536 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- fp[-1]
v275 <- BinaryInt64Op(+ [tr], v780 T{_Smi}, v536 T{_Smi}) [v780+1, v780+1] int64
ParallelMove r3 <- r1, r2 <- r0, r1 <- r3, r0 <- r2 goto:686 B89
B88
ParallelMove r0 <- r6, r4 <- fp[-1], r3 <- r7
ParallelMove r3 <- fp[-3], r2 <- r3, r1 <- r4, r0 <- r0 goto:688 B89
B89
ParallelMove r6 <- r3, r5 <- r2, r4 <- r1, r3 <- r0, r2 <- fp[-12], r1 <- fp[-8], r0 <- fp[-9] goto:694 B90
B90
ParallelMove r7 <- r6, r6 <- C, r5 <- r4, r4 <- r5, r3 <- r2, r2 <- r1, r1 <- r0, r0 <- r3 goto:846 B109
B91
ParallelMove r0 <- fp[-10], r4 <- fp[-1], r3 <- fp[-11]
MoveArgument(sp[0] <- v10)
ParallelMove r1 <- fp[-3], r2 <- C
v167 <- StaticCall:698( startsWith<0> v2, v166, v10, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:702(===, v167 T{bool}, v9) goto (92, 107)
BoolTest
B92
ParallelMove r0 <- fp[-6]
Branch if StrictCompare:712(===, v83 T{bool}, v9) goto (93, 103)
BoolTest
B93
ParallelMove r3 <- fp[-9], r4 <- fp[-8]
v188 <- BinaryInt64Op(+ [tr], v46, v538 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v188 == v44) T{bool} goto (94, 104)
B94
v191 <- BinaryInt64Op(+ [tr], v46, v536 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v846 <- BoxInt64(v191) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v846 T{int})
ParallelMove r1 <- fp[-3], r2 <- C
v192 <- StaticCall:730( startsWith<0> v2, v190, v846 T{int}, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:734(===, v192 T{bool}, v9) goto (101, 105)
BoolTest
B101
ParallelMove r4 <- fp[-10], r0 <- fp[-9], r7 <- fp[-1], r6 <- fp[-11]
ParallelMove r1 <- fp[-3], r2 <- fp[-8], r3 <- fp[-4], r5 <- C
v218 <- StaticCall:764( replaceRange<0> v2, v46, v836 T{int}, v146, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0, r3 <- fp[-9]
v219 <- BinaryInt64Op(- [tr], v44, v538 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- fp[-10]
v220 <- BinaryInt64Op(- [tr], v39, v538 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- fp[-11]
v221 <- BinaryInt64Op(- [tr], v818 T{int}, v538 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- fp[-1]
v222 <- BinaryInt64Op(- [tr], v780 T{_Smi}, v538 T{_Smi}) [v780-3, v780-3] int64
ParallelMove r4 <- r0, r3 <- r3, r2 <- r4, r1 <- r2, r0 <- r1 goto:832 B106
B105
ParallelMove r4 <- fp[-10], r3 <- fp[-9], r6 <- fp[-1], r5 <- fp[-11]
ParallelMove  goto:828 B102
B104
ParallelMove r4 <- fp[-10], r6 <- fp[-1], r5 <- fp[-11]
ParallelMove  goto:824 B102
B103
ParallelMove r4 <- fp[-10], r3 <- fp[-9], r6 <- fp[-1], r5 <- fp[-11]
ParallelMove  goto:820 B102
B102
ParallelMove r4 <- fp[-3], r3 <- r5, r2 <- r6, r1 <- r4, r0 <- r3 goto:834 B106
B106
ParallelMove r5 <- r4, r4 <- C, r3 <- r2, r2 <- r3, r1 <- r1, r0 <- r0 goto:840 B108
B107
ParallelMove r4 <- fp[-10], r3 <- fp[-9], r6 <- fp[-1], r5 <- fp[-11]
ParallelMove r5 <- fp[-3], r4 <- C, r3 <- r6, r2 <- r5, r1 <- r4, r0 <- r3 goto:842 B108
B108
ParallelMove r7 <- r5, r6 <- r4, r5 <- r3, r4 <- r2, r3 <- fp[-12], r2 <- fp[-8], r1 <- r0, r0 <- r1 goto:848 B109
B109
B110
ParallelMove r4 <- fp[-10], r3 <- fp[-9], r0 <- fp[-6], r6 <- fp[-1], r7 <- r5, r5 <- fp[-11]
Branch if EqualityCompare(v801 T{int} == v532) T{bool} goto (111, 128)
B111
MoveArgument(sp[0] <- v10)
ParallelMove r1 <- fp[-3], r2 <- C
v105 <- StaticCall:862( startsWith<0> v2, v104, v10, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:866(===, v105 T{bool}, v9) goto (112, 129)
BoolTest
B112
ParallelMove r0 <- fp[-6]
Branch if StrictCompare:878(===, v83 T{bool}, v9) goto (113, 123)
BoolTest
B113
ParallelMove r3 <- fp[-9], r4 <- fp[-8]
v116 <- BinaryInt64Op(+ [tr], v46, v534 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v116 == v44) T{bool} goto (114, 124)
B114
v119 <- BinaryInt64Op(+ [tr], v46, v536 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v849 <- BoxInt64(v119) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v849 T{int})
ParallelMove r1 <- fp[-3], r2 <- C
v120 <- StaticCall:896( startsWith<0> v2, v118, v849 T{int}, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:900(===, v120 T{bool}, v9) goto (121, 125)
BoolTest
B121
ParallelMove r4 <- fp[-10], r0 <- fp[-9], r7 <- fp[-1], r6 <- fp[-11]
ParallelMove r1 <- fp[-3], r2 <- fp[-8], r3 <- fp[-4], r5 <- C
v147 <- StaticCall:930( replaceRange<0> v2, v46, v836 T{int}, v146, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r1 <- r0, r0 <- fp[-9]
v148 <- BinaryInt64Op(- [tr], v44, v534 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[-10]
v149 <- BinaryInt64Op(- [tr], v39, v534 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- fp[-11]
v150 <- BinaryInt64Op(- [tr], v818 T{int}, v534 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- fp[-1]
v151 <- BinaryInt64Op(- [tr], v780 T{_Smi}, v538 T{_Smi}) [v780-3, v780-3] int64
ParallelMove r4 <- r1, r3 <- r3, r2 <- r4, r1 <- r0, r0 <- r2 goto:998 B126
B125
ParallelMove r3 <- fp[-10], r0 <- fp[-9], r5 <- fp[-1], r4 <- fp[-11]
ParallelMove  goto:994 B122
B124
ParallelMove r3 <- fp[-10], r0 <- r3, r5 <- fp[-1], r4 <- fp[-11]
ParallelMove  goto:990 B122
B123
ParallelMove r3 <- fp[-10], r0 <- fp[-9], r5 <- fp[-1], r4 <- fp[-11]
ParallelMove  goto:986 B122
B122
ParallelMove r4 <- fp[-3], r3 <- r4, r2 <- r5, r1 <- r3, r0 <- r0 goto:1000 B126
B126
ParallelMove r5 <- r4, r4 <- C, r3 <- r2, r2 <- r3, r1 <- r1, r0 <- r0 goto:1014 B130
B129
ParallelMove r3 <- fp[-10], r0 <- fp[-9], r5 <- fp[-1], r4 <- fp[-11]
ParallelMove  goto:1010 B127
B128
ParallelMove r3 <- r4, r0 <- r3, r5 <- r6, r4 <- r5
ParallelMove  goto:1006 B127
B127
ParallelMove r5 <- fp[-3], r4 <- C, r3 <- r5, r2 <- r4, r1 <- r3, r0 <- r0 goto:1016 B130
B130
ParallelMove r7 <- r5, r6 <- r4, r5 <- r3, r4 <- r2, r3 <- fp[-12], r2 <- fp[-8], r1 <- r0, r0 <- r1 goto:1022 B131
B131
ParallelMove r8 <- r7, r7 <- fp[-7], r6 <- r5, r5 <- r6, r4 <- r3, r3 <- r2, r2 <- r1, r1 <- r0, r0 <- r4 goto:1028 B132
B132
B133
B134
B135
ParallelMove r8 <- r8, r2 <- r7, r1 <- r6, r5 <- r5, r6 <- r4, r7 <- r3, r4 <- r2, r3 <- r1, r0 <- r0 goto:1052 B137
B136
ParallelMove r3 <- r5, r0 <- r6, r5 <- fp[-1]
ParallelMove r8 <- fp[-3], r2 <- fp[-7], r1 <- r5, r5 <- C, r6 <- fp[-12], r7 <- fp[-8], r4 <- r0, r3 <- r3, r0 <- r4 goto:1054 B137
B137
ParallelMove fp[-2] <- r5, fp[-1] <- r6, fp[-8] <- r7, fp[-9] <- r4, fp[-10] <- r3, fp[-11] <- r0
Branch if StrictCompare:1058(===, v59 T{bool}, v9) goto (139, 145)
BoolTest
B139
v453 <- LoadField(v49 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v853 <- UnboxInt64([non-speculative], v453 T{_Smi}) [0, 2305843009213693951] int64
Branch if RelationalOp(<, v51 T{int?}, v853 T{_Smi}) T{bool} goto (140, 143)
B140
v852 <- BoxInt64(v51) [-3, 2305843009213693952] T{_Smi}
MoveArgument(sp[0] <- v852)
ParallelMove r1 <- r8, r2 <- C
v74 <- StaticCall:1094( substring<0> v49, v871 T{_Smi}, v852, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r4 <- r0 goto:1112 B144
B143
ParallelMove r4 <- r8 goto:1114 B144
B144
ParallelMove fp[-3] <- r4
v73 <- AllocateObject:1116(cls=_SimpleUri, <not-aliased>) T{_SimpleUri}
ParallelMove r1 <- r0, r0 <- fp[-3]
StoreField(v73 T{_SimpleUri} . _uri@0150898 = v66 T{String}, NoStoreBarrier)
ParallelMove r5 <- fp[-5]
StoreField(v73 T{_SimpleUri} . _schemeEnd@0150898 = v801 T{int} <int64>, NoStoreBarrier)
ParallelMove r6 <- fp[-1]
StoreField(v73 T{_SimpleUri} . _hostStart@0150898 = v53 T{int} <int64>, NoStoreBarrier)
ParallelMove r7 <- fp[-8]
StoreField(v73 T{_SimpleUri} . _portStart@0150898 = v54 T{int} <int64>, NoStoreBarrier)
ParallelMove r0 <- fp[-9]
StoreField(v73 T{_SimpleUri} . _pathStart@0150898 = v55 T{int} <int64>, NoStoreBarrier)
ParallelMove r2 <- fp[-10]
StoreField(v73 T{_SimpleUri} . _queryStart@0150898 = v56 T{int} <int64>, NoStoreBarrier)
ParallelMove r3 <- fp[-11]
StoreField(v73 T{_SimpleUri} . _fragmentStart@0150898 = v57 T{int} <int64>, NoStoreBarrier)
ParallelMove r4 <- fp[-2]
StoreField(v73 T{_SimpleUri} . _schemeCache@0150898 = v58 T{_OneByteString?}, NoStoreBarrier)
ParallelMove r0 <- r1
DartReturn:1120(v73)
B145
ParallelMove r0 <- r4, r2 <- r3, r3 <- r0, r4 <- r5, r5 <- fp[-5]
MoveArgument(sp[3] <- v55) int64
MoveArgument(sp[2] <- v56) int64
MoveArgument(sp[1] <- v57) int64
MoveArgument(sp[0] <- v58)
ParallelMove r1 <- C, r2 <- r8, r3 <- r1, r5 <- r5, r6 <- r6, r7 <- r7
v62 <- StaticCall:1124( _Uri@0150898.notSimple<0> v0, v49, v51, v801 T{int}, v53, v54, v55, v56, v57, v58, result_type = T{_Uri}) T{_Uri}
ParallelMove r0 <- r0
DartReturn:1126(v62)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r6 <- r2, r5 <- r3, r4 <- r5, r0 <- r6, r3 <- r7, fp[-1] <- r2, fp[-2] <- r3, fp[-3] <- r5, fp[-4] <- r6, fp[-5] <- r7
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
Branch if StrictCompare:10(===, v11, v0) goto (3, 10)
B3
Branch if RelationalOp(>, v5, v119 T{_Smi}) T{bool} goto (4, 5)
B4
ParallelMove r1 <- r6, r2 <- r4
v59 <- StaticCall:26( _makeScheme@0150898<0> v3, v5, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:52 B9
B5
ParallelMove r0 <- r4
Branch if EqualityCompare(v5 == v119 T{_Smi}) T{bool} goto (6, 7)
B6
ParallelMove r1 <- fp[-1], r2 <- C, r3 <- C
StaticCall:40( _fail@0150898<0> v3, v119 T{_Smi}, v57)
ParallelMove  goto:46 B8
B7
B8
ParallelMove r0 <- C goto:54 B9
B9
ParallelMove r4 <- r0 goto:60 B11
B10
ParallelMove r4 <- r1 goto:62 B11
B11
ParallelMove fp[-6] <- r4
Branch if RelationalOp(>, v6, v119 T{_Smi}) T{bool} goto (12, 22)
B12
ParallelMove r1 <- fp[-3]
v37 <- BinaryInt64Op(+ [tr], v5, v120 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<, v37, v6) T{bool} goto (13, 14)
B13
v53 <- BinaryInt64Op(- [tr], v6, v121 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-1], r2 <- r2, r3 <- r3
v54 <- StaticCall:88( _makeUserInfo@0150898<0> v3, v37, v53, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r5 <- r0 goto:94 B15
B14
ParallelMove r5 <- C goto:96 B15
B15
ParallelMove r1 <- fp[-1], r2 <- fp[-4], r3 <- r0, fp[-7] <- r5
v40 <- StaticCall:98( _makeHost@0150898<0> v3, v6, v7, result_type = T{!null}) T{String?}
ParallelMove r3 <- r0, r0 <- fp[-5]
ParallelMove fp[-8] <- r3
v41 <- BinaryInt64Op(+ [tr], v7, v121 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- fp[5], fp[-3] <- r4
Branch if RelationalOp(<, v41, v8) T{bool} goto (16, 20)
B16
v117 <- BoxInt64(v8) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v117 T{int})
ParallelMove r1 <- fp[-1], r2 <- r4
v47 <- StaticCall:114( substring<0> v3, v41 T{int}, v117 T{int}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r1 <- r0
v48 <- StaticCall:116( tryParse<0> v47, result_type = T{int??}) T{int??}
ParallelMove r0 <- r0
Branch if StrictCompare:118(===, v48, v0) goto (17, 19)
B19
ParallelMove r1 <- r0, r2 <- fp[-6]
v49 <- StaticCall:140( _makePort@0150898<0> v48 T{int?}, v12, result_type = T{int??}) T{int??}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:146 B21
B20
ParallelMove r0 <- C goto:148 B21
B21
ParallelMove r10 <- fp[-7], r9 <- fp[-8], r8 <- r0 goto:154 B23
B22
ParallelMove r10 <- C, r9 <- C, r8 <- C goto:156 B23
B23
ParallelMove fp[-7] <- r10, fp[-8] <- r9, fp[-9] <- r8
v23 <- StrictCompare:158(!==, v19, v0) T{bool}
ParallelMove r1 <- fp[-1], r2 <- fp[5], r3 <- r4, r5 <- C, r6 <- fp[-6], r7 <- r7
v25 <- StaticCall:162( _makePath@0150898<0> v3, v8, v9, v0, v12, v23 T{bool}, result_type = T{!null}) T{String}
ParallelMove r4 <- r0, r1 <- fp[4], r0 <- fp[3]
ParallelMove fp[-10] <- r4
Branch if RelationalOp(<, v9, v10) T{bool} goto (24, 25)
B24
v34 <- BinaryInt64Op(+ [tr], v9, v121 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-1], r2 <- r2, r3 <- r0
v35 <- StaticCall:176( _makeQuery@0150898<0> v3, v34, v10, result_type = T{!null}) T{String?}
ParallelMove r0 <- r0
ParallelMove r4 <- r0 goto:182 B26
B25
ParallelMove r4 <- C goto:184 B26
B26
ParallelMove fp[-11] <- r4
Branch if RelationalOp(<, v10, v4) T{bool} goto (27, 28)
B27
v32 <- BinaryInt64Op(+ [tr], v10, v121 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-1], r2 <- r2, r3 <- r3
v33 <- StaticCall:198( _makeFragment@0150898<0> v3, v32, v4, result_type = T{!null}) T{String?}
ParallelMove r0 <- r0
ParallelMove r6 <- r0 goto:204 B29
B28
ParallelMove r6 <- C goto:206 B29
B29
ParallelMove fp[-12] <- r6
v30 <- AllocateObject:208(cls=_Uri, <not-aliased>) T{_Uri}
ParallelMove r1 <- r0, r0 <- C
StoreField(v30 T{_Uri} . _text@0150898 = v81 T{Sentinel~}, NoStoreBarrier)
StoreField(v30 T{_Uri} . pathSegments = v81 T{Sentinel~}, NoStoreBarrier)
StoreField(v30 T{_Uri} . hashCode = v81 T{Sentinel~}, NoStoreBarrier)
ParallelMove r0 <- fp[-6]
StoreField(v30 T{_Uri} . scheme = v12 T{String}, NoStoreBarrier)
ParallelMove r0 <- fp[-7]
StoreField(v30 T{_Uri} . _userInfo@0150898 = v18 T{String}, NoStoreBarrier)
ParallelMove r0 <- fp[-8]
StoreField(v30 T{_Uri} . _host@0150898 = v19 T{String??}, NoStoreBarrier)
ParallelMove r0 <- fp[-9]
StoreField(v30 T{_Uri} . _port@0150898 = v20 T{int??}, NoStoreBarrier)
ParallelMove r0 <- fp[-10]
StoreField(v30 T{_Uri} . path = v25 T{String}, NoStoreBarrier)
ParallelMove r0 <- fp[-11]
StoreField(v30 T{_Uri} . _query@0150898 = v27 T{String??}, NoStoreBarrier)
ParallelMove r0 <- fp[-12]
StoreField(v30 T{_Uri} . _fragment@0150898 = v29 T{String??}, NoStoreBarrier)
ParallelMove r0 <- r1
DartReturn:212(v30)
B17
ParallelMove r1 <- fp[-1], r0 <- fp[-3]
v50 <- AllocateObject:124(cls=FormatException) T{FormatException}
ParallelMove r2 <- r0, r0 <- C
StoreField(v50 T{FormatException} . message = v51 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
StoreField(v50 T{FormatException} . source = v3 T{String}, NoStoreBarrier)
ParallelMove r3 <- fp[-3]
v118 <- BoxInt64(v41 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v50 T{FormatException} . offset = v118 T{int?}, NoStoreBarrier)
ParallelMove r0 <- r2
Throw:130(v50)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
Branch if StrictCompare:10(===, v2, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:16(v0)
B4
MoveArgument(sp[0] <- v6)
ParallelMove r1 <- r1, r2 <- r2, r3 <- r3, r5 <- C
v7 <- StaticCall:20( _normalizeOrSubstring@0150898<0> v2 T{String?}, v3, v4, v5, v6, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:22(v7)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
Branch if StrictCompare:10(!==, v2, v0) goto (3, 4)
B3
MoveArgument(sp[0] <- v6)
ParallelMove r1 <- r1, r2 <- r2, r3 <- r3, r5 <- C
v7 <- StaticCall:16( _normalizeOrSubstring@0150898<0> v2 T{String?}, v3, v4, v5, v6, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:18(v7)
B4
ParallelMove r0 <- C
DartReturn:22(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v22 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v22, v5 T{_Smi}) T{bool} goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:20(v0)
B4
v31 <- UnboxInt64([non-speculative], v22 T{_Smi}) [0, 2305843009213693951] int64
v8 <- BinaryInt64Op(- [tr], v31 T{_Smi}, v32 T{_Smi}) [v31-1, v31-1] int64
ParallelMove r1 <- r0, r2 <- C, r3 <- r3
v9 <- StaticCall:28( _tryParseSmi@0150898<0> v2, v33 T{_Smi}, v8, result_type = T{int??}) T{int??}
ParallelMove r0 <- r0
Branch if StrictCompare:30(!==, v9, v0) goto (5, 6)
B5
ParallelMove r0 <- r0
DartReturn:36(v9 T{int?})
B6
ParallelMove r1 <- fp[-1], r2 <- C, r3 <- C
v11 <- StaticCall:40( _parse@0150898<0> v2, v0, v10, result_type = T{int??}) T{int??}
ParallelMove r0 <- r0
DartReturn:42(v11)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
Branch if StrictCompare:10(===, v2, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:16(v7)
B4
ParallelMove r1 <- r1, r2 <- r2, r3 <- r3, r5 <- C
v6 <- StaticCall:20( _normalizeOrSubstring@0150898<0> v2 T{String?}, v3, v4, v5, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:22(v6)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, r1 <- r5, fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3, fp[-4] <- r5
CheckStackOverflow:8(stack=0, loop=0)
v53 <- LoadStaticField:4(_scannerTables@0150898, CallsInitializer) T{_GrowableList}
ParallelMove r3 <- r0, r2 <- fp[-1]
ParallelMove fp[-8] <- r3
v40 <- LoadField:60(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v74 <- UnboxInt64:60([non-speculative], v40) [0, 2305843009213693951] int64
ParallelMove fp[-7] <- r4
v42 <- LoadClassId:60(v2 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove r6 <- fp[-4], fp[-6] <- r5
v32 <- LoadField:60(v5 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v78 <- UnboxInt64:60([non-speculative], v32) [0, 576460752303423487] int64
ParallelMove fp[-5] <- r7
ParallelMove r10 <- fp[-3], r9 <- C goto:60 B8
B8
  Loop 0
  Loop Header
ParallelMove fp[-3] <- r9
CheckStackOverflow:64(stack=0, loop=1)
Branch if RelationalOp(<, v9, v3) T{bool} goto (3, 4)
B3
  Loop 0
v28 <- LoadField(v53 . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v72 <- UnboxInt64([non-speculative], v28) [0, 576460752303423487] int64
ParallelMove r0 <- r1, r1 <- r10
GenericCheckBound:26(v72 T{_Smi}, v8) [-9223372036854775808, 9223372036854775807] int64
v30 <- LoadField(v53 . GrowableObjectArray.data) T{_List}
v81 <- LoadIndexed:26([_List] v30, v8 T{_Smi}) T{*}
ParallelMove r0 <- r4, r1 <- r9
t0 <- GenericCheckBound:28(v74 T{_Smi}, v9 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:28(===, v42, v50 T{_Smi}) goto (14, 15)
B14
  Loop 0
v46 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v9 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:28 B13
B15
  Loop 0
v44 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v9 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:28 B13
B13
  Loop 0
v17 <- BinaryInt64Op(^ [tr], v45 T{_Smi}, v82 T{_Smi}) [0, 65535] int64
Branch if RelationalOp(>, v17, v83 T{_Smi}) T{bool} goto (5, 6)
B5
  Loop 0
ParallelMove r0 <- C goto:46 B7
B6
  Loop 0
ParallelMove r0 <- r1 goto:48 B7
B7
  Loop 0
v75 <- BoxInt64(v20) [0, 65535] T{_Smi}
v101 <- LoadClassId(<non-smi> v81 T{*}) int64
MoveArgument(sp[1] <- v81 T{*})
MoveArgument(sp[0] <- v75)
ParallelMove r0 <- r0
v21 <- DispatchTableCall( cid=v101 List.[]<0>, v81 T{*}, v75) T{*?}
ParallelMove r0 <- r0
v77 <- UnboxInt64([non-speculative], v21 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r3 <- r2
v99 <- IntConverter(int64->uint32[tr], v77 T{_Smi}) uint32
ParallelMove r4 <- C
v23 <- BinaryUint32Op(& [tr], v99 T{_Smi}, v102 T{_Smi}) [0, 31] uint32
v25 <- ShiftInt64Op(>> [tr], v77 T{_Smi}, v85 T{_Smi}) [-144115188075855872, 144115188075855871] int64
ParallelMove r0 <- fp[-5], r1 <- r3
GenericCheckBound:56(v78 T{_Smi}, v25) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- fp[-3]
v71 <- BoxInt64(v9 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- fp[-4], r0 <- r0
StoreIndexed:56([_List] v5, v25 T{int}, v71 T{int})
v27 <- BinaryInt64Op(+ [tr], v9 T{int}, v86 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r5
v100 <- IntConverter(uint32->int64, v23) int64
ParallelMove r10 <- r5, r9 <- r9, r2 <- fp[-1], r6 <- fp[-4], r5 <- fp[-6], r3 <- fp[-8], r4 <- fp[-7], r7 <- fp[-5] goto:62 B8
B4
ParallelMove r0 <- r10
DartReturn:66(v8)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
CheckStackOverflow:4(stack=0, loop=0)
v2 <- StaticCall:6( _createTables@0150898<0> , result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r0 <- r0
DartReturn:8(v2)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v186 <- StaticCall:10( _GrowableList@0150898.<0> v3 T{TypeArguments}, v6572 T{_Smi}, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r0 <- r0
ParallelMove fp[-5] <- r0
v4026 <- LoadField:36(v186 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
ParallelMove fp[-4] <- r1
v5642 <- UnboxInt64:36([non-speculative], v4026 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-3] <- r2
v197 <- LoadField:36(v186 . GrowableObjectArray.data) T{_List}
ParallelMove fp[-2] <- r3
ParallelMove r5 <- C goto:36 B7
B7
  Loop 112
  Loop Header
ParallelMove fp[-1] <- r5
CheckStackOverflow:40(stack=0, loop=1)
Branch if RelationalOp(<, v188, v5642 T{_Smi}) T{bool} goto (5, 6)
B5
  Loop 112
ParallelMove r4 <- C
v4041 <- AllocateTypedData:10(v87 T{_Smi}) T{_Uint8List}
ParallelMove r1 <- fp[-2], r0 <- r0, r2 <- fp[-1]
StoreIndexed:32([_List] v197, v188 T{int}, v4041 T{_Uint8List})
v194 <- BinaryInt64Op(+ [tr], v188 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r5, r0 <- fp[-5], r3 <- fp[-2], r1 <- fp[-4], r2 <- fp[-3] goto:38 B7
B6
ParallelMove r4 <- r3
ParallelMove r0 <- fp[-3], r1 <- C
GenericCheckBound:12(v5642 T{_Smi}, v6573 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v6575 <- LoadIndexed:12([_List] v197 T{_List}, v6573 T{_Smi}) T{Uint8List}
ParallelMove fp[-6] <- r6
v7759 <- LoadClassId(<non-smi> v6575 T{Uint8List}) int64
ParallelMove r0 <- r0, r1 <- r6, r2 <- C, r3 <- C, r5 <- C
DispatchTableCall( cid=v7759 List.fillRange<0>, v6575 T{Uint8List}, v6573 T{_Smi}, v6576 T{_Smi}, v4268 T{_Smi})
ParallelMove r3 <- C, r6 <- C, r4 <- C, r2 <- fp[-6] goto:34 B16
B16
  Loop 111
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v236, v6577 T{_Smi}) T{bool} goto (14, 15)
B14
  Loop 111
v6578 <- LoadIndexed:26([_OneByteString] v19 T{_OneByteString}, v236 T{int}) [0, 255] int64
v242 <- BinaryInt64Op(^ [tr], v6578, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6575) T{*?}
v4502 <- LoadField(v6575 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5649 <- UnboxInt64([non-speculative], v4502) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5649, v242) [-9223372036854775808, 9223372036854775807] int64
v7781 <- LoadField(v6575 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7781 T{*?}, v242 T{int}, v6574, NoStoreBarrier)
v243 <- BinaryInt64Op(+ [tr], v236 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B16
B15
ParallelMove r5 <- C, r7 <- C, r3 <- C goto:34 B22
B22
  Loop 110
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v266, v6574 T{_Smi}) T{bool} goto (20, 21)
B20
  Loop 110
v6579 <- LoadIndexed:26([_OneByteString] v20 T{_OneByteString}, v266 T{int}) [0, 255] int64
v272 <- BinaryInt64Op(^ [tr], v6579, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6575) T{*?}
v4506 <- LoadField(v6575 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5653 <- UnboxInt64([non-speculative], v4506) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r8
GenericCheckBound(v5653, v272) [-9223372036854775808, 9223372036854775807] int64
v7782 <- LoadField(v6575 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7782 T{*?}, v272 T{int}, v6580, NoStoreBarrier)
v274 <- BinaryInt64Op(+ [tr], v266 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B22
B21
ParallelMove r5 <- C, r9 <- C, r8 <- C goto:34 B28
B28
  Loop 109
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v295, v6574 T{_Smi}) T{bool} goto (26, 27)
B26
  Loop 109
v6581 <- LoadIndexed:26([_OneByteString] v22 T{_OneByteString}, v295 T{int}) [0, 255] int64
v301 <- BinaryInt64Op(^ [tr], v6581, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6575) T{*?}
v4510 <- LoadField(v6575 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5657 <- UnboxInt64([non-speculative], v4510) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r10
GenericCheckBound(v5657, v301) [-9223372036854775808, 9223372036854775807] int64
v7783 <- LoadField(v6575 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7783 T{*?}, v301 T{int}, v4020, NoStoreBarrier)
v303 <- BinaryInt64Op(+ [tr], v295 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B28
B27
ParallelMove r5 <- C, r11 <- C, r10 <- C goto:34 B34
B34
  Loop 108
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v324, v6574 T{_Smi}) T{bool} goto (32, 33)
B32
  Loop 108
v6583 <- LoadIndexed:26([_OneByteString] v26 T{_OneByteString}, v324 T{int}) [0, 255] int64
v330 <- BinaryInt64Op(^ [tr], v6583, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6575) T{*?}
v4514 <- LoadField(v6575 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5661 <- UnboxInt64([non-speculative], v4514) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r12
GenericCheckBound(v5661, v330) [-9223372036854775808, 9223372036854775807] int64
v7784 <- LoadField(v6575 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7784 T{*?}, v330 T{int}, v6584, NoStoreBarrier)
v332 <- BinaryInt64Op(+ [tr], v324 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B34
B33
ParallelMove r13 <- C, r12 <- C, r5 <- C goto:34 B40
B40
  Loop 107
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v353, v6574 T{_Smi}) T{bool} goto (38, 39)
B38
  Loop 107
v6585 <- LoadIndexed:26([_OneByteString] v28 T{_OneByteString}, v353 T{int}) [0, 255] int64
v359 <- BinaryInt64Op(^ [tr], v6585, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6575) T{*?}
v4518 <- LoadField(v6575 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5665 <- UnboxInt64([non-speculative], v4518) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r14
GenericCheckBound(v5665, v359) [-9223372036854775808, 9223372036854775807] int64
v7785 <- LoadField(v6575 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7785 T{*?}, v359 T{int}, v4021, NoStoreBarrier)
v361 <- BinaryInt64Op(+ [tr], v353 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r13 <- r0 goto:36 B40
B39
ParallelMove r5 <- C, r14 <- C, r13 <- C goto:34 B46
B46
  Loop 106
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v382, v6574 T{_Smi}) T{bool} goto (44, 45)
B44
  Loop 106
v6587 <- LoadIndexed:26([_OneByteString] v30 T{_OneByteString}, v382 T{int}) [0, 255] int64
v388 <- BinaryInt64Op(^ [tr], v6587, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6575) T{*?}
v4522 <- LoadField(v6575 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5669 <- UnboxInt64([non-speculative], v4522) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r19
GenericCheckBound(v5669, v388) [-9223372036854775808, 9223372036854775807] int64
v7786 <- LoadField(v6575 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7786 T{*?}, v388 T{int}, v4010, NoStoreBarrier)
v390 <- BinaryInt64Op(+ [tr], v382 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B46
B45
ParallelMove r5 <- C, r20 <- C, r19 <- C goto:34 B52
B52
  Loop 105
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v411, v6574 T{_Smi}) T{bool} goto (50, 51)
B50
  Loop 105
v6589 <- LoadIndexed:26([_OneByteString] v34 T{_OneByteString}, v411 T{int}) [0, 255] int64
v417 <- BinaryInt64Op(^ [tr], v6589, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6575) T{*?}
v4526 <- LoadField(v6575 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5673 <- UnboxInt64([non-speculative], v4526) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r23
GenericCheckBound(v5673, v417) [-9223372036854775808, 9223372036854775807] int64
v7787 <- LoadField(v6575 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7787 T{*?}, v417 T{int}, v4009, NoStoreBarrier)
v419 <- BinaryInt64Op(+ [tr], v411 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B52
B51
ParallelMove r23 <- fp[-2], r24 <- fp[-4]
v5675 <- UnboxInt64([non-speculative], v4026 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:12(v5675 T{_Smi}, v6580 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v6591 <- LoadIndexed:12([_List] v197 T{_List}, v6580 T{_Smi}) T{Uint8List}
ParallelMove fp[-6] <- r25
v7760 <- LoadClassId(<non-smi> v6591 T{Uint8List}) int64
ParallelMove r0 <- r0, r1 <- r25, r2 <- C, r3 <- C, r5 <- C
DispatchTableCall( cid=v7760 List.fillRange<0>, v6591 T{Uint8List}, v6573 T{_Smi}, v6576 T{_Smi}, v4268 T{_Smi})
ParallelMove r3 <- C, r6 <- C, r4 <- C, r2 <- fp[-6] goto:34 B61
B61
  Loop 104
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v461, v6577 T{_Smi}) T{bool} goto (59, 60)
B59
  Loop 104
v6592 <- LoadIndexed:26([_OneByteString] v19 T{_OneByteString}, v461 T{int}) [0, 255] int64
v467 <- BinaryInt64Op(^ [tr], v6592, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6591) T{*?}
v4530 <- LoadField(v6591 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5679 <- UnboxInt64([non-speculative], v4530) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5679, v467) [-9223372036854775808, 9223372036854775807] int64
v7788 <- LoadField(v6591 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7788 T{*?}, v467 T{int}, v6574, NoStoreBarrier)
v468 <- BinaryInt64Op(+ [tr], v461 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B61
B60
ParallelMove r5 <- C, r7 <- C, r3 <- C goto:34 B67
B67
  Loop 103
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v490, v6574 T{_Smi}) T{bool} goto (65, 66)
B65
  Loop 103
v6593 <- LoadIndexed:26([_OneByteString] v20 T{_OneByteString}, v490 T{int}) [0, 255] int64
v496 <- BinaryInt64Op(^ [tr], v6593, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6591) T{*?}
v4534 <- LoadField(v6591 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5683 <- UnboxInt64([non-speculative], v4534) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r8
GenericCheckBound(v5683, v496) [-9223372036854775808, 9223372036854775807] int64
v7789 <- LoadField(v6591 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7789 T{*?}, v496 T{int}, v6594, NoStoreBarrier)
v498 <- BinaryInt64Op(+ [tr], v490 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B67
B66
ParallelMove r5 <- C, r9 <- C, r8 <- C goto:34 B73
B73
  Loop 102
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v519, v6574 T{_Smi}) T{bool} goto (71, 72)
B71
  Loop 102
v6595 <- LoadIndexed:26([_OneByteString] v22 T{_OneByteString}, v519 T{int}) [0, 255] int64
v525 <- BinaryInt64Op(^ [tr], v6595, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6591) T{*?}
v4538 <- LoadField(v6591 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5687 <- UnboxInt64([non-speculative], v4538) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r10
GenericCheckBound(v5687, v525) [-9223372036854775808, 9223372036854775807] int64
v7790 <- LoadField(v6591 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7790 T{*?}, v525 T{int}, v4020, NoStoreBarrier)
v527 <- BinaryInt64Op(+ [tr], v519 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B73
B72
ParallelMove r5 <- C, r11 <- C, r10 <- C goto:34 B79
B79
  Loop 101
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v548, v6596 T{_Smi}) T{bool} goto (77, 78)
B77
  Loop 101
v6597 <- LoadIndexed:26([_OneByteString] v42 T{_OneByteString}, v548 T{int}) [0, 255] int64
v554 <- BinaryInt64Op(^ [tr], v6597, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6591) T{*?}
v4542 <- LoadField(v6591 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5691 <- UnboxInt64([non-speculative], v4542) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r12
GenericCheckBound(v5691, v554) [-9223372036854775808, 9223372036854775807] int64
v7791 <- LoadField(v6591 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7791 T{*?}, v554 T{int}, v4011, NoStoreBarrier)
v556 <- BinaryInt64Op(+ [tr], v548 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B79
B78
ParallelMove r5 <- C, r13 <- C, r12 <- C goto:34 B85
B85
  Loop 100
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v578, v6574 T{_Smi}) T{bool} goto (83, 84)
B83
  Loop 100
v6599 <- LoadIndexed:26([_OneByteString] v30 T{_OneByteString}, v578 T{int}) [0, 255] int64
v584 <- BinaryInt64Op(^ [tr], v6599, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6591) T{*?}
v4546 <- LoadField(v6591 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5695 <- UnboxInt64([non-speculative], v4546) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r14
GenericCheckBound(v5695, v584) [-9223372036854775808, 9223372036854775807] int64
v7792 <- LoadField(v6591 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7792 T{*?}, v584 T{int}, v4010, NoStoreBarrier)
v586 <- BinaryInt64Op(+ [tr], v578 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B85
B84
ParallelMove r5 <- C, r19 <- C, r14 <- C goto:34 B91
B91
  Loop 99
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v607, v6574 T{_Smi}) T{bool} goto (89, 90)
B89
  Loop 99
v6600 <- LoadIndexed:26([_OneByteString] v34 T{_OneByteString}, v607 T{int}) [0, 255] int64
v613 <- BinaryInt64Op(^ [tr], v6600, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6591) T{*?}
v4550 <- LoadField(v6591 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5699 <- UnboxInt64([non-speculative], v4550) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r20
GenericCheckBound(v5699, v613) [-9223372036854775808, 9223372036854775807] int64
v7793 <- LoadField(v6591 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7793 T{*?}, v613 T{int}, v4009, NoStoreBarrier)
v615 <- BinaryInt64Op(+ [tr], v607 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B91
B90
ParallelMove r20 <- fp[-2], r23 <- fp[-4]
v5701 <- UnboxInt64([non-speculative], v4026 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:12(v5701 T{_Smi}, v6594 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v6601 <- LoadIndexed:12([_List] v197 T{_List}, v6594 T{_Smi}) T{Uint8List}
ParallelMove fp[-6] <- r24
v7761 <- LoadClassId(<non-smi> v6601 T{Uint8List}) int64
ParallelMove r0 <- r0, r1 <- r24, r2 <- C, r3 <- C, r5 <- C
DispatchTableCall( cid=v7761 List.fillRange<0>, v6601 T{Uint8List}, v6573 T{_Smi}, v6576 T{_Smi}, v4268 T{_Smi})
ParallelMove r3 <- C, r6 <- C, r4 <- C, r2 <- fp[-6] goto:34 B100
B100
  Loop 98
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v657, v6577 T{_Smi}) T{bool} goto (98, 99)
B98
  Loop 98
v6602 <- LoadIndexed:26([_OneByteString] v19 T{_OneByteString}, v657 T{int}) [0, 255] int64
v663 <- BinaryInt64Op(^ [tr], v6602, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6601) T{*?}
v4554 <- LoadField(v6601 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5705 <- UnboxInt64([non-speculative], v4554) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5705, v663) [-9223372036854775808, 9223372036854775807] int64
v7794 <- LoadField(v6601 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7794 T{*?}, v663 T{int}, v6574, NoStoreBarrier)
v664 <- BinaryInt64Op(+ [tr], v657 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B100
B99
ParallelMove r7 <- C, r5 <- C, r3 <- C goto:34 B106
B106
  Loop 97
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v686, v6574 T{_Smi}) T{bool} goto (104, 105)
B104
  Loop 97
v6603 <- LoadIndexed:26([_OneByteString] v49 T{_OneByteString}, v686 T{int}) [0, 255] int64
v692 <- BinaryInt64Op(^ [tr], v6603, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6601) T{*?}
v4558 <- LoadField(v6601 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5709 <- UnboxInt64([non-speculative], v4558) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r8
GenericCheckBound(v5709, v692) [-9223372036854775808, 9223372036854775807] int64
v7795 <- LoadField(v6601 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7795 T{*?}, v692 T{int}, v4008, NoStoreBarrier)
v694 <- BinaryInt64Op(+ [tr], v686 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r7 <- r0 goto:36 B106
B105
ParallelMove r3 <- C, r8 <- C, r7 <- C goto:34 B112
B112
  Loop 96
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v715, v6574 T{_Smi}) T{bool} goto (110, 111)
B110
  Loop 96
v6604 <- LoadIndexed:26([_OneByteString] v22 T{_OneByteString}, v715 T{int}) [0, 255] int64
v721 <- BinaryInt64Op(^ [tr], v6604, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6601) T{*?}
v4562 <- LoadField(v6601 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5713 <- UnboxInt64([non-speculative], v4562) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5713, v721) [-9223372036854775808, 9223372036854775807] int64
v7796 <- LoadField(v6601 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7796 T{*?}, v721 T{int}, v4020, NoStoreBarrier)
v723 <- BinaryInt64Op(+ [tr], v715 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B112
B111
ParallelMove r3 <- C, r9 <- C, r10 <- C goto:34 B118
B118
  Loop 95
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v744, v6574 T{_Smi}) T{bool} goto (116, 117)
B116
  Loop 95
v6605 <- LoadIndexed:26([_OneByteString] v26 T{_OneByteString}, v744 T{int}) [0, 255] int64
v750 <- BinaryInt64Op(^ [tr], v6605, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6601) T{*?}
v4566 <- LoadField(v6601 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5717 <- UnboxInt64([non-speculative], v4566) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5717, v750) [-9223372036854775808, 9223372036854775807] int64
v7797 <- LoadField(v6601 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7797 T{*?}, v750 T{int}, v6606, NoStoreBarrier)
v752 <- BinaryInt64Op(+ [tr], v744 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B118
B117
ParallelMove r3 <- C, r11 <- C, r12 <- C goto:34 B124
B124
  Loop 94
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v773, v6574 T{_Smi}) T{bool} goto (122, 123)
B122
  Loop 94
v6607 <- LoadIndexed:26([_OneByteString] v28 T{_OneByteString}, v773 T{int}) [0, 255] int64
v779 <- BinaryInt64Op(^ [tr], v6607, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6601) T{*?}
v4570 <- LoadField(v6601 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5721 <- UnboxInt64([non-speculative], v4570) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5721, v779) [-9223372036854775808, 9223372036854775807] int64
v7798 <- LoadField(v6601 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7798 T{*?}, v779 T{int}, v4012, NoStoreBarrier)
v781 <- BinaryInt64Op(+ [tr], v773 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B124
B123
ParallelMove r3 <- C, r14 <- C, r13 <- C goto:34 B130
B130
  Loop 93
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v802, v6574 T{_Smi}) T{bool} goto (128, 129)
B128
  Loop 93
v6609 <- LoadIndexed:26([_OneByteString] v30 T{_OneByteString}, v802 T{int}) [0, 255] int64
v808 <- BinaryInt64Op(^ [tr], v6609, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6601) T{*?}
v4574 <- LoadField(v6601 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5725 <- UnboxInt64([non-speculative], v4574) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5725, v808) [-9223372036854775808, 9223372036854775807] int64
v7799 <- LoadField(v6601 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7799 T{*?}, v808 T{int}, v4010, NoStoreBarrier)
v810 <- BinaryInt64Op(+ [tr], v802 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B130
B129
ParallelMove r3 <- C, r20 <- C, r19 <- C goto:34 B136
B136
  Loop 92
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v831, v6574 T{_Smi}) T{bool} goto (134, 135)
B134
  Loop 92
v6610 <- LoadIndexed:26([_OneByteString] v34 T{_OneByteString}, v831 T{int}) [0, 255] int64
v837 <- BinaryInt64Op(^ [tr], v6610, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6601) T{*?}
v4578 <- LoadField(v6601 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5729 <- UnboxInt64([non-speculative], v4578) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5729, v837) [-9223372036854775808, 9223372036854775807] int64
v7800 <- LoadField(v6601 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7800 T{*?}, v837 T{int}, v4009, NoStoreBarrier)
v839 <- BinaryInt64Op(+ [tr], v831 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B136
B135
ParallelMove r23 <- fp[-2], r24 <- fp[-4]
v5731 <- UnboxInt64([non-speculative], v4026 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- r4
GenericCheckBound:12(v5731 T{_Smi}, v6574 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v6611 <- LoadIndexed:12([_List] v197 T{_List}, v6574 T{_Smi}) T{Uint8List}
ParallelMove fp[-6] <- r25
v7762 <- LoadClassId(<non-smi> v6611 T{Uint8List}) int64
ParallelMove r0 <- r0, r1 <- r25, r2 <- C, r3 <- C, r5 <- C
DispatchTableCall( cid=v7762 List.fillRange<0>, v6611 T{Uint8List}, v6573 T{_Smi}, v6576 T{_Smi}, v4268 T{_Smi})
ParallelMove r5 <- C, r4 <- C, r2 <- C, r3 <- fp[-6] goto:34 B145
B145
  Loop 91
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v881, v6577 T{_Smi}) T{bool} goto (143, 144)
B143
  Loop 91
v6612 <- LoadIndexed:26([_OneByteString] v19 T{_OneByteString}, v881 T{int}) [0, 255] int64
v887 <- BinaryInt64Op(^ [tr], v6612, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6611) T{*?}
v4582 <- LoadField(v6611 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5735 <- UnboxInt64([non-speculative], v4582) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r6
GenericCheckBound(v5735, v887) [-9223372036854775808, 9223372036854775807] int64
v7801 <- LoadField(v6611 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7801 T{*?}, v887 T{int}, v6574 T{_Smi}, NoStoreBarrier)
v888 <- BinaryInt64Op(+ [tr], v881 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B145
B144
ParallelMove r5 <- C, r6 <- C, r2 <- C goto:34 B151
B151
  Loop 90
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v910, v6574 T{_Smi}) T{bool} goto (149, 150)
B149
  Loop 90
v6613 <- LoadIndexed:26([_OneByteString] v22 T{_OneByteString}, v910 T{int}) [0, 255] int64
v916 <- BinaryInt64Op(^ [tr], v6613, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6611) T{*?}
v4586 <- LoadField(v6611 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5739 <- UnboxInt64([non-speculative], v4586) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r7
GenericCheckBound(v5739, v916) [-9223372036854775808, 9223372036854775807] int64
v7802 <- LoadField(v6611 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7802 T{*?}, v916 T{int}, v4020, NoStoreBarrier)
v918 <- BinaryInt64Op(+ [tr], v910 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B151
B150
ParallelMove r2 <- C, r7 <- C, r8 <- C goto:34 B157
B157
  Loop 89
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v939, v6574 T{_Smi}) T{bool} goto (155, 156)
B155
  Loop 89
v6614 <- LoadIndexed:26([_OneByteString] v26 T{_OneByteString}, v939 T{int}) [0, 255] int64
v945 <- BinaryInt64Op(^ [tr], v6614, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6611) T{*?}
v4590 <- LoadField(v6611 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5743 <- UnboxInt64([non-speculative], v4590) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5743, v945) [-9223372036854775808, 9223372036854775807] int64
v7803 <- LoadField(v6611 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7803 T{*?}, v945 T{int}, v6615, NoStoreBarrier)
v947 <- BinaryInt64Op(+ [tr], v939 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0 goto:36 B157
B156
ParallelMove r2 <- C, r9 <- C, r10 <- C goto:34 B163
B163
  Loop 88
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v968, v6574 T{_Smi}) T{bool} goto (161, 162)
B161
  Loop 88
v6616 <- LoadIndexed:26([_OneByteString] v28 T{_OneByteString}, v968 T{int}) [0, 255] int64
v974 <- BinaryInt64Op(^ [tr], v6616, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6611) T{*?}
v4594 <- LoadField(v6611 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5747 <- UnboxInt64([non-speculative], v4594) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5747, v974) [-9223372036854775808, 9223372036854775807] int64
v7804 <- LoadField(v6611 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7804 T{*?}, v974 T{int}, v4011, NoStoreBarrier)
v976 <- BinaryInt64Op(+ [tr], v968 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0 goto:36 B163
B162
ParallelMove r2 <- C, r12 <- C, r11 <- C goto:34 B169
B169
  Loop 87
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v997, v6574 T{_Smi}) T{bool} goto (167, 168)
B167
  Loop 87
v6617 <- LoadIndexed:26([_OneByteString] v30 T{_OneByteString}, v997 T{int}) [0, 255] int64
v1003 <- BinaryInt64Op(^ [tr], v6617, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6611) T{*?}
v4598 <- LoadField(v6611 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5751 <- UnboxInt64([non-speculative], v4598) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5751, v1003) [-9223372036854775808, 9223372036854775807] int64
v7805 <- LoadField(v6611 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7805 T{*?}, v1003 T{int}, v4010, NoStoreBarrier)
v1005 <- BinaryInt64Op(+ [tr], v997 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0 goto:36 B169
B168
ParallelMove r2 <- C, r14 <- C, r13 <- C goto:34 B175
B175
  Loop 86
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1026, v6574 T{_Smi}) T{bool} goto (173, 174)
B173
  Loop 86
v6618 <- LoadIndexed:26([_OneByteString] v34 T{_OneByteString}, v1026 T{int}) [0, 255] int64
v1032 <- BinaryInt64Op(^ [tr], v6618, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6611) T{*?}
v4602 <- LoadField(v6611 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5755 <- UnboxInt64([non-speculative], v4602) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5755, v1032) [-9223372036854775808, 9223372036854775807] int64
v7806 <- LoadField(v6611 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7806 T{*?}, v1032 T{int}, v4009, NoStoreBarrier)
v1034 <- BinaryInt64Op(+ [tr], v1026 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0 goto:36 B175
B174
ParallelMove r19 <- fp[-2], r20 <- fp[-4]
v5757 <- UnboxInt64([non-speculative], v4026 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- C
GenericCheckBound:12(v5757 T{_Smi}, v6596 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v6619 <- LoadIndexed:12([_List] v197 T{_List}, v6596 T{_Smi}) T{Uint8List}
ParallelMove fp[-6] <- r23
v7763 <- LoadClassId(<non-smi> v6619 T{Uint8List}) int64
ParallelMove r0 <- r0, r1 <- r23, r2 <- C, r3 <- C, r5 <- C
DispatchTableCall( cid=v7763 List.fillRange<0>, v6619 T{Uint8List}, v6573 T{_Smi}, v6576 T{_Smi}, v4269 T{_Smi})
ParallelMove r5 <- C, r4 <- C, r3 <- C, r2 <- fp[-6] goto:34 B184
B184
  Loop 85
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1076, v6577 T{_Smi}) T{bool} goto (182, 183)
B182
  Loop 85
v6620 <- LoadIndexed:26([_OneByteString] v19 T{_OneByteString}, v1076 T{int}) [0, 255] int64
v1082 <- BinaryInt64Op(^ [tr], v6620, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6619) T{*?}
v4606 <- LoadField(v6619 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5761 <- UnboxInt64([non-speculative], v4606) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r6
GenericCheckBound(v5761, v1082) [-9223372036854775808, 9223372036854775807] int64
v7807 <- LoadField(v6619 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7807 T{*?}, v1082 T{int}, v4019, NoStoreBarrier)
v1084 <- BinaryInt64Op(+ [tr], v1076 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B184
B183
ParallelMove r5 <- C, r6 <- C, r3 <- C goto:34 B190
B190
  Loop 84
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1106, v6574 T{_Smi}) T{bool} goto (188, 189)
B188
  Loop 84
v6622 <- LoadIndexed:26([_OneByteString] v26 T{_OneByteString}, v1106 T{int}) [0, 255] int64
v1112 <- BinaryInt64Op(^ [tr], v6622, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6619) T{*?}
v4610 <- LoadField(v6619 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5765 <- UnboxInt64([non-speculative], v4610) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r7
GenericCheckBound(v5765, v1112) [-9223372036854775808, 9223372036854775807] int64
v7808 <- LoadField(v6619 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7808 T{*?}, v1112 T{int}, v4018, NoStoreBarrier)
v1114 <- BinaryInt64Op(+ [tr], v1106 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B190
B189
ParallelMove r5 <- C, r7 <- C goto:34 B196
B196
  Loop 83
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1135, v6574 T{_Smi}) T{bool} goto (194, 195)
B194
  Loop 83
v6624 <- LoadIndexed:26([_OneByteString] v28 T{_OneByteString}, v1135 T{int}) [0, 255] int64
v1141 <- BinaryInt64Op(^ [tr], v6624, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6619) T{*?}
v4614 <- LoadField(v6619 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5769 <- UnboxInt64([non-speculative], v4614) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r8
GenericCheckBound(v5769, v1141) [-9223372036854775808, 9223372036854775807] int64
v7809 <- LoadField(v6619 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7809 T{*?}, v1141 T{int}, v4018, NoStoreBarrier)
v1143 <- BinaryInt64Op(+ [tr], v1135 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B196
B195
ParallelMove r5 <- C, r8 <- C, r3 <- C goto:34 B202
B202
  Loop 82
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1164, v6574 T{_Smi}) T{bool} goto (200, 201)
B200
  Loop 82
v6625 <- LoadIndexed:26([_OneByteString] v20 T{_OneByteString}, v1164 T{int}) [0, 255] int64
v1170 <- BinaryInt64Op(^ [tr], v6625, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6619) T{*?}
v4618 <- LoadField(v6619 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5773 <- UnboxInt64([non-speculative], v4618) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r9
GenericCheckBound(v5773, v1170) [-9223372036854775808, 9223372036854775807] int64
v7810 <- LoadField(v6619 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7810 T{*?}, v1170 T{int}, v4017, NoStoreBarrier)
v1172 <- BinaryInt64Op(+ [tr], v1164 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B202
B201
ParallelMove r3 <- C, r10 <- C, r9 <- C goto:34 B208
B208
  Loop 81
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1193, v6574 T{_Smi}) T{bool} goto (206, 207)
B206
  Loop 81
v6627 <- LoadIndexed:26([_OneByteString] v30 T{_OneByteString}, v1193 T{int}) [0, 255] int64
v1199 <- BinaryInt64Op(^ [tr], v6627, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6619) T{*?}
v4622 <- LoadField(v6619 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5777 <- UnboxInt64([non-speculative], v4622) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5777, v1199) [-9223372036854775808, 9223372036854775807] int64
v7811 <- LoadField(v6619 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7811 T{*?}, v1199 T{int}, v4010, NoStoreBarrier)
v1201 <- BinaryInt64Op(+ [tr], v1193 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B208
B207
ParallelMove r3 <- C, r12 <- C, r11 <- C goto:34 B214
B214
  Loop 80
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1222, v6574 T{_Smi}) T{bool} goto (212, 213)
B212
  Loop 80
v6628 <- LoadIndexed:26([_OneByteString] v34 T{_OneByteString}, v1222 T{int}) [0, 255] int64
v1228 <- BinaryInt64Op(^ [tr], v6628, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6619) T{*?}
v4626 <- LoadField(v6619 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5781 <- UnboxInt64([non-speculative], v4626) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5781, v1228) [-9223372036854775808, 9223372036854775807] int64
v7812 <- LoadField(v6619 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7812 T{*?}, v1228 T{int}, v4009, NoStoreBarrier)
v1230 <- BinaryInt64Op(+ [tr], v1222 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B214
B213
ParallelMove r13 <- fp[-2], r14 <- fp[-4]
v5783 <- UnboxInt64([non-speculative], v4026 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- C
GenericCheckBound:12(v5783 T{_Smi}, v6584 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v6629 <- LoadIndexed:12([_List] v197 T{_List}, v6584 T{_Smi}) T{Uint8List}
ParallelMove fp[-6] <- r19
v7764 <- LoadClassId(<non-smi> v6629 T{Uint8List}) int64
ParallelMove r0 <- r0, r1 <- r19, r2 <- C, r3 <- C, r5 <- C
DispatchTableCall( cid=v7764 List.fillRange<0>, v6629 T{Uint8List}, v6573 T{_Smi}, v6576 T{_Smi}, v4269 T{_Smi})
ParallelMove r3 <- C, r4 <- C, r2 <- fp[-6], r6 <- C goto:34 B223
B223
  Loop 79
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1272, v6577 T{_Smi}) T{bool} goto (221, 222)
B221
  Loop 79
v6630 <- LoadIndexed:26([_OneByteString] v19 T{_OneByteString}, v1272 T{int}) [0, 255] int64
v1278 <- BinaryInt64Op(^ [tr], v6630, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6629) T{*?}
v4630 <- LoadField(v6629 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5787 <- UnboxInt64([non-speculative], v4630) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5787, v1278) [-9223372036854775808, 9223372036854775807] int64
v7813 <- LoadField(v6629 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7813 T{*?}, v1278 T{int}, v6631, NoStoreBarrier)
v1280 <- BinaryInt64Op(+ [tr], v1272 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B223
B222
ParallelMove r3 <- C, r7 <- C, r8 <- C goto:34 B229
B229
  Loop 78
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1302, v6574 T{_Smi}) T{bool} goto (227, 228)
B227
  Loop 78
v6632 <- LoadIndexed:26([_OneByteString] v26 T{_OneByteString}, v1302 T{int}) [0, 255] int64
v1308 <- BinaryInt64Op(^ [tr], v6632, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6629) T{*?}
v4634 <- LoadField(v6629 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5791 <- UnboxInt64([non-speculative], v4634) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5791, v1308) [-9223372036854775808, 9223372036854775807] int64
v7814 <- LoadField(v6629 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7814 T{*?}, v1308 T{int}, v4014, NoStoreBarrier)
v1310 <- BinaryInt64Op(+ [tr], v1302 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B229
B228
ParallelMove r3 <- C, r9 <- C goto:34 B235
B235
  Loop 77
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1331, v6574 T{_Smi}) T{bool} goto (233, 234)
B233
  Loop 77
v6634 <- LoadIndexed:26([_OneByteString] v28 T{_OneByteString}, v1331 T{int}) [0, 255] int64
v1337 <- BinaryInt64Op(^ [tr], v6634, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6629) T{*?}
v4638 <- LoadField(v6629 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5795 <- UnboxInt64([non-speculative], v4638) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5795, v1337) [-9223372036854775808, 9223372036854775807] int64
v7815 <- LoadField(v6629 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7815 T{*?}, v1337 T{int}, v4014, NoStoreBarrier)
v1339 <- BinaryInt64Op(+ [tr], v1331 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B235
B234
ParallelMove r3 <- C, r10 <- C, r11 <- C goto:34 B241
B241
  Loop 76
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1360, v6574 T{_Smi}) T{bool} goto (239, 240)
B239
  Loop 76
v6635 <- LoadIndexed:26([_OneByteString] v20 T{_OneByteString}, v1360 T{int}) [0, 255] int64
v1366 <- BinaryInt64Op(^ [tr], v6635, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6629) T{*?}
v4642 <- LoadField(v6629 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5799 <- UnboxInt64([non-speculative], v4642) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5799, v1366) [-9223372036854775808, 9223372036854775807] int64
v7816 <- LoadField(v6629 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7816 T{*?}, v1366 T{int}, v6636, NoStoreBarrier)
v1368 <- BinaryInt64Op(+ [tr], v1360 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B241
B240
ParallelMove r3 <- C, r13 <- C, r12 <- C goto:34 B247
B247
  Loop 75
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1389, v6574 T{_Smi}) T{bool} goto (245, 246)
B245
  Loop 75
v6637 <- LoadIndexed:26([_OneByteString] v30 T{_OneByteString}, v1389 T{int}) [0, 255] int64
v1395 <- BinaryInt64Op(^ [tr], v6637, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6629) T{*?}
v4646 <- LoadField(v6629 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5803 <- UnboxInt64([non-speculative], v4646) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5803, v1395) [-9223372036854775808, 9223372036854775807] int64
v7817 <- LoadField(v6629 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7817 T{*?}, v1395 T{int}, v4010, NoStoreBarrier)
v1397 <- BinaryInt64Op(+ [tr], v1389 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B247
B246
ParallelMove r3 <- C, r19 <- C, r14 <- C goto:34 B253
B253
  Loop 74
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1418, v6574 T{_Smi}) T{bool} goto (251, 252)
B251
  Loop 74
v6638 <- LoadIndexed:26([_OneByteString] v34 T{_OneByteString}, v1418 T{int}) [0, 255] int64
v1424 <- BinaryInt64Op(^ [tr], v6638, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6629) T{*?}
v4650 <- LoadField(v6629 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5807 <- UnboxInt64([non-speculative], v4650) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5807, v1424) [-9223372036854775808, 9223372036854775807] int64
v7818 <- LoadField(v6629 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7818 T{*?}, v1424 T{int}, v4009, NoStoreBarrier)
v1426 <- BinaryInt64Op(+ [tr], v1418 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B253
B252
ParallelMove r20 <- fp[-2], r23 <- fp[-4]
v5809 <- UnboxInt64([non-speculative], v4026 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- C
GenericCheckBound:12(v5809 T{_Smi}, v6639 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v6640 <- LoadIndexed:12([_List] v197 T{_List}, v6639 T{_Smi}) T{Uint8List}
ParallelMove fp[-6] <- r24
v7765 <- LoadClassId(<non-smi> v6640 T{Uint8List}) int64
ParallelMove r0 <- r0, r1 <- r24, r2 <- C, r3 <- C, r5 <- C
DispatchTableCall( cid=v7765 List.fillRange<0>, v6640 T{Uint8List}, v6573 T{_Smi}, v6576 T{_Smi}, v4270 T{_Smi})
ParallelMove r3 <- C, r4 <- C, r2 <- fp[-6], r6 <- C goto:34 B262
B262
  Loop 73
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1468, v6577 T{_Smi}) T{bool} goto (260, 261)
B260
  Loop 73
v6641 <- LoadIndexed:26([_OneByteString] v19 T{_OneByteString}, v1468 T{int}) [0, 255] int64
v1474 <- BinaryInt64Op(^ [tr], v6641, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6640) T{*?}
v4654 <- LoadField(v6640 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5813 <- UnboxInt64([non-speculative], v4654) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5813, v1474) [-9223372036854775808, 9223372036854775807] int64
v7819 <- LoadField(v6640 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7819 T{*?}, v1474 T{int}, v6642, NoStoreBarrier)
v1476 <- BinaryInt64Op(+ [tr], v1468 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B262
B261
CheckWritable:34(v6640) T{*?}
v4658 <- LoadField:34(v6640 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5815 <- UnboxInt64:34([non-speculative], v4658) [0, 4611686018427387903] int64
ParallelMove r8 <- C, r7 <- C goto:34 B268
B268
  Loop 72
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<=, v1501, v6644 T{_Smi}) T{bool} goto (266, 267)
B266
  Loop 72
v1505 <- BinaryInt64Op(^ [tr], v1501, v6576 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r5, r1 <- r9
GenericCheckBound(v5815, v1505) [-9223372036854775808, 9223372036854775807] int64
v7820 <- LoadField(v6640 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7820 T{*?}, v1505 T{int}, v4007, NoStoreBarrier)
v1506 <- BinaryInt64Op(+ [tr], v1501, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r8 <- r0 goto:36 B268
B267
ParallelMove r5 <- C, r8 <- C, r9 <- C goto:34 B275
B275
  Loop 71
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1538, v6574 T{_Smi}) T{bool} goto (273, 274)
B273
  Loop 71
v6645 <- LoadIndexed:26([_OneByteString] v22 T{_OneByteString}, v1538 T{int}) [0, 255] int64
v1544 <- BinaryInt64Op(^ [tr], v6645, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6640) T{*?}
v5819 <- UnboxInt64([non-speculative], v4658 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r10
GenericCheckBound(v5819, v1544) [-9223372036854775808, 9223372036854775807] int64
v7821 <- LoadField(v6640 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7821 T{*?}, v1544 T{int}, v4015, NoStoreBarrier)
v1546 <- BinaryInt64Op(+ [tr], v1538 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B275
B274
ParallelMove r5 <- C, r11 <- C, r10 <- C goto:34 B281
B281
  Loop 70
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1567, v6574 T{_Smi}) T{bool} goto (279, 280)
B279
  Loop 70
v6647 <- LoadIndexed:26([_OneByteString] v89 T{_OneByteString}, v1567 T{int}) [0, 255] int64
v1573 <- BinaryInt64Op(^ [tr], v6647, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6640) T{*?}
v5823 <- UnboxInt64([non-speculative], v4658 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r12
GenericCheckBound(v5823, v1573) [-9223372036854775808, 9223372036854775807] int64
v7822 <- LoadField(v6640 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7822 T{*?}, v1573 T{int}, v4014, NoStoreBarrier)
v1575 <- BinaryInt64Op(+ [tr], v1567 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B281
B280
ParallelMove r13 <- C, r12 <- C, r5 <- C goto:34 B287
B287
  Loop 69
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1596, v6574 T{_Smi}) T{bool} goto (285, 286)
B285
  Loop 69
v6648 <- LoadIndexed:26([_OneByteString] v91 T{_OneByteString}, v1596 T{int}) [0, 255] int64
v1602 <- BinaryInt64Op(^ [tr], v6648, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6640) T{*?}
v5827 <- UnboxInt64([non-speculative], v4658 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r14
GenericCheckBound(v5827, v1602) [-9223372036854775808, 9223372036854775807] int64
v7823 <- LoadField(v6640 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7823 T{*?}, v1602 T{int}, v4016, NoStoreBarrier)
v1604 <- BinaryInt64Op(+ [tr], v1596 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r13 <- r0 goto:36 B287
B286
ParallelMove r5 <- C, r12 <- C, r13 <- C goto:34 B293
B293
  Loop 68
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1625, v6574 T{_Smi}) T{bool} goto (291, 292)
B291
  Loop 68
v6650 <- LoadIndexed:26([_OneByteString] v26 T{_OneByteString}, v1625 T{int}) [0, 255] int64
v1631 <- BinaryInt64Op(^ [tr], v6650, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6640) T{*?}
v5831 <- UnboxInt64([non-speculative], v4658 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r14
GenericCheckBound(v5831, v1631) [-9223372036854775808, 9223372036854775807] int64
v7824 <- LoadField(v6640 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7824 T{*?}, v1631 T{int}, v4013, NoStoreBarrier)
v1633 <- BinaryInt64Op(+ [tr], v1625 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B293
B292
ParallelMove r5 <- C, r14 <- C goto:34 B299
B299
  Loop 67
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1654, v6574 T{_Smi}) T{bool} goto (297, 298)
B297
  Loop 67
v6652 <- LoadIndexed:26([_OneByteString] v28 T{_OneByteString}, v1654 T{int}) [0, 255] int64
v1660 <- BinaryInt64Op(^ [tr], v6652, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6640) T{*?}
v5835 <- UnboxInt64([non-speculative], v4658 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r19
GenericCheckBound(v5835, v1660) [-9223372036854775808, 9223372036854775807] int64
v7825 <- LoadField(v6640 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7825 T{*?}, v1660 T{int}, v4013, NoStoreBarrier)
v1662 <- BinaryInt64Op(+ [tr], v1654 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B299
B298
ParallelMove r5 <- C, r20 <- C, r19 <- C goto:34 B305
B305
  Loop 66
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1683, v6574 T{_Smi}) T{bool} goto (303, 304)
B303
  Loop 66
v6653 <- LoadIndexed:26([_OneByteString] v30 T{_OneByteString}, v1683 T{int}) [0, 255] int64
v1689 <- BinaryInt64Op(^ [tr], v6653, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6640) T{*?}
v5839 <- UnboxInt64([non-speculative], v4658 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r23
GenericCheckBound(v5839, v1689) [-9223372036854775808, 9223372036854775807] int64
v7826 <- LoadField(v6640 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7826 T{*?}, v1689 T{int}, v4010, NoStoreBarrier)
v1691 <- BinaryInt64Op(+ [tr], v1683 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B305
B304
ParallelMove r5 <- C, r24 <- C, r23 <- C goto:34 B311
B311
  Loop 65
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1712, v6574 T{_Smi}) T{bool} goto (309, 310)
B309
  Loop 65
v6654 <- LoadIndexed:26([_OneByteString] v34 T{_OneByteString}, v1712 T{int}) [0, 255] int64
v1718 <- BinaryInt64Op(^ [tr], v6654, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6640) T{*?}
v5843 <- UnboxInt64([non-speculative], v4658 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r25
GenericCheckBound(v5843, v1718) [-9223372036854775808, 9223372036854775807] int64
v7827 <- LoadField(v6640 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7827 T{*?}, v1718 T{int}, v4009, NoStoreBarrier)
v1720 <- BinaryInt64Op(+ [tr], v1712 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B311
B310
ParallelMove r25 <- fp[-2], r2 <- fp[-4]
v5845 <- UnboxInt64([non-speculative], v4026 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- r6
GenericCheckBound:12(v5845 T{_Smi}, v6642 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v6655 <- LoadIndexed:12([_List] v197 T{_List}, v6642 T{_Smi}) T{Uint8List}
ParallelMove fp[-6] <- r1
v7766 <- LoadClassId(<non-smi> v6655 T{Uint8List}) int64
ParallelMove r0 <- r0, r1 <- r1, r2 <- C, r3 <- C, r5 <- C
DispatchTableCall( cid=v7766 List.fillRange<0>, v6655 T{Uint8List}, v6573 T{_Smi}, v6576 T{_Smi}, v4270 T{_Smi})
ParallelMove r3 <- C, r4 <- C, r6 <- C, r2 <- fp[-6] goto:34 B320
B320
  Loop 64
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1762, v6577 T{_Smi}) T{bool} goto (318, 319)
B318
  Loop 64
v6656 <- LoadIndexed:26([_OneByteString] v19 T{_OneByteString}, v1762 T{int}) [0, 255] int64
v1768 <- BinaryInt64Op(^ [tr], v6656, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6655) T{*?}
v4690 <- LoadField(v6655 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5849 <- UnboxInt64([non-speculative], v4690) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5849, v1768) [-9223372036854775808, 9223372036854775807] int64
v7828 <- LoadField(v6655 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7828 T{*?}, v1768 T{int}, v6642 T{_Smi}, NoStoreBarrier)
v1770 <- BinaryInt64Op(+ [tr], v1762 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B320
B319
CheckWritable:34(v6655) T{*?}
v4694 <- LoadField:34(v6655 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5851 <- UnboxInt64:34([non-speculative], v4694) [0, 4611686018427387903] int64
ParallelMove r8 <- C, r7 <- C goto:34 B326
B326
  Loop 63
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<=, v1795, v6644 T{_Smi}) T{bool} goto (324, 325)
B324
  Loop 63
v1799 <- BinaryInt64Op(^ [tr], v1795, v6576 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r5, r1 <- r9
GenericCheckBound(v5851, v1799) [-9223372036854775808, 9223372036854775807] int64
v7829 <- LoadField(v6655 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7829 T{*?}, v1799 T{int}, v4007, NoStoreBarrier)
v1800 <- BinaryInt64Op(+ [tr], v1795, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r8 <- r0 goto:36 B326
B325
ParallelMove r8 <- C, r5 <- C, r7 <- C goto:34 B333
B333
  Loop 62
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1830, v6574 T{_Smi}) T{bool} goto (331, 332)
B331
  Loop 62
v6657 <- LoadIndexed:26([_OneByteString] v22 T{_OneByteString}, v1830 T{int}) [0, 255] int64
v1836 <- BinaryInt64Op(^ [tr], v6657, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6655) T{*?}
v5855 <- UnboxInt64([non-speculative], v4694 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r9
GenericCheckBound(v5855, v1836) [-9223372036854775808, 9223372036854775807] int64
v7830 <- LoadField(v6655 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7830 T{*?}, v1836 T{int}, v4015, NoStoreBarrier)
v1838 <- BinaryInt64Op(+ [tr], v1830 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r8 <- r0 goto:36 B333
B332
ParallelMove r5 <- C, r8 <- C, r7 <- C goto:34 B339
B339
  Loop 61
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1859, v6574 T{_Smi}) T{bool} goto (337, 338)
B337
  Loop 61
v6658 <- LoadIndexed:26([_OneByteString] v89 T{_OneByteString}, v1859 T{int}) [0, 255] int64
v1865 <- BinaryInt64Op(^ [tr], v6658, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6655) T{*?}
v5859 <- UnboxInt64([non-speculative], v4694 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r9
GenericCheckBound(v5859, v1865) [-9223372036854775808, 9223372036854775807] int64
v7831 <- LoadField(v6655 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7831 T{*?}, v1865 T{int}, v4014, NoStoreBarrier)
v1867 <- BinaryInt64Op(+ [tr], v1859 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B339
B338
ParallelMove r5 <- C, r9 <- C, r10 <- C goto:34 B345
B345
  Loop 60
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1888, v6574 T{_Smi}) T{bool} goto (343, 344)
B343
  Loop 60
v6659 <- LoadIndexed:26([_OneByteString] v26 T{_OneByteString}, v1888 T{int}) [0, 255] int64
v1894 <- BinaryInt64Op(^ [tr], v6659, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6655) T{*?}
v5863 <- UnboxInt64([non-speculative], v4694 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r11
GenericCheckBound(v5863, v1894) [-9223372036854775808, 9223372036854775807] int64
v7832 <- LoadField(v6655 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7832 T{*?}, v1894 T{int}, v4013, NoStoreBarrier)
v1896 <- BinaryInt64Op(+ [tr], v1888 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B345
B344
ParallelMove r5 <- C, r11 <- C goto:34 B351
B351
  Loop 59
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1917, v6574 T{_Smi}) T{bool} goto (349, 350)
B349
  Loop 59
v6660 <- LoadIndexed:26([_OneByteString] v28 T{_OneByteString}, v1917 T{int}) [0, 255] int64
v1923 <- BinaryInt64Op(^ [tr], v6660, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6655) T{*?}
v5867 <- UnboxInt64([non-speculative], v4694 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r12
GenericCheckBound(v5867, v1923) [-9223372036854775808, 9223372036854775807] int64
v7833 <- LoadField(v6655 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7833 T{*?}, v1923 T{int}, v4013, NoStoreBarrier)
v1925 <- BinaryInt64Op(+ [tr], v1917 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B351
B350
ParallelMove r5 <- C, r13 <- C, r12 <- C goto:34 B357
B357
  Loop 58
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1946, v6574 T{_Smi}) T{bool} goto (355, 356)
B355
  Loop 58
v6661 <- LoadIndexed:26([_OneByteString] v30 T{_OneByteString}, v1946 T{int}) [0, 255] int64
v1952 <- BinaryInt64Op(^ [tr], v6661, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6655) T{*?}
v5871 <- UnboxInt64([non-speculative], v4694 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r14
GenericCheckBound(v5871, v1952) [-9223372036854775808, 9223372036854775807] int64
v7834 <- LoadField(v6655 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7834 T{*?}, v1952 T{int}, v4010, NoStoreBarrier)
v1954 <- BinaryInt64Op(+ [tr], v1946 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B357
B356
ParallelMove r5 <- C, r19 <- C, r14 <- C goto:34 B363
B363
  Loop 57
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v1975, v6574 T{_Smi}) T{bool} goto (361, 362)
B361
  Loop 57
v6662 <- LoadIndexed:26([_OneByteString] v34 T{_OneByteString}, v1975 T{int}) [0, 255] int64
v1981 <- BinaryInt64Op(^ [tr], v6662, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6655) T{*?}
v5875 <- UnboxInt64([non-speculative], v4694 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r20
GenericCheckBound(v5875, v1981) [-9223372036854775808, 9223372036854775807] int64
v7835 <- LoadField(v6655 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7835 T{*?}, v1981 T{int}, v4009, NoStoreBarrier)
v1983 <- BinaryInt64Op(+ [tr], v1975 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B363
B362
ParallelMove r20 <- fp[-2], r23 <- fp[-4]
v5877 <- UnboxInt64([non-speculative], v4026 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- C
GenericCheckBound:12(v5877 T{_Smi}, v6663 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v6664 <- LoadIndexed:12([_List] v197 T{_List}, v6663 T{_Smi}) T{Uint8List}
ParallelMove fp[-6] <- r24
v7767 <- LoadClassId(<non-smi> v6664 T{Uint8List}) int64
ParallelMove r0 <- r0, r1 <- r24, r2 <- C, r3 <- C, r5 <- C
DispatchTableCall( cid=v7767 List.fillRange<0>, v6664 T{Uint8List}, v6573 T{_Smi}, v6576 T{_Smi}, v4271 T{_Smi})
ParallelMove r2 <- fp[-6]
CheckWritable:34(v6664) T{*?}
v4722 <- LoadField:34(v6664 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5879 <- UnboxInt64:34([non-speculative], v4722) [0, 4611686018427387903] int64
ParallelMove r5 <- C, r6 <- C goto:34 B372
B372
  Loop 56
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<=, v2028, v6666 T{_Smi}) T{bool} goto (370, 371)
B370
  Loop 56
v2032 <- BinaryInt64Op(^ [tr], v2028, v6576 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r4, r1 <- r7
GenericCheckBound(v5879, v2032) [-9223372036854775808, 9223372036854775807] int64
v7836 <- LoadField(v6664 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7836 T{*?}, v2032 T{int}, v6667, NoStoreBarrier)
v2033 <- BinaryInt64Op(+ [tr], v2028, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B372
B371
ParallelMove r5 <- C, r7 <- C, r4 <- C goto:34 B379
B379
  Loop 55
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2065, v6574 T{_Smi}) T{bool} goto (377, 378)
B377
  Loop 55
v6668 <- LoadIndexed:26([_OneByteString] v89 T{_OneByteString}, v2065 T{int}) [0, 255] int64
v2071 <- BinaryInt64Op(^ [tr], v6668, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6664) T{*?}
v5883 <- UnboxInt64([non-speculative], v4722 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r8
GenericCheckBound(v5883, v2071) [-9223372036854775808, 9223372036854775807] int64
v7837 <- LoadField(v6664 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7837 T{*?}, v2071 T{int}, v4014, NoStoreBarrier)
v2073 <- BinaryInt64Op(+ [tr], v2065 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B379
B378
ParallelMove r5 <- C, r8 <- C, r9 <- C goto:34 B385
B385
  Loop 54
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2094, v6574 T{_Smi}) T{bool} goto (383, 384)
B383
  Loop 54
v6669 <- LoadIndexed:26([_OneByteString] v26 T{_OneByteString}, v2094 T{int}) [0, 255] int64
v2100 <- BinaryInt64Op(^ [tr], v6669, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6664) T{*?}
v5887 <- UnboxInt64([non-speculative], v4722 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r10
GenericCheckBound(v5887, v2100) [-9223372036854775808, 9223372036854775807] int64
v7838 <- LoadField(v6664 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7838 T{*?}, v2100 T{int}, v4013, NoStoreBarrier)
v2102 <- BinaryInt64Op(+ [tr], v2094 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B385
B384
ParallelMove r5 <- C, r10 <- C goto:34 B391
B391
  Loop 53
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2123, v6574 T{_Smi}) T{bool} goto (389, 390)
B389
  Loop 53
v6670 <- LoadIndexed:26([_OneByteString] v28 T{_OneByteString}, v2123 T{int}) [0, 255] int64
v2129 <- BinaryInt64Op(^ [tr], v6670, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6664) T{*?}
v5891 <- UnboxInt64([non-speculative], v4722 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r11
GenericCheckBound(v5891, v2129) [-9223372036854775808, 9223372036854775807] int64
v7839 <- LoadField(v6664 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7839 T{*?}, v2129 T{int}, v4013, NoStoreBarrier)
v2131 <- BinaryInt64Op(+ [tr], v2123 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B391
B390
ParallelMove r5 <- C, r12 <- C, r11 <- C goto:34 B397
B397
  Loop 52
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2152, v6574 T{_Smi}) T{bool} goto (395, 396)
B395
  Loop 52
v6671 <- LoadIndexed:26([_OneByteString] v30 T{_OneByteString}, v2152 T{int}) [0, 255] int64
v2158 <- BinaryInt64Op(^ [tr], v6671, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6664) T{*?}
v5895 <- UnboxInt64([non-speculative], v4722 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r13
GenericCheckBound(v5895, v2158) [-9223372036854775808, 9223372036854775807] int64
v7840 <- LoadField(v6664 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7840 T{*?}, v2158 T{int}, v4010, NoStoreBarrier)
v2160 <- BinaryInt64Op(+ [tr], v2152 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B397
B396
ParallelMove r5 <- C, r14 <- C, r13 <- C goto:34 B403
B403
  Loop 51
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2181, v6574 T{_Smi}) T{bool} goto (401, 402)
B401
  Loop 51
v6672 <- LoadIndexed:26([_OneByteString] v34 T{_OneByteString}, v2181 T{int}) [0, 255] int64
v2187 <- BinaryInt64Op(^ [tr], v6672, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6664) T{*?}
v5899 <- UnboxInt64([non-speculative], v4722 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r19
GenericCheckBound(v5899, v2187) [-9223372036854775808, 9223372036854775807] int64
v7841 <- LoadField(v6664 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7841 T{*?}, v2187 T{int}, v4009, NoStoreBarrier)
v2189 <- BinaryInt64Op(+ [tr], v2181 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B403
B402
ParallelMove r19 <- fp[-2], r20 <- fp[-4]
v5901 <- UnboxInt64([non-speculative], v4026 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- r6
GenericCheckBound:12(v5901 T{_Smi}, v6667 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v6673 <- LoadIndexed:12([_List] v197 T{_List}, v6667 T{_Smi}) T{Uint8List}
ParallelMove fp[-6] <- r23
v7768 <- LoadClassId(<non-smi> v6673 T{Uint8List}) int64
ParallelMove r0 <- r0, r1 <- r23, r2 <- C, r3 <- C, r5 <- C
DispatchTableCall( cid=v7768 List.fillRange<0>, v6673 T{Uint8List}, v6573 T{_Smi}, v6576 T{_Smi}, v4271 T{_Smi})
ParallelMove r2 <- fp[-6]
CheckWritable:34(v6673) T{*?}
v4746 <- LoadField:34(v6673 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5903 <- UnboxInt64:34([non-speculative], v4746) [0, 4611686018427387903] int64
ParallelMove r6 <- C, r5 <- C goto:34 B412
B412
  Loop 50
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<=, v2234, v6666 T{_Smi}) T{bool} goto (410, 411)
B410
  Loop 50
v2238 <- BinaryInt64Op(^ [tr], v2234, v6576 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r4, r1 <- r7
GenericCheckBound(v5903, v2238) [-9223372036854775808, 9223372036854775807] int64
v7842 <- LoadField(v6673 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7842 T{*?}, v2238 T{int}, v6667 T{_Smi}, NoStoreBarrier)
v2239 <- BinaryInt64Op(+ [tr], v2234, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r0 goto:36 B412
B411
ParallelMove r6 <- C, r5 <- C, r4 <- C goto:34 B419
B419
  Loop 49
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2270, v6574 T{_Smi}) T{bool} goto (417, 418)
B417
  Loop 49
v6675 <- LoadIndexed:26([_OneByteString] v89 T{_OneByteString}, v2270 T{int}) [0, 255] int64
v2276 <- BinaryInt64Op(^ [tr], v6675, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6673) T{*?}
v5907 <- UnboxInt64([non-speculative], v4746 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r7
GenericCheckBound(v5907, v2276) [-9223372036854775808, 9223372036854775807] int64
v7843 <- LoadField(v6673 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7843 T{*?}, v2276 T{int}, v4014, NoStoreBarrier)
v2278 <- BinaryInt64Op(+ [tr], v2270 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r0 goto:36 B419
B418
ParallelMove r6 <- C, r4 <- C, r5 <- C goto:34 B425
B425
  Loop 48
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2299, v6574 T{_Smi}) T{bool} goto (423, 424)
B423
  Loop 48
v6676 <- LoadIndexed:26([_OneByteString] v26 T{_OneByteString}, v2299 T{int}) [0, 255] int64
v2305 <- BinaryInt64Op(^ [tr], v6676, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6673) T{*?}
v5911 <- UnboxInt64([non-speculative], v4746 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r7
GenericCheckBound(v5911, v2305) [-9223372036854775808, 9223372036854775807] int64
v7844 <- LoadField(v6673 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7844 T{*?}, v2305 T{int}, v4013, NoStoreBarrier)
v2307 <- BinaryInt64Op(+ [tr], v2299 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r0 goto:36 B425
B424
ParallelMove r7 <- C, r6 <- C goto:34 B431
B431
  Loop 47
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2328, v6574 T{_Smi}) T{bool} goto (429, 430)
B429
  Loop 47
v6677 <- LoadIndexed:26([_OneByteString] v28 T{_OneByteString}, v2328 T{int}) [0, 255] int64
v2334 <- BinaryInt64Op(^ [tr], v6677, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6673) T{*?}
v5915 <- UnboxInt64([non-speculative], v4746 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r8
GenericCheckBound(v5915, v2334) [-9223372036854775808, 9223372036854775807] int64
v7845 <- LoadField(v6673 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7845 T{*?}, v2334 T{int}, v4013, NoStoreBarrier)
v2336 <- BinaryInt64Op(+ [tr], v2328 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r7 <- r0 goto:36 B431
B430
ParallelMove r5 <- C, r8 <- C, r7 <- C goto:34 B437
B437
  Loop 46
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2357, v6574 T{_Smi}) T{bool} goto (435, 436)
B435
  Loop 46
v6678 <- LoadIndexed:26([_OneByteString] v30 T{_OneByteString}, v2357 T{int}) [0, 255] int64
v2363 <- BinaryInt64Op(^ [tr], v6678, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6673) T{*?}
v5919 <- UnboxInt64([non-speculative], v4746 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r9
GenericCheckBound(v5919, v2363) [-9223372036854775808, 9223372036854775807] int64
v7846 <- LoadField(v6673 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7846 T{*?}, v2363 T{int}, v4010, NoStoreBarrier)
v2365 <- BinaryInt64Op(+ [tr], v2357 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B437
B436
ParallelMove r5 <- C, r10 <- C, r9 <- C goto:34 B443
B443
  Loop 45
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2386, v6574 T{_Smi}) T{bool} goto (441, 442)
B441
  Loop 45
v6679 <- LoadIndexed:26([_OneByteString] v34 T{_OneByteString}, v2386 T{int}) [0, 255] int64
v2392 <- BinaryInt64Op(^ [tr], v6679, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6673) T{*?}
v5923 <- UnboxInt64([non-speculative], v4746 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r11
GenericCheckBound(v5923, v2392) [-9223372036854775808, 9223372036854775807] int64
v7847 <- LoadField(v6673 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7847 T{*?}, v2392 T{int}, v4009, NoStoreBarrier)
v2394 <- BinaryInt64Op(+ [tr], v2386 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B443
B442
ParallelMove r11 <- fp[-2], r12 <- fp[-4]
v5925 <- UnboxInt64([non-speculative], v4026 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- C
GenericCheckBound:12(v5925 T{_Smi}, v6680 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v6681 <- LoadIndexed:12([_List] v197 T{_List}, v6680 T{_Smi}) T{Uint8List}
ParallelMove fp[-6] <- r13
v7769 <- LoadClassId(<non-smi> v6681 T{Uint8List}) int64
ParallelMove r0 <- r0, r1 <- r13, r2 <- C, r3 <- C, r5 <- C
DispatchTableCall( cid=v7769 List.fillRange<0>, v6681 T{Uint8List}, v6573 T{_Smi}, v6576 T{_Smi}, v92 T{_Smi})
ParallelMove r5 <- C, r4 <- C, r3 <- C, r2 <- fp[-6] goto:34 B452
B452
  Loop 44
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2435, v6574 T{_Smi}) T{bool} goto (450, 451)
B450
  Loop 44
v6682 <- LoadIndexed:26([_OneByteString] v125 T{_OneByteString}, v2435 T{int}) [0, 255] int64
v2441 <- BinaryInt64Op(^ [tr], v6682, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6681) T{*?}
v4770 <- LoadField(v6681 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5929 <- UnboxInt64([non-speculative], v4770) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r6
GenericCheckBound(v5929, v2441) [-9223372036854775808, 9223372036854775807] int64
v7848 <- LoadField(v6681 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7848 T{*?}, v2441 T{int}, v6642 T{_Smi}, NoStoreBarrier)
v2443 <- BinaryInt64Op(+ [tr], v2435 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B452
B451
ParallelMove r4 <- fp[-2], r6 <- fp[-4]
v5931 <- UnboxInt64([non-speculative], v4026 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- C
GenericCheckBound:12(v5931 T{_Smi}, v6606 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v6683 <- LoadIndexed:12([_List] v197 T{_List}, v6606 T{_Smi}) T{Uint8List}
ParallelMove fp[-6] <- r7
v7770 <- LoadClassId(<non-smi> v6683 T{Uint8List}) int64
ParallelMove r0 <- r0, r1 <- r7, r2 <- C, r3 <- C, r5 <- C
DispatchTableCall( cid=v7770 List.fillRange<0>, v6683 T{Uint8List}, v6573 T{_Smi}, v6576 T{_Smi}, v4269 T{_Smi})
ParallelMove r3 <- C, r4 <- C, r6 <- C, r2 <- fp[-6] goto:34 B461
B461
  Loop 43
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2485, v6577 T{_Smi}) T{bool} goto (459, 460)
B459
  Loop 43
v6684 <- LoadIndexed:26([_OneByteString] v19 T{_OneByteString}, v2485 T{int}) [0, 255] int64
v2491 <- BinaryInt64Op(^ [tr], v6684, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6683) T{*?}
v4774 <- LoadField(v6683 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5935 <- UnboxInt64([non-speculative], v4774) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5935, v2491) [-9223372036854775808, 9223372036854775807] int64
v7849 <- LoadField(v6683 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7849 T{*?}, v2491 T{int}, v6631, NoStoreBarrier)
v2493 <- BinaryInt64Op(+ [tr], v2485 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B461
B460
ParallelMove r5 <- C, r7 <- C, r3 <- C goto:34 B467
B467
  Loop 42
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2515, v6574 T{_Smi}) T{bool} goto (465, 466)
B465
  Loop 42
v6685 <- LoadIndexed:26([_OneByteString] v20 T{_OneByteString}, v2515 T{int}) [0, 255] int64
v2521 <- BinaryInt64Op(^ [tr], v6685, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6683) T{*?}
v4778 <- LoadField(v6683 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5939 <- UnboxInt64([non-speculative], v4778) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r8
GenericCheckBound(v5939, v2521) [-9223372036854775808, 9223372036854775807] int64
v7850 <- LoadField(v6683 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7850 T{*?}, v2521 T{int}, v6686, NoStoreBarrier)
v2523 <- BinaryInt64Op(+ [tr], v2515 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B467
B466
ParallelMove r5 <- C, r9 <- C, r8 <- C goto:34 B473
B473
  Loop 41
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2544, v6596 T{_Smi}) T{bool} goto (471, 472)
B471
  Loop 41
v6687 <- LoadIndexed:26([_OneByteString] v42 T{_OneByteString}, v2544 T{int}) [0, 255] int64
v2550 <- BinaryInt64Op(^ [tr], v6687, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6683) T{*?}
v4782 <- LoadField(v6683 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5943 <- UnboxInt64([non-speculative], v4782) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r10
GenericCheckBound(v5943, v2550) [-9223372036854775808, 9223372036854775807] int64
v7851 <- LoadField(v6683 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7851 T{*?}, v2550 T{int}, v4011, NoStoreBarrier)
v2552 <- BinaryInt64Op(+ [tr], v2544 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B473
B472
ParallelMove r5 <- C, r11 <- C, r10 <- C goto:34 B479
B479
  Loop 40
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2574, v6574 T{_Smi}) T{bool} goto (477, 478)
B477
  Loop 40
v6688 <- LoadIndexed:26([_OneByteString] v30 T{_OneByteString}, v2574 T{int}) [0, 255] int64
v2580 <- BinaryInt64Op(^ [tr], v6688, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6683) T{*?}
v4786 <- LoadField(v6683 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5947 <- UnboxInt64([non-speculative], v4786) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r12
GenericCheckBound(v5947, v2580) [-9223372036854775808, 9223372036854775807] int64
v7852 <- LoadField(v6683 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7852 T{*?}, v2580 T{int}, v4010, NoStoreBarrier)
v2582 <- BinaryInt64Op(+ [tr], v2574 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B479
B478
ParallelMove r5 <- C, r13 <- C, r12 <- C goto:34 B485
B485
  Loop 39
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2603, v6574 T{_Smi}) T{bool} goto (483, 484)
B483
  Loop 39
v6689 <- LoadIndexed:26([_OneByteString] v34 T{_OneByteString}, v2603 T{int}) [0, 255] int64
v2609 <- BinaryInt64Op(^ [tr], v6689, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6683) T{*?}
v4790 <- LoadField(v6683 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5951 <- UnboxInt64([non-speculative], v4790) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r14
GenericCheckBound(v5951, v2609) [-9223372036854775808, 9223372036854775807] int64
v7853 <- LoadField(v6683 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7853 T{*?}, v2609 T{int}, v4009, NoStoreBarrier)
v2611 <- BinaryInt64Op(+ [tr], v2603 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B485
B484
ParallelMove r14 <- fp[-2], r19 <- fp[-4]
v5953 <- UnboxInt64([non-speculative], v4026 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:12(v5953 T{_Smi}, v6686 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v6690 <- LoadIndexed:12([_List] v197 T{_List}, v6686 T{_Smi}) T{Uint8List}
ParallelMove fp[-6] <- r20
v7771 <- LoadClassId(<non-smi> v6690 T{Uint8List}) int64
ParallelMove r0 <- r0, r1 <- r20, r2 <- C, r3 <- C, r5 <- C
DispatchTableCall( cid=v7771 List.fillRange<0>, v6690 T{Uint8List}, v6573 T{_Smi}, v6576 T{_Smi}, v4269 T{_Smi})
ParallelMove r3 <- C, r4 <- C, r6 <- C, r2 <- fp[-6] goto:34 B494
B494
  Loop 38
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2653, v6577 T{_Smi}) T{bool} goto (492, 493)
B492
  Loop 38
v6691 <- LoadIndexed:26([_OneByteString] v19 T{_OneByteString}, v2653 T{int}) [0, 255] int64
v2659 <- BinaryInt64Op(^ [tr], v6691, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6690) T{*?}
v4794 <- LoadField(v6690 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5957 <- UnboxInt64([non-speculative], v4794) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5957, v2659) [-9223372036854775808, 9223372036854775807] int64
v7854 <- LoadField(v6690 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7854 T{*?}, v2659 T{int}, v6631, NoStoreBarrier)
v2661 <- BinaryInt64Op(+ [tr], v2653 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B494
B493
ParallelMove r5 <- C, r7 <- C, r3 <- C goto:34 B500
B500
  Loop 37
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2683, v6574 T{_Smi}) T{bool} goto (498, 499)
B498
  Loop 37
v6692 <- LoadIndexed:26([_OneByteString] v20 T{_OneByteString}, v2683 T{int}) [0, 255] int64
v2689 <- BinaryInt64Op(^ [tr], v6692, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6690) T{*?}
v4798 <- LoadField(v6690 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5961 <- UnboxInt64([non-speculative], v4798) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r8
GenericCheckBound(v5961, v2689) [-9223372036854775808, 9223372036854775807] int64
v7855 <- LoadField(v6690 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7855 T{*?}, v2689 T{int}, v6693, NoStoreBarrier)
v2691 <- BinaryInt64Op(+ [tr], v2683 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B500
B499
ParallelMove r5 <- C, r9 <- C, r8 <- C goto:34 B506
B506
  Loop 36
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2712, v6596 T{_Smi}) T{bool} goto (504, 505)
B504
  Loop 36
v6694 <- LoadIndexed:26([_OneByteString] v42 T{_OneByteString}, v2712 T{int}) [0, 255] int64
v2718 <- BinaryInt64Op(^ [tr], v6694, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6690) T{*?}
v4802 <- LoadField(v6690 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5965 <- UnboxInt64([non-speculative], v4802) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r10
GenericCheckBound(v5965, v2718) [-9223372036854775808, 9223372036854775807] int64
v7856 <- LoadField(v6690 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7856 T{*?}, v2718 T{int}, v4011, NoStoreBarrier)
v2720 <- BinaryInt64Op(+ [tr], v2712 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B506
B505
ParallelMove r5 <- C, r11 <- C, r10 <- C goto:34 B512
B512
  Loop 35
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2742, v6574 T{_Smi}) T{bool} goto (510, 511)
B510
  Loop 35
v6695 <- LoadIndexed:26([_OneByteString] v30 T{_OneByteString}, v2742 T{int}) [0, 255] int64
v2748 <- BinaryInt64Op(^ [tr], v6695, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6690) T{*?}
v4806 <- LoadField(v6690 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5969 <- UnboxInt64([non-speculative], v4806) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r12
GenericCheckBound(v5969, v2748) [-9223372036854775808, 9223372036854775807] int64
v7857 <- LoadField(v6690 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7857 T{*?}, v2748 T{int}, v4010, NoStoreBarrier)
v2750 <- BinaryInt64Op(+ [tr], v2742 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B512
B511
ParallelMove r5 <- C, r13 <- C, r12 <- C goto:34 B518
B518
  Loop 34
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2771, v6574 T{_Smi}) T{bool} goto (516, 517)
B516
  Loop 34
v6696 <- LoadIndexed:26([_OneByteString] v34 T{_OneByteString}, v2771 T{int}) [0, 255] int64
v2777 <- BinaryInt64Op(^ [tr], v6696, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6690) T{*?}
v4810 <- LoadField(v6690 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5973 <- UnboxInt64([non-speculative], v4810) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r14
GenericCheckBound(v5973, v2777) [-9223372036854775808, 9223372036854775807] int64
v7858 <- LoadField(v6690 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7858 T{*?}, v2777 T{int}, v4009, NoStoreBarrier)
v2779 <- BinaryInt64Op(+ [tr], v2771 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B518
B517
ParallelMove r14 <- fp[-2], r19 <- fp[-4]
v5975 <- UnboxInt64([non-speculative], v4026 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:12(v5975 T{_Smi}, v6693 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v6697 <- LoadIndexed:12([_List] v197 T{_List}, v6693 T{_Smi}) T{Uint8List}
ParallelMove fp[-6] <- r20
v7772 <- LoadClassId(<non-smi> v6697 T{Uint8List}) int64
ParallelMove r0 <- r0, r1 <- r20, r2 <- C, r3 <- C, r5 <- C
DispatchTableCall( cid=v7772 List.fillRange<0>, v6697 T{Uint8List}, v6573 T{_Smi}, v6576 T{_Smi}, v4269 T{_Smi})
ParallelMove r3 <- C, r4 <- C, r6 <- C, r2 <- fp[-6] goto:34 B527
B527
  Loop 33
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2821, v6577 T{_Smi}) T{bool} goto (525, 526)
B525
  Loop 33
v6698 <- LoadIndexed:26([_OneByteString] v19 T{_OneByteString}, v2821 T{int}) [0, 255] int64
v2827 <- BinaryInt64Op(^ [tr], v6698, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6697) T{*?}
v4814 <- LoadField(v6697 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5979 <- UnboxInt64([non-speculative], v4814) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5979, v2827) [-9223372036854775808, 9223372036854775807] int64
v7859 <- LoadField(v6697 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7859 T{*?}, v2827 T{int}, v6631, NoStoreBarrier)
v2829 <- BinaryInt64Op(+ [tr], v2821 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B527
B526
ParallelMove r5 <- C, r7 <- C, r3 <- C goto:34 B533
B533
  Loop 32
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2851, v6574 T{_Smi}) T{bool} goto (531, 532)
B531
  Loop 32
v6699 <- LoadIndexed:26([_OneByteString] v26 T{_OneByteString}, v2851 T{int}) [0, 255] int64
v2857 <- BinaryInt64Op(^ [tr], v6699, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6697) T{*?}
v4818 <- LoadField(v6697 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5983 <- UnboxInt64([non-speculative], v4818) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r8
GenericCheckBound(v5983, v2857) [-9223372036854775808, 9223372036854775807] int64
v7860 <- LoadField(v6697 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7860 T{*?}, v2857 T{int}, v6606 T{_Smi}, NoStoreBarrier)
v2859 <- BinaryInt64Op(+ [tr], v2851 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B533
B532
ParallelMove r5 <- C, r8 <- C, r3 <- C goto:34 B539
B539
  Loop 31
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2880, v6574 T{_Smi}) T{bool} goto (537, 538)
B537
  Loop 31
v6700 <- LoadIndexed:26([_OneByteString] v28 T{_OneByteString}, v2880 T{int}) [0, 255] int64
v2886 <- BinaryInt64Op(^ [tr], v6700, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6697) T{*?}
v4822 <- LoadField(v6697 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5987 <- UnboxInt64([non-speculative], v4822) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r9
GenericCheckBound(v5987, v2886) [-9223372036854775808, 9223372036854775807] int64
v7861 <- LoadField(v6697 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7861 T{*?}, v2886 T{int}, v4012, NoStoreBarrier)
v2888 <- BinaryInt64Op(+ [tr], v2880 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B539
B538
ParallelMove r3 <- C, r10 <- C, r9 <- C goto:34 B545
B545
  Loop 30
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2909, v6574 T{_Smi}) T{bool} goto (543, 544)
B543
  Loop 30
v6701 <- LoadIndexed:26([_OneByteString] v30 T{_OneByteString}, v2909 T{int}) [0, 255] int64
v2915 <- BinaryInt64Op(^ [tr], v6701, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6697) T{*?}
v4826 <- LoadField(v6697 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5991 <- UnboxInt64([non-speculative], v4826) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5991, v2915) [-9223372036854775808, 9223372036854775807] int64
v7862 <- LoadField(v6697 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7862 T{*?}, v2915 T{int}, v4010, NoStoreBarrier)
v2917 <- BinaryInt64Op(+ [tr], v2909 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B545
B544
ParallelMove r3 <- C, r12 <- C, r11 <- C goto:34 B551
B551
  Loop 29
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2938, v6574 T{_Smi}) T{bool} goto (549, 550)
B549
  Loop 29
v6702 <- LoadIndexed:26([_OneByteString] v34 T{_OneByteString}, v2938 T{int}) [0, 255] int64
v2944 <- BinaryInt64Op(^ [tr], v6702, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6697) T{*?}
v4830 <- LoadField(v6697 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v5995 <- UnboxInt64([non-speculative], v4830) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v5995, v2944) [-9223372036854775808, 9223372036854775807] int64
v7863 <- LoadField(v6697 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7863 T{*?}, v2944 T{int}, v4009, NoStoreBarrier)
v2946 <- BinaryInt64Op(+ [tr], v2938 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B551
B550
ParallelMove r13 <- fp[-2], r14 <- fp[-4]
v5997 <- UnboxInt64([non-speculative], v4026 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- C
GenericCheckBound:12(v5997 T{_Smi}, v6615 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v6703 <- LoadIndexed:12([_List] v197 T{_List}, v6615 T{_Smi}) T{Uint8List}
ParallelMove fp[-6] <- r19
v7773 <- LoadClassId(<non-smi> v6703 T{Uint8List}) int64
ParallelMove r0 <- r0, r1 <- r19, r2 <- C, r3 <- C, r5 <- C
DispatchTableCall( cid=v7773 List.fillRange<0>, v6703 T{Uint8List}, v6573 T{_Smi}, v6576 T{_Smi}, v4269 T{_Smi})
ParallelMove r3 <- C, r4 <- C, r6 <- C, r2 <- fp[-6] goto:34 B560
B560
  Loop 28
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v2988, v6577 T{_Smi}) T{bool} goto (558, 559)
B558
  Loop 28
v6704 <- LoadIndexed:26([_OneByteString] v19 T{_OneByteString}, v2988 T{int}) [0, 255] int64
v2994 <- BinaryInt64Op(^ [tr], v6704, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6703) T{*?}
v4834 <- LoadField(v6703 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6001 <- UnboxInt64([non-speculative], v4834) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v6001, v2994) [-9223372036854775808, 9223372036854775807] int64
v7864 <- LoadField(v6703 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7864 T{*?}, v2994 T{int}, v6631, NoStoreBarrier)
v2996 <- BinaryInt64Op(+ [tr], v2988 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B560
B559
ParallelMove r5 <- C, r7 <- C, r3 <- C goto:34 B566
B566
  Loop 27
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v3018, v6574 T{_Smi}) T{bool} goto (564, 565)
B564
  Loop 27
v6705 <- LoadIndexed:26([_OneByteString] v20 T{_OneByteString}, v3018 T{int}) [0, 255] int64
v3024 <- BinaryInt64Op(^ [tr], v6705, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6703) T{*?}
v4838 <- LoadField(v6703 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6005 <- UnboxInt64([non-speculative], v4838) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r8
GenericCheckBound(v6005, v3024) [-9223372036854775808, 9223372036854775807] int64
v7865 <- LoadField(v6703 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7865 T{*?}, v3024 T{int}, v6636, NoStoreBarrier)
v3026 <- BinaryInt64Op(+ [tr], v3018 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B566
B565
ParallelMove r5 <- C, r8 <- C, r9 <- C goto:34 B572
B572
  Loop 26
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v3047, v6574 T{_Smi}) T{bool} goto (570, 571)
B570
  Loop 26
v6706 <- LoadIndexed:26([_OneByteString] v26 T{_OneByteString}, v3047 T{int}) [0, 255] int64
v3053 <- BinaryInt64Op(^ [tr], v6706, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6703) T{*?}
v4842 <- LoadField(v6703 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6009 <- UnboxInt64([non-speculative], v4842) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r10
GenericCheckBound(v6009, v3053) [-9223372036854775808, 9223372036854775807] int64
v7866 <- LoadField(v6703 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7866 T{*?}, v3053 T{int}, v6615 T{_Smi}, NoStoreBarrier)
v3055 <- BinaryInt64Op(+ [tr], v3047 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B572
B571
ParallelMove r5 <- C, r10 <- C, r11 <- C goto:34 B578
B578
  Loop 25
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v3076, v6574 T{_Smi}) T{bool} goto (576, 577)
B576
  Loop 25
v6707 <- LoadIndexed:26([_OneByteString] v28 T{_OneByteString}, v3076 T{int}) [0, 255] int64
v3082 <- BinaryInt64Op(^ [tr], v6707, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6703) T{*?}
v4846 <- LoadField(v6703 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6013 <- UnboxInt64([non-speculative], v4846) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r12
GenericCheckBound(v6013, v3082) [-9223372036854775808, 9223372036854775807] int64
v7867 <- LoadField(v6703 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7867 T{*?}, v3082 T{int}, v4011, NoStoreBarrier)
v3084 <- BinaryInt64Op(+ [tr], v3076 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B578
B577
ParallelMove r5 <- C, r13 <- C, r12 <- C goto:34 B584
B584
  Loop 24
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v3105, v6574 T{_Smi}) T{bool} goto (582, 583)
B582
  Loop 24
v6708 <- LoadIndexed:26([_OneByteString] v30 T{_OneByteString}, v3105 T{int}) [0, 255] int64
v3111 <- BinaryInt64Op(^ [tr], v6708, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6703) T{*?}
v4850 <- LoadField(v6703 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6017 <- UnboxInt64([non-speculative], v4850) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r14
GenericCheckBound(v6017, v3111) [-9223372036854775808, 9223372036854775807] int64
v7868 <- LoadField(v6703 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7868 T{*?}, v3111 T{int}, v4010, NoStoreBarrier)
v3113 <- BinaryInt64Op(+ [tr], v3105 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B584
B583
ParallelMove r5 <- C, r19 <- C, r14 <- C goto:34 B590
B590
  Loop 23
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v3134, v6574 T{_Smi}) T{bool} goto (588, 589)
B588
  Loop 23
v6709 <- LoadIndexed:26([_OneByteString] v34 T{_OneByteString}, v3134 T{int}) [0, 255] int64
v3140 <- BinaryInt64Op(^ [tr], v6709, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6703) T{*?}
v4854 <- LoadField(v6703 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6021 <- UnboxInt64([non-speculative], v4854) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r20
GenericCheckBound(v6021, v3140) [-9223372036854775808, 9223372036854775807] int64
v7869 <- LoadField(v6703 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7869 T{*?}, v3140 T{int}, v4009, NoStoreBarrier)
v3142 <- BinaryInt64Op(+ [tr], v3134 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B590
B589
ParallelMove r20 <- fp[-2], r23 <- fp[-4]
v6023 <- UnboxInt64([non-speculative], v4026 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:12(v6023 T{_Smi}, v6636 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v6710 <- LoadIndexed:12([_List] v197 T{_List}, v6636 T{_Smi}) T{Uint8List}
ParallelMove fp[-6] <- r24
v7774 <- LoadClassId(<non-smi> v6710 T{Uint8List}) int64
ParallelMove r0 <- r0, r1 <- r24, r2 <- C, r3 <- C, r5 <- C
DispatchTableCall( cid=v7774 List.fillRange<0>, v6710 T{Uint8List}, v6573 T{_Smi}, v6576 T{_Smi}, v4269 T{_Smi})
ParallelMove r3 <- C, r4 <- C, r6 <- C, r2 <- fp[-6] goto:34 B599
B599
  Loop 22
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v3184, v6577 T{_Smi}) T{bool} goto (597, 598)
B597
  Loop 22
v6711 <- LoadIndexed:26([_OneByteString] v19 T{_OneByteString}, v3184 T{int}) [0, 255] int64
v3190 <- BinaryInt64Op(^ [tr], v6711, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6710) T{*?}
v4858 <- LoadField(v6710 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6027 <- UnboxInt64([non-speculative], v4858) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v6027, v3190) [-9223372036854775808, 9223372036854775807] int64
v7870 <- LoadField(v6710 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7870 T{*?}, v3190 T{int}, v6631, NoStoreBarrier)
v3192 <- BinaryInt64Op(+ [tr], v3184 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B599
B598
ParallelMove r7 <- C, r3 <- C, r5 <- C goto:34 B605
B605
  Loop 21
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v3214, v6574 T{_Smi}) T{bool} goto (603, 604)
B603
  Loop 21
v6712 <- LoadIndexed:26([_OneByteString] v20 T{_OneByteString}, v3214 T{int}) [0, 255] int64
v3220 <- BinaryInt64Op(^ [tr], v6712, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6710) T{*?}
v4862 <- LoadField(v6710 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6031 <- UnboxInt64([non-speculative], v4862) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r8
GenericCheckBound(v6031, v3220) [-9223372036854775808, 9223372036854775807] int64
v7871 <- LoadField(v6710 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7871 T{*?}, v3220 T{int}, v6713, NoStoreBarrier)
v3222 <- BinaryInt64Op(+ [tr], v3214 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r7 <- r0 goto:36 B605
B604
ParallelMove r3 <- C, r8 <- C, r7 <- C goto:34 B611
B611
  Loop 20
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v3243, v6596 T{_Smi}) T{bool} goto (609, 610)
B609
  Loop 20
v6714 <- LoadIndexed:26([_OneByteString] v42 T{_OneByteString}, v3243 T{int}) [0, 255] int64
v3249 <- BinaryInt64Op(^ [tr], v6714, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6710) T{*?}
v4866 <- LoadField(v6710 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6035 <- UnboxInt64([non-speculative], v4866) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r9
GenericCheckBound(v6035, v3249) [-9223372036854775808, 9223372036854775807] int64
v7872 <- LoadField(v6710 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7872 T{*?}, v3249 T{int}, v4011, NoStoreBarrier)
v3251 <- BinaryInt64Op(+ [tr], v3243 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B611
B610
ParallelMove r3 <- C, r10 <- C, r9 <- C goto:34 B617
B617
  Loop 19
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v3273, v6574 T{_Smi}) T{bool} goto (615, 616)
B615
  Loop 19
v6715 <- LoadIndexed:26([_OneByteString] v30 T{_OneByteString}, v3273 T{int}) [0, 255] int64
v3279 <- BinaryInt64Op(^ [tr], v6715, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6710) T{*?}
v4870 <- LoadField(v6710 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6039 <- UnboxInt64([non-speculative], v4870) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r11
GenericCheckBound(v6039, v3279) [-9223372036854775808, 9223372036854775807] int64
v7873 <- LoadField(v6710 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7873 T{*?}, v3279 T{int}, v4010, NoStoreBarrier)
v3281 <- BinaryInt64Op(+ [tr], v3273 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B617
B616
ParallelMove r3 <- C, r12 <- C, r11 <- C goto:34 B623
B623
  Loop 18
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v3302, v6574 T{_Smi}) T{bool} goto (621, 622)
B621
  Loop 18
v6716 <- LoadIndexed:26([_OneByteString] v34 T{_OneByteString}, v3302 T{int}) [0, 255] int64
v3308 <- BinaryInt64Op(^ [tr], v6716, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6710) T{*?}
v4874 <- LoadField(v6710 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6043 <- UnboxInt64([non-speculative], v4874) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r13
GenericCheckBound(v6043, v3308) [-9223372036854775808, 9223372036854775807] int64
v7874 <- LoadField(v6710 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7874 T{*?}, v3308 T{int}, v4009, NoStoreBarrier)
v3310 <- BinaryInt64Op(+ [tr], v3302 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B623
B622
ParallelMove r13 <- fp[-2], r14 <- fp[-4]
v6045 <- UnboxInt64([non-speculative], v4026 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- r5
GenericCheckBound:12(v6045 T{_Smi}, v6713 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v6717 <- LoadIndexed:12([_List] v197 T{_List}, v6713 T{_Smi}) T{Uint8List}
ParallelMove fp[-6] <- r19
v7775 <- LoadClassId(<non-smi> v6717 T{Uint8List}) int64
ParallelMove r0 <- r0, r1 <- r19, r2 <- C, r3 <- C, r5 <- C
DispatchTableCall( cid=v7775 List.fillRange<0>, v6717 T{Uint8List}, v6573 T{_Smi}, v6576 T{_Smi}, v4269 T{_Smi})
ParallelMove r3 <- C, r4 <- C, r6 <- C, r2 <- fp[-6] goto:34 B632
B632
  Loop 17
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v3352, v6577 T{_Smi}) T{bool} goto (630, 631)
B630
  Loop 17
v6718 <- LoadIndexed:26([_OneByteString] v19 T{_OneByteString}, v3352 T{int}) [0, 255] int64
v3358 <- BinaryInt64Op(^ [tr], v6718, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6717) T{*?}
v4878 <- LoadField(v6717 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6049 <- UnboxInt64([non-speculative], v4878) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v6049, v3358) [-9223372036854775808, 9223372036854775807] int64
v7875 <- LoadField(v6717 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7875 T{*?}, v3358 T{int}, v6631, NoStoreBarrier)
v3360 <- BinaryInt64Op(+ [tr], v3352 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B632
B631
ParallelMove r5 <- C, r3 <- C, r7 <- C goto:34 B638
B638
  Loop 16
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v3382, v6596 T{_Smi}) T{bool} goto (636, 637)
B636
  Loop 16
v6719 <- LoadIndexed:26([_OneByteString] v42 T{_OneByteString}, v3382 T{int}) [0, 255] int64
v3388 <- BinaryInt64Op(^ [tr], v6719, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6717) T{*?}
v4882 <- LoadField(v6717 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6053 <- UnboxInt64([non-speculative], v4882) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r8
GenericCheckBound(v6053, v3388) [-9223372036854775808, 9223372036854775807] int64
v7876 <- LoadField(v6717 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7876 T{*?}, v3388 T{int}, v4011, NoStoreBarrier)
v3390 <- BinaryInt64Op(+ [tr], v3382 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B638
B637
ParallelMove r3 <- C, r9 <- C, r8 <- C goto:34 B644
B644
  Loop 15
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v3412, v6574 T{_Smi}) T{bool} goto (642, 643)
B642
  Loop 15
v6720 <- LoadIndexed:26([_OneByteString] v30 T{_OneByteString}, v3412 T{int}) [0, 255] int64
v3418 <- BinaryInt64Op(^ [tr], v6720, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6717) T{*?}
v4886 <- LoadField(v6717 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6057 <- UnboxInt64([non-speculative], v4886) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v6057, v3418) [-9223372036854775808, 9223372036854775807] int64
v7877 <- LoadField(v6717 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7877 T{*?}, v3418 T{int}, v4010, NoStoreBarrier)
v3420 <- BinaryInt64Op(+ [tr], v3412 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B644
B643
ParallelMove r3 <- C, r11 <- C, r10 <- C goto:34 B650
B650
  Loop 14
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v3441, v6574 T{_Smi}) T{bool} goto (648, 649)
B648
  Loop 14
v6721 <- LoadIndexed:26([_OneByteString] v34 T{_OneByteString}, v3441 T{int}) [0, 255] int64
v3447 <- BinaryInt64Op(^ [tr], v6721, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6717) T{*?}
v4890 <- LoadField(v6717 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6061 <- UnboxInt64([non-speculative], v4890) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v6061, v3447) [-9223372036854775808, 9223372036854775807] int64
v7878 <- LoadField(v6717 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7878 T{*?}, v3447 T{int}, v4009, NoStoreBarrier)
v3449 <- BinaryInt64Op(+ [tr], v3441 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r0 goto:36 B650
B649
ParallelMove r12 <- fp[-2], r13 <- fp[-4]
v6063 <- UnboxInt64([non-speculative], v4026 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- r6
GenericCheckBound:12(v6063 T{_Smi}, v6631 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v6722 <- LoadIndexed:12([_List] v197 T{_List}, v6631 T{_Smi}) T{Uint8List}
ParallelMove fp[-6] <- r14
v7776 <- LoadClassId(<non-smi> v6722 T{Uint8List}) int64
ParallelMove r0 <- r0, r1 <- r14, r2 <- C, r3 <- C, r5 <- C
DispatchTableCall( cid=v7776 List.fillRange<0>, v6722 T{Uint8List}, v6573 T{_Smi}, v6576 T{_Smi}, v4269 T{_Smi})
ParallelMove r5 <- C, r4 <- C, r2 <- C, r3 <- fp[-6] goto:34 B659
B659
  Loop 13
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v3491, v6577 T{_Smi}) T{bool} goto (657, 658)
B657
  Loop 13
v6723 <- LoadIndexed:26([_OneByteString] v19 T{_OneByteString}, v3491 T{int}) [0, 255] int64
v3497 <- BinaryInt64Op(^ [tr], v6723, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6722) T{*?}
v4894 <- LoadField(v6722 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6067 <- UnboxInt64([non-speculative], v4894) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r6
GenericCheckBound(v6067, v3497) [-9223372036854775808, 9223372036854775807] int64
v7879 <- LoadField(v6722 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7879 T{*?}, v3497 T{int}, v6631 T{_Smi}, NoStoreBarrier)
v3499 <- BinaryInt64Op(+ [tr], v3491 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B659
B658
ParallelMove r6 <- C, r2 <- C, r5 <- C goto:34 B665
B665
  Loop 12
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v3521, v6574 T{_Smi}) T{bool} goto (663, 664)
B663
  Loop 12
v6724 <- LoadIndexed:26([_OneByteString] v26 T{_OneByteString}, v3521 T{int}) [0, 255] int64
v3527 <- BinaryInt64Op(^ [tr], v6724, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6722) T{*?}
v4898 <- LoadField(v6722 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6071 <- UnboxInt64([non-speculative], v4898) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r7
GenericCheckBound(v6071, v3527) [-9223372036854775808, 9223372036854775807] int64
v7880 <- LoadField(v6722 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7880 T{*?}, v3527 T{int}, v6615 T{_Smi}, NoStoreBarrier)
v3529 <- BinaryInt64Op(+ [tr], v3521 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r0 goto:36 B665
B664
ParallelMove r6 <- C, r5 <- C, r2 <- C goto:34 B671
B671
  Loop 11
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v3550, v6574 T{_Smi}) T{bool} goto (669, 670)
B669
  Loop 11
v6725 <- LoadIndexed:26([_OneByteString] v28 T{_OneByteString}, v3550 T{int}) [0, 255] int64
v3556 <- BinaryInt64Op(^ [tr], v6725, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6722) T{*?}
v4902 <- LoadField(v6722 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6075 <- UnboxInt64([non-speculative], v4902) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r7
GenericCheckBound(v6075, v3556) [-9223372036854775808, 9223372036854775807] int64
v7881 <- LoadField(v6722 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7881 T{*?}, v3556 T{int}, v4011, NoStoreBarrier)
v3558 <- BinaryInt64Op(+ [tr], v3550 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r0 goto:36 B671
B670
ParallelMove r5 <- C, r6 <- C, r2 <- C goto:34 B677
B677
  Loop 10
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v3579, v6574 T{_Smi}) T{bool} goto (675, 676)
B675
  Loop 10
v6726 <- LoadIndexed:26([_OneByteString] v30 T{_OneByteString}, v3579 T{int}) [0, 255] int64
v3585 <- BinaryInt64Op(^ [tr], v6726, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6722) T{*?}
v4906 <- LoadField(v6722 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6079 <- UnboxInt64([non-speculative], v4906) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r7
GenericCheckBound(v6079, v3585) [-9223372036854775808, 9223372036854775807] int64
v7882 <- LoadField(v6722 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7882 T{*?}, v3585 T{int}, v4010, NoStoreBarrier)
v3587 <- BinaryInt64Op(+ [tr], v3579 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B677
B676
ParallelMove r2 <- C, r8 <- C, r7 <- C goto:34 B683
B683
  Loop 9
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v3608, v6574 T{_Smi}) T{bool} goto (681, 682)
B681
  Loop 9
v6727 <- LoadIndexed:26([_OneByteString] v34 T{_OneByteString}, v3608 T{int}) [0, 255] int64
v3614 <- BinaryInt64Op(^ [tr], v6727, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6722) T{*?}
v4910 <- LoadField(v6722 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6083 <- UnboxInt64([non-speculative], v4910) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound(v6083, v3614) [-9223372036854775808, 9223372036854775807] int64
v7883 <- LoadField(v6722 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7883 T{*?}, v3614 T{int}, v4009, NoStoreBarrier)
v3616 <- BinaryInt64Op(+ [tr], v3608 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r0 goto:36 B683
B682
ParallelMove r9 <- fp[-2], r10 <- fp[-4]
v6085 <- UnboxInt64([non-speculative], v4026 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- C
GenericCheckBound:12(v6085 T{_Smi}, v6728 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v6729 <- LoadIndexed:12([_List] v197 T{_List}, v6728 T{_Smi}) T{Uint8List}
ParallelMove fp[-6] <- r11
v7777 <- LoadClassId(<non-smi> v6729 T{Uint8List}) int64
ParallelMove r0 <- r0, r1 <- r11, r2 <- C, r3 <- C, r5 <- C
DispatchTableCall( cid=v7777 List.fillRange<0>, v6729 T{Uint8List}, v6573 T{_Smi}, v6576 T{_Smi}, v4272 T{_Smi})
ParallelMove r5 <- C, r4 <- C, r3 <- C, r2 <- fp[-6] goto:34 B692
B692
  Loop 8
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v3658, v6577 T{_Smi}) T{bool} goto (690, 691)
B690
  Loop 8
v6730 <- LoadIndexed:26([_OneByteString] v19 T{_OneByteString}, v3658 T{int}) [0, 255] int64
v3664 <- BinaryInt64Op(^ [tr], v6730, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6729) T{*?}
v4914 <- LoadField(v6729 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6089 <- UnboxInt64([non-speculative], v4914) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r6
GenericCheckBound(v6089, v3664) [-9223372036854775808, 9223372036854775807] int64
v7884 <- LoadField(v6729 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7884 T{*?}, v3664 T{int}, v6728 T{_Smi}, NoStoreBarrier)
v3666 <- BinaryInt64Op(+ [tr], v3658 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B692
B691
ParallelMove r5 <- C, r6 <- C goto:34 B698
B698
  Loop 7
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v3688, v6574 T{_Smi}) T{bool} goto (696, 697)
B696
  Loop 7
v6731 <- LoadIndexed:26([_OneByteString] v30 T{_OneByteString}, v3688 T{int}) [0, 255] int64
v3694 <- BinaryInt64Op(^ [tr], v6731, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6729) T{*?}
v4918 <- LoadField(v6729 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6093 <- UnboxInt64([non-speculative], v4918) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r7
GenericCheckBound(v6093, v3694) [-9223372036854775808, 9223372036854775807] int64
v7885 <- LoadField(v6729 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7885 T{*?}, v3694 T{int}, v6728 T{_Smi}, NoStoreBarrier)
v3696 <- BinaryInt64Op(+ [tr], v3688 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B698
B697
ParallelMove r7 <- C, r5 <- C, r3 <- C goto:34 B704
B704
  Loop 6
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v3717, v6574 T{_Smi}) T{bool} goto (702, 703)
B702
  Loop 6
v6732 <- LoadIndexed:26([_OneByteString] v34 T{_OneByteString}, v3717 T{int}) [0, 255] int64
v3723 <- BinaryInt64Op(^ [tr], v6732, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6729) T{*?}
v4922 <- LoadField(v6729 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6097 <- UnboxInt64([non-speculative], v4922) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r8
GenericCheckBound(v6097, v3723) [-9223372036854775808, 9223372036854775807] int64
v7886 <- LoadField(v6729 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7886 T{*?}, v3723 T{int}, v4009, NoStoreBarrier)
v3725 <- BinaryInt64Op(+ [tr], v3717 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r7 <- r0 goto:36 B704
B703
ParallelMove r7 <- fp[-2], r8 <- fp[-4]
v6099 <- UnboxInt64([non-speculative], v4026 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- C
GenericCheckBound:12(v6099 T{_Smi}, v6733 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v6734 <- LoadIndexed:12([_List] v197 T{_List}, v6733 T{_Smi}) T{Uint8List}
ParallelMove fp[-6] <- r9
v7778 <- LoadClassId(<non-smi> v6734 T{Uint8List}) int64
ParallelMove r0 <- r0, r1 <- r9, r2 <- C, r3 <- C, r5 <- C
DispatchTableCall( cid=v7778 List.fillRange<0>, v6734 T{Uint8List}, v6573 T{_Smi}, v6576 T{_Smi}, v4273 T{_Smi})
ParallelMove r5 <- C, r2 <- C, r4 <- C, r3 <- fp[-6] goto:34 B713
B713
  Loop 5
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v3767, v6577 T{_Smi}) T{bool} goto (711, 712)
B711
  Loop 5
v6735 <- LoadIndexed:26([_OneByteString] v19 T{_OneByteString}, v3767 T{int}) [0, 255] int64
v3773 <- BinaryInt64Op(^ [tr], v6735, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6734) T{*?}
v4926 <- LoadField(v6734 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6103 <- UnboxInt64([non-speculative], v4926) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r6
GenericCheckBound(v6103, v3773) [-9223372036854775808, 9223372036854775807] int64
v7887 <- LoadField(v6734 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7887 T{*?}, v3773 T{int}, v6733 T{_Smi}, NoStoreBarrier)
v3775 <- BinaryInt64Op(+ [tr], v3767 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B713
B712
ParallelMove r5 <- C, r2 <- C goto:34 B719
B719
  Loop 4
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v3797, v6574 T{_Smi}) T{bool} goto (717, 718)
B717
  Loop 4
v6736 <- LoadIndexed:26([_OneByteString] v30 T{_OneByteString}, v3797 T{int}) [0, 255] int64
v3803 <- BinaryInt64Op(^ [tr], v6736, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6734) T{*?}
v4930 <- LoadField(v6734 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6107 <- UnboxInt64([non-speculative], v4930) [0, 4611686018427387903] int64
ParallelMove r0 <- r1, r1 <- r6
GenericCheckBound(v6107, v3803) [-9223372036854775808, 9223372036854775807] int64
v7888 <- LoadField(v6734 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7888 T{*?}, v3803 T{int}, v6733 T{_Smi}, NoStoreBarrier)
v3805 <- BinaryInt64Op(+ [tr], v3797 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B719
B718
ParallelMove r4 <- fp[-2], r6 <- fp[-4]
v6109 <- UnboxInt64([non-speculative], v4026 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- C
GenericCheckBound:12(v6109 T{_Smi}, v6737 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v6738 <- LoadIndexed:12([_List] v197 T{_List}, v6737 T{_Smi}) T{Uint8List}
ParallelMove fp[-6] <- r7
v7779 <- LoadClassId(<non-smi> v6738 T{Uint8List}) int64
ParallelMove r0 <- r0, r1 <- r7, r2 <- C, r3 <- C, r5 <- C
DispatchTableCall( cid=v7779 List.fillRange<0>, v6738 T{Uint8List}, v6573 T{_Smi}, v6576 T{_Smi}, v4274 T{_Smi})
ParallelMove r2 <- fp[-6]
CheckWritable:34(v6738) T{*?}
v4934 <- LoadField:34(v6738 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6111 <- UnboxInt64:34([non-speculative], v4934) [0, 4611686018427387903] int64
ParallelMove r5 <- C, r4 <- C goto:34 B728
B728
  Loop 3
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<=, v3850, v6740 T{_Smi}) T{bool} goto (726, 727)
B726
  Loop 3
v3854 <- BinaryInt64Op(^ [tr], v3850, v6576 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r3, r1 <- r6
GenericCheckBound(v6111, v3854) [-9223372036854775808, 9223372036854775807] int64
v7889 <- LoadField(v6738 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7889 T{*?}, v3854 T{int}, v6741, NoStoreBarrier)
v3855 <- BinaryInt64Op(+ [tr], v3850, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:36 B728
B727
ParallelMove r2 <- fp[-2], r0 <- fp[-4]
v6113 <- UnboxInt64([non-speculative], v4026 T{_Smi}) [0, 576460752303423487] int64
ParallelMove r0 <- r1, r1 <- r4
GenericCheckBound:12(v6113 T{_Smi}, v6741 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v6742 <- LoadIndexed:12([_List] v197 T{_List}, v6741 T{_Smi}) T{Uint8List}
ParallelMove fp[-4] <- r6
v7780 <- LoadClassId(<non-smi> v6742 T{Uint8List}) int64
ParallelMove r0 <- r0, r1 <- r6, r2 <- C, r3 <- C, r5 <- C
DispatchTableCall( cid=v7780 List.fillRange<0>, v6742 T{Uint8List}, v6573 T{_Smi}, v6576 T{_Smi}, v4274 T{_Smi})
ParallelMove r2 <- fp[-4]
CheckWritable:34(v6742) T{*?}
v4938 <- LoadField:34(v6742 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v6115 <- UnboxInt64:34([non-speculative], v4938) [0, 4611686018427387903] int64
ParallelMove r6 <- C, r5 <- C goto:34 B738
B738
  Loop 2
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<=, v3911, v6740 T{_Smi}) T{bool} goto (736, 737)
B736
  Loop 2
v3915 <- BinaryInt64Op(^ [tr], v3911, v6576 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r4, r1 <- r7
GenericCheckBound(v6115, v3915) [-9223372036854775808, 9223372036854775807] int64
v7890 <- LoadField(v6742 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7890 T{*?}, v3915 T{int}, v6741 T{_Smi}, NoStoreBarrier)
v3916 <- BinaryInt64Op(+ [tr], v3911, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r0 goto:36 B738
B737
CheckWritable:34(v6742) T{*?}
v6117 <- UnboxInt64:34([non-speculative], v4938 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r6 <- C goto:34 B745
B745
  Loop 1
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<=, v3949, v6666 T{_Smi}) T{bool} goto (743, 744)
B743
  Loop 1
v3953 <- BinaryInt64Op(^ [tr], v3949, v6576 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r4, r1 <- r7
GenericCheckBound(v6117, v3953) [-9223372036854775808, 9223372036854775807] int64
v7891 <- LoadField(v6742 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7891 T{*?}, v3953 T{int}, v6741 T{_Smi}, NoStoreBarrier)
v3954 <- BinaryInt64Op(+ [tr], v3949, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r0 goto:36 B745
B744
ParallelMove r6 <- C, r4 <- C goto:34 B752
B752
  Loop 0
  Loop Header
CheckStackOverflow:38(stack=0, loop=1)
Branch if RelationalOp(<, v3984, v6584 T{_Smi}) T{bool} goto (750, 751)
B750
  Loop 0
v6743 <- LoadIndexed:26([_OneByteString] v176 T{_OneByteString}, v3984 T{int}) [0, 255] int64
v3990 <- BinaryInt64Op(^ [tr], v6743, v6576 T{_Smi}) [0, 255] int64
CheckWritable:30(v6742) T{*?}
v6121 <- UnboxInt64([non-speculative], v4938 T{_Smi}) [0, 4611686018427387903] int64
ParallelMove r0 <- r0, r1 <- r8
GenericCheckBound(v6121, v3990) [-9223372036854775808, 9223372036854775807] int64
v7892 <- LoadField(v6742 . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Uint8List] v7892 T{*?}, v3990 T{int}, v6741 T{_Smi}, NoStoreBarrier)
v3992 <- BinaryInt64Op(+ [tr], v3984 T{int}, v6574 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r6 <- r0 goto:36 B752
B751
ParallelMove r0 <- fp[-5]
DartReturn:480(v186)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
slow path check writable operation
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
slow path check writable operation
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
slow path check bound operation
slow path check writable operation
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
slow path check bound operation
slow path check writable operation
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
slow path check bound operation
slow path check writable operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check writable operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path check writable operation
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check writable operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadField(v2 . _uriCache@0150898) T{Uri??}
Branch if StrictCompare:12(===, v3, v0) goto (3, 4)
B3
ParallelMove r1 <- r0
v5 <- StaticCall:18( _computeUri@0150898<0> v2, using unchecked entrypoint, result_type = T{_DataUri}) T{_DataUri}
ParallelMove r0 <- r0, r1 <- r0, r2 <- fp[-1]
StoreField(v2 T{UriData} . _uriCache@0150898 = v5 T{_DataUri})
ParallelMove r0 <- r1 goto:26 B5
B4
ParallelMove r0 <- r1 goto:28 B5
B5
ParallelMove r0 <- r0
DartReturn:30(v4)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r3 <- r1, fp[-3] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v2 . _separatorIndices@0150898 {final}) T{_GrowableList}
v27 <- LoadField(v4 . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v76 <- UnboxInt64([non-speculative], v27) [0, 576460752303423487] int64
ParallelMove r0 <- r1, r1 <- C
GenericCheckBound:14(v76 T{_Smi}, v84 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v29 <- LoadField(v4 . GrowableObjectArray.data) T{_List}
v85 <- LoadIndexed:14([_List] v29, v84 T{_Smi}) [-9223372036854775808, 9223372036854775807] T{int}
v7 <- LoadField(v2 . _text@0150898 {final}) T{String}
ParallelMove fp[-2] <- r4
v79 <- UnboxInt64([non-speculative], v85 T{int}) [-9223372036854775808, 9223372036854775807] int64
v10 <- BinaryInt64Op(+ [tr], v79 T{int}, v86 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-1] <- r5
v80 <- BoxInt64(v10) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v88 <- LoadClassId(<non-smi> v7) int64
MoveArgument(sp[0] <- v80 T{int})
ParallelMove r0 <- r1, r1 <- r4, r2 <- C
v11 <- DispatchTableCall( cid=v88 String.indexOf<0>, v7, v8, v80 T{int}) int64
ParallelMove r4 <- r0, r0 <- fp[-2]
ParallelMove fp[-4] <- r4
v49 <- LoadField(v7 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if RelationalOp(>=, v11 T{int}, v84 T{_Smi}) T{bool} goto (3, 4)
B3
v24 <- BinaryInt64Op(+ [tr], v11 T{int}, v86 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v82 <- UnboxInt64([non-speculative], v49 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove r1 <- r0, r2 <- r2, r3 <- r3, r5 <- C
v26 <- StaticCall:40( _normalizeOrSubstring@0150898<0> v7 T{String}, v24, v82 T{_Smi}, v25, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r4 <- r0, r3 <- fp[-4] goto:46 B5
B4
v81 <- UnboxInt64([non-speculative], v49 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove r4 <- C, r3 <- r0 goto:48 B5
B5
ParallelMove r1 <- fp[-2], r2 <- fp[-1], r3 <- r3, r5 <- C, fp[-5] <- r4
v21 <- StaticCall:54( _normalizeOrSubstring@0150898<0> v7 T{String}, v10 T{int}, v17, v20, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-2] <- r0
v22 <- AllocateObject:56(cls=_DataUri, <not-aliased>) T{_DataUri}
ParallelMove r0 <- r0, r1 <- fp[-3]
StoreField(v22 T{_DataUri} . _data@0150898 = v2 T{UriData}, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v22 T{_DataUri} . _text@0150898 = v66 T{Sentinel~}, NoStoreBarrier)
StoreField(v22 T{_DataUri} . pathSegments = v66 T{Sentinel~}, NoStoreBarrier)
StoreField(v22 T{_DataUri} . hashCode = v66 T{Sentinel~}, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v22 T{_DataUri} . scheme = v43 T{_OneByteString}, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v22 T{_DataUri} . _userInfo@0150898 = v44 T{_OneByteString}, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreField(v22 T{_DataUri} . path = v21 T{String}, NoStoreBarrier)
ParallelMove r1 <- fp[-5]
StoreField(v22 T{_DataUri} . _query@0150898 = v16 T{String?}, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:60(v22)
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
ParallelMove r5 <- r1, r4 <- r2, fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v7 <- BinaryInt64Op(- [tr], v3, v435 T{_Smi}) [-4611686018427387905, 4611686018427387902] int64
v383 <- BoxInt64(v7) [-4611686018427387905, 4611686018427387902] T{int}
ParallelMove r1 <- C, r2 <- r0
v8 <- StaticCall:12( _GrowableList@0150898._literal1@0150898<0> v5, v383 T{int}, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r3 <- r0, r2 <- fp[-1]
ParallelMove fp[-9] <- r3
v238 <- LoadField:106(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
ParallelMove fp[-8] <- r4
v386 <- UnboxInt64:106([non-speculative], v238 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove fp[-7] <- r5
v226 <- LoadClassId:106(v2 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove r8 <- C, r0 <- C, r7 <- fp[-2] goto:106 B16
B16
  Loop 2
  Loop Header
ParallelMove fp[-12] <- r7
CheckStackOverflow:110(stack=0, loop=1)
Branch if RelationalOp(<, v12, v386 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 2
ParallelMove r0 <- r5, r1 <- r7
t0 <- GenericCheckBound:32(v386 T{_Smi}, v12 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:32(===, v226, v179 T{_Smi}) goto (140, 141)
B140
  Loop 2
v230 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v12 T{int}) [0, 255] int64
ParallelMove r0 <- r1 goto:32 B139
B141
  Loop 2
v228 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v12 T{int}) [0, 65535] int64
ParallelMove r0 <- r1 goto:32 B139
B139
  Loop 2
Branch if EqualityCompare(v229 T{_Smi} == v436 T{_Smi}) T{bool} goto (7, 5)
B5
  Loop 2
Branch if EqualityCompare(v229 T{_Smi} == v437 T{_Smi}) T{bool} goto (8, 10)
B10
  Loop 2
Branch if EqualityCompare(v229 T{_Smi} == v438 T{_Smi}) T{bool} goto (11, 15)
B11
  Loop 2
Branch if RelationalOp(<, v10, v439 T{_Smi}) T{bool} goto (12, 14)
B12
  Loop 2
ParallelMove r8 <- r7 goto:90 B13
B15
B13
  Loop 2
v83 <- BinaryInt64Op(+ [tr], v12 T{int}, v435 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v388 <- BoxInt64(v229 T{_Smi}) [0, 65535] T{_Smi}
ParallelMove r8 <- r8, r0 <- r9, r7 <- r1 goto:108 B16
B8
B7
B6
v389 <- BoxInt64(v229 T{_Smi}) [0, 65535] T{_Smi}
ParallelMove r0 <- r1 goto:64 B9
B4
B9
Branch if RelationalOp(<, v10, v439 T{_Smi}) T{bool} goto (17, 20)
B17
ParallelMove r1 <- fp[-2]
Branch if RelationalOp(>, v12, v3) T{bool} goto (18, 21)
B21
B20
B19
v171 <- LoadClassId:344(v2 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove fp[-6] <- r6
ParallelMove r7 <- r0, r0 <- r7 goto:344 B48
B48
  Loop 1
  Loop Header
ParallelMove fp[-4] <- r7, fp[-5] <- r0
CheckStackOverflow:342(stack=0, loop=1)
Branch if StrictCompare(!==, v19, v22) T{bool} goto (47, 49)
B47
  Loop 1
v265 <- LoadField(v8 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v270 <- LoadField(v8 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v271 <- LoadField(v270 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v393 <- UnboxInt64([non-speculative], v265 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-2] <- r8
v394 <- UnboxInt64([non-speculative], v271 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v393 T{_Smi} == v394 T{_Smi}) T{bool} goto (106, 107)
B106
  Loop 1
ParallelMove r1 <- r3
StaticCall:26( _growToNextCapacity@0150898<0> v8 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B108
B107
B108
  Loop 1
v196 <- BinaryInt64Op(+ [tr], v393 T{_Smi}, v435 T{_Smi}) [1, 576460752303423488] int64
ParallelMove fp[-11] <- r5
v395 <- BoxInt64(v196) [1, 576460752303423488] T{_Smi}
StoreField(v8 T{_GrowableList} . GrowableObjectArray.length = v395, NoStoreBarrier)
ParallelMove r0 <- r5, r1 <- r4
GenericCheckBound:40(v196 T{_Smi}, v393 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v199 <- LoadField(v8 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v390 <- BoxInt64(v20 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r6, r0 <- r0
StoreIndexed:40([_List] v199, v393 T{_Smi}, v390 T{int})
v45 <- BinaryInt64Op(+ [tr], v20, v435 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-4], r9 <- r0, r8 <- C, r3 <- fp[-1], r7 <- fp[-6], r4 <- fp[-7] goto:254 B36
B36
  Loop 0
  Loop 1
  Loop Header
ParallelMove fp[-2] <- r9, fp[-10] <- r8
CheckStackOverflow:258(stack=0, loop=2)
Branch if RelationalOp(<, v48, v386 T{_Smi}) T{bool} goto (22, 23)
B22
  Loop 0
  Loop 1
ParallelMove r0 <- r4, r1 <- r9
t0 <- GenericCheckBound:180(v386 T{_Smi}, v48 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:180(===, v171, v179 T{_Smi}) goto (100, 101)
B100
  Loop 0
  Loop 1
v175 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v48 T{int}) [0, 255] int64
ParallelMove r0 <- r1 goto:180 B99
B101
  Loop 0
  Loop 1
v173 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v48 T{int}) [0, 65535] int64
ParallelMove r0 <- r1 goto:180 B99
B99
  Loop 0
  Loop 1
Branch if EqualityCompare(v174 T{_Smi} == v440 T{_Smi}) T{bool} goto (24, 28)
B24
  Loop 0
  Loop 1
Branch if RelationalOp(<, v49, v439 T{_Smi}) T{bool} goto (25, 26)
B25
  Loop 0
  Loop 1
ParallelMove r1 <- r9 goto:206 B27
B26
  Loop 0
  Loop 1
ParallelMove r1 <- r8 goto:208 B27
B27
  Loop 0
  Loop 1
ParallelMove r8 <- r1 goto:248 B35
B28
  Loop 0
  Loop 1
Branch if EqualityCompare(v174 T{_Smi} == v437 T{_Smi}) T{bool} goto (31, 29)
B29
  Loop 0
  Loop 1
Branch if EqualityCompare(v174 T{_Smi} == v436 T{_Smi}) T{bool} goto (32, 34)
B34
B35
  Loop 0
  Loop 1
v71 <- BinaryInt64Op(+ [tr], v48 T{int}, v435 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v402 <- BoxInt64(v174 T{_Smi}) [0, 65535] T{_Smi}
ParallelMove r0 <- r10, r9 <- r1, r8 <- r8 goto:256 B36
B32
B31
B30
  Loop 1
v403 <- BoxInt64(v174 T{_Smi}) [0, 65535] T{_Smi}
ParallelMove r0 <- r1 goto:242 B33
B23
B33
  Loop 1
ParallelMove fp[-4] <- r0
Branch if RelationalOp(>=, v49, v439 T{_Smi}) T{bool} goto (37, 38)
B37
  Loop 1
v260 <- LoadField(v199 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v407 <- UnboxInt64([non-speculative], v260 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v196 T{_Smi} == v407 T{_Smi}) T{bool} goto (90, 91)
B90
  Loop 1
ParallelMove r1 <- r2
StaticCall:26( _growToNextCapacity@0150898<0> v8 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B92
B91
B92
  Loop 1
v155 <- BinaryInt64Op(+ [tr], v196 T{_Smi}, v435 T{_Smi}) [2, 576460752303423489] int64
v408 <- BoxInt64(v155) [2, 576460752303423489] T{_Smi}
StoreField(v8 T{_GrowableList} . GrowableObjectArray.length = v408, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:40(v155 T{_Smi}, v196 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v158 <- LoadField(v8 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v399 <- BoxInt64(v49 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r5, r0 <- r0
StoreIndexed:40([_List] v158, v196 T{_Smi}, v399 T{int})
ParallelMove r7 <- fp[-4], r0 <- fp[-2], r2 <- fp[-1], r3 <- r2, r6 <- fp[-6], r4 <- fp[-8], r5 <- fp[-7] goto:340 B48
B38
ParallelMove r1 <- r2
v54 <- StaticCall:276( get:last<0> v8, result_type = T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r0, r0 <- fp[-4]
Branch if StrictCompare(!==, v52, v22) T{bool} goto (42, 39)
B39
ParallelMove r3 <- fp[-2]
v412 <- UnboxInt64([non-speculative], v54) [-9223372036854775808, 9223372036854775807] int64
v57 <- BinaryInt64Op(+ [tr], v412 T{int}, v441 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v48 != v57) T{bool} goto (43, 40)
B40
v60 <- BinaryInt64Op(+ [tr], v412 T{int}, v435 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v413 <- BoxInt64(v60) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v413 T{int})
ParallelMove r1 <- fp[-1], r2 <- C
v61 <- StaticCall:300( startsWith<0> v2, v59, v413 T{int}, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:304(!==, v61 T{bool}, v15) goto (44, 45)
BoolTest
B45
ParallelMove r2 <- fp[-2] goto:334 B46
B49
ParallelMove r3 <- r0
ParallelMove r2 <- r3 goto:348 B46
B46
ParallelMove fp[-10] <- r2
v243 <- LoadField(v8 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v248 <- LoadField(v8 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v249 <- LoadField(v248 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v417 <- UnboxInt64([non-speculative], v243 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-5] <- r3
v418 <- UnboxInt64([non-speculative], v249 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v417 T{_Smi} == v418 T{_Smi}) T{bool} goto (67, 68)
B67
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v8 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B69
B68
B69
v123 <- BinaryInt64Op(+ [tr], v417 T{_Smi}, v435 T{_Smi}) [1, 576460752303423488] int64
v419 <- BoxInt64(v123) [1, 576460752303423488] T{_Smi}
StoreField(v8 T{_GrowableList} . GrowableObjectArray.length = v419, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r4
GenericCheckBound:40(v123 T{_Smi}, v417 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v126 <- LoadField(v8 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v414 <- BoxInt64(v25 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r6, r0 <- r0
StoreIndexed:40([_List] v126, v417 T{_Smi}, v414 T{int})
ParallelMove r1 <- r5
v29 <- StaticCall:354( get:isOdd<0> v419 T{_Smi}, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:358(===, v29 T{bool}, v15) goto (50, 51)
BoolTest
B50
ParallelMove r0 <- fp[-10]
v42 <- BinaryInt64Op(+ [tr], v25, v435 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- C, r2 <- fp[-1], r3 <- r3, r5 <- fp[-7]
v44 <- StaticCall:368( normalize<0> v41, v2, v42, v386 T{_Smi}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:400 B55
B51
ParallelMove r0 <- fp[-10]
v30 <- BinaryInt64Op(+ [tr], v25, v435 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-1], r2 <- r4, r3 <- fp[-7], r5 <- C, r6 <- C, fp[-5] <- r4
v33 <- StaticCall:376( _normalize@0150898<0> v2, v30, v386 T{_Smi}, v32, v15) T{String??}
ParallelMove r0 <- r0
Branch if StrictCompare:378(!==, v33, v0) goto (52, 53)
B52
ParallelMove r1 <- fp[-1], r2 <- fp[-5], r3 <- fp[-8], r5 <- r0
v37 <- StaticCall:388( replaceRange<0> v2, v30 T{int}, v238 T{_Smi}, v33 T{String?}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:394 B54
B53
ParallelMove r0 <- fp[-1] goto:396 B54
B54
ParallelMove r2 <- r0 goto:402 B55
B55
ParallelMove fp[-4] <- r2
v40 <- AllocateObject:404(cls=UriData, <not-aliased>) T{UriData}
ParallelMove r1 <- r0, r0 <- fp[-4]
StoreField(v40 T{UriData} . _text@0150898 = v38 T{String}, NoStoreBarrier)
ParallelMove r0 <- fp[-9]
StoreField(v40 T{UriData} . _separatorIndices@0150898 = v8 T{_GrowableList}, NoStoreBarrier)
ParallelMove r0 <- fp[-3]
StoreField(v40 T{UriData} . _uriCache@0150898 = v4 T{_Uri?}, NoStoreBarrier)
ParallelMove r0 <- r1
DartReturn:408(v40)
B14
ParallelMove r0 <- r2
v85 <- AllocateObject:94(cls=FormatException, <not-aliased>) T{FormatException}
ParallelMove r2 <- r0, r0 <- C
StoreField(v85 T{FormatException} . message = v76 T{_OneByteString}, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
StoreField(v85 T{FormatException} . source = v2 T{String}, NoStoreBarrier)
ParallelMove r3 <- fp[-12]
v384 <- BoxInt64(v12 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v85 T{FormatException} . offset = v384 T{int?}, NoStoreBarrier)
ParallelMove r0 <- r2
Throw:98(v85)
B18
ParallelMove r1 <- r2, r3 <- r7, r0 <- C
v75 <- AllocateObject:134(cls=FormatException, <not-aliased>) T{FormatException}
ParallelMove r2 <- r0, r0 <- C
StoreField(v75 T{FormatException} . message = v76 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
StoreField(v75 T{FormatException} . source = v2 T{String}, NoStoreBarrier)
ParallelMove r3 <- fp[-12]
v385 <- BoxInt64(v12 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v75 T{FormatException} . offset = v385 T{int?}, NoStoreBarrier)
ParallelMove r0 <- r2
Throw:138(v75)
B42
ParallelMove r0 <- fp[-1]
ParallelMove  goto:314 B41
B43
ParallelMove r0 <- fp[-1]
ParallelMove  goto:318 B41
B44
ParallelMove r0 <- fp[-1]
ParallelMove  goto:322 B41
B41
v62 <- AllocateObject:324(cls=FormatException, <not-aliased>) T{FormatException}
ParallelMove r2 <- r0, r0 <- C
StoreField(v62 T{FormatException} . message = v63 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
StoreField(v62 T{FormatException} . source = v2 T{String}, NoStoreBarrier)
ParallelMove r3 <- fp[-2]
v398 <- BoxInt64(v48 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v62 T{FormatException} . offset = v398 T{int?}, NoStoreBarrier)
ParallelMove r0 <- r2
Throw:328(v62)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r4 <- r2, r0 <- r3, fp[-2] <- r2, fp[-3] <- r3
CheckStackOverflow:8(stack=0, loop=0)
v293 <- LoadField(v3 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v593 <- BoxInt64(v5) [-4611686018427387904, 4611686018427387903] T{_Smi}
v594 <- UnboxInt64([non-speculative], v293 T{_Smi}) [0, 2305843009213693951] int64
ParallelMove r1 <- r0, r2 <- r2, r3 <- r5, fp[-1] <- r5
v7 <- StaticCall:12( checkValidRange<0> v4, v593 T{_Smi}, v594 T{_Smi}, result_type = T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
ParallelMove r0 <- r0
ParallelMove fp[-4] <- r0
v296 <- LoadStaticField:4(_inverseAlphabet@10003594, CallsInitializer) T{_Int8List}
ParallelMove r3 <- r0, r2 <- fp[-2]
ParallelMove fp[-14] <- r3
v280 <- LoadClassId:306(v3 T{_StringBase}) [93, 94] T{_Smi}
ParallelMove fp[-13] <- r4
v140 <- LoadField:306(v296 . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
v605 <- UnboxInt64:306([non-speculative], v140) [0, 4611686018427387903] int64
ParallelMove fp[-12] <- r5
ParallelMove r14 <- C, r13 <- fp[-3], r12 <- C, r11 <- C, r10 <- C, r9 <- fp[-3] goto:306 B45
B45
  Loop 1
  Loop Header
ParallelMove fp[-10] <- r13, fp[-11] <- r9, fp[-18] <- r14, fp[-19] <- r12, fp[-20] <- r11, fp[-21] <- r10
CheckStackOverflow:310(stack=0, loop=1)
Branch if RelationalOp(<, v20, v7) T{bool} goto (3, 4)
B3
  Loop 1
v63 <- BinaryInt64Op(+ [tr], v20, v623 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-1], r1 <- r9
t0 <- GenericCheckBound:34(v594 T{_Smi}, v20 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:34(===, v280, v288 T{_Smi}) goto (137, 138)
B137
  Loop 1
v284 <- LoadIndexed([_OneByteString] v3 T{_OneByteString}, v20 T{int}) [0, 255] int64
ParallelMove r20 <- r0 goto:34 B136
B138
  Loop 1
v282 <- LoadIndexed([_TwoByteString] v3 T{_StringBase}, v20 T{int}) [0, 65535] int64
ParallelMove r20 <- r0 goto:34 B136
B136
  Loop 1
Branch if EqualityCompare(v283 T{_Smi} == v624 T{_Smi}) T{bool} goto (5, 12)
B5
  Loop 1
v130 <- BinaryInt64Op(+ [tr], v63, v625 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(<=, v130, v7) T{bool} goto (6, 10)
B6
  Loop 1
ParallelMove r0 <- fp[-1], r1 <- r19
t0 <- GenericCheckBound:10(v594 T{_Smi}, v63 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:10(===, v280 T{_Smi}, v288 T{_Smi}) goto (155, 156)
B155
  Loop 1
v340 <- LoadIndexed([_OneByteString] v3 T{_OneByteString}, v63 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:10 B154
B156
  Loop 1
v338 <- LoadIndexed([_TwoByteString] v3 T{_StringBase}, v63 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:10 B154
B154
  Loop 1
v349 <- BinaryInt64Op(^ [tr], v339 T{_Smi}, v626 T{_Smi}) [0, 65535] int64
Branch if RelationalOp(<=, v349, v627 T{_Smi}) T{bool} goto (159, 160)
B159
  Loop 1
ParallelMove r24 <- r1 goto:22 B166
B160
  Loop 1
v354 <- BinaryInt64Op(| [tr], v339 T{_Smi}, v628 T{_Smi}) [0, 65535] int64
Branch if RelationalOp(<=, v629 T{_Smi}, v354) T{bool} goto (161, 164)
B161
  Loop 1
Branch if RelationalOp(<=, v354, v630 T{_Smi}) T{bool} goto (162, 165)
B162
  Loop 1
v363 <- BinaryInt64Op(- [tr], v354, v383 T{_Smi}) [-87, 65448] int64
ParallelMove r24 <- r0 goto:52 B166
B165
B164
B163
  Loop 1
ParallelMove r24 <- C goto:66 B166
B166
  Loop 1
v258 <- BinaryInt64Op(+ [tr], v63 T{int}, v623 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-1], r1 <- r25
t0 <- GenericCheckBound:16(v594 T{_Smi}, v258 T{int}) [-9223372036854775808, 9223372036854775807] int64
Branch if StrictCompare:16(===, v280 T{_Smi}, v288 T{_Smi}) goto (170, 171)
B170
  Loop 1
v398 <- LoadIndexed([_OneByteString] v3 T{_OneByteString}, v258 T{int}) [0, 255] int64
ParallelMove r0 <- r0 goto:16 B169
B171
  Loop 1
v396 <- LoadIndexed([_TwoByteString] v3 T{_StringBase}, v258 T{int}) [0, 65535] int64
ParallelMove r0 <- r0 goto:16 B169
B169
  Loop 1
v407 <- BinaryInt64Op(^ [tr], v397 T{_Smi}, v626 T{_Smi}) [0, 65535] int64
Branch if RelationalOp(<=, v407, v627 T{_Smi}) T{bool} goto (174, 175)
B174
  Loop 1
ParallelMove r0 <- r1 goto:22 B181
B175
  Loop 1
v412 <- BinaryInt64Op(| [tr], v397 T{_Smi}, v628 T{_Smi}) [0, 65535] int64
Branch if RelationalOp(<=, v629 T{_Smi}, v412) T{bool} goto (176, 179)
B176
  Loop 1
Branch if RelationalOp(<=, v412, v630 T{_Smi}) T{bool} goto (177, 180)
B177
  Loop 1
v421 <- BinaryInt64Op(- [tr], v412, v383 T{_Smi}) [-87, 65448] int64
ParallelMove r0 <- r0 goto:52 B181
B180
B179
B178
  Loop 1
ParallelMove r0 <- C goto:66 B181
B181
  Loop 1
v268 <- ShiftInt64Op(<< [tr], v385 T{int}, v271) [-1392, 1048560] int64
v263 <- BinaryInt64Op(+ [tr], v268 T{int}, v436 T{int}) [-1479, 1114095] int64
ParallelMove r0 <- r0
v697 <- IntConverter(int64->uint32[tr], v436 T{int}) uint32
v265 <- BinaryUint32Op(& [tr], v697 T{int}, v708 T{_Smi}) [0, 256] uint32
ParallelMove r1 <- r1
v698 <- IntConverter(uint32->int64, v265) int64
v266 <- BinaryInt64Op(- [tr], v263, v698 T{_Smi}) [-1735, 1114095] int64
Branch if EqualityCompare(v266 T{int} == v624 T{_Smi}) T{bool} goto (7, 8)
B7
  Loop 1
ParallelMove r0 <- C goto:78 B9
B8
B9
  Loop 1
ParallelMove r1 <- r23, r0 <- r0 goto:88 B11
B10
  Loop 1
ParallelMove r1 <- r19, r0 <- C goto:90 B11
B11
  Loop 1
ParallelMove r23 <- r1, r19 <- r0 goto:96 B13
B12
  Loop 1
ParallelMove r23 <- r19, r19 <- r20 goto:98 B13
B13
  Loop 1
ParallelMove fp[-9] <- r23
Branch if RelationalOp(<=, v622 T{_Smi}, v68) T{bool} goto (14, 42)
B14
  Loop 1
Branch if RelationalOp(<=, v68, v632 T{_Smi}) T{bool} goto (15, 43)
B15
  Loop 1
ParallelMove r0 <- r5, r1 <- r19
GenericCheckBound:120(v605 T{_Smi}, v68) [-9223372036854775808, 9223372036854775807] int64
v633 <- LoadIndexed:120([_Int8List] v296, v68 T{int}) [-128, 127] int64
Branch if RelationalOp(>=, v633 T{_Smi}, v622 T{_Smi}) T{bool} goto (16, 20)
B16
  Loop 1
ParallelMove r0 <- C, r1 <- r24
GenericCheckBound:132(v634 T{_Smi}, v633 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v635 <- LoadIndexed:132([_OneByteString] v8, v633 T{_Smi}) [0, 255] int64
Branch if EqualityCompare(v635 == v283 T{_Smi}) T{bool} goto (17, 19)
B17
B19
  Loop 1
ParallelMove r11 <- r12, r10 <- r11, r1 <- r10, r0 <- r0 goto:240 B35
B20
  Loop 1
Branch if EqualityCompare(v633 T{_Smi} == v384 T{_Smi}) T{bool} goto (21, 33)
B21
  Loop 1
Branch if RelationalOp(<, v17, v622 T{_Smi}) T{bool} goto (22, 29)
B22
  Loop 1
Branch if StrictCompare:172(===, v15, v0) goto (23, 24)
B23
  Loop 1
ParallelMove r0 <- C goto:184 B25
B24
  Loop 1
v246 <- LoadField(v15 T{StringBuffer} . _partsCodeUnits@0150898) [-9223372036854775808, 9223372036854775807] int64
v247 <- LoadField(v15 T{StringBuffer} . _bufferPosition@0150898) [-9223372036854775808, 9223372036854775807] int64
v248 <- BinaryInt64Op(+ [tr], v246, v247) [-9223372036854775808, 9223372036854775807] int64
v611 <- BoxInt64(v248 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:186 B25
B25
  Loop 1
Branch if StrictCompare:188(===, v102, v0) goto (26, 27)
B26
  Loop 1
ParallelMove r0 <- C goto:198 B28
B27
  Loop 1
v612 <- UnboxInt64([non-speculative], v102 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r1 goto:200 B28
B28
  Loop 1
v104 <- BinaryInt64Op(- [tr], v20 T{int}, v16) [-9223372036854775808, 9223372036854775807] int64
v105 <- BinaryInt64Op(+ [tr], v103 T{int?}, v104) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r12, r0 <- r9 goto:210 B30
B29
  Loop 1
ParallelMove r1 <- r12, r0 <- r11 goto:212 B30
B30
  Loop 1
v98 <- BinaryInt64Op(+ [tr], v19, v623 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v283 T{_Smi} == v636 T{_Smi}) T{bool} goto (31, 32)
B31
  Loop 1
ParallelMove r14 <- r14, r13 <- r13, r12 <- r1, r11 <- r0, r10 <- r25 goto:226 B18
B32
  Loop 1
ParallelMove r12 <- r1, r1 <- r0, r0 <- r25 goto:234 B34
B33
  Loop 1
ParallelMove r12 <- r12, r1 <- r11, r0 <- r10 goto:236 B34
B34
  Loop 1
ParallelMove r11 <- r12, r10 <- r1, r1 <- r0, r0 <- r19 goto:242 B35
B35
  Loop 1
ParallelMove fp[-5] <- r11, fp[-6] <- r10, fp[-7] <- r1, fp[-8] <- r0
Branch if EqualityCompare(v633 T{_Smi} != v637 T{_Smi}) T{bool} goto (36, 40)
B36
  Loop 1
Branch if StrictCompare:254(===, v15, v0) goto (37, 38)
B37
  Loop 1
v118 <- AllocateObject:260(cls=StringBuffer) T{StringBuffer}
ParallelMove r3 <- r0, r0 <- C
ParallelMove fp[-15] <- r3
StoreField(v118 T{StringBuffer} . _partsCodeUnits@0150898 = v622 T{_Smi} <int64>, NoStoreBarrier)
StoreField(v118 T{StringBuffer} . _partsCompactionIndex@0150898 = v622 T{_Smi} <int64>, NoStoreBarrier)
StoreField(v118 T{StringBuffer} . _partsCodeUnitsSinceCompaction@0150898 = v622 T{_Smi} <int64>, NoStoreBarrier)
StoreField(v118 T{StringBuffer} . _bufferPosition@0150898 = v622 T{_Smi} <int64>, NoStoreBarrier)
StoreField(v118 T{StringBuffer} . _bufferCodeUnitMagnitude@0150898 = v622 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r1 <- r3, r2 <- C
StaticCall:30( write<0> v118 T{StringBuffer}, v240 T{_OneByteString}, using unchecked entrypoint)
ParallelMove r5 <- fp[-15], r4 <- fp[-15] goto:268 B39
B38
  Loop 1
ParallelMove r5 <- r14, r4 <- r14 goto:270 B39
B39
  Loop 1
ParallelMove fp[-15] <- r5, fp[-16] <- r4
v600 <- BoxInt64(v20 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- fp[-10], r2 <- r0, r3 <- fp[-1]
v217 <- StaticCall:30( checkValidRange<0> v16 T{int}, v600 T{int?}, v594 T{_Smi}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-2], r2 <- fp[-10], r3 <- r0
v218 <- StaticCall:32( _substringUnchecked@0150898<0> v3 T{_StringBase}, v16 T{int}, v217, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-17] <- r0
v325 <- LoadField(v218 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
Branch if StrictCompare:10(===, v325, v13 T{_Smi}) T{bool} goto (121, 122)
B121
B122
  Loop 1
ParallelMove r1 <- fp[-15]
StaticCall:26( _consumeBuffer@0150898<0> v115 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-15], r2 <- fp[-17]
StaticCall:28( _addPart@0150898<0> v115 T{StringBuffer}, v218 T{String}, using unchecked entrypoint)
ParallelMove  goto:30 B123
B123
  Loop 1
ParallelMove r1 <- fp[-15], r2 <- fp[-8]
StaticCall:276( writeCharCode<0> v115, v110, using unchecked entrypoint)
ParallelMove r14 <- fp[-16], r13 <- fp[-9], r12 <- fp[-5], r11 <- fp[-6], r10 <- fp[-7] goto:278 B18
B18
  Loop 1
ParallelMove r14 <- r14, r13 <- r13, r12 <- r12, r11 <- r11, r10 <- r10, r9 <- fp[-9], r2 <- fp[-2], r4 <- fp[-13], r3 <- fp[-14], r5 <- fp[-12] goto:308 B45
B4
Branch if StrictCompare:312(!==, v15, v0) goto (46, 55)
B46
ParallelMove r3 <- fp[-4]
v598 <- BoxInt64(v7) [-4611686018427387904, 4611686018427387903] T{_Smi}
ParallelMove fp[-13] <- r0
MoveArgument(sp[0] <- v598 T{_Smi})
ParallelMove r1 <- fp[-2], r2 <- fp[-10]
v48 <- StaticCall:318( substring<0> v3, v16, v598 T{_Smi}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r1 <- fp[-18], r2 <- r0
StaticCall:320( write<0> v15 T{StringBuffer}, v48, using unchecked entrypoint)
ParallelMove r5 <- fp[-19]
Branch if RelationalOp(>=, v17, v622 T{_Smi}) T{bool} goto (47, 48)
B47
ParallelMove r0 <- fp[-18]
v198 <- LoadField(v15 T{StringBuffer} . _partsCodeUnits@0150898) [-9223372036854775808, 9223372036854775807] int64
v199 <- LoadField(v15 T{StringBuffer} . _bufferPosition@0150898) [-9223372036854775808, 9223372036854775807] int64
v200 <- BinaryInt64Op(+ [tr], v198, v199) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-2], r2 <- fp[-20], r3 <- fp[-4], r5 <- r5, r6 <- fp[-21], r7 <- r7
StaticCall:334( _checkPadding@10003594<0> v3, v18, v7, v17, v19, v200 T{int})
ParallelMove  goto:390 B54
B48
ParallelMove r0 <- fp[-18], r2 <- C, r1 <- C
v191 <- LoadField(v15 T{StringBuffer} . _partsCodeUnits@0150898) [-9223372036854775808, 9223372036854775807] int64
v192 <- LoadField(v15 T{StringBuffer} . _bufferPosition@0150898) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r3
v699 <- IntConverter(int64->uint32[tr], v191) uint32
ParallelMove r4 <- r4
v700 <- IntConverter(int64->uint32[tr], v192) uint32
v193 <- BinaryUint32Op(+ [tr], v699 T{int}, v700 T{int}) [0, 4294967295] uint32
v51 <- BinaryUint32Op(- [tr], v193, v709 T{_Smi}) [0, 4294967295] uint32
v52 <- BinaryUint32Op(& [tr], v51, v710 T{_Smi}) [0, 3] uint32
ParallelMove r2 <- r2
v702 <- IntConverter(uint32->int64, v52) int64
v53 <- BinaryInt64Op(+ [tr], v702 T{_Smi}, v623 T{_Smi}) [1, 4] int64
Branch if EqualityCompare(v53 == v623 T{_Smi}) T{bool} goto (49, 50)
B50
ParallelMove r2 <- r1 goto:384 B52
B52
  Loop 0
  Loop Header
ParallelMove fp[-1] <- r2
CheckStackOverflow:382(stack=0, loop=1)
Branch if RelationalOp(<, v55, v271 T{_Smi}) T{bool} goto (85, 53)
B85
  Loop 0
ParallelMove r1 <- r0
StaticCall:26( _consumeBuffer@0150898<0> v15 T{StringBuffer}, using unchecked entrypoint)
ParallelMove r1 <- fp[-18], r2 <- C
StaticCall:28( _addPart@0150898<0> v15 T{StringBuffer}, v39 T{_OneByteString}, using unchecked entrypoint)
ParallelMove r0 <- fp[-1]
v57 <- BinaryInt64Op(+ [tr], v55, v623 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r2, r0 <- fp[-18] goto:380 B52
B53
B54
MoveArgument(sp[0] <- v15 T{StringBuffer})
v60 <- StaticCall:394( toString<0> v15 T{StringBuffer}, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r1 <- fp[-2], r2 <- fp[-3], r3 <- fp[-13], r5 <- r0
v61 <- StaticCall:396( replaceRange<0> v3, v4, v598 T{_Smi}, v60, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:398(v61)
B55
ParallelMove r0 <- fp[-3], r3 <- fp[-4], r5 <- r12, r1 <- C
v29 <- BinaryInt64Op(- [tr], v7, v4) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>=, v17, v622 T{_Smi}) T{bool} goto (56, 57)
B56
ParallelMove r1 <- fp[-2], r2 <- fp[-20], r3 <- r3, r5 <- r5, r6 <- fp[-21], r7 <- r7
StaticCall:414( _checkPadding@10003594<0> v3, v18, v7, v17, v19, v29)
ParallelMove r0 <- fp[-2] goto:478 B66
B57
ParallelMove r7 <- r7
v703 <- IntConverter(int64->uint32[tr], v29) uint32
v32 <- BinaryUint32Op(& [tr], v703 T{int}, v710 T{_Smi}) [0, 3] uint32
ParallelMove r1 <- r0
v707 <- IntConverter(uint32->int64, v32) int64
Branch if EqualityCompare(v707 T{_Smi} == v623 T{_Smi}) T{bool} goto (58, 59)
B59
ParallelMove r1 <- r0
v706 <- IntConverter(uint32->int64, v32) int64
Branch if RelationalOp(>, v706 T{_Smi}, v623 T{_Smi}) T{bool} goto (60, 64)
B60
ParallelMove r0 <- r0
v705 <- IntConverter(uint32->int64, v32) int64
Branch if EqualityCompare(v705 T{_Smi} == v625 T{_Smi}) T{bool} goto (61, 62)
B61
ParallelMove r5 <- C goto:462 B63
B62
ParallelMove r5 <- C goto:464 B63
B63
v599 <- BoxInt64(v7) [-4611686018427387904, 4611686018427387903] T{_Smi}
ParallelMove r1 <- fp[-2], r2 <- r3, r3 <- r0, r5 <- r5
v41 <- StaticCall:466( replaceRange<0> v3, v7, v599 T{_Smi}, v40, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:472 B65
B64
ParallelMove r0 <- fp[-2] goto:474 B65
B65
B66
ParallelMove r0 <- r0
DartReturn:482(v45)
B40
ParallelMove r2 <- r9
ParallelMove  goto:294 B44
B43
ParallelMove r2 <- r9
ParallelMove  goto:290 B41
B42
ParallelMove r2 <- r9
ParallelMove  goto:286 B41
B41
B44
v78 <- AllocateObject:298(cls=FormatException, <not-aliased>) T{FormatException}
ParallelMove r2 <- r0, r0 <- C
StoreField(v78 T{FormatException} . message = v79 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-2]
StoreField(v78 T{FormatException} . source = v3 T{String}, NoStoreBarrier)
ParallelMove r3 <- fp[-11]
v601 <- BoxInt64(v20 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v78 T{FormatException} . offset = v601 T{int?}, NoStoreBarrier)
ParallelMove r0 <- r2
Throw:302(v78)
B49
ParallelMove r0 <- fp[-2], r1 <- fp[-13]
v58 <- AllocateObject:356(cls=FormatException, <not-aliased>) T{FormatException}
ParallelMove r1 <- r0, r0 <- C
StoreField(v58 T{FormatException} . message = v44 T{_OneByteString}, NoStoreBarrier)
ParallelMove r2 <- fp[-2]
StoreField(v58 T{FormatException} . source = v3 T{String}, NoStoreBarrier)
ParallelMove r0 <- fp[-13]
StoreField(v58 T{FormatException} . offset = v598 T{_Smi}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:360(v58)
B58
ParallelMove r2 <- fp[-2], r0 <- C
v43 <- AllocateObject:430(cls=FormatException, <not-aliased>) T{FormatException}
ParallelMove r1 <- r0, r0 <- C
StoreField(v43 T{FormatException} . message = v44 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-2]
StoreField(v43 T{FormatException} . source = v3 T{String}, NoStoreBarrier)
ParallelMove r0 <- fp[-4]
v596 <- BoxInt64(v7 T{_Smi}) [-4611686018427387904, 4611686018427387903] T{_Smi}
StoreField(v43 T{FormatException} . offset = v596 T{_Smi}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:434(v43)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
slow path check bound operation
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1, fp[-2] <- r3, fp[-3] <- r7, fp[-5] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v26 <- UnboxedConstant(#3) [3, 3] int64
Branch if TestInt(v7, v26) goto (3, 4)
B4
v13 <- BinaryInt64Op(+ [tr], v5, v6) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v13 != v7) T{bool} goto (5, 6)
B6
Branch if RelationalOp(>, v6, v64 T{_Smi}) T{bool} goto (7, 8)
B8
ParallelMove r0 <- C
DartReturn:72(v0)
B3
ParallelMove r1 <- C, r2 <- C
v22 <- CreateArray:24(v0, v15) T{_List}
ParallelMove r2 <- r0
StoreIndexed([_List] v22, v10, v23, NoStoreBarrier)
ParallelMove r3 <- fp[-3]
v62 <- BoxInt64(v7) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreIndexed([_List] v22, v24, v62 T{int}, NoStoreBarrier)
MoveArgument(sp[0] <- v22)
v25 <- StaticCall:26( _interpolate@0150898<0> v22, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-4] <- r0
v21 <- AllocateObject:22(cls=FormatException) T{FormatException}
ParallelMove r1 <- r0, r0 <- fp[-4]
StoreField(v21 T{FormatException} . message = v25 T{String}, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
StoreField(v21 T{FormatException} . source = v2 T{String}, NoStoreBarrier)
ParallelMove r0 <- fp[-2]
v61 <- BoxInt64(v4 T{_Smi}) [-4611686018427387904, 4611686018427387903] T{_Smi}
StoreField(v21 T{FormatException} . offset = v61 T{_Smi}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:30(v21)
B5
v19 <- AllocateObject:46(cls=FormatException) T{FormatException}
ParallelMove r2 <- r0, r0 <- C
StoreField(v19 T{FormatException} . message = v20 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
StoreField(v19 T{FormatException} . source = v2 T{String}, NoStoreBarrier)
ParallelMove r3 <- fp[-5]
v59 <- BoxInt64(v3 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v19 T{FormatException} . offset = v59 T{int?}, NoStoreBarrier)
ParallelMove r0 <- r2
Throw:50(v19)
B7
ParallelMove r3 <- r2
v17 <- AllocateObject:64(cls=FormatException) T{FormatException}
ParallelMove r2 <- r0, r0 <- C
StoreField(v17 T{FormatException} . message = v18 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
StoreField(v17 T{FormatException} . source = v2 T{String}, NoStoreBarrier)
ParallelMove r3 <- fp[-5]
v60 <- BoxInt64(v3 T{int?}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
StoreField(v17 T{FormatException} . offset = v60 T{int?}, NoStoreBarrier)
ParallelMove r0 <- r2
Throw:68(v17)
CheckStackOverflowSlowPath
B0
B42
Enter frame
ParallelMove r0 <- C
CheckStackOverflow:4(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- r0
v4 <- CreateArray:6(v2, v3) T{_List}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
StoreIndexed([_List] v4, v5, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v7, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v8, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v9, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v10, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v11, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v12, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v13, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v14, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v15, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v16, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v17, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v18, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v19, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v20, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v21, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v22, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v23, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v24, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v25, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v26, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v27, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v28, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v29, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v30, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v31, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v32, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v33, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v34, v6, NoStoreBarrier)
StoreIndexed([_List] v4, v35, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v36, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v37, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v38, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v39, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v40, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v41, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v42, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v43, v44, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v45, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v46, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v47, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v48, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v49, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v50, v51, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v52, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v53, v51, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v54, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v55, v56, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v57, v58, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v59, v60, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v61, v62, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v63, v64, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v58, v65, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v60, v66, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v62, v67, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v64, v68, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v65, v69, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v66, v70, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v67, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v68, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v69, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v70, v44, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v51, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v56, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v71, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v72, v5, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v73, v7, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v74, v8, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v75, v9, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v76, v10, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v77, v11, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v78, v12, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v79, v13, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v80, v14, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v81, v15, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v82, v16, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v83, v17, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v84, v18, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v85, v19, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v86, v20, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v87, v21, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v88, v22, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v89, v23, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v90, v24, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v91, v25, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v92, v26, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v93, v27, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v94, v28, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v95, v29, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v96, v30, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v97, v31, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v98, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v99, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v100, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v101, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v102, v56, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v103, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v104, v32, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v105, v33, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v106, v34, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v107, v35, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v108, v36, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v109, v37, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v110, v38, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v111, v39, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v112, v40, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v113, v41, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v114, v42, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v115, v43, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v116, v45, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v117, v46, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v118, v47, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v119, v48, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v120, v49, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v121, v50, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v122, v52, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v123, v53, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v124, v54, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v125, v55, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v126, v57, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v127, v59, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v128, v61, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v129, v63, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v130, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v131, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v132, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v133, v6, NoStoreBarrier)
ParallelMove r1 <- C
StoreIndexed([_List] v4, v134, v6, NoStoreBarrier)
ParallelMove r1 <- C
v160 <- AllocateObject:10(cls=_GrowableList, v2 T{TypeArguments}) T{_GrowableList}
ParallelMove r1 <- r0, r0 <- fp[-1]
ParallelMove fp[-2] <- r1
StoreField(v160 . GrowableObjectArray.data = v4 T{_List}, NoStoreBarrier)
ParallelMove r4 <- C
StoreField(v160 T{_GrowableList} . GrowableObjectArray.length = v3 T{_Smi}, NoStoreBarrier)
ParallelMove r4 <- r4
v177 <- AllocateTypedData:10(v3 T{_Smi}) T{_Int8List}
ParallelMove r1 <- r0, r2 <- C, r3 <- C, r5 <- fp[-2], r6 <- C, r0 <- r0
ParallelMove fp[-1] <- r0
StaticCall:158( _slowSetRange@7027147<0> v177 T{_Int8List}, v276 T{_Smi}, v277 T{_Smi}, v160 T{_GrowableList}, v276 T{_Smi}, using unchecked entrypoint, result_type = T{Null?})
ParallelMove r0 <- fp[-1]
DartReturn:12(v177 T{_Int8List})
CheckStackOverflowSlowPath
B0
B1
ParallelMove r2 <- C
v17 <- UnboxUint32([tr], [non-speculative], v2 T{_IntegerImplementation}) [0, 4294967295] uint32
v10 <- BinaryUint32Op(& [tr], v17, v22 T{_Smi}) [0, 1] uint32
ParallelMove r1 <- r1
v21 <- IntConverter(uint32->int64, v10) int64
v12 <- EqualityCompare(v21 T{_Smi} != v19 T{_Smi}) T{bool}
ParallelMove r0 <- r0
DartReturn:14(v12 T{bool})
B0
B1
Enter frame
ParallelMove r0 <- C
ParallelMove r1 <- C, r2 <- r0, r4 <- r1, r3 <- r2, fp[-1] <- r1, fp[-2] <- r2
v8 <- CreateArray:10(v0, v4) T{_List}
ParallelMove r2 <- r0, r0 <- fp[-2]
ParallelMove fp[-3] <- r2
StoreIndexed:12([_List] v8, v6 T{_Smi}, v3, NoStoreBarrier)
ParallelMove r1 <- fp[-1]
v17 <- AllocateObject:10(cls=_GrowableList, v2 T{*?}, <not-aliased>) T{_GrowableList}
ParallelMove r0 <- r0, r1 <- fp[-3]
StoreField(v17 . GrowableObjectArray.data = v8 T{_List}, NoStoreBarrier)
ParallelMove r1 <- C
StoreField(v17 T{_GrowableList} . GrowableObjectArray.length = v4, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:18(v17 T{_GrowableList})
B0
B1
ParallelMove r2 <- r1
v37 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v133 <- UnboxInt64([non-speculative], v37) [0, 2305843009213693951] int64
ParallelMove r0 <- r0, r1 <- C
t0 <- GenericCheckBound:12(v133 T{_Smi}, v112) [-4611686018427387904, 4611686018427387903] int64
v39 <- LoadClassId(v2 T{_StringBase}) [93, 94] T{_Smi}
Branch if StrictCompare:12(===, v39, v47 T{_Smi}) goto (6, 7)
B6
v43 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v112 T{_Smi}) [0, 255] int64
ParallelMove r3 <- r3 goto:12 B5
B7
v41 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v112 T{_Smi}) [0, 65535] int64
ParallelMove r3 <- r3 goto:12 B5
B5
v8 <- BinaryInt64Op(^ [tr], v42 T{_Smi}, v138 T{_Smi}) [0, 65535] int64
v10 <- BinaryInt64Op(* [tr], v8, v115 T{_Smi}) [0, 196605] int64
Branch if StrictCompare:18(===, v39 T{_Smi}, v47 T{_Smi}) goto (11, 12)
B11
v60 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v139 T{_Smi}) [0, 255] int64
ParallelMove r4 <- r4 goto:18 B10
B12
v58 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v139 T{_Smi}) [0, 65535] int64
ParallelMove r4 <- r4 goto:18 B10
B10
v13 <- BinaryInt64Op(^ [tr], v59 T{_Smi}, v140 T{_Smi}) [0, 65535] int64
v14 <- BinaryInt64Op(| [tr], v10, v13) [0, 262143] int64
Branch if StrictCompare:26(===, v39 T{_Smi}, v47 T{_Smi}) goto (16, 17)
B16
v76 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v113 T{_Smi}) [0, 255] int64
ParallelMove r3 <- r3 goto:26 B15
B17
v74 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v113 T{_Smi}) [0, 65535] int64
ParallelMove r3 <- r3 goto:26 B15
B15
v19 <- BinaryInt64Op(^ [tr], v75 T{_Smi}, v141 T{_Smi}) [0, 65535] int64
v20 <- BinaryInt64Op(| [tr], v14, v19) [0, 262143] int64
Branch if StrictCompare:34(===, v39 T{_Smi}, v47 T{_Smi}) goto (21, 22)
B21
v92 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v114 T{_Smi}) [0, 255] int64
ParallelMove r4 <- r4 goto:34 B20
B22
v90 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v114 T{_Smi}) [0, 65535] int64
ParallelMove r4 <- r4 goto:34 B20
B20
v25 <- BinaryInt64Op(^ [tr], v91 T{_Smi}, v142 T{_Smi}) [0, 65535] int64
v26 <- BinaryInt64Op(| [tr], v20, v25) [0, 262143] int64
Branch if StrictCompare:42(===, v39 T{_Smi}, v47 T{_Smi}) goto (26, 27)
B26
v108 <- LoadIndexed([_OneByteString] v2 T{_OneByteString}, v115 T{_Smi}) [0, 255] int64
ParallelMove r1 <- r1 goto:42 B25
B27
v106 <- LoadIndexed([_TwoByteString] v2 T{_StringBase}, v115 T{_Smi}) [0, 65535] int64
ParallelMove r1 <- r1 goto:42 B25
B25
v29 <- BinaryInt64Op(^ [tr], v107 T{_Smi}, v141 T{_Smi}) [0, 65535] int64
v30 <- BinaryInt64Op(| [tr], v26, v29) [0, 262143] int64
ParallelMove r0 <- r0
DartReturn:48(v30)
slow path check bound operation
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadStaticField(_isWindows@16225868) T{bool}
Branch if StrictCompare:10(===, v3 T{bool}, v4 T{bool}) T{bool} goto (3, 4)
BoolTest
B3
ParallelMove r0 <- r0
DartReturn:20(v2)
B4
ParallelMove r1 <- r0, r2 <- C, r3 <- C
v33 <- StaticCall:14( replaceAll<0> v2 T{_StringBase}, v7 T{_OneByteString}, v8 T{_OneByteString}) T{String}
ParallelMove r1 <- r0, r0 <- fp[-1]
ParallelMove fp[-2] <- r1
v47 <- LoadField(v2 T{_StringBase} . String.length {final}) [0, 2305843009213693951] T{_Smi}
v68 <- UnboxInt64([non-speculative], v47 T{_Smi}) [0, 2305843009213693951] int64
Branch if RelationalOp(>, v68 T{_Smi}, v69 T{_Smi}) T{bool} goto (5, 8)
B5
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v14)
v15 <- StaticCall:38( dyn:[]<0> v2, v14, recognized_kind = StringBaseCharAt, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
v78 <- LoadClassId(v15) int64
MoveArgument(sp[1] <- v15)
MoveArgument(sp[0] <- v16)
ParallelMove r0 <- r1
v17 <- DispatchTableCall( cid=v78 Object.==<0>, v15, v16) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:44(===, v17 T{bool}, v6) goto (6, 9)
BoolTest
B6
ParallelMove r0 <- fp[-2]
ParallelMove r1 <- C, r2 <- C
v18 <- CreateArray:52(v0, v12) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v18, v19, v8, NoStoreBarrier)
ParallelMove r1 <- fp[-2]
StoreIndexed([_List] v18, v14, v33 T{String}, NoStoreBarrier)
MoveArgument(sp[0] <- v18)
v20 <- StaticCall:54( _interpolate@0150898<0> v18, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:56(v20)
B9
ParallelMove r1 <- fp[-2]
ParallelMove  goto:66 B7
B8
B7
ParallelMove r0 <- r1
DartReturn:68(v33 T{String})
CheckStackOverflowSlowPath
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[0] <- v3)
v5 <- StaticCall:10( _resolveScriptUri@16225868<0> v3) T{String}
ParallelMove r0 <- r0
DartReturn:12(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadStaticField(_setupCompleted@16225868) T{bool}
Branch if StrictCompare:12(!==, v3 T{bool}, v4) goto (3, 4)
BoolTest
B3
ParallelMove r0 <- C
StoreStaticField(_setupCompleted@16225868, v4 T{bool})
ParallelMove  goto:24 B7
B4
B7
v26 <- LoadStaticField:4(_workingDirectory@16225868, CallsInitializer) T{_Uri}
ParallelMove r1 <- fp[2]
v6 <- StaticCall:46( _sanitizeWindowsPath@16225868<0> v2, result_type = T{!null}) T{*}
ParallelMove r1 <- r0
v7 <- StaticCall:48( parse<0> v6, result_type = T{!null}) T{Uri}
ParallelMove r2 <- r0
ParallelMove fp[-1] <- r2
v46 <- LoadClassId(<non-smi> v7) int64
ParallelMove r0 <- r0, r1 <- r2
v8 <- DispatchTableCall( cid=v46 Uri.hasScheme<0>, v7) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:54(!==, v8 T{bool}, v4) goto (8, 9)
BoolTest
B8
v23 <- LoadStaticField:4(_workingDirectory@16225868) T{_Uri}
ParallelMove r1 <- r1, r2 <- fp[-1]
v18 <- StaticCall:62( resolveUri<0> v23, v7, using unchecked entrypoint, result_type = T{!null}) T{Uri}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:68 B12
B9
ParallelMove r0 <- fp[-1] goto:70 B12
B12
v47 <- LoadClassId(<non-smi> v9) int64
MoveArgument(sp[0] <- v9)
ParallelMove r0 <- r1
v10 <- DispatchTableCall( cid=v47 Uri.toString<0>, v9) T{String}
ParallelMove r0 <- r0
DartReturn:90(v10 T{String})
CheckStackOverflowSlowPath
slow path late initialization error operation
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[0] <- v3)
v5 <- StaticCall:10( _setPackagesMap@16225868<0> v3) T{String}
ParallelMove r0 <- r0
DartReturn:12(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v3 <- LoadStaticField(_setupCompleted@16225868) T{bool}
Branch if StrictCompare:12(!==, v3 T{bool}, v4) goto (3, 4)
BoolTest
B3
ParallelMove r0 <- C
StoreStaticField(_setupCompleted@16225868, v4 T{bool})
ParallelMove  goto:24 B9
B4
B9
ParallelMove r1 <- C, r2 <- fp[2]
v6 <- StaticCall:44( _Uri@0150898.directory<0> v0, v2, result_type = T{_Uri}) T{_Uri}
ParallelMove r0 <- r0
StoreStaticField(_workingDirectory@16225868, v6)
ParallelMove r0 <- C
DartReturn:64(v0)
CheckStackOverflowSlowPath
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[0] <- v3)
v5 <- StaticCall:10( _setWorkingDirectory@16225868<0> v3) T{void?}
ParallelMove r0 <- r0
DartReturn:12(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- C
CheckStackOverflow:8(stack=0, loop=0)
StoreStaticField(_setupCompleted@16225868, v12 T{bool})
ParallelMove r1 <- C, r2 <- fp[3]
v5 <- StaticCall:12( _Uri@0150898.directory<0> v0, v3, result_type = T{_Uri}) T{_Uri}
ParallelMove r0 <- r0
StoreStaticField(_workingDirectory@16225868, v5)
ParallelMove r1 <- fp[2]
Branch if StrictCompare:14(!==, v4, v0) goto (3, 4)
B3
ParallelMove r1 <- r1
v6 <- StaticCall:20( parse<0> v4 T{String?}, result_type = T{!null}) T{Uri}
ParallelMove r0 <- r0
StoreStaticField(_rootScript@16225868, v6)
ParallelMove  goto:26 B5
B4
B5
Branch if StrictCompare:30(!==, v2, v0) goto (6, 7)
B6
ParallelMove r0 <- C
StoreStaticField(_packageMap@16225868, v0)
ParallelMove r1 <- r1
StaticCall:36( _setPackagesConfig@16225868<0> v2 T{String?})
ParallelMove  goto:42 B8
B7
B8
ParallelMove r0 <- C
DartReturn:46(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r1
v3 <- StaticCall:10( _sanitizeWindowsPath@16225868<0> v2, result_type = T{!null}) T{*}
ParallelMove r1 <- r0
v4 <- StaticCall:12( parse<0> v3, result_type = T{!null}) T{Uri}
ParallelMove r2 <- r0
ParallelMove fp[-1] <- r2
v21 <- LoadClassId(<non-smi> v4) int64
ParallelMove r0 <- r0, r1 <- r2
v5 <- DispatchTableCall( cid=v21 Uri.hasScheme<0>, v4) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:18(!==, v5 T{bool}, v6) goto (3, 4)
BoolTest
B3
v12 <- LoadStaticField:4(_workingDirectory@16225868, CallsInitializer) T{_Uri}
ParallelMove r1 <- r0, r2 <- fp[-1]
v9 <- StaticCall:26( resolveUri<0> v12, v4, using unchecked entrypoint, result_type = T{!null}) T{Uri}
ParallelMove r0 <- r0
ParallelMove r1 <- r0 goto:32 B5
B4
ParallelMove r1 <- fp[-1] goto:34 B5
B5
StoreStaticField(_packagesConfigUri@16225868, v7)
ParallelMove r0 <- C
DartReturn:36(v0)
CheckStackOverflowSlowPath
slow path late initialization error operation
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[2] <- v3)
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v5)
v7 <- StaticCall:10( _Init@16225868<0> v3, v4, v5) T{void?}
ParallelMove r0 <- r0
DartReturn:12(v7)
CheckStackOverflowSlowPath
B0
B1
ParallelMove r0 <- C
DartReturn:10(v2)
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
v5 <- StaticCall:10( _print@16225868<0> v3) T{void?}
ParallelMove r0 <- r0
DartReturn:12(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadClassId(v2) int64
MoveArgument(sp[0] <- v2)
ParallelMove r0 <- r0
v3 <- DispatchTableCall( cid=v4 Object.toString<0>, v2) T{String}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v3 T{String})
StaticCall:12( _printString@16225868<0> v3 T{String})
ParallelMove r0 <- C
DartReturn:14(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r4 <- fp[2]
v13 <- AllocateTypedData:10(v3 T{int}) T{_Uint8List}
ParallelMove r1 <- r0, r0 <- r0
ParallelMove fp[-1] <- r0
v5 <- StaticCall:12( get:lengthInBytes<0> v13 T{_Uint8List}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r0, r0 <- fp[2]
v29 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r1, r2 <- C, r3 <- r3
StaticCall:14( _rangeCheck@7027147<0> v5, v30 T{_Smi}, v29 T{int})
v23 <- AllocateObject:16(cls=_ByteDataView) T{_ByteDataView}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v23 . TypedDataView.typed_data = v13 T{_Uint8List}, NoStoreBarrier)
StoreField(v23 . TypedDataView.offset_in_bytes = v6 T{_Smi}, NoStoreBarrier)
ParallelMove r2 <- fp[2]
StoreField(v23 . TypedDataBase.length = v3 T{int}, NoStoreBarrier)
v25 <- LoadField(v13 T{_Uint8List} . PointerBase.data, MayLoadInnerPointer) untagged
StoreField(v23 . PointerBase.data = v25 T{Object} <untagged>, NoStoreBarrier, MayStoreInnerPointer)
ParallelMove r0 <- r0
DartReturn:18(v23 T{_ByteDataView})
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v10 <- LoadField(v2 T{_TypedList} . TypedDataBase.length {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove fp[-1] <- r2
v12 <- LoadClassId(<non-smi> v2) int64
ParallelMove r0 <- r0, r1 <- r1
v4 <- DispatchTableCall( cid=v12 _TypedList.elementSizeInBytes<0>, v2) int64
ParallelMove r0 <- r0, r1 <- fp[-1]
v11 <- UnboxInt64([non-speculative], v10 T{_Smi}) [0, 4611686018427387903] int64
v5 <- BinaryInt64Op(* [tr], v11 T{_Smi}, v4 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r1
DartReturn:16(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v64 <- LoadClassId(<non-smi> v2) int64
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r0
v4 <- DispatchTableCall( cid=v64 List.[]<0>, v2, v3) T{*?}
ParallelMove r1 <- r0
v5 <- StaticCall:12( parse<0> v4 T{X0}, result_type = T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- C, r2 <- r0
v18 <- StaticCall:10( _GrowableList@0150898.<0> v6 T{TypeArguments}, v5 T{int}, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r2 <- r0
v40 <- LoadField:36(v18 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v55 <- UnboxInt64:36([non-speculative], v40 T{_Smi}) [0, 576460752303423487] int64
v29 <- LoadField:36(v18 . GrowableObjectArray.data) T{_List}
ParallelMove r5 <- C goto:36 B7
B7
  Loop 0
  Loop Header
CheckStackOverflow:40(stack=0, loop=1)
Branch if RelationalOp(<, v20, v55 T{_Smi}) T{bool} goto (5, 6)
B5
  Loop 0
v54 <- BoxInt64(v20 T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- r4, r0 <- r0
StoreIndexed:32([_List] v29, v20 T{int}, v54 T{int})
v26 <- BinaryInt64Op(+ [tr], v20 T{int}, v59 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:38 B7
B6
ParallelMove r1 <- r2
StaticCall:18( forLoop<0> v18 T{_GrowableList})
ParallelMove r0 <- C
DartReturn:20(v0)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- C goto:34 B5
B5
  Loop 0
  Loop Header
ParallelMove fp[-1] <- r0
CheckStackOverflow:38(stack=0, loop=1)
v29 <- LoadField(v2 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v36 <- UnboxInt64([non-speculative], v29 T{_Smi}) [0, 576460752303423487] int64
Branch if RelationalOp(<, v4, v36 T{_Smi}) T{bool} goto (3, 4)
B3
  Loop 0
v18 <- LoadStaticField:4(instance, CallsInitializer) T{MyFinalizable}
ParallelMove r2 <- fp[-2]
v12 <- LoadField(v2 . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v37 <- UnboxInt64([non-speculative], v12) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- fp[-1]
GenericCheckBound:28(v37 T{_Smi}, v4) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-1]
v11 <- BinaryInt64Op(+ [tr], v4 T{int}, v41 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r0, r1 <- r2 goto:36 B5
B4
ParallelMove r0 <- C
DartReturn:40(v0)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
B0
B1
Enter frame
v2 <- AllocateObject:6(cls=MyFinalizable) T{MyFinalizable}
ParallelMove r0 <- r0
DartReturn:10(v2)
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
v5 <- StaticCall:10( main<0> v3) T{void?}
ParallelMove r0 <- r0
DartReturn:12(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- fp[4], r1 <- fp[5]
StoreField(v2 . _className@2408521 = v3)
ParallelMove r0 <- fp[3]
StoreField(v2 . _url@2408521 = v4)
ParallelMove r2 <- fp[2]
v10 <- UnboxInt64([non-speculative], v5) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 . _line@2408521 = v10 T{int} <int64>)
ParallelMove r0 <- C
DartReturn:12(v0)
B0
B1
ParallelMove r1 <- C
StoreStaticField(timerFactory, v2)
ParallelMove r0 <- C
DartReturn:10(v0)
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[4], r2 <- fp[3], r3 <- fp[2]
v7 <- StaticCall:10( _factory@1026248<0> v3, v4, v5) T{_Timer}
ParallelMove r0 <- r0
DartReturn:12(v7)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, r1 <- r2
CheckStackOverflow:8(stack=0, loop=0)
Branch if StrictCompare:12(===, v4 T{bool}, v5) goto (3, 4)
BoolTest
B3
v31 <- UnboxInt64([non-speculative], v2 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r1, r2 <- r2, r3 <- C
v26 <- StaticCall:10( _createTimer@1026248<0> v3 T{_Closure}, v31 T{int}, v5 T{bool}, result_type = T{_Timer}) T{_Timer}
ParallelMove r0 <- r0
DartReturn:20(v26 T{_Timer})
B4
v32 <- UnboxInt64([non-speculative], v2 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r1, r2 <- r2, r3 <- C
v16 <- StaticCall:10( _createTimer@1026248<0> v3 T{_Closure}, v32 T{int}, v17 T{bool}, result_type = T{_Timer}) T{_Timer}
ParallelMove r0 <- r0
DartReturn:26(v16 T{_Timer})
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[5], r2 <- fp[4], r3 <- fp[3], r5 <- fp[2]
StaticCall:10( _delayEntrypointInvocation@1026248<0> v2, v3, v4, v5)
ParallelMove r0 <- C
DartReturn:12(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-1] <- r1, fp[-2] <- r2, fp[-3] <- r3, fp[-4] <- r5
CheckStackOverflow:8(stack=0, loop=0)
v6 <- AllocateContext:10(num_variables=5) T{Context}
ParallelMove r2 <- r0, r0 <- fp[-1]
ParallelMove fp[-5] <- r2
StoreField(v6 . entryPoint = v2, NoStoreBarrier)
ParallelMove r0 <- fp[-2]
StoreField(v6 . args = v3, NoStoreBarrier)
ParallelMove r0 <- fp[-3]
StoreField(v6 . message = v4, NoStoreBarrier)
ParallelMove r0 <- fp[-4]
StoreField(v6 . allowZeroOneOrTwoArgs = v5, NoStoreBarrier)
ParallelMove r1 <- C
v7 <- StaticCall:12( RawReceivePort.<0> v0, result_type = T{_RawReceivePort}) T{_RawReceivePort}
ParallelMove r0 <- r0, r3 <- r0, r2 <- fp[-5]
ParallelMove fp[-1] <- r3
StoreField(v6 . port = v7)
ParallelMove r1 <- C, r2 <- r2
v10 <- AllocateClosure:14(v9, v6) T{_Closure}
ParallelMove r0 <- r0, r1 <- fp[-1]
StoreField(v7 T{_RawReceivePort} . ReceivePort.handler = v10 T{_Closure})
v23 <- LoadField(v7 T{_RawReceivePort} . ReceivePort.send_port {final}) T{_SendPort?}
MoveArgument(sp[1] <- v23 T{_SendPort})
MoveArgument(sp[0] <- v0 T{Null?})
StaticCall:10( _sendInternal@1026248<0> v23 T{_SendPort}, v0 T{Null?}, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:22(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v4 <- StaticCall:10( _RawReceivePort@1026248.<0> v0, v3, result_type = T{_RawReceivePort}) T{_RawReceivePort}
ParallelMove r0 <- r0
StoreField(v4 T{_RawReceivePort} . ReceivePort.handler = v0 T{Null?})
ParallelMove r0 <- r0
DartReturn:14(v4)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[3]
v4 <- LoadField(v2 . Closure.context {final}) T{*}
ParallelMove fp[-1] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v5 <- LoadField(v4 . port {final}) T{_RawReceivePort}
ParallelMove r1 <- r1
StaticCall:10( close<0> v5, using unchecked entrypoint)
ParallelMove r3 <- fp[-1]
v6 <- LoadField(v4 . allowZeroOneOrTwoArgs) T{bool}
Branch if StrictCompare:14(===, v6 T{bool}, v7) goto (3, 10)
BoolTest
B3
v11 <- LoadField(v4 . entryPoint) T{Function}
ParallelMove r0 <- r4, r2 <- C, r1 <- C, fp[-2] <- r4
v13 <- InstanceOf:20(v11 IS (dynamic, Never, Never) => dynamic, instantiator_type_args(v0), function_type_args(v0)) T{bool}
InlineInstanceof
FunctionTypeTest
BoolTest
ParallelMove r0 <- r0
Branch if StrictCompare:24(===, v13 T{bool}, v7) goto (4, 5)
BoolTest
B4
ParallelMove r3 <- fp[-1]
v26 <- LoadField(v4 . args) T{List<String>??}
v27 <- LoadField(v4 . message) T{Object??}
MoveArgument(sp[2] <- v11 T{_Closure})
MoveArgument(sp[1] <- v26)
MoveArgument(sp[0] <- v27)
v28 <- InstanceCall:32( dyn:call<0>, v11 T{_Closure}, v26, v27 IC[0: ]) T{*?}
InstanceCallAOT (non-smi)
ParallelMove  goto:62 B9
B5
ParallelMove r3 <- fp[-1]
ParallelMove r0 <- fp[-2], r2 <- C, r1 <- C
v16 <- InstanceOf:36(v11 T{Function} IS (dynamic, Never) => dynamic, instantiator_type_args(v0), function_type_args(v0)) T{bool}
InlineInstanceof
FunctionTypeTest
BoolTest
ParallelMove r0 <- r0
Branch if StrictCompare:40(===, v16 T{bool}, v7) goto (6, 7)
BoolTest
B6
ParallelMove r0 <- fp[-1]
v22 <- LoadField(v4 . args) T{List<String>??}
MoveArgument(sp[1] <- v11 T{_Closure})
MoveArgument(sp[0] <- v22)
v23 <- InstanceCall:48( dyn:call<0>, v11 T{_Closure}, v22 IC[0: ]) T{*?}
InstanceCallAOT (non-smi)
ParallelMove  goto:56 B8
B7
MoveArgument(sp[0] <- v11 T{Function})
v18 <- InstanceCall:52( dyn:call<0>, v11 T{Function} IC[0: ]) T{*?}
InstanceCallAOT (non-smi)
ParallelMove  goto:58 B8
B8
B9
B10
ParallelMove r0 <- r3
v8 <- LoadField(v4 . entryPoint) T{Function}
v9 <- LoadField(v4 . message) T{Object??}
MoveArgument(sp[1] <- v8)
MoveArgument(sp[0] <- v9)
v10 <- InstanceCall:68( dyn:call<0>, v8, v9 IC[0: ]) T{*?}
InstanceCallAOT (non-smi)
ParallelMove  goto:74 B11
B11
ParallelMove r0 <- C
DartReturn:76(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-1] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v7 <- LoadStaticField:4(_portMap@1026248, CallsInitializer) T{_Map}
ParallelMove r0 <- r0
ParallelMove fp[-2] <- r0
MoveArgument(sp[0] <- v2)
v4 <- StaticCall:12( _closeInternal@1026248<0> v2, using unchecked entrypoint, result_type = T{int}) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r1 <- fp[-2], r2 <- r0
StaticCall:14( remove<0> v7, v4, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:16(v0)
CheckStackOverflowSlowPath
B0
B1
ParallelMove r0 <- C
DartReturn:10(v2)
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v4)
v6 <- StaticCall:10( _startMainIsolate@1026248<0> v3, v4) T{void?}
ParallelMove r0 <- r0
DartReturn:12(v6)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[3], r2 <- fp[2], r3 <- C, r5 <- C
StaticCall:10( _delayEntrypointInvocation@1026248<0> v2, v3, v0, v4)
ParallelMove r0 <- C
DartReturn:12(v0)
CheckStackOverflowSlowPath
B0
B1
ParallelMove r0 <- C
DartReturn:10(v2)
B0
B2
ParallelMove r1 <- sp[0]
StoreStaticField(_pendingImmediateCallback@1026248, v3 T{_Closure})
ParallelMove r0 <- C
DartReturn:12(v0)
B0
B1
ParallelMove r0 <- sp[0], r1 <- sp[1]
StoreField(v2 . _msg@0150898 = v3)
ParallelMove r0 <- C
DartReturn:12(v0)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v11 <- CreateArray:10(v0 T{Null?}, v18 T{_Smi}) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v11, v19 T{_Smi}, v20 T{_OneByteString}, NoStoreBarrier)
ParallelMove r1 <- fp[2]
StoreIndexed([_List] v11, v21 T{_Smi}, v2 T{String}, NoStoreBarrier)
StoreIndexed([_List] v11, v22 T{_Smi}, v23 T{_OneByteString}, NoStoreBarrier)
MoveArgument(sp[0] <- v11)
v17 <- StaticCall:12( _interpolate@0150898<0> v11, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
v3 <- AllocateObject:10(cls=LateError) T{LateError}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v3 T{LateError} . _message@9040228 = v17, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:14(v3)
CheckStackOverflowSlowPath
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[0] <- v3)
v5 <- StaticCall:10( _throwLocalAssignedDuringInitialization@9040228<0> v3) T{*?}
ParallelMove r0 <- r0
DartReturn:12(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v11 <- CreateArray:10(v0 T{Null?}, v18 T{_Smi}) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v11, v19 T{_Smi}, v20 T{_OneByteString}, NoStoreBarrier)
ParallelMove r1 <- fp[2]
StoreIndexed([_List] v11, v21 T{_Smi}, v2 T{String}, NoStoreBarrier)
StoreIndexed([_List] v11, v22 T{_Smi}, v23 T{_OneByteString}, NoStoreBarrier)
MoveArgument(sp[0] <- v11)
v17 <- StaticCall:12( _interpolate@0150898<0> v11, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
v3 <- AllocateObject:10(cls=LateError) T{LateError}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v3 T{LateError} . _message@9040228 = v17, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:14(v3)
CheckStackOverflowSlowPath
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[0] <- v3)
v5 <- StaticCall:10( _throwLocalAlreadyInitialized@9040228<0> v3) T{*?}
ParallelMove r0 <- r0
DartReturn:12(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v11 <- CreateArray:10(v0 T{Null?}, v18 T{_Smi}) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v11, v19 T{_Smi}, v20 T{_OneByteString}, NoStoreBarrier)
ParallelMove r1 <- fp[2]
StoreIndexed([_List] v11, v21 T{_Smi}, v2 T{String}, NoStoreBarrier)
StoreIndexed([_List] v11, v22 T{_Smi}, v23 T{_OneByteString}, NoStoreBarrier)
MoveArgument(sp[0] <- v11)
v17 <- StaticCall:12( _interpolate@0150898<0> v11, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
v3 <- AllocateObject:10(cls=LateError) T{LateError}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v3 T{LateError} . _message@9040228 = v17, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:14(v3)
CheckStackOverflowSlowPath
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[0] <- v3)
v5 <- StaticCall:10( _throwLocalNotInitialized@9040228<0> v3) T{*?}
ParallelMove r0 <- r0
DartReturn:12(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v11 <- CreateArray:10(v0 T{Null?}, v18 T{_Smi}) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v11, v19 T{_Smi}, v20 T{_OneByteString}, NoStoreBarrier)
ParallelMove r1 <- fp[2]
StoreIndexed([_List] v11, v21 T{_Smi}, v2 T{String}, NoStoreBarrier)
StoreIndexed([_List] v11, v22 T{_Smi}, v23 T{_OneByteString}, NoStoreBarrier)
MoveArgument(sp[0] <- v11)
v17 <- StaticCall:12( _interpolate@0150898<0> v11, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
v3 <- AllocateObject:10(cls=LateError) T{LateError}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v3 T{LateError} . _message@9040228 = v17, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:14(v3)
CheckStackOverflowSlowPath
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[0] <- v3)
v5 <- StaticCall:10( _throwFieldAlreadyInitialized@9040228<0> v3) T{*?}
ParallelMove r0 <- r0
DartReturn:12(v5)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v5 <- CreateArray:10(v0, v4) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v5, v6, v7, NoStoreBarrier)
ParallelMove r1 <- fp[2]
StoreIndexed([_List] v5, v8, v3, NoStoreBarrier)
StoreIndexed([_List] v5, v9, v10, NoStoreBarrier)
MoveArgument(sp[0] <- v5)
v11 <- StaticCall:12( _interpolate@0150898<0> v5, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0, r1 <- fp[3]
StoreField(v2 . _message@9040228 = v11)
ParallelMove r0 <- C
DartReturn:16(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- C, r2 <- C
v5 <- CreateArray:10(v0, v4) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v5, v6, v7, NoStoreBarrier)
ParallelMove r1 <- fp[2]
StoreIndexed([_List] v5, v8, v3, NoStoreBarrier)
StoreIndexed([_List] v5, v9, v10, NoStoreBarrier)
MoveArgument(sp[0] <- v5)
v11 <- StaticCall:12( _interpolate@0150898<0> v5, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0, r1 <- fp[3]
StoreField(v2 . _message@9040228 = v11)
ParallelMove r0 <- C
DartReturn:16(v0)
CheckStackOverflowSlowPath
B0
B1
ParallelMove r1 <- sp[1]
v7 <- UnboxInt64([non-speculative], v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- sp[0]
v9 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- sp[2]
v10 <- LoadField(v2 T{Object} . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Int16List] v10 T{Object}, v7, v9, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:16(v0)
B0
B1
ParallelMove r1 <- sp[1]
v7 <- UnboxInt64([non-speculative], v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- sp[0]
v9 <- UnboxInt32([tr], [non-speculative], v4 T{int}) [-2147483648, 2147483647] int32
ParallelMove r1 <- sp[2]
v10 <- LoadField(v2 T{Object} . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Int32List] v10 T{Object}, v7, v9, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:16(v0)
B0
B1
ParallelMove r1 <- sp[1]
v7 <- UnboxInt64([non-speculative], v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- sp[0]
v9 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- sp[2]
v10 <- LoadField(v2 T{Object} . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Int64List] v10 T{Object}, v7, v9, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:16(v0)
B0
B1
ParallelMove r1 <- sp[1]
v7 <- UnboxInt64([non-speculative], v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- sp[0]
v9 <- UnboxInt64([non-speculative], v4 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- sp[2]
v10 <- LoadField(v2 T{Object} . PointerBase.data, MayLoadInnerPointer) untagged
StoreIndexed([_Int8List] v10 T{Object}, v7, v9, NoStoreBarrier)
ParallelMove r0 <- C
DartReturn:16(v0)
B0
B1
ParallelMove r1 <- sp[0]
v6 <- UnboxInt64([non-speculative], v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- sp[1]
v9 <- LoadField(v2 T{Object} . PointerBase.data, MayLoadInnerPointer) untagged
v7 <- LoadIndexed([_Int8List] v9 T{Object}, v6) [-128, 127] int64
v8 <- BoxInt64(v7) [-128, 127] T{_Smi}
ParallelMove r0 <- r0
DartReturn:14(v8)
B0
B1
ParallelMove r1 <- sp[0]
v6 <- UnboxInt64([non-speculative], v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- sp[1]
v9 <- LoadField(v2 T{Object} . PointerBase.data, MayLoadInnerPointer) untagged
v7 <- LoadIndexed([_Uint32List] v9 T{Object}, v6) [0, 4294967295] uint32
v8 <- BoxSmallInt(v7) [0, 4294967295] T{_Smi}
ParallelMove r0 <- r0
DartReturn:14(v8)
B0
B1
ParallelMove r1 <- sp[0]
v6 <- UnboxInt64([non-speculative], v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- sp[1]
v9 <- LoadField(v2 T{Object} . PointerBase.data, MayLoadInnerPointer) untagged
v7 <- LoadIndexed([_Uint8List] v9 T{Object}, v6) [0, 255] int64
v8 <- BoxInt64(v7) [0, 255] T{_Smi}
ParallelMove r0 <- r0
DartReturn:14(v8)
B0
B1
ParallelMove r1 <- sp[0]
v6 <- UnboxInt64([non-speculative], v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- sp[1]
v9 <- LoadField(v2 T{Object} . PointerBase.data, MayLoadInnerPointer) untagged
v7 <- LoadIndexed([_Int16List] v9 T{Object}, v6) [-32768, 32767] int64
v8 <- BoxInt64(v7) [-32768, 32767] T{_Smi}
ParallelMove r0 <- r0
DartReturn:14(v8)
B0
B1
ParallelMove r2 <- sp[0]
v6 <- UnboxInt64([non-speculative], v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- sp[1]
v9 <- LoadField(v2 T{Object} . PointerBase.data, MayLoadInnerPointer) untagged
v7 <- LoadIndexed([_Int64List] v9 T{Object}, v6) [-9223372036854775808, 9223372036854775807] int64
v8 <- BoxInt64(v7) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
DartReturn:14(v8)
B0
B1
ParallelMove r1 <- sp[0]
v6 <- UnboxInt64([non-speculative], v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- sp[1]
v9 <- LoadField(v2 T{Object} . PointerBase.data, MayLoadInnerPointer) untagged
v7 <- LoadIndexed([_Uint16List] v9 T{Object}, v6) [0, 65535] int64
v8 <- BoxInt64(v7) [0, 65535] T{_Smi}
ParallelMove r0 <- r0
DartReturn:14(v8)
B0
B5
Enter frame
CheckStackOverflow:22(stack=0, loop=0)
ParallelMove r0 <- fp[2]
Branch if StrictCompare:24(===, v2, v0) goto (6, 7)
B7
ParallelMove r0 <- r0
DartReturn:44(v2 T{Y0?})
B6
ParallelMove r1 <- C, r2 <- C
v10 <- CreateArray:32(v0, v9) T{_List}
ParallelMove r0 <- r0
StoreIndexed([_List] v10, v5, v11, NoStoreBarrier)
StoreIndexed([_List] v10, v12, v48 T{Abi}, NoStoreBarrier)
StoreIndexed([_List] v10, v14, v15, NoStoreBarrier)
MoveArgument(sp[0] <- v10)
v16 <- StaticCall:36( _interpolate@0150898<0> v10, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
v8 <- AllocateObject:30(cls=ArgumentError, <not-aliased>) T{ArgumentError}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v8 T{ArgumentError} . message = v16 T{String}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v8 T{ArgumentError} . _hasValue@0150898 = v36 T{bool}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:40(v8)
CheckStackOverflowSlowPath
B0
B1
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- sp[1]
v7 <- UnboxInt64([non-speculative], v5) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- sp[3]
v8 <- UnboxInt64([non-speculative], v3) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- sp[0]
v9 <- UnboxInt64([non-speculative], v6) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- sp[2]
v10 <- LoadField(v4 . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r1 <- sp[4]
v11 <- LoadField(v2 . PointerBase.data, MayLoadInnerPointer) untagged
ParallelMove r0 <- r4
MemoryCopy(v10 T{Object}, v11 T{Object}, v7, v8, v9, dest_cid=_Uint8List (115) [untagged], src_cid=_Uint8List (115) [untagged], unboxed_inputs, can_overlap)
Copying backwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
Copying forwards
Copying until region size is a multiple of chunk size
Copying chunks at a time
ParallelMove r0 <- C
DartReturn:10(v0)
CheckStackOverflowSlowPath
B0
B1
ParallelMove r1 <- sp[0]
v6 <- UnboxInt64([non-speculative], v3 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- sp[1]
v9 <- LoadField(v2 T{Object} . PointerBase.data, MayLoadInnerPointer) untagged
v7 <- LoadIndexed([_Int32List] v9 T{Object}, v6) [-2147483648, 2147483647] int32
v8 <- BoxSmallInt(v7) [-2147483648, 2147483647] T{_Smi}
ParallelMove r0 <- r0
DartReturn:14(v8)
B0
B1
Enter frame
CheckStackOverflow:4(stack=0, loop=0)
MoveArgument(sp[0] <- v3)
v4 <- StaticCall:8( _get_ffi_native_resolver@8050071<1> v3, result_type = T{Pointer}) T{Pointer}
ParallelMove r0 <- r0
ParallelMove fp[-1] <- r0
v2 <- AllocateContext:6(num_variables=1) T{Context}
ParallelMove r1 <- r0, r0 <- fp[-1]
StoreField(v2 . #ffiTarget0 = v4, NoStoreBarrier)
ParallelMove r1 <- C, r2 <- r1
v6 <- AllocateClosure:10(v5, v2, <not-aliased>) T{_Closure}
ParallelMove r0 <- r0
DartReturn:12(v6)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v2 <- LoadStaticField:4(_ffi_resolver@8050071, CallsInitializer) T{_Closure}
ParallelMove r0 <- r0
DartReturn:6(v2)
B0
B1
Enter frame
ParallelMove r1 <- fp[3]
v15 <- UnboxInt64([non-speculative], v5) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[6]
StoreField(v2 . _size@8050071 = v15 T{int} <int64>)
ParallelMove r0 <- fp[2]
StoreField(v2 . _nestedDimensions@8050071 = v6)
ParallelMove r0 <- fp[5]
StoreField(v2 T{Array} . _typedDataBase@8050071 = v3 T{Object})
ParallelMove r0 <- fp[4]
StoreField(v2 T{Array} . _offsetInBytes@8050071 = v4 T{int})
ParallelMove r0 <- C
DartReturn:12(v0)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r3 <- fp[2]
Branch if StrictCompare:10(===, v2, v3) goto (5, 3)
B5
B3
Branch if StrictCompare:14(===, v2, v4) goto (6, 7)
B6
B4
ParallelMove r0 <- r3
DartReturn:30(v2)
B7
v16 <- LoadClassId(v2) [1, 600] int64
Branch if EqualityCompare(v16 == v17) T{bool} goto (8, 9)
B8
ParallelMove r0 <- r3, r2 <- C, r1 <- C
t0 <- AssertAssignable:44(v2 T{_Closure}, v10, ' in type cast', instantiator_type_args(v0), function_type_args(v0)) T{_Closure}
AssertAssignable for compile-time type
TTSCall
MoveArgument(sp[0] <- v2 T{_Closure})
ParallelMove r0 <- fp[2]
v14 <- ClosureCall:48( closure=v2 T{_Closure}<0>, v2 T{_Closure}) T{*?}
ParallelMove r0 <- r0
DartReturn:50(v14)
B9
Branch if EqualityCompare(v16 T{_Smi} == v17) T{bool} goto (10, 11)
B10
ParallelMove r0 <- fp[2], r2 <- C, r1 <- C
t0 <- AssertAssignable:64(v2, v10, ' in type cast', instantiator_type_args(v0), function_type_args(v0)) T{_Closure}
AssertAssignable for compile-time type
TTSCall
MoveArgument(sp[0] <- v2 T{_Closure})
ParallelMove r0 <- fp[2]
v12 <- ClosureCall:68( closure=v2 T{_Closure}<0>, v2 T{_Closure}) T{*?}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:74 B12
B11
ParallelMove r0 <- fp[2] goto:76 B12
B12
ParallelMove r0 <- r0
DartReturn:78(v9)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v4)
StaticCall:10( _doThrowNew@0150898<0> v2, v3, v4)
ParallelMove r0 <- C
DartReturn:12(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- fp[6], r1 <- fp[7]
StoreField(v2 . _failedAssertion@0150898 = v3)
ParallelMove r0 <- fp[5]
StoreField(v2 . _url@0150898 = v4)
ParallelMove r2 <- fp[4]
v12 <- UnboxInt64([non-speculative], v5) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 . _line@0150898 = v12 T{int} <int64>)
ParallelMove r2 <- fp[3]
v13 <- UnboxInt64([non-speculative], v6) [-9223372036854775808, 9223372036854775807] int64
StoreField(v2 . _column@0150898 = v13 T{int} <int64>)
ParallelMove r0 <- fp[2]
StoreField(v2 . message = v7)
ParallelMove r0 <- C
DartReturn:12(v0)
B0
B1
ParallelMove r0 <- sp[0], r1 <- sp[4]
StoreField(v2 . _message@0150898 = v6)
ParallelMove r0 <- C
DartReturn:12(v0)
B0
B1
StoreField(v2 . _hasValue@4048458 = v3)
ParallelMove r0 <- C
DartReturn:4(v0)
B0
B1
ParallelMove r0 <- r2
StoreField(v2 . _stateData@4048458 = v3)
ParallelMove r0 <- C
DartReturn:4(v0)
B0
B1
Enter frame
ParallelMove r1 <- fp[3]
v12 <- AllocateObject:10(cls=_GrowableList, v2 T{*?}, <not-aliased>) T{_GrowableList}
ParallelMove r0 <- r0, r1 <- fp[2]
StoreField(v12 . GrowableObjectArray.data = v3 T{_List}, NoStoreBarrier)
v19 <- LoadField(v3 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
StoreField(v12 T{_GrowableList} . GrowableObjectArray.length = v19 T{_Smi}, NoStoreBarrier)
ParallelMove r0 <- r0
DartReturn:16(v12 T{_GrowableList})
B0
B1
Enter frame
v4 <- LoadField(v2 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v6 <- BinarySmiOp:4(- [tr], v4, v5) [-1, 4611686018427387902] T{_Smi}
v7 <- LoadIndexedUnsafe(fp[v6 + 16]) T{*?}
ParallelMove fp[-2] <- r3
Branch if RelationalOp:6(<=, v5, v6) T{bool} goto (2, 3)
B2
v15 <- LoadIndexedUnsafe(fp[v6 T{_Smi} + 8]) T{FutureOr<X0>??}
ParallelMove r4 <- r0 goto:20 B5
B3
ParallelMove r4 <- C goto:18 B5
B5
ParallelMove fp[-1] <- r4
CheckStackOverflow:26(stack=0, loop=0)
Branch if StrictCompare:30(===, v10, v0) goto (6, 7)
B6
ParallelMove r0 <- r4, r2 <- r3, r1 <- C
t2 <- AssertAssignable:36(v10 T{FutureOr<X0>??}, v13, ' in type cast', instantiator_type_args(v7), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove  goto:42 B8
B7
B8
ParallelMove r1 <- fp[-2]
v11 <- AllocateObject:28(cls=_Future, v7) T{_Future}
ParallelMove r1 <- r0, r0 <- C
ParallelMove fp[-2] <- r1
StoreField(v11 T{_Future} . _state@4048458 = v33 T{_Smi} <int64>, NoStoreBarrier)
v28 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r1 <- r0, r0 <- fp[-2]
StoreField(v11 T{_Future} . _zone@4048458 = v28, NoStoreBarrier)
ParallelMove r1 <- r0, r2 <- fp[-1]
StaticCall:14( _asyncComplete@4048458<0> v11 T{_Future}, v10 T{FutureOr<X0>?}, using unchecked entrypoint)
ParallelMove r0 <- fp[-2]
DartReturn:48(v11)
CheckStackOverflowSlowPath
B0
B1
ParallelMove r0 <- sp[0], r1 <- sp[1]
StoreField(v2 . _hash@0150898 = v3)
ParallelMove r0 <- C
DartReturn:4(v0)
B0
B1
ParallelMove r0 <- sp[0], r1 <- sp[1]
StoreField(v2 . _context@0150898 = v3)
ParallelMove r0 <- C
DartReturn:4(v0)
B0
B1
ParallelMove r0 <- sp[0], r1 <- sp[1]
StoreField(v2 . _delayed_type_arguments@0150898 = v3)
ParallelMove r0 <- C
DartReturn:4(v0)
B0
B1
ParallelMove r0 <- C
DartReturn:10(v4)
B0
B1
ParallelMove r0 <- C
DartReturn:10(v4)
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
StaticCall:10( _removeEntries@8050071<0> v2, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:12(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v90 <- LoadField(v2 T{_NativeFinalizer} . FinalizerBase.entries_collected) T{FinalizerEntry?}
StoreField(v2 T{_NativeFinalizer} . FinalizerBase.entries_collected = v0 T{Null?})
ParallelMove r3 <- r1 goto:66 B10
B10
  Loop 0
  Loop Header
ParallelMove fp[-1] <- r3
CheckStackOverflow:64(stack=0, loop=1)
Branch if StrictCompare:12(!==, v5, v0) goto (9, 11)
B9
  Loop 0
v85 <- LoadField(v2 T{_NativeFinalizer} . FinalizerBase.all_entries) T{_Set?}
ParallelMove r1 <- r1, r2 <- r3
v91 <- StaticCall:18( remove<0> v85 T{_Set}, v5 T{FinalizerEntry}) T{bool}
ParallelMove r2 <- fp[-1]
v47 <- LoadField(v5 T{FinalizerEntry} . FinalizerEntry.detach) T{*?}
ParallelMove fp[-3] <- r0
Branch if StrictCompare:22(!==, v47 T{Object??}, v0) goto (3, 7)
B3
  Loop 0
ParallelMove r3 <- fp[-2]
v80 <- LoadField(v2 T{_NativeFinalizer} . FinalizerBase.detachments) T{*?}
Branch if StrictCompare:12(===, v80 T{Expando?}, v0 T{Null?}) goto (16, 17)
B16
  Loop 0
ParallelMove r1 <- C
v33 <- AllocateObject:18(cls=Expando, v37 T{TypeArguments}) T{Expando}
ParallelMove r1 <- C, r2 <- C, r0 <- r0
ParallelMove fp[-4] <- r0
v66 <- CreateArray:10(v67 T{TypeArguments}, v68 T{_Smi}) T{_List}
ParallelMove r0 <- r0, r1 <- fp[-4]
StoreField(v33 T{Expando} . _data@0150898 = v66, NoStoreBarrier)
ParallelMove r3 <- C
StoreField(v33 T{Expando} . _used@0150898 = v106 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r0 <- r1, r4 <- fp[-2]
StoreField(v2 T{_NativeFinalizer} . FinalizerBase.detachments = v33 T{Expando})
ParallelMove r1 <- r1 goto:28 B18
B17
  Loop 0
ParallelMove r4 <- r3, r3 <- C
ParallelMove r1 <- r1 goto:30 B18
B18
  Loop 0
ParallelMove r1 <- r1, r2 <- fp[-3]
v14 <- StaticCall:30( []<0> v105 T{Expando}, v47 T{Object?}, using unchecked entrypoint) T{X0??}
ParallelMove r0 <- r0
Branch if StrictCompare:32(===, v14, v0) goto (4, 5)
B4
B5
  Loop 0
v119 <- LoadClassId(<non-smi> v14 T{X0?}) int64
ParallelMove r0 <- r1, r1 <- r0, r2 <- fp[-1]
v15 <- DispatchTableCall( cid=v119 Set.remove<0>, v14 T{X0?}, v5 T{FinalizerEntry})
ParallelMove  goto:46 B6
B6
B7
B8
  Loop 0
v24 <- LoadField(v5 T{FinalizerEntry} . FinalizerEntry.next) T{FinalizerEntry?}
ParallelMove r3 <- r3, r0 <- fp[-2] goto:62 B10
B11
ParallelMove r0 <- C
DartReturn:70(v0)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r2 <- r1, r0 <- r2, fp[-1] <- r1, fp[-2] <- r2
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r0
StaticCall:10( checkValidWeakTarget<0> v3)
ParallelMove r1 <- fp[-1]
v56 <- LoadField(v2 T{Expando} . _data@0150898) T{_List}
v62 <- LoadField(v56 T{_List} . Array.length {final}) [0, 576460752303423487] T{_Smi}
v72 <- UnboxInt64([non-speculative], v62 T{_Smi}) [0, 576460752303423487] int64
v6 <- BinaryInt64Op(- [tr], v72 T{_Smi}, v83 T{_Smi}) [v72-1, v72-1] int64
ParallelMove r3 <- fp[-2], fp[-3] <- r2
v111 <- LoadClassId(v3) int64
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r0
v7 <- DispatchTableCall( cid=v111 Object._identityHashCode<0>, v3) T{int}
ParallelMove r0 <- r0
v73 <- UnboxInt64([non-speculative], v7 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- fp[-3]
v8 <- BinaryInt64Op(& [tr], v73 T{int}, v6) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r4 <- fp[-1]
v9 <- LoadField(v2 . _data@0150898) T{_List}
v22 <- LoadField(v9 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v74 <- UnboxInt64([non-speculative], v22) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- r3
GenericCheckBound:22(v74 T{_Smi}, v8) [-9223372036854775808, 9223372036854775807] int64
v84 <- LoadIndexed:22([_List] v9, v8 T{int}) T{_WeakProperty?}
v108 <- UnboxInt64([non-speculative], v22) int64
ParallelMove r7 <- r3, r6 <- r0, r5 <- r5, r3 <- r1 goto:80 B9
B9
  Loop 0
  Loop Header
ParallelMove fp[-4] <- r7, fp[-5] <- r6, fp[-6] <- r5, fp[-7] <- r3
CheckStackOverflow:78(stack=0, loop=1)
Branch if StrictCompare:24(!==, v12, v0) goto (8, 10)
B8
  Loop 0
v51 <- LoadField(v12 T{_WeakProperty} . WeakProperty.key) T{*?}
ParallelMove r0 <- r0, r1 <- fp[-2]
Branch if StrictCompare:30(===, v51 T{*?}, v3, with number check) goto (3, 4)
B4
  Loop 0
ParallelMove r0 <- fp[-5]
v41 <- LoadField(v12 T{_WeakProperty} . WeakProperty.key) T{*?}
Branch if StrictCompare:44(===, v41 T{*?}, v0) goto (5, 6)
B5
  Loop 0
ParallelMove r1 <- fp[-4]
v36 <- LoadStaticField:4(_deletedEntry@0150898, CallsInitializer) T{_WeakProperty}
ParallelMove r0 <- fp[-7], r1 <- fp[-4], r2 <- r0
GenericCheckBound:54(v90 T{_Smi}, v11) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- fp[-6], r0 <- r2, r2 <- fp[-4]
StoreIndexed:54([_List] v80 T{_List}, v11 T{int}, v36 T{_WeakProperty})
ParallelMove  goto:60 B7
B6
  Loop 0
ParallelMove r2 <- fp[-4]
ParallelMove  goto:62 B7
B7
  Loop 0
v15 <- BinaryInt64Op(+ [tr], v11, v83 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
v16 <- BinaryInt64Op(& [tr], v15, v6) [-9223372036854775808, 9223372036854775807] int64
v17 <- LoadField(v2 . _data@0150898) T{_List}
v27 <- LoadField(v17 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v78 <- UnboxInt64([non-speculative], v27) [0, 576460752303423487] int64
ParallelMove r0 <- r0, r1 <- r2
GenericCheckBound:70(v78 T{_Smi}, v16) [-9223372036854775808, 9223372036854775807] int64
v85 <- LoadIndexed:70([_List] v17, v16 T{int}) T{_WeakProperty?}
v110 <- UnboxInt64([non-speculative], v27) int64
ParallelMove r7 <- r2, r6 <- r6, r5 <- r5, r3 <- r0, r4 <- r8, r2 <- r4 goto:76 B9
B3
ParallelMove r0 <- fp[-5]
v46 <- LoadField(v12 T{_WeakProperty} . WeakProperty.value) T{*?}
ParallelMove r0 <- r1
DartReturn:38(v46 T{*?})
B10
ParallelMove r0 <- C
DartReturn:84(v0)
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- fp[2]
StaticCall:10( _runFinalizers@0150898<0> v2, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:12(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-3] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v104 <- LoadField(v2 T{_FinalizerImpl} . FinalizerBase.entries_collected) T{FinalizerEntry?}
StoreField(v2 T{_FinalizerImpl} . FinalizerBase.entries_collected = v0 T{Null?})
v56 <- LoadField:88(v2 T{_FinalizerImpl} . Finalizer.callback {final}) T{_Closure}
ParallelMove fp[-2] <- r2
ParallelMove r3 <- r0 goto:88 B13
B13
  Loop 0
  Loop Header
ParallelMove fp[-1] <- r3
CheckStackOverflow:86(stack=0, loop=1)
Branch if StrictCompare:12(!==, v5, v0) goto (12, 14)
B12
  Loop 0
v61 <- LoadField(v5 T{FinalizerEntry} . FinalizerEntry.token) T{*?}
Branch if StrictCompare:18(!==, v61 T{Object??}, v5 T{FinalizerEntry}) goto (3, 4)
B3
  Loop 0
MoveArgument(sp[1] <- v56)
MoveArgument(sp[0] <- v61 T{Object??})
ParallelMove r0 <- r2
v20 <- ClosureCall:28( closure=v56<0>, v56, v61 T{Object??}) T{*?}
ParallelMove  goto:34 B5
B4
B5
  Loop 0
v99 <- LoadField(v2 T{_FinalizerImpl} . FinalizerBase.all_entries) T{_Set?}
ParallelMove r1 <- r1, r2 <- r3
v105 <- StaticCall:40( remove<0> v99 T{_Set}, v5 T{FinalizerEntry}) T{bool}
ParallelMove r2 <- fp[-1]
v51 <- LoadField(v5 T{FinalizerEntry} . FinalizerEntry.detach) T{*?}
ParallelMove fp[-4] <- r0
Branch if StrictCompare:44(!==, v51 T{Object??}, v0) goto (6, 10)
B6
  Loop 0
ParallelMove r3 <- fp[-3]
v94 <- LoadField(v2 T{_FinalizerImpl} . FinalizerBase.detachments) T{*?}
Branch if StrictCompare:12(===, v94 T{Expando?}, v0 T{Null?}) goto (19, 20)
B19
  Loop 0
ParallelMove r1 <- C
v37 <- AllocateObject:18(cls=Expando, v41 T{TypeArguments}) T{Expando}
ParallelMove r1 <- C, r2 <- C, r0 <- r0
ParallelMove fp[-5] <- r0
v80 <- CreateArray:10(v81 T{TypeArguments}, v82 T{_Smi}) T{_List}
ParallelMove r0 <- r0, r1 <- fp[-5]
StoreField(v37 T{Expando} . _data@0150898 = v80, NoStoreBarrier)
ParallelMove r3 <- C
StoreField(v37 T{Expando} . _used@0150898 = v120 T{_Smi} <int64>, NoStoreBarrier)
ParallelMove r0 <- r1, r4 <- fp[-3]
StoreField(v2 T{_FinalizerImpl} . FinalizerBase.detachments = v37 T{Expando})
ParallelMove r1 <- r1 goto:28 B21
B20
  Loop 0
ParallelMove r4 <- r3, r3 <- C
ParallelMove r1 <- r1 goto:30 B21
B21
  Loop 0
ParallelMove r1 <- r1, r2 <- fp[-4]
v16 <- StaticCall:52( []<0> v119 T{Expando}, v51 T{Object?}, using unchecked entrypoint) T{X0??}
ParallelMove r0 <- r0
Branch if StrictCompare:54(===, v16, v0) goto (7, 8)
B7
B8
  Loop 0
v134 <- LoadClassId(<non-smi> v16 T{X0?}) int64
ParallelMove r0 <- r1, r1 <- r0, r2 <- fp[-1]
v17 <- DispatchTableCall( cid=v134 Set.remove<0>, v16 T{X0?}, v5 T{FinalizerEntry})
ParallelMove  goto:68 B9
B9
B10
B11
  Loop 0
v28 <- LoadField(v5 T{FinalizerEntry} . FinalizerEntry.next) T{FinalizerEntry?}
ParallelMove r3 <- r3, r1 <- fp[-3], r2 <- fp[-2] goto:84 B13
B14
ParallelMove r0 <- C
DartReturn:92(v0)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v9 <- LoadStaticField:4(_ffi_resolver@8050071, CallsInitializer) T{_Closure}
ParallelMove r0 <- r0
MoveArgument(sp[3] <- v9 T{_Closure})
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v4)
ParallelMove r0 <- r0
v6 <- ClosureCall:14( closure=v9 T{_Closure}<0>, v9 T{_Closure}, v2, v3, v4) T{*?}
ParallelMove r0 <- r0
DartReturn:16(v6)
CheckStackOverflowSlowPath
B0
B2
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[2] <- v3)
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v5)
v7 <- StaticCall:10( _ffi_resolver_function@8050071<0> v3, v4, v5) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
DartReturn:12(v7)
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
v4 <- LoadClassId(v2) int64
MoveArgument(sp[0] <- v2)
ParallelMove r0 <- r1
v3 <- DispatchTableCall( cid=v4 Object.toString<0>, v2) T{String}
ParallelMove r0 <- r0
DartReturn:12(v3 T{String})
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
v4 <- LoadClassId(v2) int64
MoveArgument(sp[0] <- v2)
ParallelMove r0 <- r1
v3 <- DispatchTableCall( cid=v4 Object.hashCode<0>, v2) T{int}
ParallelMove r0 <- r0
DartReturn:12(v3 T{int})
CheckStackOverflowSlowPath
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[3]
v5 <- LoadClassId(v2) int64
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v3)
ParallelMove r0 <- r1
v4 <- DispatchTableCall( cid=v5 Object.==<0>, v2, v3) T{bool}
ParallelMove r0 <- r0
DartReturn:12(v4 T{bool})
CheckStackOverflowSlowPath
B0
B1
Enter frame
MoveArgument(sp[5] <- v2)
MoveArgument(sp[4] <- v3)
MoveArgument(sp[3] <- v4)
MoveArgument(sp[2] <- v5)
MoveArgument(sp[1] <- v6)
MoveArgument(sp[0] <- v0)
v7 <- NativeCall(TypedDataBase_setClampedRange) T{*?}
ParallelMove r0 <- r0
DartReturn:8(v7)
Checking for concrete finalized classes:
 * 111 (_Int8List)
 * 112 (_Int8ArrayView)
 * 113 (_ExternalInt8Array)
 * 114 (_UnmodifiableInt8ArrayView)
 * 115 (_Uint8List)
 * 116 (_Uint8ArrayView)
 * 117 (_ExternalUint8Array)
 * 118 (_UnmodifiableUint8ArrayView)
 * 119 (_Uint8ClampedList)
 * 120 (_Uint8ClampedArrayView)
 * 121 (_ExternalUint8ClampedArray)
 * 122 (_UnmodifiableUint8ClampedArrayView)
 * 123 (_Int16List)
 * 124 (_Int16ArrayView)
 * 125 (_ExternalInt16Array)
 * 126 (_UnmodifiableInt16ArrayView)
 * 127 (_Uint16List)
 * 128 (_Uint16ArrayView)
 * 129 (_ExternalUint16Array)
 * 130 (_UnmodifiableUint16ArrayView)
 * 131 (_Int32List)
 * 132 (_Int32ArrayView)
 * 133 (_ExternalInt32Array)
 * 134 (_UnmodifiableInt32ArrayView)
 * 135 (_Uint32List)
 * 136 (_Uint32ArrayView)
 * 137 (_ExternalUint32Array)
 * 138 (_UnmodifiableUint32ArrayView)
 * 139 (_Int64List)
 * 140 (_Int64ArrayView)
 * 141 (_ExternalInt64Array)
 * 142 (_UnmodifiableInt64ArrayView)
 * 143 (_Uint64List)
 * 144 (_Uint64ArrayView)
 * 145 (_ExternalUint64Array)
 * 146 (_UnmodifiableUint64ArrayView)
 * 549 (CodeUnits)
Checking for concrete finalized classes:
 * 89 (_List)
 * 90 (_ImmutableList)
 * 91 (_GrowableList)
Not checking the following concrete implementors of List:
 * 147(_Float32List): List<double> is not a subtype of List<int>
 * 148(_Float32ArrayView): List<double> is not a subtype of List<int>
 * 149(_ExternalFloat32Array): List<double> is not a subtype of List<int>
 * 150(_UnmodifiableFloat32ArrayView): List<double> is not a subtype of List<int>
 * 151(_Float64List): List<double> is not a subtype of List<int>
 * 152(_Float64ArrayView): List<double> is not a subtype of List<int>
 * 153(_ExternalFloat64Array): List<double> is not a subtype of List<int>
 * 154(_UnmodifiableFloat64ArrayView): List<double> is not a subtype of List<int>
 * 155(_Float32x4List): List<Float32x4> is not a subtype of List<int>
 * 156(_Float32x4ArrayView): List<Float32x4> is not a subtype of List<int>
 * 157(_ExternalFloat32x4Array): List<Float32x4> is not a subtype of List<int>
 * 158(_UnmodifiableFloat32x4ArrayView): List<Float32x4> is not a subtype of List<int>
 * 159(_Int32x4List): List<Int32x4> is not a subtype of List<int>
 * 160(_Int32x4ArrayView): List<Int32x4> is not a subtype of List<int>
 * 161(_ExternalInt32x4Array): List<Int32x4> is not a subtype of List<int>
 * 162(_UnmodifiableInt32x4ArrayView): List<Int32x4> is not a subtype of List<int>
 * 163(_Float64x2List): List<Float64x2> is not a subtype of List<int>
 * 164(_Float64x2ArrayView): List<Float64x2> is not a subtype of List<int>
 * 165(_ExternalFloat64x2Array): List<Float64x2> is not a subtype of List<int>
 * 166(_UnmodifiableFloat64x2ArrayView): List<Float64x2> is not a subtype of List<int>
Generating check for type argument 0: int
Checks for Type
Checking for concrete finalized classes:
 * 59 (_Smi)
 * 60 (_Mint)
Checking for concrete finalized classes:
 * 115 (_Uint8List)
 * 116 (_Uint8ArrayView)
 * 117 (_ExternalUint8Array)
 * 118 (_UnmodifiableUint8ArrayView)
Checking for cid 298 (Symbol)
B0
B1
Enter frame
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(InvocationMirror_unpackTypeArguments) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v4, v5, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{List<Type>}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v4 T{List<Type>})
Checking for concrete finalized classes:
 * 89 (_List)
 * 90 (_ImmutableList)
 * 91 (_GrowableList)
Not checking the following concrete implementors of List:
 * 111(_Int8List): List<int> is not a subtype of List<Type>
 * 112(_Int8ArrayView): List<int> is not a subtype of List<Type>
 * 113(_ExternalInt8Array): List<int> is not a subtype of List<Type>
 * 114(_UnmodifiableInt8ArrayView): List<int> is not a subtype of List<Type>
 * 115(_Uint8List): List<int> is not a subtype of List<Type>
 * 116(_Uint8ArrayView): List<int> is not a subtype of List<Type>
 * 117(_ExternalUint8Array): List<int> is not a subtype of List<Type>
 * 118(_UnmodifiableUint8ArrayView): List<int> is not a subtype of List<Type>
 * 119(_Uint8ClampedList): List<int> is not a subtype of List<Type>
 * 120(_Uint8ClampedArrayView): List<int> is not a subtype of List<Type>
 * 121(_ExternalUint8ClampedArray): List<int> is not a subtype of List<Type>
 * 122(_UnmodifiableUint8ClampedArrayView): List<int> is not a subtype of List<Type>
 * 123(_Int16List): List<int> is not a subtype of List<Type>
 * 124(_Int16ArrayView): List<int> is not a subtype of List<Type>
 * 125(_ExternalInt16Array): List<int> is not a subtype of List<Type>
 * 126(_UnmodifiableInt16ArrayView): List<int> is not a subtype of List<Type>
 * 127(_Uint16List): List<int> is not a subtype of List<Type>
 * 128(_Uint16ArrayView): List<int> is not a subtype of List<Type>
 * 129(_ExternalUint16Array): List<int> is not a subtype of List<Type>
 * 130(_UnmodifiableUint16ArrayView): List<int> is not a subtype of List<Type>
 * 131(_Int32List): List<int> is not a subtype of List<Type>
 * 132(_Int32ArrayView): List<int> is not a subtype of List<Type>
 * 133(_ExternalInt32Array): List<int> is not a subtype of List<Type>
 * 134(_UnmodifiableInt32ArrayView): List<int> is not a subtype of List<Type>
 * 135(_Uint32List): List<int> is not a subtype of List<Type>
 * 136(_Uint32ArrayView): List<int> is not a subtype of List<Type>
 * 137(_ExternalUint32Array): List<int> is not a subtype of List<Type>
 * 138(_UnmodifiableUint32ArrayView): List<int> is not a subtype of List<Type>
 * 139(_Int64List): List<int> is not a subtype of List<Type>
 * 140(_Int64ArrayView): List<int> is not a subtype of List<Type>
 * 141(_ExternalInt64Array): List<int> is not a subtype of List<Type>
 * 142(_UnmodifiableInt64ArrayView): List<int> is not a subtype of List<Type>
 * 143(_Uint64List): List<int> is not a subtype of List<Type>
 * 144(_Uint64ArrayView): List<int> is not a subtype of List<Type>
 * 145(_ExternalUint64Array): List<int> is not a subtype of List<Type>
 * 146(_UnmodifiableUint64ArrayView): List<int> is not a subtype of List<Type>
 * 147(_Float32List): List<double> is not a subtype of List<Type>
 * 148(_Float32ArrayView): List<double> is not a subtype of List<Type>
 * 149(_ExternalFloat32Array): List<double> is not a subtype of List<Type>
 * 150(_UnmodifiableFloat32ArrayView): List<double> is not a subtype of List<Type>
 * 151(_Float64List): List<double> is not a subtype of List<Type>
 * 152(_Float64ArrayView): List<double> is not a subtype of List<Type>
 * 153(_ExternalFloat64Array): List<double> is not a subtype of List<Type>
 * 154(_UnmodifiableFloat64ArrayView): List<double> is not a subtype of List<Type>
 * 155(_Float32x4List): List<Float32x4> is not a subtype of List<Type>
 * 156(_Float32x4ArrayView): List<Float32x4> is not a subtype of List<Type>
 * 157(_ExternalFloat32x4Array): List<Float32x4> is not a subtype of List<Type>
 * 158(_UnmodifiableFloat32x4ArrayView): List<Float32x4> is not a subtype of List<Type>
 * 159(_Int32x4List): List<Int32x4> is not a subtype of List<Type>
 * 160(_Int32x4ArrayView): List<Int32x4> is not a subtype of List<Type>
 * 161(_ExternalInt32x4Array): List<Int32x4> is not a subtype of List<Type>
 * 162(_UnmodifiableInt32x4ArrayView): List<Int32x4> is not a subtype of List<Type>
 * 163(_Float64x2List): List<Float64x2> is not a subtype of List<Type>
 * 164(_Float64x2ArrayView): List<Float64x2> is not a subtype of List<Type>
 * 165(_ExternalFloat64x2Array): List<Float64x2> is not a subtype of List<Type>
 * 166(_UnmodifiableFloat64x2ArrayView): List<Float64x2> is not a subtype of List<Type>
 * 549(CodeUnits): List<int> is not a subtype of List<Type>
Generating check for type argument 0: Type
Checks for Type
Checking for concrete finalized classes:
 * 48 (_Type)
 * 49 (_FunctionType)
 * 50 (_RecordType)
 * 51 (_TypeParameter)
 * 516 (_TypeRef)
B0
B1
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(RegExp_getIsUnicode) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v3, v4, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{bool}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v3 T{bool})
Checking for concrete finalized classes:
 * 519 (_StringMatch)
 * 544 (_RegExpMatch)
Checking for cid 544 (_RegExpMatch)
B0
B1
Intrinsic
Enter frame
MoveArgument(sp[3] <- v2)
MoveArgument(sp[2] <- v3)
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v0)
v5 <- NativeCall(RegExp_ExecuteMatch) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v5, v6, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{List<int>??}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v5 T{List<int>??})
Checking for concrete finalized classes:
 * 111 (_Int8List)
 * 112 (_Int8ArrayView)
 * 113 (_ExternalInt8Array)
 * 114 (_UnmodifiableInt8ArrayView)
 * 115 (_Uint8List)
 * 116 (_Uint8ArrayView)
 * 117 (_ExternalUint8Array)
 * 118 (_UnmodifiableUint8ArrayView)
 * 119 (_Uint8ClampedList)
 * 120 (_Uint8ClampedArrayView)
 * 121 (_ExternalUint8ClampedArray)
 * 122 (_UnmodifiableUint8ClampedArrayView)
 * 123 (_Int16List)
 * 124 (_Int16ArrayView)
 * 125 (_ExternalInt16Array)
 * 126 (_UnmodifiableInt16ArrayView)
 * 127 (_Uint16List)
 * 128 (_Uint16ArrayView)
 * 129 (_ExternalUint16Array)
 * 130 (_UnmodifiableUint16ArrayView)
 * 131 (_Int32List)
 * 132 (_Int32ArrayView)
 * 133 (_ExternalInt32Array)
 * 134 (_UnmodifiableInt32ArrayView)
 * 135 (_Uint32List)
 * 136 (_Uint32ArrayView)
 * 137 (_ExternalUint32Array)
 * 138 (_UnmodifiableUint32ArrayView)
 * 139 (_Int64List)
 * 140 (_Int64ArrayView)
 * 141 (_ExternalInt64Array)
 * 142 (_UnmodifiableInt64ArrayView)
 * 143 (_Uint64List)
 * 144 (_Uint64ArrayView)
 * 145 (_ExternalUint64Array)
 * 146 (_UnmodifiableUint64ArrayView)
 * 549 (CodeUnits)
Checking for concrete finalized classes:
 * 89 (_List)
 * 90 (_ImmutableList)
 * 91 (_GrowableList)
Not checking the following concrete implementors of List:
 * 147(_Float32List): List<double> is not a subtype of List<int>?
 * 148(_Float32ArrayView): List<double> is not a subtype of List<int>?
 * 149(_ExternalFloat32Array): List<double> is not a subtype of List<int>?
 * 150(_UnmodifiableFloat32ArrayView): List<double> is not a subtype of List<int>?
 * 151(_Float64List): List<double> is not a subtype of List<int>?
 * 152(_Float64ArrayView): List<double> is not a subtype of List<int>?
 * 153(_ExternalFloat64Array): List<double> is not a subtype of List<int>?
 * 154(_UnmodifiableFloat64ArrayView): List<double> is not a subtype of List<int>?
 * 155(_Float32x4List): List<Float32x4> is not a subtype of List<int>?
 * 156(_Float32x4ArrayView): List<Float32x4> is not a subtype of List<int>?
 * 157(_ExternalFloat32x4Array): List<Float32x4> is not a subtype of List<int>?
 * 158(_UnmodifiableFloat32x4ArrayView): List<Float32x4> is not a subtype of List<int>?
 * 159(_Int32x4List): List<Int32x4> is not a subtype of List<int>?
 * 160(_Int32x4ArrayView): List<Int32x4> is not a subtype of List<int>?
 * 161(_ExternalInt32x4Array): List<Int32x4> is not a subtype of List<int>?
 * 162(_UnmodifiableInt32x4ArrayView): List<Int32x4> is not a subtype of List<int>?
 * 163(_Float64x2List): List<Float64x2> is not a subtype of List<int>?
 * 164(_Float64x2ArrayView): List<Float64x2> is not a subtype of List<int>?
 * 165(_ExternalFloat64x2Array): List<Float64x2> is not a subtype of List<int>?
 * 166(_UnmodifiableFloat64x2ArrayView): List<Float64x2> is not a subtype of List<int>?
Generating check for type argument 0: int
Checks for Type
Checking for concrete finalized classes:
 * 59 (_Smi)
 * 60 (_Mint)
B0
B1
Intrinsic
Enter frame
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(String_charAt) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v4, v5, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{String}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v4 T{String})
B0
B1
MonomorphicCheckedEntry
Intrinsic
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v3 T{int})
v6 <- StaticCall:12( []<0> v2, v3 T{int}, recognized_kind = StringBaseCharAt) T{String}
ParallelMove r0 <- r0
DartReturn:14(v6)
CheckStackOverflowSlowPath
B0
B1
Intrinsic
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(Internal_allocateOneByteString) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v3, v4, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{String}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v3 T{String})
B0
B1
Enter frame
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(Internal_boundsCheckForPartialInstantiation) T{*?}
ParallelMove r0 <- r0
DartReturn:8(v4)
B0
B1
Enter frame
MoveArgument(sp[4] <- v2)
MoveArgument(sp[3] <- v3)
MoveArgument(sp[2] <- v4)
MoveArgument(sp[1] <- v5)
MoveArgument(sp[0] <- v0)
v6 <- NativeCall(Internal_prependTypeArguments) T{*?}
ParallelMove r0 <- r0
DartReturn:8(v6)
B0
B1
Enter frame
MoveArgument(sp[3] <- v2)
MoveArgument(sp[2] <- v3)
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v0)
v5 <- NativeCall(String_concatRange) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v5, v6, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{String}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v5 T{String})
B0
B1
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
v150 <- LoadField(v149 . _state@4048458) T{_SuspendState?}
Branch if StrictCompare:12(===, v150, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:18(v105)
B4
ParallelMove r6 <- r1, r5 <- C, r4 <- C, r3 <- C, r2 <- C goto:230 B34
B10
ParallelMove r2 <- fp[-14]
ParallelMove r4 <- r2, r3 <- r0, r2 <- r1, r1 <- r0, r0 <- r1 goto:64 B7
B20
ParallelMove r5 <- fp[-14], r4 <- r0, r3 <- r1, fp[-15] <- r0, fp[-16] <- r1
v359 <- LoadField(v120 T{_SyncStarIterator} . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- C, r2 <- r2, r1 <- C
AssertAssignable:4(v0 T{Null?}, v227 T{_TypeParameter}, 'value', instantiator_type_args(v359), function_type_args(v0 T{Null?})) T{Null?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r3 <- fp[-14]
StoreField(v120 T{_SyncStarIterator} . _current@4048458 = v0 T{Null?})
StoreField(v120 T{_SyncStarIterator} . _state@4048458 = v0 T{Null?})
v268 <- LoadField(v120 T{_SyncStarIterator} . _stack@4048458) T{_GrowableList?}
Branch if StrictCompare:16(!==, v268, v0 T{Null?}) goto (67, 70)
B67
v399 <- LoadField(v268 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v443 <- UnboxInt64([non-speculative], v399 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v443 T{_Smi} != v460 T{_Smi}) T{bool} goto (21, 71)
B21
v335 <- BinaryInt64Op(- [tr], v443 T{_Smi}, v461 T{_Smi}) [-1, 576460752303423486] int64
ParallelMove r0 <- r1, r1 <- r4
GenericCheckBound:14(v443 T{_Smi}, v335) [-9223372036854775808, 9223372036854775807] int64
v339 <- LoadField(v268 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v462 <- LoadIndexed:14([_List] v339, v335 T{int}) T{X0?}
ParallelMove r1 <- r2, r2 <- r4, fp[-17] <- r5
StaticCall:16( set:length<0> v268 T{_GrowableList}, v335 T{int}, using unchecked entrypoint)
ParallelMove r0 <- fp[-17], r1 <- fp[-14]
StoreField(v120 T{_SyncStarIterator} . _state@4048458 = v462 T{_SuspendState})
ParallelMove r4 <- r1, r3 <- fp[-15], r2 <- fp[-16], r1 <- fp[-15], r0 <- fp[-16] goto:128 B17
B31
ParallelMove r2 <- fp[-14]
ParallelMove r4 <- r2, r3 <- r0, r2 <- r1, r1 <- r0, r0 <- r1 goto:208 B30
B30
B32
B17
ParallelMove r6 <- r4, r5 <- r3, r4 <- r2, r3 <- r1, r2 <- r0 goto:226 B34
B34
ParallelMove fp[-18] <- r6, fp[-19] <- r5, fp[-20] <- r4, fp[-21] <- r3, fp[-22] <- r2
CheckStackOverflow:228(stack=0, loop=1)
v73 <- LoadField(v58 . _yieldStarIterator@4048458) T{Iterator<X0>??}
ParallelMove fp[-17] <- r7
Branch if StrictCompare:30(!==, v73, v0) goto (5, 11)
B5
B6
v540 <- LoadClassId(<non-smi> v73 T{Iterator<X0>?}) int64
ParallelMove r0 <- r0, r1 <- r7
v74 <- DispatchTableCall( cid=v540 Iterator.moveNext<0>, v73 T{Iterator<X0>?}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:46(===, v74 T{bool}, v72 T{bool}) goto (8, 9)
BoolTest
B8
ParallelMove r2 <- fp[-18], r1 <- fp[-17]
v541 <- LoadClassId(<non-smi> v73 T{Iterator<X0>?}) int64
ParallelMove r0 <- r0, r1 <- r1
v75 <- DispatchTableCall( cid=v541 Iterator.current<0>, v73 T{Iterator<X0>?}) T{*?}
ParallelMove r4 <- r0, r3 <- fp[-18]
ParallelMove fp[-23] <- r4
v262 <- LoadField(v58 T{_SyncStarIterator} . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r4, r2 <- r5, r1 <- C, fp[-17] <- r5
AssertAssignable:4(v75 T{X0?}, v227 T{_TypeParameter}, 'value', instantiator_type_args(v262), function_type_args(v0 T{Null?})) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-23], r1 <- fp[-18]
StoreField(v58 T{_SyncStarIterator} . _current@4048458 = v75 T{X0?})
ParallelMove r0 <- C
DartReturn:56(v72 T{bool})
B9
ParallelMove r1 <- fp[-18]
ParallelMove r4 <- r1, r3 <- fp[-19], r2 <- fp[-20], r1 <- fp[-21], r0 <- fp[-22] goto:60 B7
B7
StoreField(v106 T{_SyncStarIterator} . _yieldStarIterator@4048458 = v0 T{Null?})
ParallelMove r4 <- r4, r3 <- r3, r2 <- r2, r1 <- r1, r0 <- r0 goto:72 B12
B11
ParallelMove r1 <- r6
ParallelMove r4 <- r1, r3 <- fp[-19], r2 <- fp[-20], r1 <- fp[-21], r0 <- fp[-22] goto:74 B12
B12
ParallelMove fp[-17] <- r4, fp[-18] <- r3, fp[-19] <- r2
ParallelMove  goto:78 B13
B13
v90 <- LoadField(v76 . _state@4048458) T{_SuspendState?}
MoveArgument(sp[3] <- v90)
MoveArgument(sp[2] <- v0)
MoveArgument(sp[1] <- v83)
MoveArgument(sp[0] <- v84)
v91 <- StaticCall:84( _resume@4048458<0> v90, v0, v83, v84, using unchecked entrypoint, recognized_kind = SuspendState_resume) T{Object??}
ParallelMove r0 <- r0, r1 <- r0
ParallelMove fp[-20] <- r1
AssertBoolean:86(v91) T{bool}
ParallelMove r0 <- fp[-20]
Branch if StrictCompare:88(!==, v91 T{bool}, v72) goto (15, 19)
BoolTest
B15
ParallelMove r4 <- fp[-17]
v322 <- LoadField(v76 T{_SyncStarIterator} . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- C, r2 <- r3, r1 <- C, fp[-20] <- r3
AssertAssignable:4(v0 T{Null?}, v227 T{_TypeParameter}, 'value', instantiator_type_args(v322), function_type_args(v0 T{Null?})) T{Null?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r4 <- fp[-17]
StoreField(v76 T{_SyncStarIterator} . _current@4048458 = v0 T{Null?})
StoreField(v76 T{_SyncStarIterator} . _state@4048458 = v0 T{Null?})
v232 <- LoadField(v76 T{_SyncStarIterator} . _stack@4048458) T{_GrowableList?}
ParallelMove fp[-21] <- r3
Branch if StrictCompare:16(!==, v232, v0 T{Null?}) goto (57, 60)
B57
v394 <- LoadField(v232 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v447 <- UnboxInt64([non-speculative], v394 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v447 T{_Smi} != v460 T{_Smi}) T{bool} goto (16, 61)
B16
v298 <- BinaryInt64Op(- [tr], v447 T{_Smi}, v461 T{_Smi}) [-1, 576460752303423486] int64
ParallelMove r0 <- r1, r1 <- r5, fp[-24] <- r5
GenericCheckBound:14(v447 T{_Smi}, v298) [-9223372036854775808, 9223372036854775807] int64
v302 <- LoadField(v232 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v463 <- LoadIndexed:14([_List] v302, v298 T{int}) T{X0?}
ParallelMove r1 <- r3, r2 <- r5, fp[-20] <- r6
StaticCall:16( set:length<0> v232 T{_GrowableList}, v298 T{int}, using unchecked entrypoint)
ParallelMove r0 <- fp[-20], r4 <- fp[-17]
StoreField(v76 T{_SyncStarIterator} . _state@4048458 = v463 T{_SuspendState})
ParallelMove r4 <- r4, r3 <- fp[-18], r2 <- fp[-19], r1 <- C, r0 <- C goto:106 B17
B61
B60
B18
ParallelMove r0 <- C
DartReturn:110(v105)
B19
ParallelMove r4 <- fp[-17]
ParallelMove  goto:114 B14
B14
v92 <- LoadField(v76 . _yieldStarIterable@4048458) T{Iterable<X0>??}
ParallelMove fp[-21] <- r3
Branch if StrictCompare:136(!==, v92, v0) goto (23, 33)
B23
v216 <- LoadField(v76 T{_SyncStarIterator} . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- C, r2 <- r5, r1 <- C, fp[-20] <- r5
AssertAssignable:4(v0 T{Null?}, v218 T{_Type}, 'value', instantiator_type_args(v216), function_type_args(v0 T{Null?})) T{Null?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r3 <- fp[-17]
StoreField(v76 T{_SyncStarIterator} . _yieldStarIterable@4048458 = v0 T{Null?})
ParallelMove r0 <- C, r2 <- fp[-20], r1 <- C
AssertAssignable:4(v0 T{Null?}, v227 T{_TypeParameter}, 'value', instantiator_type_args(v216 T{TypeArguments}), function_type_args(v0 T{Null?})) T{Null?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-17]
StoreField(v76 T{_SyncStarIterator} . _current@4048458 = v0 T{Null?})
ParallelMove r3 <- fp[-21]
v158 <- LoadClassId(v92 T{Iterable<X0>?}) [1, 600] int64
Branch if EqualityCompare(v158 == v159) T{bool} goto (24, 28)
B24
v96 <- LoadField(v76 . _stack@4048458) T{_GrowableList?}
ParallelMove fp[-20] <- r4
Branch if StrictCompare:158(===, v96, v0 T{Null?}) goto (25, 26)
B25
ParallelMove r1 <- C, r2 <- C
v103 <- StaticCall:164( _GrowableList@0150898.<0> v101, v460 T{_Smi}, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r0 <- r0, r1 <- r0, r2 <- fp[-17]
StoreField(v76 T{_SyncStarIterator} . _stack@4048458 = v103 T{_GrowableList})
ParallelMove r0 <- r1 goto:172 B27
B26
ParallelMove r2 <- r0
ParallelMove r0 <- fp[-20] goto:174 B27
B27
ParallelMove fp[-23] <- r0
v98 <- LoadField(v76 . _state@4048458) T{_SuspendState?}
ParallelMove fp[-22] <- r3
CheckNull:178(v98, CastError) T{_SuspendState}
v285 <- LoadField(v97 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v290 <- LoadField(v97 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v291 <- LoadField(v290 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v453 <- UnboxInt64([non-speculative], v285 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-24] <- r4
v454 <- UnboxInt64([non-speculative], v291 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v453 T{_Smi} == v454 T{_Smi}) T{bool} goto (40, 41)
B40
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v97 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B42
B41
B42
v178 <- BinaryInt64Op(+ [tr], v453 T{_Smi}, v461 T{_Smi}) [1, 576460752303423488] int64
v455 <- BoxInt64(v178) [1, 576460752303423488] T{_Smi}
StoreField(v97 T{_GrowableList} . GrowableObjectArray.length = v455, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r4
GenericCheckBound:40(v178 T{_Smi}, v453 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v181 <- LoadField(v97 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-22]
StoreIndexed:40([_List] v181, v453 T{_Smi}, v98 T{_SuspendState})
v99 <- LoadField(v92 T{_SyncStarIterable} . _stateAtStart@4048458) T{_SuspendState?}
ParallelMove fp[-22] <- r1
CheckNull:184(v99, CastError) T{_SuspendState}
ParallelMove r0 <- r1
v191 <- Call1ArgStub:10(CloneSuspendState(v99 T{_SuspendState})) T{*?}
ParallelMove r0 <- fp[-17], r1 <- r0
StoreField(v191 T{_SuspendState} . SuspendState.function_data = v76 T{_SyncStarIterator})
ParallelMove r0 <- r1, r4 <- fp[-17]
StoreField(v76 T{_SyncStarIterator} . _state@4048458 = v191 T{_SuspendState})
ParallelMove r4 <- r4, r3 <- fp[-18], r2 <- fp[-19], r1 <- C, r0 <- C goto:212 B32
B28
ParallelMove r4 <- r0
ParallelMove r1 <- fp[-21] goto:196 B29
B29
v542 <- LoadClassId(<non-smi> v92 T{Iterable<X0>?}) int64
ParallelMove r0 <- r0, r1 <- r1
v95 <- DispatchTableCall( cid=v542 Iterable.iterator<0>, v92 T{Iterable<X0>?}) T{*?}
ParallelMove r0 <- r0, r4 <- fp[-17]
StoreField(v76 T{_SyncStarIterator} . _yieldStarIterator@4048458 = v95 T{Iterator<X0>})
ParallelMove r4 <- r4, r3 <- fp[-18], r2 <- fp[-19], r1 <- C, r0 <- C goto:204 B30
B33
ParallelMove r0 <- C
DartReturn:220(v72)
B71
B70
B22
ParallelMove r0 <- fp[-15], r1 <- fp[-16]
ReThrow:132(v123, v124)
CheckStackOverflowSlowPath
slow path check bound operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path check null (cast) operation
slow path check bound operation
slow path check null (cast) operation
EnterCallRuntimeFrame
CloneSuspendState slow case
Copy frame from SuspendState
Transfer control
Call runtime to throw exception or deopt
Checking for cid 77 (_SuspendState)
Checking for concrete finalized classes:
 * 87 (_Set)
 * 88 (_ConstSet)
 * 89 (_List)
 * 90 (_ImmutableList)
 * 91 (_GrowableList)
 * 524 (SkipIterable)
 * 525 (EfficientLengthSkipIterable)
 * 526 (MappedIterable)
 * 527 (EfficientLengthMappedIterable)
 * 528 (_LineSplitIterable)
 * 529 (_CompactIterableImmutable)
 * 530 (_CompactIterable)
 * 531 (_SyncStarIterable)
 * 532 (_StringAllMatchesIterable)
 * 533 (_AllMatchesIterable)
 * 535 (EmptyIterable)
 * 537 (MappedListIterable)
 * 538 (SubListIterable)
 * 540 (_HashMapValueIterable)
 * 541 (_HashMapKeyIterable)
Not checking the following concrete implementors of Iterable:
 * 111(_Int8List): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 112(_Int8ArrayView): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 113(_ExternalInt8Array): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 114(_UnmodifiableInt8ArrayView): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 115(_Uint8List): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 116(_Uint8ArrayView): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 117(_ExternalUint8Array): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 118(_UnmodifiableUint8ArrayView): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 119(_Uint8ClampedList): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 120(_Uint8ClampedArrayView): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 121(_ExternalUint8ClampedArray): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 122(_UnmodifiableUint8ClampedArrayView): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 123(_Int16List): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 124(_Int16ArrayView): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 125(_ExternalInt16Array): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 126(_UnmodifiableInt16ArrayView): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 127(_Uint16List): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 128(_Uint16ArrayView): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 129(_ExternalUint16Array): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 130(_UnmodifiableUint16ArrayView): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 131(_Int32List): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 132(_Int32ArrayView): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 133(_ExternalInt32Array): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 134(_UnmodifiableInt32ArrayView): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 135(_Uint32List): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 136(_Uint32ArrayView): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 137(_ExternalUint32Array): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 138(_UnmodifiableUint32ArrayView): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 139(_Int64List): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 140(_Int64ArrayView): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 141(_ExternalInt64Array): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 142(_UnmodifiableInt64ArrayView): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 143(_Uint64List): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 144(_Uint64ArrayView): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 145(_ExternalUint64Array): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 146(_UnmodifiableUint64ArrayView): cannot check that Iterable<int> is a subtype of Iterable<X0>?
 * 147(_Float32List): cannot check that Iterable<double> is a subtype of Iterable<X0>?
 * 148(_Float32ArrayView): cannot check that Iterable<double> is a subtype of Iterable<X0>?
 * 149(_ExternalFloat32Array): cannot check that Iterable<double> is a subtype of Iterable<X0>?
 * 150(_UnmodifiableFloat32ArrayView): cannot check that Iterable<double> is a subtype of Iterable<X0>?
 * 151(_Float64List): cannot check that Iterable<double> is a subtype of Iterable<X0>?
 * 152(_Float64ArrayView): cannot check that Iterable<double> is a subtype of Iterable<X0>?
 * 153(_ExternalFloat64Array): cannot check that Iterable<double> is a subtype of Iterable<X0>?
 * 154(_UnmodifiableFloat64ArrayView): cannot check that Iterable<double> is a subtype of Iterable<X0>?
 * 155(_Float32x4List): cannot check that Iterable<Float32x4> is a subtype of Iterable<X0>?
 * 156(_Float32x4ArrayView): cannot check that Iterable<Float32x4> is a subtype of Iterable<X0>?
 * 157(_ExternalFloat32x4Array): cannot check that Iterable<Float32x4> is a subtype of Iterable<X0>?
 * 158(_UnmodifiableFloat32x4ArrayView): cannot check that Iterable<Float32x4> is a subtype of Iterable<X0>?
 * 159(_Int32x4List): cannot check that Iterable<Int32x4> is a subtype of Iterable<X0>?
 * 160(_Int32x4ArrayView): cannot check that Iterable<Int32x4> is a subtype of Iterable<X0>?
 * 161(_ExternalInt32x4Array): cannot check that Iterable<Int32x4> is a subtype of Iterable<X0>?
 * 162(_UnmodifiableInt32x4ArrayView): cannot check that Iterable<Int32x4> is a subtype of Iterable<X0>?
 * 163(_Float64x2List): cannot check that Iterable<Float64x2> is a subtype of Iterable<X0>?
 * 164(_Float64x2ArrayView): cannot check that Iterable<Float64x2> is a subtype of Iterable<X0>?
 * 165(_ExternalFloat64x2Array): cannot check that Iterable<Float64x2> is a subtype of Iterable<X0>?
 * 166(_UnmodifiableFloat64x2ArrayView): cannot check that Iterable<Float64x2> is a subtype of Iterable<X0>?
 * 549(CodeUnits): cannot check that Iterable<int> is a subtype of Iterable<X0>?
Generating check for type argument 0: X0
Checking instantiated type parameter for possible top types
Checking for legacy or non-nullable instance type argument
Checking instance type argument for possible bottom types
Checking for legacy or nullable instantiated type parameter
B0
B1
Enter frame
ParallelMove r0 <- C
CheckStackOverflow:8(stack=0, loop=0)
StoreStaticField(_isInCallbackLoop@4048458, v8)
ParallelMove  goto:12 B3
B3
StaticCall:16( _microtaskLoop@4048458<0> )
ParallelMove r0 <- C, r2 <- C goto:20 B5
B5
StoreStaticField(_lastPriorityCallback@4048458, v0)
StoreStaticField(_isInCallbackLoop@4048458, v6)
v9 <- LoadStaticField(_nextCallback@4048458) T{_AsyncCallbackEntry?}
Branch if StrictCompare:22(!==, v9, v0) goto (6, 7)
B6
StaticCall:28( _scheduleImmediate@4048458<0> )
ParallelMove  goto:34 B4
B7
B4
ParallelMove r0 <- C
DartReturn:60(v0)
B9
ParallelMove fp[-5] <- r0, fp[-6] <- r1
StoreStaticField(_lastPriorityCallback@4048458, v0)
StoreStaticField(_isInCallbackLoop@4048458, v6)
v7 <- LoadStaticField(_nextCallback@4048458) T{_AsyncCallbackEntry?}
Branch if StrictCompare:42(!==, v7, v0) goto (10, 11)
B10
StaticCall:48( _scheduleImmediate@4048458<0> )
ParallelMove  goto:54 B12
B11
B12
ParallelMove r0 <- fp[-5], r1 <- fp[-6]
ReThrow:58(v4, v5)
CheckStackOverflowSlowPath
B0
B5
Enter frame
CheckStackOverflow:22(stack=0, loop=0)
v39 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r1 <- r0, r0 <- fp[3]
ParallelMove fp[-9] <- r1
Branch if StrictCompare:26(===, v39, v12) goto (6, 7)
B6
MoveArgument(sp[0] <- v13)
ParallelMove r0 <- fp[2]
v23 <- ClosureCall:34( closure=v13<0>, v13) T{*?}
ParallelMove r0 <- r0
DartReturn:36(v23)
B7
StoreStaticField(_current@4048458, v12 T{_RootZone})
ParallelMove  goto:44 B8
B8
MoveArgument(sp[0] <- v13)
ParallelMove r0 <- fp[2]
v22 <- ClosureCall:50( closure=v13<0>, v13) T{*?}
ParallelMove r0 <- r0
ParallelMove r1 <- fp[-9] goto:54 B10
B10
StoreStaticField(_current@4048458, v39 T{_RootZone})
ParallelMove r0 <- r0
DartReturn:58(v22)
B11
ParallelMove r2 <- r0, r0 <- fp[-8]
StoreStaticField(_current@4048458, v11 T{_RootZone})
ParallelMove r0 <- r2, r1 <- r1
ReThrow:64(v9, v10)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r0 <- r2, fp[-10] <- r1, fp[-11] <- r2
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove  goto:12 B3
B3
v36 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r0 <- r0
Branch if StrictCompare:18(===, v22, v36) goto (5, 6)
B5
MoveArgument(sp[0] <- v21)
ParallelMove r0 <- fp[-11]
v25 <- ClosureCall:26( closure=v21<0>, v21) T{*?}
ParallelMove r0 <- C
DartReturn:28(v0)
B6
MoveArgument(sp[2] <- v24)
MoveArgument(sp[1] <- v20)
MoveArgument(sp[0] <- v21)
StaticCall:32( _rootRun@4048458<1> v24, v20, v21)
ParallelMove  goto:34 B4
B7
ParallelMove r1 <- r0, r2 <- r1
StaticCall:10( _rootHandleError@4048458<0> v6 T{Object}, v7 T{StackTrace})
ParallelMove  goto:40 B4
B4
ParallelMove r0 <- C
DartReturn:42(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(Error_throwWithStackTrace) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v4, v5, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{Never}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v4 T{Never})
B0
B1
Enter frame
MoveArgument(sp[0] <- v0)
v2 <- NativeCall(StackTrace_current) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v2, v3, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{StackTrace}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v2 T{StackTrace})
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v28 <- LoadField(v27 . Closure.context {final}) T{*}
ParallelMove fp[-10] <- r3
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove  goto:12 B3
B3
v29 <- LoadField(v28 . Context.parent {final}) T{Context?}
v30 <- LoadField(v29 . source) T{_Future}
ParallelMove fp[-9] <- r4
v85 <- LoadField(v30 T{_Future} . _resultOrListeners@4048458) T{*?}
ParallelMove r0 <- r5, r2 <- C, r1 <- C, fp[-8] <- r5
t0 <- AssertAssignable:12(v85, v73 T{_Type}, '', instantiator_type_args(v0 T{Null?}), function_type_args(v0 T{Null?})) T{AsyncError}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-10]
v32 <- LoadField(v28 . listener) T{_FutureListener}
ParallelMove r1 <- r1, r2 <- fp[-8]
v33 <- StaticCall:18( matchesErrorTest<0> v32, v85 T{AsyncError}, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:22(===, v33 T{bool}, v15) goto (5, 8)
BoolTest
B5
ParallelMove r0 <- fp[-10]
v50 <- LoadField(v28 . listener) T{_FutureListener}
ParallelMove r1 <- r1
v51 <- StaticCall:26( get:hasErrorCallback<0> v50, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:30(===, v51 T{bool}, v15) goto (6, 9)
BoolTest
B6
ParallelMove r0 <- fp[-10]
v52 <- LoadField(v28 . listener) T{_FutureListener}
ParallelMove r1 <- r1, r2 <- fp[-8]
v53 <- StaticCall:38( handleError<0> v52, v85 T{AsyncError}, using unchecked entrypoint) T{FutureOr<X1>?}
ParallelMove r0 <- r0, r1 <- fp[-10]
StoreField(v28 . listenerValueOrError = v53)
ParallelMove r0 <- C
StoreField(v28 . listenerHasError = v54)
ParallelMove  goto:52 B10
B9
B8
B7
B10
B11
ParallelMove r5 <- fp[-2], r4 <- r0, r3 <- r1, fp[-10] <- r0, fp[-11] <- r1
v10 <- LoadField(v4 . Context.parent {final}) T{Context?}
v11 <- LoadField(v10 . source) T{_Future}
ParallelMove fp[-9] <- r6
v78 <- LoadField(v11 T{_Future} . _resultOrListeners@4048458) T{*?}
ParallelMove r0 <- r7, r2 <- C, r1 <- C, fp[-8] <- r7
t0 <- AssertAssignable:12(v78, v73 T{_Type}, '', instantiator_type_args(v0 T{Null?}), function_type_args(v0 T{Null?})) T{AsyncError}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-8]
v13 <- LoadField(v78 T{AsyncError} . error {final}) T{Object}
ParallelMove r0 <- r1, r1 <- fp[-10]
Branch if StrictCompare:64(===, v13, v5, with number check) goto (12, 31)
B12
ParallelMove r3 <- fp[-2], r0 <- fp[-9]
v70 <- LoadField(v11 T{_Future} . _resultOrListeners@4048458) T{*?}
ParallelMove r0 <- r4, r2 <- C, r1 <- C, fp[-8] <- r4
t0 <- AssertAssignable:12(v70, v73 T{_Type}, '', instantiator_type_args(v0 T{Null?}), function_type_args(v0 T{Null?})) T{AsyncError}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-8], r1 <- fp[-2]
StoreField(v4 . listenerValueOrError = v70 T{AsyncError})
ParallelMove  goto:80 B14
B31
ParallelMove r1 <- fp[-2], r2 <- fp[-10], r0 <- fp[-11]
v14 <- AllocateObject:74(cls=AsyncError) T{AsyncError}
ParallelMove r0 <- r0, r1 <- fp[-10]
StoreField(v14 T{AsyncError} . error = v5 T{Y0}, NoStoreBarrier)
ParallelMove r1 <- fp[-11]
StoreField(v14 T{AsyncError} . stackTrace = v6 T{StackTrace?}, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- fp[-2]
StoreField(v4 . listenerValueOrError = v14)
ParallelMove  goto:82 B14
B14
StoreField(v4 . listenerHasError = v15)
ParallelMove  goto:84 B4
B4
ParallelMove r0 <- C
DartReturn:86(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove r4 <- r1, r3 <- r2, fp[-12] <- r1, fp[-13] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v23 <- LoadField(v21 . errorCallback {final}) T{Function??}
ParallelMove r0 <- r5, r2 <- C, r1 <- C, fp[-11] <- r5
v25 <- InstanceOf:12(v23 IS (dynamic, Object, StackTrace) => dynamic, instantiator_type_args(v0), function_type_args(v0)) T{bool}
InlineInstanceof
FunctionTypeTest
BoolTest
ParallelMove r0 <- r0
Branch if StrictCompare:16(===, v25 T{bool}, v14) goto (3, 4)
BoolTest
B3
ParallelMove r0 <- fp[-12], r3 <- fp[-13]
v81 <- LoadField(v21 T{_FutureListener} . result {final}) T{_Future}
v82 <- LoadField(v81 . _zone@4048458 {final}) T{_RootZone}
v38 <- LoadField(v22 . error {final}) T{Object}
v39 <- LoadField(v22 . stackTrace {final}) T{StackTrace}
MoveArgument(sp[4] <- v36)
MoveArgument(sp[3] <- v82 T{_RootZone})
MoveArgument(sp[2] <- v23 T{_Closure})
MoveArgument(sp[1] <- v38)
MoveArgument(sp[0] <- v39)
v40 <- StaticCall:28( runBinary<3> v36, v82 T{_RootZone}, v23 T{_Closure}, v38, v39, using unchecked entrypoint) T{Y0?}
ParallelMove r0 <- r0
ParallelMove r3 <- r0 goto:42 B5
B4
ParallelMove r4 <- fp[-12], r3 <- fp[-13]
v75 <- LoadField(v21 T{_FutureListener} . result {final}) T{_Future}
v76 <- LoadField(v75 . _zone@4048458 {final}) T{_RootZone}
ParallelMove r0 <- fp[-11], r2 <- C, r1 <- C, fp[-14] <- r5
t2 <- AssertAssignable:34(v23, v28, '', instantiator_type_args(v0), function_type_args(v0)) T{_Closure}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-13]
v30 <- LoadField(v22 . error {final}) T{Object}
MoveArgument(sp[3] <- v26)
MoveArgument(sp[2] <- v76 T{_RootZone})
MoveArgument(sp[1] <- v23 T{_Closure})
MoveArgument(sp[0] <- v30)
v31 <- StaticCall:38( runUnary<2> v26, v76 T{_RootZone}, v23 T{_Closure}, v30, using unchecked entrypoint) T{Y0?}
ParallelMove r0 <- r0
ParallelMove r3 <- r0 goto:44 B5
B5
ParallelMove fp[-13] <- r3
ParallelMove r4 <- fp[-12] goto:48 B6
B6
v34 <- LoadField(v21 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- r3, r2 <- r5, r1 <- C, fp[-11] <- r5
t0 <- AssertAssignable:52(v32, v33, '', instantiator_type_args(v34), function_type_args(v0)) T{FutureOr<X1>?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-13]
DartReturn:54(v32 T{FutureOr<X1>?})
B8
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r4 <- r0, r3 <- r1, fp[-11] <- r0, fp[-12] <- r1
v13 <- InstanceOf:84(v6 IS TypeError, instantiator_type_args(v0), function_type_args(v0)) T{bool}
InlineInstanceof
InstantiatedTypeNoArgumentsTest
ParallelMove r0 <- r0
Branch if StrictCompare:86(===, v13, v14) goto (11, 12)
BoolTest
B11
ParallelMove r0 <- fp[-9]
v63 <- LoadField(v2 T{_FutureListener} . state {final}) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v63, v110) goto (9, 10)
B9
v19 <- AllocateObject:70(cls=ArgumentError, <not-aliased>) T{ArgumentError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v19 T{ArgumentError} . message = v20 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v19 T{ArgumentError} . name = v18 T{_OneByteString}, NoStoreBarrier)
ParallelMove r2 <- C
StoreField(v19 T{ArgumentError} . _hasValue@0150898 = v50 T{bool}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:74(v19)
B10
ParallelMove r0 <- C, r2 <- C
v16 <- AllocateObject:78(cls=ArgumentError, <not-aliased>) T{ArgumentError}
ParallelMove r1 <- r0, r0 <- C
StoreField(v16 T{ArgumentError} . message = v17 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v16 T{ArgumentError} . name = v18 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- C
StoreField(v16 T{ArgumentError} . _hasValue@0150898 = v50 T{bool}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:82(v16)
B12
ParallelMove r0 <- fp[-11], r1 <- fp[-12]
ReThrow:94(v6, v7)
CheckStackOverflowSlowPath
B0
B5
Enter frame
CheckStackOverflow:22(stack=0, loop=0)
v41 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r1 <- r0, r0 <- fp[4]
ParallelMove fp[-9] <- r1
Branch if StrictCompare:26(===, v41, v13) goto (6, 7)
B6
MoveArgument(sp[1] <- v14)
MoveArgument(sp[0] <- v15)
ParallelMove r0 <- fp[3]
v25 <- ClosureCall:34( closure=v14<0>, v14, v15) T{*?}
ParallelMove r0 <- r0
DartReturn:36(v25)
B7
StoreStaticField(_current@4048458, v13 T{_RootZone})
ParallelMove  goto:44 B8
B8
MoveArgument(sp[1] <- v14)
MoveArgument(sp[0] <- v15)
ParallelMove r0 <- fp[3]
v24 <- ClosureCall:50( closure=v14<0>, v14, v15) T{*?}
ParallelMove r0 <- r0
ParallelMove r1 <- fp[-9] goto:54 B10
B10
StoreStaticField(_current@4048458, v41 T{_RootZone})
ParallelMove r0 <- r0
DartReturn:58(v24)
B11
ParallelMove r2 <- r0, r0 <- fp[-8]
StoreStaticField(_current@4048458, v12 T{_RootZone})
ParallelMove r0 <- r2, r1 <- r1
ReThrow:64(v10, v11)
CheckStackOverflowSlowPath
B0
B5
Enter frame
CheckStackOverflow:22(stack=0, loop=0)
v43 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r1 <- r0, r0 <- fp[5]
ParallelMove fp[-9] <- r1
Branch if StrictCompare:26(===, v43, v14) goto (6, 7)
B6
MoveArgument(sp[2] <- v15)
MoveArgument(sp[1] <- v16)
MoveArgument(sp[0] <- v17)
ParallelMove r0 <- fp[4]
v27 <- ClosureCall:34( closure=v15<0>, v15, v16, v17) T{*?}
ParallelMove r0 <- r0
DartReturn:36(v27)
B7
StoreStaticField(_current@4048458, v14 T{_RootZone})
ParallelMove  goto:44 B8
B8
MoveArgument(sp[2] <- v15)
MoveArgument(sp[1] <- v16)
MoveArgument(sp[0] <- v17)
ParallelMove r0 <- fp[4]
v26 <- ClosureCall:50( closure=v15<0>, v15, v16, v17) T{*?}
ParallelMove r0 <- r0
ParallelMove r1 <- fp[-9] goto:54 B10
B10
StoreStaticField(_current@4048458, v43 T{_RootZone})
ParallelMove r0 <- r0
DartReturn:58(v26)
B11
ParallelMove r2 <- r0, r0 <- fp[-8]
StoreStaticField(_current@4048458, v13 T{_RootZone})
ParallelMove r0 <- r2, r1 <- r1
ReThrow:64(v11, v12)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v19 <- LoadField(v18 . Closure.context {final}) T{*}
ParallelMove fp[-7] <- r1
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove  goto:12 B3
B3
v20 <- LoadField(v19 . listener) T{_FutureListener}
v21 <- LoadField(v19 . sourceResult {final}) T{*?}
MoveArgument(sp[1] <- v20)
MoveArgument(sp[0] <- v21)
v22 <- StaticCall:16( handleValue<0> v20, v21, recognized_kind = FutureListenerHandleValue) T{FutureOr<X1>?}
ParallelMove r0 <- r0, r1 <- fp[-7]
StoreField(v19 . listenerValueOrError = v22)
ParallelMove  goto:18 B4
B16
ParallelMove fp[-7] <- r0, fp[-8] <- r1
v9 <- AllocateObject:22(cls=AsyncError) T{AsyncError}
ParallelMove r0 <- r0, r1 <- fp[-7]
StoreField(v9 T{AsyncError} . error = v5 T{Y0}, NoStoreBarrier)
ParallelMove r1 <- fp[-8]
StoreField(v9 T{AsyncError} . stackTrace = v6 T{StackTrace?}, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- fp[-2]
StoreField(v4 . listenerValueOrError = v9)
ParallelMove r2 <- C
StoreField(v4 . listenerHasError = v10)
ParallelMove  goto:26 B4
B4
ParallelMove r0 <- C
DartReturn:28(v0)
CheckStackOverflowSlowPath
B0
B3
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r3 <- fp[3]
v5 <- LoadField(v2 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- fp[2], r2 <- r4, r1 <- C, fp[-1] <- r4
t0 <- AssertAssignable:10(v3, v4, 'sourceResult', instantiator_type_args(v5), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r2 <- fp[-1], r1 <- C, r3 <- C
v9 <- InstantiateTypeArguments:12(v8, instantiator_type_args(v5 T{TypeArguments}), function_type_args(v0), instantiator_class(Library:'dart:async' Class: _FutureListener@4048458)) T{*?}
ParallelMove r1 <- r0, r0 <- fp[3]
v17 <- LoadField(v2 T{_FutureListener} . result {final}) T{_Future}
v18 <- LoadField(v17 . _zone@4048458 {final}) T{_RootZone}
v23 <- LoadField(v2 T{_FutureListener} . callback {final}) T{Function??}
MoveArgument(sp[3] <- v9)
MoveArgument(sp[2] <- v18 T{_RootZone})
MoveArgument(sp[1] <- v23 T{_Closure})
MoveArgument(sp[0] <- v3 T{X0?})
v12 <- StaticCall:18( runUnary<2> v9, v18 T{_RootZone}, v23 T{_Closure}, v3 T{X0?}, using unchecked entrypoint) T{Y0?}
ParallelMove r0 <- r0
DartReturn:20(v12)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v22 <- LoadField(v21 . Closure.context {final}) T{*}
ParallelMove fp[-9] <- r2
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove  goto:12 B3
B3
v23 <- LoadField(v22 . listener) T{_FutureListener}
ParallelMove r1 <- r1
v24 <- StaticCall:16( handleWhenComplete<0> v23, using unchecked entrypoint) T{*?}
ParallelMove r0 <- r0
ParallelMove fp[-11] <- r0
ParallelMove  goto:18 B4
B4
v45 <- LoadClassId(v24) [1, 600] int64
Branch if EqualityCompare(v45 == v46) T{bool} goto (12, 18)
B12
v97 <- LoadField(v24 T{_Future} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v97, v106) goto (13, 19)
B13
Branch if TestInt(v97, v140) goto (14, 15)
B14
ParallelMove r3 <- fp[-9]
v78 <- LoadField(v24 T{_Future} . _resultOrListeners@4048458) T{*?}
ParallelMove r0 <- r4, r2 <- C, r1 <- C, fp[-10] <- r4
t0 <- AssertAssignable:12(v78, v66 T{_Type}, '', instantiator_type_args(v0 T{Null?}), function_type_args(v0 T{Null?})) T{AsyncError}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-10], r2 <- fp[-9]
StoreField(v22 . listenerValueOrError = v78 T{AsyncError})
ParallelMove r3 <- C
StoreField(v22 . listenerHasError = v12)
ParallelMove  goto:100 B16
B15
B16
ParallelMove r0 <- C
DartReturn:104(v0)
B19
ParallelMove r2 <- fp[-9]
ParallelMove  goto:114 B17
B18
ParallelMove r2 <- fp[-9]
ParallelMove  goto:110 B17
B17
Branch if EqualityCompare(v45 T{_Smi} == v46) T{bool} goto (20, 21)
B20
v29 <- AllocateContext:126(num_variables=1) T{Context}
ParallelMove r1 <- r0, r0 <- fp[-9]
StoreField(v29 . Context.parent = v22, NoStoreBarrier)
v31 <- LoadField(v22 T{Context} . Context.parent {final}) T{Context?}
v32 <- LoadField(v31 . source) T{_Future}
StoreField(v29 . originalSource = v32, NoStoreBarrier)
ParallelMove r1 <- C, r2 <- r1
v34 <- AllocateClosure:128(v33, v29) T{_Closure}
ParallelMove r0 <- r0
MoveArgument(sp[2] <- v0)
MoveArgument(sp[1] <- v24 T{_Future})
MoveArgument(sp[0] <- v34)
v35 <- StaticCall:130( then<1> v0, v24 T{_Future}, v34, using unchecked entrypoint, result_type = T{_Future}) T{_Future}
ParallelMove r0 <- r0, r1 <- fp[-9]
StoreField(v22 T{Context} . listenerValueOrError = v35)
ParallelMove r0 <- C
StoreField(v22 T{Context} . listenerHasError = v37)
ParallelMove  goto:136 B22
B21
B22
ParallelMove r0 <- C
DartReturn:140(v0)
B5
ParallelMove r6 <- fp[-2], r5 <- r0, r4 <- r1, fp[-11] <- r0, fp[-12] <- r1
v11 <- LoadField(v4 . hasError) T{bool}
Branch if StrictCompare:24(===, v11 T{bool}, v12) goto (6, 9)
BoolTest
B6
v14 <- LoadField(v4 . Context.parent {final}) T{Context?}
v15 <- LoadField(v14 . source) T{_Future}
ParallelMove fp[-10] <- r7
v71 <- LoadField(v15 T{_Future} . _resultOrListeners@4048458) T{*?}
ParallelMove r0 <- r8, r2 <- C, r1 <- C, fp[-9] <- r8
t0 <- AssertAssignable:12(v71, v66 T{_Type}, '', instantiator_type_args(v0 T{Null?}), function_type_args(v0 T{Null?})) T{AsyncError}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-9]
v17 <- LoadField(v71 T{AsyncError} . error {final}) T{Object}
ParallelMove r0 <- r1, r1 <- fp[-11]
Branch if StrictCompare:32(===, v17, v5, with number check) goto (7, 10)
B7
ParallelMove r3 <- fp[-2], r0 <- fp[-10]
v63 <- LoadField(v15 T{_Future} . _resultOrListeners@4048458) T{*?}
ParallelMove r0 <- r4, r2 <- C, r1 <- C, fp[-9] <- r4
t0 <- AssertAssignable:12(v63, v66 T{_Type}, '', instantiator_type_args(v0 T{Null?}), function_type_args(v0 T{Null?})) T{AsyncError}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-9], r1 <- fp[-2]
StoreField(v4 . listenerValueOrError = v63 T{AsyncError})
ParallelMove  goto:58 B11
B10
ParallelMove r1 <- fp[-2]
ParallelMove  goto:50 B43
B9
ParallelMove r1 <- r6
ParallelMove  goto:46 B43
B43
v13 <- AllocateObject:52(cls=AsyncError) T{AsyncError}
ParallelMove r0 <- r0, r1 <- fp[-11]
StoreField(v13 T{AsyncError} . error = v5 T{Y0}, NoStoreBarrier)
ParallelMove r1 <- fp[-12]
StoreField(v13 T{AsyncError} . stackTrace = v6 T{StackTrace?}, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- fp[-2]
StoreField(v4 . listenerValueOrError = v13)
ParallelMove  goto:60 B11
B11
StoreField(v4 . listenerHasError = v12)
ParallelMove r0 <- C
DartReturn:62(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
MoveArgument(sp[3] <- v2)
MoveArgument(sp[2] <- v3)
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v0)
v5 <- NativeCall(EventHandler_SendData) T{*?}
ParallelMove r0 <- r0
DartReturn:8(v5)
Checking for cid 222 (_SignalController)
B0
B1
Enter frame
MoveArgument(sp[0] <- v0)
v2 <- NativeCall(Platform_OperatingSystem) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v2, v3, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{String}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v2 T{String})
B0
B1
Enter frame
MoveArgument(sp[3] <- v2)
MoveArgument(sp[2] <- v3)
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v0)
v5 <- NativeCall(StringBuffer_createStringFromUint16Array) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v5, v6, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{String}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v5 T{String})
B0
B1
Enter frame
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(String_concat) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v4, v5, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{String}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v4 T{String})
B0
B1
Enter frame
MoveArgument(sp[3] <- v2)
MoveArgument(sp[2] <- v3)
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v0)
v5 <- NativeCall(StringBase_createFromCodePoints) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v5, v6, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{String}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v5 T{String})
B0
B1
Enter frame
MoveArgument(sp[3] <- v2)
MoveArgument(sp[2] <- v3)
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v0)
v5 <- NativeCall(TwoByteString_allocateFromTwoByteList) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v5, v6, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{String}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v5 T{String})
B0
B1
Enter frame
v4 <- LoadField(v2 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v6 <- BinarySmiOp:4(- [tr], v4, v5) [-2, 4611686018427387901] T{_Smi}
v7 <- LoadIndexedUnsafe(fp[v6 + 24]) T{*?}
v8 <- LoadIndexedUnsafe(fp[v6 + 16]) T{String}
v13 <- LoadIndexed([_List] v2, v11 T{_Smi}) T{*?}
Branch if StrictCompare:16(===, v13, v14) goto (2, 3)
B2
ParallelMove r1 <- C goto:26 B4
B3
ParallelMove r1 <- C goto:28 B4
B4
v70 <- BoxInt64(v16) [0, 1] T{_Smi}
v57 <- BinarySmiOp:30(<< [tr], v70 T{_Smi}, v39) [0, 2] T{_Smi}
v18 <- BinarySmiOp:38(+ [tr], v57 T{_Smi}, v11) [4, 6] T{_Smi}
v19 <- LoadIndexed([_List] v2, v18) T{*?}
Branch if StrictCompare:40(===, v19, v20) goto (5, 6)
B5
v50 <- BinarySmiOp:36(+ [tr], v70 T{_Smi}, v39) [1, 2] T{_Smi}
v72 <- UnboxInt64([non-speculative], v50) [1, 2] int64
ParallelMove r1 <- r3 goto:50 B7
B6
B7
v73 <- BoxInt64(v22) [0, 2] T{_Smi}
v58 <- BinarySmiOp:54(<< [tr], v73 T{_Smi}, v39) [0, 4] T{_Smi}
v24 <- BinarySmiOp:62(+ [tr], v58 T{_Smi}, v11) [4, 8] T{_Smi}
v25 <- LoadIndexed([_List] v2, v24) T{*?}
Branch if StrictCompare:64(===, v25, v26) goto (8, 9)
B8
B9
B14
MoveArgument(sp[6] <- v7)
MoveArgument(sp[5] <- v8)
MoveArgument(sp[4] <- v21)
MoveArgument(sp[3] <- v15)
MoveArgument(sp[2] <- v21)
MoveArgument(sp[1] <- v21)
MoveArgument(sp[0] <- v0)
v32 <- NativeCall(RegExp_factory) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:106(v32, v33, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{_RegExp}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:108(v32 T{_RegExp})
B0
B1
Enter frame
MoveArgument(sp[4] <- v2)
MoveArgument(sp[3] <- v3)
MoveArgument(sp[2] <- v4)
MoveArgument(sp[1] <- v5)
MoveArgument(sp[0] <- v0)
v6 <- NativeCall(StringBase_joinReplaceAllResult) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v6, v7, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{String}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v6 T{String})
B0
B1
Enter frame
MoveArgument(sp[0] <- v0)
v2 <- NativeCall(Uri_isWindowsPlatform) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v2, v3, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{bool}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v2 T{bool})
B0
B1
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(Directory_Current) T{*?}
ParallelMove r0 <- r0
DartReturn:8(v3)
B0
B1
Enter frame
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(Namespace_Create) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v4, v5, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{_NamespaceImpl}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v4 T{_NamespaceImpl})
B0
B1
Intrinsic
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(Internal_allocateTwoByteString) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v3, v4, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{String}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v3 T{String})
B0
B1
Enter frame
MoveArgument(sp[0] <- v0)
v2 <- NativeCall(Namespace_GetDefault) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v2, v3, 'function result', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v2 T{int})
Checking for cid 190 (_FileResourceInfo)
B0
B1
Enter frame
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(File_SetPointer) T{*?}
ParallelMove r0 <- r0
DartReturn:8(v4)
B0
B1
Enter frame
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(RawReceivePort_setActive) T{*?}
ParallelMove r0 <- r0
DartReturn:8(v4)
Checking for cid 74 (_RawReceivePort)
B0
B1
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(RawReceivePort_get_id) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v3, v4, 'function result', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v3 T{int})
B0
B1
Enter frame
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(RawReceivePort_factory) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v4, v5, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{_RawReceivePort}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v4 T{_RawReceivePort})
B0
B1
Enter frame
ParallelMove fp[-14] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v258 <- LoadStaticField:4(_heap@1026248, CallsInitializer) T{_TimerHeap}
ParallelMove r0 <- r0
v263 <- LoadField(v258 T{_TimerHeap} . _used@1026248) [-9223372036854775808, 9223372036854775807] int64
Branch if EqualityCompare(v263 == v398 T{_Smi}) T{bool} goto (3, 6)
B3
v152 <- LoadStaticField(_firstZeroTimer@1026248) T{_Timer?}
Branch if StrictCompare:20(===, v152, v0) goto (4, 7)
B4
ParallelMove r0 <- C
StoreStaticField(_idCount@1026248, v28)
ParallelMove  goto:40 B8
B7
B6
B5
B8
v255 <- LoadField(v24 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
Branch if StrictCompare(===, v255 T{_Smi}, v28 T{_Smi}) T{bool} goto (9, 10)
B9
ParallelMove r0 <- C
DartReturn:56(v0)
B10
ParallelMove r0 <- C
StoreStaticField(_handlingCallbacks@1026248, v21)
ParallelMove r0 <- C goto:62 B11
B11
v306 <- LoadField:240(v84 T{_Closure} . Closure.context {final}) T{!null}
ParallelMove fp[-21] <- r3
v270 <- LoadField:240(v84 T{_Closure} . Closure.context {final}) T{!null}
ParallelMove fp[-20] <- r4
ParallelMove r5 <- C goto:240 B33
B33
  Loop 2
  Loop Header
ParallelMove fp[-19] <- r5
CheckStackOverflow:244(stack=0, loop=1)
v250 <- LoadField(v24 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v377 <- UnboxInt64([non-speculative], v250 T{_Smi}) [0, 576460752303423487] int64
Branch if RelationalOp(<, v36, v377 T{_Smi}) T{bool} goto (13, 14)
B13
  Loop 2
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound:82(v377 T{_Smi}, v36) [-9223372036854775808, 9223372036854775807] int64
v155 <- LoadField(v24 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v400 <- LoadIndexed:82([_List] v155, v36 T{int}) T{_Timer}
ParallelMove fp[-18] <- r1
StoreField(v400 T{_Timer} . _indexOrNext@1026248 = v0 T{Null?})
v52 <- LoadField(v400 T{_Timer} . _callback@1026248) T{((dynamic, Timer) => void)??}
ParallelMove fp[-17] <- r6
Branch if StrictCompare:88(!==, v52, v0) goto (15, 31)
B15
  Loop 2
v67 <- LoadField(v400 T{_Timer} . _repeating@1026248 {final}) T{bool}
ParallelMove fp[-16] <- r7
Branch if StrictCompare:98(!==, v67 T{bool}, v21) goto (16, 17)
BoolTest
B16
  Loop 2
StoreField(v400 T{_Timer} . _callback@1026248 = v0 T{Null?})
ParallelMove r2 <- r7 goto:176 B24
B17
  Loop 2
v68 <- LoadField(v400 T{_Timer} . _milliSeconds@1026248 {final}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove fp[-15] <- r8
Branch if RelationalOp(>, v68, v398 T{_Smi}) T{bool} goto (18, 22)
B18
  Loop 2
v235 <- LoadStaticField:4(timerMillisecondClock, CallsInitializer) T{(dynamic) => int}
v271 <- StaticCall:10( _timerMillisecondClock@15069316<0> ) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0, r1 <- fp[-18]
v86 <- LoadField(v400 T{_Timer} . _wakeupTime@1026248) [-9223372036854775808, 9223372036854775807] int64
v381 <- UnboxInt64([non-speculative], v271 T{int?}) [-9223372036854775808, 9223372036854775807] int64
v87 <- BinaryInt64Op(- [tr], v381 T{int?}, v86) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- fp[-15]
Branch if RelationalOp(>, v87, v68 T{int}) T{bool} goto (19, 20)
B19
  Loop 2
v102 <- BinaryInt64Op(~/ [tr], v87, v68 T{int}) [-9223372036854775808, 9223372036854775807] int64
v104 <- BinaryInt64Op(* [tr], v102, v68 T{int}) [-9223372036854775808, 9223372036854775807] int64
v105 <- BinaryInt64Op(+ [tr], v86 T{int}, v104) [-9223372036854775808, 9223372036854775807] int64
StoreField(v400 T{_Timer} . _wakeupTime@1026248 = v105 T{int} <int64>)
v106 <- LoadField(v400 T{_Timer} . _tick@1026248) [-9223372036854775808, 9223372036854775807] int64
v107 <- BinaryInt64Op(+ [tr], v106, v102) [-9223372036854775808, 9223372036854775807] int64
StoreField(v400 T{_Timer} . _tick@1026248 = v107 T{int} <int64>)
ParallelMove  goto:162 B21
B20
B21
B22
B23
  Loop 2
ParallelMove r2 <- fp[-16] goto:178 B24
B24
  Loop 2
v121 <- LoadField(v400 T{_Timer} . _tick@1026248) [-9223372036854775808, 9223372036854775807] int64
v122 <- BinaryInt64Op(+ [tr], v121, v401 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v400 T{_Timer} . _tick@1026248 = v122 T{int} <int64>)
MoveArgument(sp[1] <- v52 T{_Closure})
MoveArgument(sp[0] <- v400 T{_Timer})
ParallelMove r0 <- fp[-17]
v123 <- ClosureCall:188( closure=v52 T{_Closure}<0>, v52 T{_Closure}, v400 T{_Timer}) T{*?}
ParallelMove r0 <- fp[-16]
Branch if StrictCompare:194(===, v67 T{bool}, v21) goto (25, 28)
BoolTest
B25
  Loop 2
ParallelMove r1 <- fp[-18]
v151 <- LoadField(v400 T{_Timer} . _callback@1026248) T{((dynamic, Timer) => void)??}
Branch if StrictCompare:200(!==, v151, v0) goto (26, 29)
B26
  Loop 2
ParallelMove r3 <- C, r2 <- C
v289 <- LoadStaticField(_idCount@1026248) [-9223372036854775808, 9223372036854775807] T{int}
v385 <- UnboxInt64([non-speculative], v289 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- r4
v455 <- IntConverter(int64->uint32[tr], v385 T{int}) uint32
v292 <- BinaryUint32Op(+ [tr], v455 T{int}, v456 T{_Smi}) [0, 4294967295] uint32
v294 <- BinaryUint32Op(& [tr], v292, v457 T{_Smi}) [0, 536870911] uint32
v386 <- BoxUint32(v294) [0, 536870911] T{_Smi}
StoreStaticField(_idCount@1026248, v386)
StoreField(v400 T{_Timer} . _id@1026248 = v385 T{int} <int64>)
v199 <- LoadField(v400 T{_Timer} . _milliSeconds@1026248 {final}) [-9223372036854775808, 9223372036854775807] int64
Branch if RelationalOp(>, v199, v398 T{_Smi}) T{bool} goto (56, 57)
B56
  Loop 2
v208 <- LoadField(v400 T{_Timer} . _wakeupTime@1026248) [-9223372036854775808, 9223372036854775807] int64
v210 <- BinaryInt64Op(+ [tr], v208, v199 T{int}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v400 T{_Timer} . _wakeupTime@1026248 = v210 T{int} <int64>)
ParallelMove r0 <- r1 goto:46 B58
B57
  Loop 2
v274 <- LoadStaticField:4(timerMillisecondClock, CallsInitializer) T{(dynamic) => int}
v307 <- StaticCall:10( _timerMillisecondClock@15069316<0> ) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r0 <- r0
v387 <- UnboxInt64([non-speculative], v307 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r0 <- fp[-18]
StoreField(v400 T{_Timer} . _wakeupTime@1026248 = v387 T{int} <int64>)
ParallelMove  goto:48 B58
B58
  Loop 2
ParallelMove r1 <- r0
StaticCall:210( _enqueue@1026248<0> v400 T{_Timer}, using unchecked entrypoint)
ParallelMove  goto:224 B30
B29
B28
B27
B30
  Loop 2
v187 <- LoadStaticField(_pendingImmediateCallback@1026248) T{_Closure?}
ParallelMove fp[-16] <- r1
Branch if StrictCompare:10(!==, v187, v0 T{Null?}) goto (51, 52)
B51
  Loop 2
ParallelMove r2 <- C
StoreStaticField(_pendingImmediateCallback@1026248, v0 T{Null?})
MoveArgument(sp[0] <- v187 T{_Closure})
ParallelMove r0 <- r1
v190 <- ClosureCall:18( closure=v187 T{_Closure}<0>, v187 T{_Closure}) T{*?}
ParallelMove  goto:24 B53
B52
B53
B31
B32
  Loop 2
v66 <- BinaryInt64Op(+ [tr], v36 T{int}, v401 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r5, r2 <- fp[-14], r4 <- fp[-20], r3 <- fp[-21] goto:242 B33
B14
ParallelMove r0 <- r5
ParallelMove r2 <- C goto:248 B34
B34
StoreStaticField(_handlingCallbacks@1026248, v15)
v45 <- BinaryInt64Op(+ [tr], v36, v401 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r1 goto:274 B37
B37
  Loop 1
  Loop Header
ParallelMove fp[-15] <- r3
CheckStackOverflow:278(stack=0, loop=1)
v184 <- LoadField(v24 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v388 <- UnboxInt64([non-speculative], v184 T{_Smi}) [0, 576460752303423487] int64
Branch if RelationalOp(<, v46, v388 T{_Smi}) T{bool} goto (35, 12)
B35
  Loop 1
ParallelMove r0 <- r1, r1 <- r3
GenericCheckBound:268(v388 T{_Smi}, v46) [-9223372036854775808, 9223372036854775807] int64
v160 <- LoadField(v24 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v403 <- LoadIndexed:268([_List] v160, v46 T{int}) T{_Timer}
ParallelMove r1 <- r1
StaticCall:270( _enqueue@1026248<0> v403 T{_Timer}, using unchecked entrypoint)
ParallelMove r0 <- fp[-15]
v50 <- BinaryInt64Op(+ [tr], v46 T{int}, v401 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r3 <- r3 goto:276 B37
B12
StaticCall:280( _notifyEventHandler@1026248<0> )
ParallelMove r0 <- C
DartReturn:320(v0)
B38
ParallelMove r4 <- r0, r3 <- r1, fp[-14] <- r0, fp[-16] <- r1
StoreStaticField(_handlingCallbacks@1026248, v15)
ParallelMove r0 <- fp[-6]
CheckNull:286(v8 T{int??}, NoSuchMethodError) [-9223372036854775808, 9223372036854775807] T{int?}
v391 <- UnboxInt64([non-speculative], v8 T{int?}) [-9223372036854775808, 9223372036854775807] int64
v17 <- BinaryInt64Op(+ [tr], v391 T{int?}, v401 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r0 goto:310 B41
B41
  Loop 0
  Loop Header
ParallelMove fp[-15] <- r5
CheckStackOverflow:314(stack=0, loop=1)
v179 <- LoadField(v2 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v392 <- UnboxInt64([non-speculative], v179 T{_Smi}) [0, 576460752303423487] int64
Branch if RelationalOp(<, v18, v392 T{_Smi}) T{bool} goto (39, 40)
B39
  Loop 0
ParallelMove r0 <- r1, r1 <- r5
GenericCheckBound:304(v392 T{_Smi}, v18) [-9223372036854775808, 9223372036854775807] int64
v165 <- LoadField(v2 . GrowableObjectArray.data) T{_List}
v404 <- LoadIndexed:304([_List] v165, v18 T{int}) T{_Timer}
ParallelMove r1 <- r1
StaticCall:306( _enqueue@1026248<0> v404 T{_Timer}, using unchecked entrypoint)
ParallelMove r0 <- fp[-15]
v23 <- BinaryInt64Op(+ [tr], v18 T{int}, v401 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r5 <- r5, r4 <- fp[-14], r3 <- fp[-16] goto:312 B41
B40
StaticCall:316( _notifyEventHandler@1026248<0> )
ParallelMove r0 <- fp[-14], r1 <- fp[-16]
ReThrow:318(v5, v6)
CheckStackOverflowSlowPath
CheckStackOverflowSlowPath
slow path check bound operation
slow path late initialization error operation
slow path int64 divide operation
slow path late initialization error operation
CheckStackOverflowSlowPath
slow path check bound operation
slow path check null (nsm) operation
CheckStackOverflowSlowPath
slow path check bound operation
Checking for cid 292 (_Timer)
B0
B1
Enter frame
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(SendPort_sendInternal_) T{*?}
ParallelMove r0 <- r0
DartReturn:8(v4)
B0
B1
Enter frame
MoveArgument(sp[0] <- v0)
v2 <- NativeCall(EventHandler_TimerMillisecondClock) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v2, v3, 'function result', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v2 T{int})
B0
B2
Enter frame
ParallelMove r0 <- fp[4]
v5 <- LoadField(v2 . Closure.context {final}) T{*}
ParallelMove fp[-1] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v6 <- LoadField(v5 . timer) T{_Timer}
v15 <- LoadField(v6 T{_Timer} . _callback@1026248) T{((dynamic, Timer) => void)??}
Branch if StrictCompare:12(!==, v15, v0 T{Null?}) T{bool} goto (3, 4)
B3
ParallelMove r1 <- r1
StaticCall:20( cancel<0> v6 T{_Timer}, using unchecked entrypoint)
ParallelMove r0 <- fp[-1]
v10 <- LoadField(v5 . _future) T{_Future}
ParallelMove r1 <- r1, r2 <- fp[3], r3 <- fp[2]
StaticCall:22( _completeError@4048458<0> v10, v3, v4, using unchecked entrypoint)
ParallelMove  goto:28 B5
B4
B5
ParallelMove r0 <- C
DartReturn:32(v0)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[3]
v4 <- LoadField(v2 . Closure.context {final}) T{*}
ParallelMove fp[-1] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v5 <- LoadField(v4 . timer) T{_Timer}
v14 <- LoadField(v5 T{_Timer} . _callback@1026248) T{((dynamic, Timer) => void)??}
Branch if StrictCompare:12(!==, v14, v0 T{Null?}) T{bool} goto (3, 4)
B3
ParallelMove r1 <- r1
StaticCall:20( cancel<0> v5 T{_Timer}, using unchecked entrypoint)
ParallelMove r0 <- fp[-1]
v9 <- LoadField(v4 . _future) T{_Future}
ParallelMove r1 <- r1, r2 <- fp[2]
StaticCall:22( _completeWithValue@4048458<0> v9, v3)
ParallelMove  goto:28 B5
B4
B5
ParallelMove r0 <- C
DartReturn:32(v0)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v20 <- LoadField(v19 . Closure.context {final}) T{*}
ParallelMove fp[-10] <- r4
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove  goto:12 B3
B3
v21 <- LoadField(v20 . _future) T{_Future}
ParallelMove fp[-9] <- r0
v22 <- LoadField(v20 . this) T{_Future}
v23 <- LoadField(v22 . :type_arguments {final}) T{TypeArguments}
ParallelMove r2 <- r5, r1 <- C, r3 <- C, fp[-8] <- r5
v25 <- InstantiateTypeArguments:16(v24, instantiator_type_args(v23), function_type_args(v0), instantiator_class(Library:'dart:async' Class: _Future@4048458)) T{*?}
ParallelMove r1 <- r0, r0 <- fp[-10]
v26 <- LoadField(v20 . zone) T{_RootZone}
v27 <- LoadField(v20 . onTimeoutHandler) T{(dynamic) => FutureOr<X0>}
MoveArgument(sp[2] <- v25)
MoveArgument(sp[1] <- v26)
MoveArgument(sp[0] <- v27)
v28 <- StaticCall:18( run<1> v25, v26, v27, using unchecked entrypoint) T{Y0?}
ParallelMove r1 <- fp[-9], r2 <- r0
StaticCall:20( _complete@4048458<0> v21, v28)
ParallelMove  goto:22 B4
B5
ParallelMove r0 <- fp[-2], r2 <- r0, r3 <- r1
v10 <- LoadField(v4 . _future) T{_Future}
ParallelMove r1 <- r1, r2 <- r2, r3 <- r3
StaticCall:26( _completeError@4048458<0> v10, v5, v6, using unchecked entrypoint)
ParallelMove  goto:28 B4
B4
ParallelMove r0 <- C
DartReturn:30(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
ParallelMove fp[-8] <- r1, fp[-9] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v20 <- AllocateContext:10(num_variables=3) T{Context}
ParallelMove r0 <- r0, r1 <- fp[-8]
ParallelMove fp[-10] <- r0
StoreField(v20 . this = v18, NoStoreBarrier)
ParallelMove r1 <- r1
StaticCall:12( _setPendingComplete@4048458<0> v18, using unchecked entrypoint)
ParallelMove  goto:16 B3
B3
ParallelMove r1 <- C, r2 <- fp[-10]
v23 <- AllocateClosure:20(v22, v20) T{_Closure}
ParallelMove r1 <- C, r2 <- fp[-10], r0 <- r0
ParallelMove fp[-8] <- r0
v25 <- AllocateClosure:22(v24, v20) T{_Closure}
ParallelMove r0 <- r0
MoveArgument(sp[3] <- v21)
MoveArgument(sp[2] <- v19)
MoveArgument(sp[1] <- v23)
MoveArgument(sp[0] <- v25)
StaticCall:24( then<1> v21, v19, v23, v25, using unchecked entrypoint)
ParallelMove  goto:26 B4
B5
ParallelMove r0 <- r0, r2 <- fp[-2]
StoreField(v5 . e = v6)
ParallelMove r0 <- r1
StoreField(v5 . s = v7)
ParallelMove r1 <- C, r2 <- r2
v10 <- AllocateClosure:30(v9, v5) T{_Closure}
ParallelMove r0 <- r0
MoveArgument(sp[0] <- v10)
StaticCall:32( scheduleMicrotask<0> v10)
ParallelMove  goto:34 B4
B4
ParallelMove r0 <- C
DartReturn:36(v0)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[3]
v23 <- LoadField(v21 . Closure.context {final}) T{*}
ParallelMove fp[-8] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v24 <- LoadField(v23 . this) T{_Future}
ParallelMove r1 <- r1
StaticCall:10( _clearPendingComplete@4048458<0> v24, using unchecked entrypoint)
ParallelMove r3 <- fp[-8] goto:14 B3
B3
v25 <- LoadField(v23 . this) T{_Future}
ParallelMove fp[-10] <- r4
v28 <- LoadField(v25 T{_Future} . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- fp[2], r2 <- r5, r1 <- C, fp[-9] <- r5
t1 <- AssertAssignable:18(v22, v26, ' in type cast', instantiator_type_args(v28), function_type_args(v0)) T{X0?}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-10], r2 <- fp[2]
StaticCall:20( _completeWithValue@4048458<0> v25, v22 T{X0?}, using unchecked entrypoint)
ParallelMove  goto:22 B4
B5
ParallelMove r0 <- fp[-2], r2 <- r0, r3 <- r1
v11 <- LoadField(v5 . this) T{_Future}
ParallelMove r1 <- r1, r2 <- r2, r3 <- r3
StaticCall:26( _completeError@4048458<0> v11, v6, v7, using unchecked entrypoint)
ParallelMove  goto:28 B4
B4
ParallelMove r0 <- C
DartReturn:30(v0)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
v4 <- LoadField(v3 . _future) T{_Future}
ParallelMove fp[-2] <- r0
v6 <- LoadField(v3 . timeLimit) T{Duration}
ParallelMove fp[-1] <- r2
v5 <- AllocateObject:10(cls=TimeoutException) T{TimeoutException}
ParallelMove r1 <- r0, r0 <- C
StoreField(v5 T{TimeoutException} . message = v15 T{_OneByteString}, NoStoreBarrier)
ParallelMove r0 <- fp[-1]
StoreField(v5 T{TimeoutException} . duration = v6 T{Duration}, NoStoreBarrier)
ParallelMove r1 <- fp[-2], r2 <- r1, r3 <- C
StaticCall:14( _completeError@4048458<0> v4, v5, v7, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:16(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v4 <- LoadField(v2 . ArgumentsDescriptor.count {final}) [0, 4611686018427387903] T{_Smi}
v6 <- BinarySmiOp:4(- [tr], v4, v5) [-2, 4611686018427387901] T{_Smi}
v7 <- LoadIndexedUnsafe(fp[v6 + 24]) T{*?}
v8 <- LoadIndexedUnsafe(fp[v6 + 16]) T{Duration}
v13 <- LoadIndexed([_List] v2, v11 T{_Smi}) T{*?}
Branch if StrictCompare:16(===, v13, v14) goto (2, 3)
B2
v21 <- LoadIndexed([_List] v2, v19 T{_Smi}) T{*?}
v22 <- BinarySmiOp:10(- [tr], v4, v21) [-4611686018427387903, 4611686018427387903] T{_Smi}
v23 <- LoadIndexedUnsafe(fp[v22 + 8]) T{*?}
ParallelMove r0 <- r0 goto:26 B5
B3
ParallelMove r0 <- C goto:28 B5
B5
v16 <- LoadField(v7 . Closure.context {final}) T{*}
CheckStackOverflow:34(stack=0, loop=0)
MoveArgument(sp[2] <- v16 T{*})
MoveArgument(sp[1] <- v8)
MoveArgument(sp[0] <- v15)
v18 <- StaticCall:36( timeout<0> v16 T{*}, v8, v15) T{_Future}
ParallelMove r0 <- r0
DartReturn:38(v18)
CheckStackOverflowSlowPath
B0
B1
Intrinsic
B0
B1
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(LibraryPrefix_isLoaded) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v3, v4, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{bool}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v3 T{bool})
B0
B2
Enter frame
ParallelMove r0 <- C
v3 <- LoadIndexedUnsafe(fp[v2 + 16]) T{_LibraryPrefix}
ParallelMove fp[-2] <- r1
CheckStackOverflow:8(stack=0, loop=0)
v4 <- AllocateContext:10(num_variables=1) T{Context}
ParallelMove r1 <- r0, r0 <- fp[-2]
ParallelMove fp[-3] <- r1
StoreField(v4 . prefix = v3, NoStoreBarrier)
ParallelMove r0 <- C
Call1ArgStub:12(InitAsync(v5))
ParallelMove r2 <- fp[-3]
v6 <- LoadField(v4 . prefix) T{_LibraryPrefix}
MoveArgument(sp[0] <- v6)
v7 <- StaticCall:14( _isLoaded@0150898<0> v6, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:18(!==, v7 T{bool}, v8) goto (3, 10)
BoolTest
B3
ParallelMove r2 <- fp[-3]
v14 <- LoadField(v4 . prefix) T{_LibraryPrefix}
MoveArgument(sp[0] <- v14)
v15 <- StaticCall:24( _loadingUnit@0150898<0> v14, using unchecked entrypoint, result_type = T{!null}) T{Object}
ParallelMove r1 <- r0
ParallelMove fp[-2] <- r1
v67 <- LoadClassId(v15) int64
MoveArgument(sp[1] <- v15)
MoveArgument(sp[0] <- v16)
ParallelMove r0 <- r0
v17 <- DispatchTableCall( cid=v67 Object.==<0>, v15, v16) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:30(!==, v17 T{bool}, v8) goto (4, 8)
BoolTest
B4
v31 <- LoadStaticField:4(_loads@0150898, CallsInitializer) T{_Map}
ParallelMove r1 <- r0, r2 <- fp[-2], r0 <- r0
ParallelMove fp[-4] <- r0
v38 <- StaticCall:10( _getValueOrData@3220832<0> v31 T{_Map}, v15 T{Object}, using unchecked entrypoint) T{Object??}
ParallelMove r1 <- r0, r0 <- fp[-4]
v45 <- LoadField(v31 T{_Map} . LinkedHashBase.data) T{_List}
Branch if StrictCompare:14(===, v45 T{_List}, v38) goto (16, 17)
B16
ParallelMove r1 <- C goto:24 B18
B17
B18
Branch if StrictCompare:40(===, v40 T{X1??}, v0) goto (5, 6)
B5
ParallelMove r1 <- C
v24 <- StaticCall:48( Completer.<0> v5, result_type = T{_AsyncCompleter}) T{_AsyncCompleter}
ParallelMove r1 <- fp[-4], r2 <- fp[-2], r3 <- r0, r0 <- r0
ParallelMove fp[-4] <- r0
StaticCall:50( []=<0> v31 T{_Map}, v15, v24, using unchecked entrypoint)
MoveArgument(sp[0] <- v15)
StaticCall:52( _issueLoad@0150898<0> v15)
ParallelMove r0 <- fp[-4] goto:58 B7
B6
ParallelMove r0 <- r1 goto:60 B7
B7
v22 <- LoadField(v21 . future {final}) T{_Future}
ParallelMove r0 <- r1, fp[-2] <- r1
Suspend:64(Await(v22))
ParallelMove  goto:72 B9
B8
B9
B10
B11
ParallelMove r1 <- C, r2 <- fp[-3]
v12 <- AllocateClosure:84(v11, v4) T{_Closure}
ParallelMove r1 <- C, r2 <- r0
v13 <- StaticCall:86( Future.<0> v5, v12) T{_Future}
ParallelMove r0 <- r0, r1 <- r0
ParallelMove fp[-2] <- r1
Suspend:88(Await(v13))
ParallelMove r0 <- C
DartReturn:92(v0)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v12 <- LoadField(v11 . Closure.context {final}) T{*}
ParallelMove fp[-9] <- r1
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove  goto:12 B3
B3
v13 <- LoadField(v12 . computation) T{(dynamic) => FutureOr<X0>}
ParallelMove fp[-8] <- r2
MoveArgument(sp[0] <- v13)
ParallelMove r0 <- r2
ClosureCall:18( closure=v13<0>, v13)
ParallelMove r0 <- fp[-9] goto:20 B4
B4
v14 <- LoadField(v12 . result) T{_Future}
ParallelMove r1 <- r1, r2 <- C
StaticCall:28( _complete@4048458<0> v14, v0, using unchecked entrypoint)
ParallelMove r0 <- C
DartReturn:30(v0)
B5
ParallelMove r0 <- fp[-2], r2 <- r0, r3 <- r1
v10 <- LoadField(v4 . result) T{_Future}
ParallelMove r1 <- r1, r2 <- r2, r3 <- r3
StaticCall:24( _completeWithErrorCallback@4048458<0> v10, v5, v6)
ParallelMove r0 <- C
DartReturn:26(v0)
CheckStackOverflowSlowPath
Allocate SuspendState
Save SuspendState to frame
Copy frame to SuspendState
Call suspend Dart function
SuspendState Allocation slow case
Resize SuspendState
Old gen SuspendState slow case
EnterCallRuntimeFrame
B0
B1
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(LibraryPrefix_issueLoad) T{*?}
ParallelMove r0 <- r0
DartReturn:8(v3)
B0
B1
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(LibraryPrefix_loadingUnit) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v3, v4, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{Object}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v3 T{Object})
B0
B1
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(LibraryPrefix_setLoaded) T{*?}
ParallelMove r0 <- r0
DartReturn:8(v3)
Checking for concrete finalized classes:
 * 467 (_SyncCompleter)
 * 468 (_AsyncCompleter)
Checking for cid 79 (_WeakProperty)
B0
B1
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(Mint_bitLength) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v3, v4, 'function result', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v3 T{int})
B0
B1
Intrinsic
B0
B1
Intrinsic
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(String_getHashCode) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v3, v4, 'function result', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v3 T{int})
B0
B1
Intrinsic
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(Object_runtimeType) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v3, v4, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{Type}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v3 T{Type})
B0
B1
Enter frame
v4 <- LoadField(v3 . ArgumentsDescriptor.type_args_len {final}) [0, 4611686018427387903] T{_Smi}
Branch if StrictCompare:4(===, v4, v5) goto (2, 3)
B2
ParallelMove r1 <- C goto:14 B5
B3
v6 <- LoadField(v3 . ArgumentsDescriptor.size {final}) [0, 4611686018427387903] T{_Smi}
v7 <- LoadIndexedUnsafe(fp[v6 + 16]) T{TypeArguments?}
ParallelMove r1 <- r1 goto:16 B5
B5
ParallelMove fp[-1] <- r1
MoveArgument(sp[2] <- v8)
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v9 <- NativeCall(Internal_makeListFixedLength) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- fp[-1], r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:22(v9, v10, 'function result', instantiator_type_args(v0), function_type_args(v8)) T{List<Y0>}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:24(v9 T{List<Y0>})
Checking for concrete finalized classes:
 * 89 (_List)
 * 90 (_ImmutableList)
 * 91 (_GrowableList)
Not checking the following concrete implementors of List:
 * 111(_Int8List): cannot check that List<int> is a subtype of List<Y0>
 * 112(_Int8ArrayView): cannot check that List<int> is a subtype of List<Y0>
 * 113(_ExternalInt8Array): cannot check that List<int> is a subtype of List<Y0>
 * 114(_UnmodifiableInt8ArrayView): cannot check that List<int> is a subtype of List<Y0>
 * 115(_Uint8List): cannot check that List<int> is a subtype of List<Y0>
 * 116(_Uint8ArrayView): cannot check that List<int> is a subtype of List<Y0>
 * 117(_ExternalUint8Array): cannot check that List<int> is a subtype of List<Y0>
 * 118(_UnmodifiableUint8ArrayView): cannot check that List<int> is a subtype of List<Y0>
 * 119(_Uint8ClampedList): cannot check that List<int> is a subtype of List<Y0>
 * 120(_Uint8ClampedArrayView): cannot check that List<int> is a subtype of List<Y0>
 * 121(_ExternalUint8ClampedArray): cannot check that List<int> is a subtype of List<Y0>
 * 122(_UnmodifiableUint8ClampedArrayView): cannot check that List<int> is a subtype of List<Y0>
 * 123(_Int16List): cannot check that List<int> is a subtype of List<Y0>
 * 124(_Int16ArrayView): cannot check that List<int> is a subtype of List<Y0>
 * 125(_ExternalInt16Array): cannot check that List<int> is a subtype of List<Y0>
 * 126(_UnmodifiableInt16ArrayView): cannot check that List<int> is a subtype of List<Y0>
 * 127(_Uint16List): cannot check that List<int> is a subtype of List<Y0>
 * 128(_Uint16ArrayView): cannot check that List<int> is a subtype of List<Y0>
 * 129(_ExternalUint16Array): cannot check that List<int> is a subtype of List<Y0>
 * 130(_UnmodifiableUint16ArrayView): cannot check that List<int> is a subtype of List<Y0>
 * 131(_Int32List): cannot check that List<int> is a subtype of List<Y0>
 * 132(_Int32ArrayView): cannot check that List<int> is a subtype of List<Y0>
 * 133(_ExternalInt32Array): cannot check that List<int> is a subtype of List<Y0>
 * 134(_UnmodifiableInt32ArrayView): cannot check that List<int> is a subtype of List<Y0>
 * 135(_Uint32List): cannot check that List<int> is a subtype of List<Y0>
 * 136(_Uint32ArrayView): cannot check that List<int> is a subtype of List<Y0>
 * 137(_ExternalUint32Array): cannot check that List<int> is a subtype of List<Y0>
 * 138(_UnmodifiableUint32ArrayView): cannot check that List<int> is a subtype of List<Y0>
 * 139(_Int64List): cannot check that List<int> is a subtype of List<Y0>
 * 140(_Int64ArrayView): cannot check that List<int> is a subtype of List<Y0>
 * 141(_ExternalInt64Array): cannot check that List<int> is a subtype of List<Y0>
 * 142(_UnmodifiableInt64ArrayView): cannot check that List<int> is a subtype of List<Y0>
 * 143(_Uint64List): cannot check that List<int> is a subtype of List<Y0>
 * 144(_Uint64ArrayView): cannot check that List<int> is a subtype of List<Y0>
 * 145(_ExternalUint64Array): cannot check that List<int> is a subtype of List<Y0>
 * 146(_UnmodifiableUint64ArrayView): cannot check that List<int> is a subtype of List<Y0>
 * 147(_Float32List): cannot check that List<double> is a subtype of List<Y0>
 * 148(_Float32ArrayView): cannot check that List<double> is a subtype of List<Y0>
 * 149(_ExternalFloat32Array): cannot check that List<double> is a subtype of List<Y0>
 * 150(_UnmodifiableFloat32ArrayView): cannot check that List<double> is a subtype of List<Y0>
 * 151(_Float64List): cannot check that List<double> is a subtype of List<Y0>
 * 152(_Float64ArrayView): cannot check that List<double> is a subtype of List<Y0>
 * 153(_ExternalFloat64Array): cannot check that List<double> is a subtype of List<Y0>
 * 154(_UnmodifiableFloat64ArrayView): cannot check that List<double> is a subtype of List<Y0>
 * 155(_Float32x4List): cannot check that List<Float32x4> is a subtype of List<Y0>
 * 156(_Float32x4ArrayView): cannot check that List<Float32x4> is a subtype of List<Y0>
 * 157(_ExternalFloat32x4Array): cannot check that List<Float32x4> is a subtype of List<Y0>
 * 158(_UnmodifiableFloat32x4ArrayView): cannot check that List<Float32x4> is a subtype of List<Y0>
 * 159(_Int32x4List): cannot check that List<Int32x4> is a subtype of List<Y0>
 * 160(_Int32x4ArrayView): cannot check that List<Int32x4> is a subtype of List<Y0>
 * 161(_ExternalInt32x4Array): cannot check that List<Int32x4> is a subtype of List<Y0>
 * 162(_UnmodifiableInt32x4ArrayView): cannot check that List<Int32x4> is a subtype of List<Y0>
 * 163(_Float64x2List): cannot check that List<Float64x2> is a subtype of List<Y0>
 * 164(_Float64x2ArrayView): cannot check that List<Float64x2> is a subtype of List<Y0>
 * 165(_ExternalFloat64x2Array): cannot check that List<Float64x2> is a subtype of List<Y0>
 * 166(_UnmodifiableFloat64x2ArrayView): cannot check that List<Float64x2> is a subtype of List<Y0>
 * 549(CodeUnits): cannot check that List<int> is a subtype of List<Y0>
Generating check for type argument 0: Y0
Checking instantiated type parameter for possible top types
Checking for legacy or non-nullable instance type argument
Checking instance type argument for possible bottom types
Checking for legacy or nullable instantiated type parameter
B0
B1
Enter frame
MoveArgument(sp[4] <- v2)
MoveArgument(sp[3] <- v6)
MoveArgument(sp[2] <- v4)
MoveArgument(sp[1] <- v7)
MoveArgument(sp[0] <- v0)
v8 <- NativeCall(List_slice) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v8, v9, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{_List}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v8 T{_List})
B0
B1
ParallelMove r1 <- sp[0]
v3 <- LoadField(v2 . TypedDataView.offset_in_bytes {final}) [0, 4611686018427387903] T{_Smi}
ParallelMove r0 <- r0
DartReturn:10(v3)
B0
B1
Intrinsic
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(String_getHashCode) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v3, v4, 'function result', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v3 T{int})
B0
B1
Intrinsic
B0
B1
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(SendPort_get_hashcode) T{*?}
ParallelMove r0 <- r0
DartReturn:8(v3)
B0
B1
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(Capability_get_hashcode) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v3, v4, 'function result', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v3 T{int})
B0
B1
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(Ffi_dl_getHandle) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v3, v4, 'function result', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v3 T{int})
B0
B1
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(Closure_computeHash) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v3, v4, 'function result', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v3 T{int})
B0
B1
Intrinsic
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(AbstractType_getHashCode) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v3, v4, 'function result', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v3 T{int})
B0
B1
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(Object_toString) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v3, v4, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{String}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v3 T{String})
B0
B1
Enter frame
ParallelMove r3 <- r1, r0 <- r2, fp[-11] <- r1, fp[-12] <- r2
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r3, r2 <- r0
v16 <- StaticCall:10( writeJsonValue<0> v14, v15, using unchecked entrypoint, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:14(===, v16 T{bool}, v17) goto (3, 4)
BoolTest
B3
ParallelMove r0 <- C
DartReturn:20(v0)
B4
ParallelMove r1 <- fp[-11], r2 <- fp[-12]
StaticCall:24( _checkCycle@10003594<0> v14, v15, using unchecked entrypoint)
ParallelMove r0 <- C goto:28 B5
B5
v36 <- LoadField(v18 T{_Closure} . Closure.context {final}) T{!null}
ParallelMove r1 <- fp[-12], fp[-13] <- r2
v37 <- StaticCall:10( _defaultToEncodable@10003594<0> v15 T{*}) T{*?}
ParallelMove r0 <- C
Throw:38(v20)
B9
ParallelMove r1 <- fp[-9], fp[-11] <- r0
v12 <- StaticCall:60( get:_partialResult@10003594<0> v2) T{String??}
v13 <- AllocateObject:62(cls=JsonUnsupportedObjectError, <not-aliased>) T{JsonUnsupportedObjectError}
ParallelMove r1 <- r0, r0 <- fp[-10]
StoreField(v13 T{JsonUnsupportedObjectError} . unsupportedObject = v3 T{Object?}, NoStoreBarrier)
ParallelMove r0 <- fp[-11]
StoreField(v13 T{JsonUnsupportedObjectError} . cause = v6 T{Object??}, NoStoreBarrier)
ParallelMove r0 <- r1
Throw:66(v13)
CheckStackOverflowSlowPath
B0
B1
Enter frame
MoveArgument(sp[3] <- v2)
MoveArgument(sp[2] <- v3)
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v0)
v5 <- NativeCall(NoSuchMethodError_existingMethodSignature) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v5, v6, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{String??}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v5 T{String??})
B0
B1
Enter frame
MoveArgument(sp[4] <- v2)
MoveArgument(sp[3] <- v3)
MoveArgument(sp[2] <- v4)
MoveArgument(sp[1] <- v5)
MoveArgument(sp[0] <- v0)
v6 <- NativeCall(ImmutableList_from) T{*?}
ParallelMove r0 <- r0, r2 <- fp[5], r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v6, v7, 'function result', instantiator_type_args(v2), function_type_args(v0)) T{_ImmutableList}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v6 T{_ImmutableList})
Checking for cid 90 (_ImmutableList)
Generating check for type argument 0: X0
Checking instantiated type parameter for possible top types
Checking for legacy or non-nullable instance type argument
Checking instance type argument for possible bottom types
Checking for legacy or nullable instantiated type parameter
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-9] <- r1
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r0
v12 <- StaticCall:10( isToStringVisiting<0> v11, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:14(===, v12 T{bool}, v13) goto (5, 9)
BoolTest
B5
ParallelMove r0 <- C
DartReturn:40(v32)
B9
ParallelMove r1 <- C, r2 <- C
v16 <- StaticCall:60( _GrowableList@0150898.<0> v14, v131 T{_Smi}, result_type = T{_GrowableList}) T{_GrowableList}
ParallelMove r0 <- r0
ParallelMove fp[-10] <- r0
v65 <- LoadStaticField:4(toStringVisiting, CallsInitializer) T{_GrowableList}
ParallelMove r0 <- r0
ParallelMove fp[-12] <- r0
v99 <- LoadField(v65 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v104 <- LoadField(v65 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v105 <- LoadField(v104 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v120 <- UnboxInt64([non-speculative], v99 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-11] <- r2
v121 <- UnboxInt64([non-speculative], v105 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v120 T{_Smi} == v121 T{_Smi}) T{bool} goto (25, 26)
B25
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v65 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B27
B26
B27
v77 <- BinaryInt64Op(+ [tr], v120 T{_Smi}, v132 T{_Smi}) [1, 576460752303423488] int64
v122 <- BoxInt64(v77) [1, 576460752303423488] T{_Smi}
StoreField(v65 T{_GrowableList} . GrowableObjectArray.length = v122, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r2
GenericCheckBound:40(v77 T{_Smi}, v120 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v80 <- LoadField(v65 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-9]
StoreIndexed:40([_List] v80, v120 T{_Smi}, v11 T{Iterable<dynamic>})
ParallelMove  goto:68 B10
B10
ParallelMove r1 <- fp[-9], r2 <- fp[-10]
StaticCall:72( _iterablePartsToStrings@0150898<0> v11, v16)
ParallelMove r2 <- fp[-12] goto:76 B11
B11
v94 <- LoadField(v65 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v125 <- UnboxInt64([non-speculative], v94 T{_Smi}) [0, 576460752303423487] int64
v57 <- BinaryInt64Op(- [tr], v125 T{_Smi}, v132 T{_Smi}) [-1, 576460752303423486] int64
ParallelMove r0 <- r1, r1 <- r3
GenericCheckBound:14(v125 T{_Smi}, v57) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r2, r2 <- r3
StaticCall:16( set:length<0> v65 T{_GrowableList}, v57 T{int}, using unchecked entrypoint)
v19 <- AllocateObject:92(cls=StringBuffer) T{StringBuffer}
ParallelMove r0 <- r0
ParallelMove fp[-9] <- r0
MoveArgument(sp[0] <- v20)
ParallelMove r1 <- r0
StaticCall:94( StringBuffer.<0> v19, v20)
ParallelMove r1 <- fp[-9], r2 <- fp[-10], r3 <- C
StaticCall:96( writeAll<0> v19, v16, v21, using unchecked entrypoint)
ParallelMove r1 <- fp[-9], r2 <- C
StaticCall:98( write<0> v19, v22, using unchecked entrypoint)
MoveArgument(sp[0] <- v19)
v23 <- StaticCall:100( toString<0> v19, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:102(v23)
B13
ParallelMove fp[-9] <- r0, fp[-10] <- r1
v35 <- LoadStaticField:4(toStringVisiting, CallsInitializer) T{_GrowableList}
ParallelMove r2 <- r0
v89 <- LoadField(v35 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v128 <- UnboxInt64([non-speculative], v89 T{_Smi}) [0, 576460752303423487] int64
v42 <- BinaryInt64Op(- [tr], v128 T{_Smi}, v132 T{_Smi}) [-1, 576460752303423486] int64
ParallelMove r0 <- r1, r1 <- r3
GenericCheckBound:14(v128 T{_Smi}, v42) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r2, r2 <- r3
StaticCall:16( set:length<0> v35 T{_GrowableList}, v42 T{int}, using unchecked entrypoint)
ParallelMove r0 <- fp[-9], r1 <- fp[-10]
ReThrow:90(v5, v6)
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r0 <- r1, fp[-6] <- r1
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r0
v10 <- StaticCall:12( isToStringVisiting<0> v8, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:16(===, v10 T{bool}, v11) goto (3, 4)
BoolTest
B3
ParallelMove r0 <- C
DartReturn:22(v23)
B4
v12 <- AllocateObject:26(cls=StringBuffer) T{StringBuffer}
ParallelMove r1 <- r0, r0 <- r0
ParallelMove fp[-7] <- r0
StaticCall:28( StringBuffer.<0> v12)
v9 <- AllocateContext:10(num_variables=2) T{Context}
ParallelMove r1 <- r0, r0 <- fp[-7]
ParallelMove fp[-8] <- r1
StoreField(v9 . result = v12, NoStoreBarrier)
ParallelMove  goto:32 B5
B5
v57 <- LoadStaticField:4(toStringVisiting, CallsInitializer) T{_GrowableList}
ParallelMove r0 <- r0
ParallelMove fp[-10] <- r0
v96 <- LoadField(v57 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
ParallelMove fp[-7] <- r2
v101 <- LoadField(v57 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v102 <- LoadField(v101 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v116 <- UnboxInt64([non-speculative], v96 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-9] <- r4
v117 <- UnboxInt64([non-speculative], v102 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v116 T{_Smi} == v117 T{_Smi}) T{bool} goto (20, 21)
B20
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v57 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B22
B21
B22
v74 <- BinaryInt64Op(+ [tr], v116 T{_Smi}, v127 T{_Smi}) [1, 576460752303423488] int64
v118 <- BoxInt64(v74) [1, 576460752303423488] T{_Smi}
StoreField(v57 T{_GrowableList} . GrowableObjectArray.length = v118, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r2
GenericCheckBound:40(v74 T{_Smi}, v116 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v77 <- LoadField(v57 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- r5
StoreIndexed:40([_List] v77, v116 T{_Smi}, v8 T{Map<Object?, Object?>})
v14 <- LoadField(v9 . result) T{StringBuffer}
ParallelMove r1 <- r1, r2 <- C
StaticCall:40( write<0> v14, v15, using unchecked entrypoint)
ParallelMove r0 <- fp[-8], r1 <- C
StoreField(v9 . first = v11)
ParallelMove r1 <- C, r2 <- r0
v17 <- AllocateClosure:42(v16, v9) T{_Closure}
ParallelMove r0 <- r0, r1 <- fp[-6]
v143 <- LoadClassId(<non-smi> v8) int64
ParallelMove r0 <- r2, r1 <- r1, r2 <- r0
DispatchTableCall( cid=v143 Map.forEach<0>, v8, v17)
ParallelMove r0 <- fp[-8]
v18 <- LoadField(v9 . result) T{StringBuffer}
ParallelMove r1 <- r1, r2 <- C
StaticCall:46( write<0> v18, v19, using unchecked entrypoint)
ParallelMove r3 <- fp[-8], r2 <- fp[-10] goto:50 B6
B6
v91 <- LoadField(v57 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v121 <- UnboxInt64([non-speculative], v91 T{_Smi}) [0, 576460752303423487] int64
v49 <- BinaryInt64Op(- [tr], v121 T{_Smi}, v127 T{_Smi}) [-1, 576460752303423486] int64
ParallelMove r0 <- r1, r1 <- r4
GenericCheckBound:14(v121 T{_Smi}, v49) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r2, r2 <- r4
StaticCall:16( set:length<0> v57 T{_GrowableList}, v49 T{int}, using unchecked entrypoint)
ParallelMove r0 <- fp[-8]
v21 <- LoadField(v9 . result) T{StringBuffer}
MoveArgument(sp[0] <- v21)
v22 <- StaticCall:66( toString<0> v21, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:68(v22)
B8
ParallelMove fp[-6] <- r0, fp[-7] <- r1
v26 <- LoadStaticField:4(toStringVisiting, CallsInitializer) T{_GrowableList}
ParallelMove r2 <- r0
v86 <- LoadField(v26 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v124 <- UnboxInt64([non-speculative], v86 T{_Smi}) [0, 576460752303423487] int64
v33 <- BinaryInt64Op(- [tr], v124 T{_Smi}, v127 T{_Smi}) [-1, 576460752303423486] int64
ParallelMove r0 <- r1, r1 <- r3
GenericCheckBound:14(v124 T{_Smi}, v33) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r2, r2 <- r3
StaticCall:16( set:length<0> v26 T{_GrowableList}, v33 T{int}, using unchecked entrypoint)
ParallelMove r0 <- fp[-6], r1 <- fp[-7]
ReThrow:64(v5, v6)
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
ParallelMove r3 <- r1, r0 <- r2, r2 <- r3, fp[-9] <- r1, fp[-10] <- r2, fp[-11] <- r3
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r3
v14 <- StaticCall:10( isToStringVisiting<0> v11, result_type = T{bool}) T{bool}
ParallelMove r0 <- r0
Branch if StrictCompare:14(===, v14 T{bool}, v15) goto (3, 4)
BoolTest
B3
ParallelMove r3 <- fp[-10], r0 <- fp[-11]
ParallelMove r1 <- C, r2 <- C
v22 <- CreateArray:20(v0, v21) T{_List}
ParallelMove r1 <- r0, r0 <- fp[-10]
StoreIndexed([_List] v22, v23, v12, NoStoreBarrier)
StoreIndexed([_List] v22, v24, v25, NoStoreBarrier)
ParallelMove r2 <- fp[-11]
StoreIndexed([_List] v22, v26, v13, NoStoreBarrier)
MoveArgument(sp[0] <- v22)
v27 <- StaticCall:22( _interpolate@0150898<0> v22, recognized_kind = StringBaseInterpolate) T{String}
ParallelMove r0 <- r0
DartReturn:24(v27)
B4
ParallelMove r0 <- fp[-10], r2 <- fp[-11]
v16 <- AllocateObject:28(cls=StringBuffer) T{StringBuffer}
ParallelMove r0 <- r0
ParallelMove fp[-12] <- r0
MoveArgument(sp[0] <- v12)
ParallelMove r1 <- r0
StaticCall:30( StringBuffer.<0> v16, v12)
v60 <- LoadStaticField:4(toStringVisiting, CallsInitializer) T{_GrowableList}
ParallelMove r0 <- r0
ParallelMove fp[-10] <- r0
v94 <- LoadField(v60 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v99 <- LoadField(v60 T{_GrowableList} . GrowableObjectArray.data) T{_List}
v100 <- LoadField(v99 . Array.length {final}) [0, 576460752303423487] T{_Smi}
v114 <- UnboxInt64([non-speculative], v94 T{_Smi}) [0, 576460752303423487] int64
ParallelMove fp[-13] <- r2
v115 <- UnboxInt64([non-speculative], v100 T{_Smi}) [0, 576460752303423487] int64
Branch if EqualityCompare(v114 T{_Smi} == v115 T{_Smi}) T{bool} goto (20, 21)
B20
ParallelMove r1 <- r0
StaticCall:26( _growToNextCapacity@0150898<0> v60 T{_GrowableList}, using unchecked entrypoint)
ParallelMove  goto:32 B22
B21
B22
v72 <- BinaryInt64Op(+ [tr], v114 T{_Smi}, v125 T{_Smi}) [1, 576460752303423488] int64
v116 <- BoxInt64(v72) [1, 576460752303423488] T{_Smi}
StoreField(v60 T{_GrowableList} . GrowableObjectArray.length = v116, NoStoreBarrier)
ParallelMove r0 <- r0, r1 <- r2
GenericCheckBound:40(v72 T{_Smi}, v114 T{_Smi}) [-4611686018427387904, 4611686018427387903] int64
v75 <- LoadField(v60 T{_GrowableList} . GrowableObjectArray.data) T{_List}
ParallelMove r1 <- r1, r0 <- fp[-9]
StoreIndexed:40([_List] v75, v114 T{_Smi}, v11 T{Iterable<dynamic>})
ParallelMove  goto:38 B5
B5
ParallelMove r1 <- fp[-12], r2 <- fp[-9], r3 <- C
StaticCall:42( writeAll<0> v16, v11, v18, using unchecked entrypoint)
ParallelMove r2 <- fp[-10] goto:46 B6
B6
v89 <- LoadField(v60 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v119 <- UnboxInt64([non-speculative], v89 T{_Smi}) [0, 576460752303423487] int64
v52 <- BinaryInt64Op(- [tr], v119 T{_Smi}, v125 T{_Smi}) [-1, 576460752303423486] int64
ParallelMove r0 <- r1, r1 <- r3
GenericCheckBound:14(v119 T{_Smi}, v52) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r2, r2 <- r3
StaticCall:16( set:length<0> v60 T{_GrowableList}, v52 T{int}, using unchecked entrypoint)
ParallelMove r1 <- fp[-12], r2 <- fp[-11]
StaticCall:62( write<0> v16, v13, using unchecked entrypoint)
MoveArgument(sp[0] <- v16)
v20 <- StaticCall:64( toString<0> v16, using unchecked entrypoint, result_type = T{!null}) T{String}
ParallelMove r0 <- r0
DartReturn:66(v20)
B8
ParallelMove fp[-9] <- r0, fp[-10] <- r1
v30 <- LoadStaticField:4(toStringVisiting, CallsInitializer) T{_GrowableList}
ParallelMove r2 <- r0
v84 <- LoadField(v30 T{_GrowableList} . GrowableObjectArray.length) [0, 576460752303423487] T{_Smi}
v122 <- UnboxInt64([non-speculative], v84 T{_Smi}) [0, 576460752303423487] int64
v37 <- BinaryInt64Op(- [tr], v122 T{_Smi}, v125 T{_Smi}) [-1, 576460752303423486] int64
ParallelMove r0 <- r1, r1 <- r3
GenericCheckBound:14(v122 T{_Smi}, v37) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r1 <- r2, r2 <- r3
StaticCall:16( set:length<0> v30 T{_GrowableList}, v37 T{int}, using unchecked entrypoint)
ParallelMove r0 <- fp[-9], r1 <- fp[-10]
ReThrow:60(v7, v8)
CheckStackOverflowSlowPath
slow path check bound operation
slow path check bound operation
slow path check bound operation
B0
B1
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(Double_toString) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v3, v4, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{String}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v3 T{String})
B0
B1
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(AbstractType_toString) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v3, v4, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{String}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v3 T{String})
B0
B1
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(Object_toString) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v3, v4, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{String}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v3 T{String})
Checking for concrete finalized classes:
 * 458 (_RawSocket)
 * 460 (_ControllerStream)
 * 461 (_BroadcastStream)
Generating check for type argument 0: X0
Checking instantiated type parameter for possible top types
Checking for legacy or non-nullable instance type argument
Checking instance type argument for possible bottom types
Checking for legacy or nullable instantiated type parameter
Checking for concrete finalized classes:
 * 440 (_ControllerSubscription)
 * 441 (_BroadcastSubscription)
 * 445 (_SyncStreamController)
 * 446 (_AsyncStreamController)
 * 476 (_AsyncBroadcastStreamController)
 * 477 (_SyncBroadcastStreamController)
Generating check for type argument 0: X0
Checking instantiated type parameter for possible top types
Checking for legacy or non-nullable instance type argument
Checking instance type argument for possible bottom types
Checking for legacy or nullable instantiated type parameter
Checking for concrete finalized classes:
 * 431 (_DoneStreamSubscription)
 * 440 (_ControllerSubscription)
 * 441 (_BroadcastSubscription)
Generating check for type argument 0: X0
Checking instantiated type parameter for possible top types
Checking for legacy or non-nullable instance type argument
Checking instance type argument for possible bottom types
Checking for legacy or nullable instantiated type parameter
Checking for cid 432 (_PendingEvents)
Generating check for type argument 0: X0
Checking instantiated type parameter for possible top types
Checking for legacy or non-nullable instance type argument
Checking instance type argument for possible bottom types
Checking for legacy or nullable instantiated type parameter
B0
B1
Enter frame
v30 <- LoadField(v29 . ArgumentsDescriptor.type_args_len {final}) [0, 4611686018427387903] T{_Smi}
Branch if StrictCompare:4(===, v30, v31) goto (2, 3)
B2
ParallelMove r1 <- C goto:14 B5
B3
v32 <- LoadField(v29 . ArgumentsDescriptor.size {final}) [0, 4611686018427387903] T{_Smi}
v33 <- LoadIndexedUnsafe(fp[v32 + 16]) T{TypeArguments?}
ParallelMove r1 <- r1 goto:16 B5
B5
ParallelMove fp[-10] <- r1
CheckStackOverflow:22(stack=0, loop=0)
ParallelMove  goto:26 B6
B6
v50 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r0 <- r0
Branch if StrictCompare:32(===, v35, v50) goto (8, 9)
B8
MoveArgument(sp[1] <- v27)
MoveArgument(sp[0] <- v28)
ParallelMove r0 <- fp[3]
v39 <- ClosureCall:40( closure=v27<0>, v27, v28) T{*?}
ParallelMove r0 <- C
DartReturn:42(v0)
B9
ParallelMove r2 <- C, r1 <- fp[-10], r3 <- C
v38 <- InstantiateTypeArguments:46(v37, instantiator_type_args(v0), function_type_args(v34), instantiator_class(Library:'dart:async' Class: _RootZone@4048458)) T{*?}
ParallelMove r0 <- r0
MoveArgument(sp[3] <- v38)
MoveArgument(sp[2] <- v26)
MoveArgument(sp[1] <- v27)
MoveArgument(sp[0] <- v28)
StaticCall:48( _rootRunUnary@4048458<2> v38, v26, v27, v28)
ParallelMove  goto:50 B7
B10
ParallelMove r1 <- r0, r2 <- r1
StaticCall:10( _rootHandleError@4048458<0> v9 T{Object}, v10 T{StackTrace})
ParallelMove  goto:56 B7
B7
ParallelMove r0 <- C
DartReturn:58(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
v33 <- LoadField(v32 . ArgumentsDescriptor.type_args_len {final}) [0, 4611686018427387903] T{_Smi}
Branch if StrictCompare:4(===, v33, v34) goto (2, 3)
B2
ParallelMove r1 <- C goto:14 B5
B3
v35 <- LoadField(v32 . ArgumentsDescriptor.size {final}) [0, 4611686018427387903] T{_Smi}
v36 <- LoadIndexedUnsafe(fp[v35 + 16]) T{TypeArguments?}
ParallelMove r1 <- r1 goto:16 B5
B5
ParallelMove fp[-10] <- r1
CheckStackOverflow:22(stack=0, loop=0)
ParallelMove  goto:26 B6
B6
v53 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r0 <- r0
Branch if StrictCompare:32(===, v38, v53) goto (8, 9)
B8
MoveArgument(sp[2] <- v29)
MoveArgument(sp[1] <- v30)
MoveArgument(sp[0] <- v31)
ParallelMove r0 <- fp[4]
v42 <- ClosureCall:40( closure=v29<0>, v29, v30, v31) T{*?}
ParallelMove r0 <- C
DartReturn:42(v0)
B9
ParallelMove r2 <- C, r1 <- fp[-10], r3 <- C
v41 <- InstantiateTypeArguments:46(v40, instantiator_type_args(v0), function_type_args(v37), instantiator_class(Library:'dart:async' Class: _RootZone@4048458)) T{*?}
ParallelMove r0 <- r0
MoveArgument(sp[4] <- v41)
MoveArgument(sp[3] <- v28)
MoveArgument(sp[2] <- v29)
MoveArgument(sp[1] <- v30)
MoveArgument(sp[0] <- v31)
StaticCall:48( _rootRunBinary@4048458<3> v41, v28, v29, v30, v31)
ParallelMove  goto:50 B7
B10
ParallelMove r1 <- r0, r2 <- r1
StaticCall:10( _rootHandleError@4048458<0> v10 T{Object}, v11 T{StackTrace})
ParallelMove  goto:56 B7
B7
ParallelMove r0 <- C
DartReturn:58(v0)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r1
v5 <- StaticCall:10( _close@4048458<0> v3 T{*}) T{void?}
ParallelMove r0 <- r0
DartReturn:12(v5)
CheckStackOverflowSlowPath
Checking for cid 438 (_StreamControllerAddStreamState)
Generating check for type argument 0: X0
Checking instantiated type parameter for possible top types
Checking for legacy or non-nullable instance type argument
Checking instance type argument for possible bottom types
Checking for legacy or nullable instantiated type parameter
Checking for concrete finalized classes:
 * 445 (_SyncStreamController)
 * 446 (_AsyncStreamController)
 * 476 (_AsyncBroadcastStreamController)
 * 477 (_SyncBroadcastStreamController)
Generating check for type argument 0: X0
Checking instantiated type parameter for possible top types
Checking for legacy or non-nullable instance type argument
Checking instance type argument for possible bottom types
Checking for legacy or nullable instantiated type parameter
Checking for concrete finalized classes:
 * 440 (_ControllerSubscription)
 * 441 (_BroadcastSubscription)
Generating check for type argument 0: X0
Checking instantiated type parameter for possible top types
Checking for legacy or non-nullable instance type argument
Checking instance type argument for possible bottom types
Checking for legacy or nullable instantiated type parameter
B0
B1
Enter frame
ParallelMove fp[-8] <- r1
CheckStackOverflow:8(stack=0, loop=0)
Branch if StrictCompare:10(===, v17, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:16(v0)
B4
B5
MoveArgument(sp[0] <- v17 T{_Closure})
ParallelMove r0 <- r1
v18 <- ClosureCall:28( closure=v17 T{_Closure}<0>, v17 T{_Closure}) T{*?}
ParallelMove  goto:30 B6
B7
ParallelMove r1 <- r0, r2 <- r1, fp[-8] <- r0, fp[-9] <- r1
v33 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r1 <- fp[-8], r2 <- fp[-9]
StaticCall:10( _rootHandleError@4048458<0> v5 T{Object}, v6 T{StackTrace})
ParallelMove  goto:38 B6
B6
ParallelMove r0 <- C
DartReturn:40(v0)
CheckStackOverflowSlowPath
B0
B25
Enter frame
ParallelMove r0 <- r2, fp[-15] <- r1, fp[-16] <- r2
CheckStackOverflow:8(stack=0, loop=0)
v67 <- AllocateContext:10(num_variables=1) T{Context}
ParallelMove r4 <- r0, r3 <- fp[-15]
ParallelMove fp[-18] <- r4
StoreField(v67 . this = v64, NoStoreBarrier)
v70 <- LoadField(v64 . :type_arguments {final}) T{TypeArguments}
ParallelMove r0 <- fp[-16], r2 <- r5, r1 <- C, fp[-17] <- r5
t0 <- AssertAssignable:12(v65, v69, 'subscription', instantiator_type_args(v70), function_type_args(v0)) T{StreamSubscription<X0>}
AssertAssignable for compile-time type
TTSCall
ParallelMove r3 <- fp[-15]
v138 <- LoadField(v64 T{_StreamController<X0>} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v138, v211) goto (3, 4)
B3
v103 <- LoadField(v64 . _varData@4048458) T{Object??}
ParallelMove r0 <- r4, r2 <- fp[-17], r1 <- C, fp[-16] <- r4
t0 <- AssertAssignable:26(v103, v104, '', instantiator_type_args(v70 T{TypeArguments}), function_type_args(v0)) T{_StreamControllerAddStreamState}
AssertAssignable for compile-time type
TTSCall
ParallelMove r1 <- fp[-16]
v107 <- StaticCall:28( cancel<0> v103 T{_StreamControllerAddStreamState}, using unchecked entrypoint, result_type = T{_Future}) T{_Future}
ParallelMove r0 <- r0
ParallelMove r2 <- r0 goto:34 B5
B4
ParallelMove r2 <- C goto:36 B5
B5
ParallelMove fp[-17] <- r2
StoreField(v64 T{_StreamController<X0>} . _varData@4048458 = v0 T{Null?})
v77 <- LoadField(v64 . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
v82 <- BinaryInt64Op(& [tr], v77, v193) [-9223372036854775808, 9223372036854775807] int64
v83 <- BinaryInt64Op(| [tr], v82, v213 T{_Smi}) [-9223372036854775808, 9223372036854775807] int64
StoreField(v64 T{_StreamController<X0>} . _state@4048458 = v83 T{int} <int64>)
v84 <- LoadField(v64 . onCancel) T{((dynamic) => void)??}
ParallelMove fp[-16] <- r3
Branch if StrictCompare:54(!==, v84, v0) goto (6, 16)
B6
Branch if StrictCompare:60(===, v75, v0) goto (7, 14)
B7
B8
v164 <- LoadField(v84 T{((dynamic) => void)?} . Closure.context {final}) T{*}
ParallelMove r1 <- r0, fp[-15] <- r0
v166 <- StaticCall:10( onCancel<0> v164 T{*}) T{*?}
ParallelMove r0 <- r0
v113 <- LoadClassId(v166 T{*?}) [1, 600] int64
Branch if EqualityCompare(v113 == v114) T{bool} goto (10, 11)
B10
B11
ParallelMove r0 <- fp[-17] goto:92 B12
B12
ParallelMove r1 <- fp[-18], r0 <- r0 goto:94 B9
B14
ParallelMove r1 <- fp[-17], r2 <- fp[-16]
v85 <- StaticCall:108( whenComplete<0> v75 T{_Future}, v84 T{((dynamic) => void)?}, using unchecked entrypoint, result_type = T{_Future}) T{_Future}
ParallelMove r0 <- r0
ParallelMove r1 <- fp[-18], r0 <- r0 goto:114 B15
B16
ParallelMove r2 <- fp[-18], r0 <- fp[-17] goto:122 B17
B13
ParallelMove r1 <- C, r2 <- r0, r3 <- r1, fp[-15] <- r0, fp[-16] <- r1
v17 <- AllocateObject:98(cls=_Future, v16) T{_Future}
ParallelMove r1 <- r0, r0 <- C
ParallelMove fp[-17] <- r1
StoreField(v17 T{_Future} . _state@4048458 = v212 T{_Smi} <int64>, NoStoreBarrier)
v169 <- LoadStaticField:4(_current@4048458, CallsInitializer) T{_RootZone}
ParallelMove r1 <- r0, r0 <- fp[-17]
StoreField(v17 T{_Future} . _zone@4048458 = v169, NoStoreBarrier)
ParallelMove r1 <- r0, r2 <- fp[-15], r3 <- fp[-16]
StaticCall:102( _asyncCompleteError@4048458<0> v17, v6, v7, using unchecked entrypoint)
ParallelMove r0 <- fp[-2]
ParallelMove r1 <- r0, r0 <- fp[-17] goto:104 B9
B9
B15
ParallelMove r2 <- r1, r0 <- r0 goto:120 B17
B17
ParallelMove fp[-15] <- r0
Branch if StrictCompare:126(!==, v54, v0) goto (18, 19)
B18
ParallelMove r1 <- C, r2 <- r2
v61 <- AllocateClosure:124(v60, v48) T{_Closure}
ParallelMove r1 <- fp[-15], r2 <- r0
v63 <- StaticCall:132( whenComplete<0> v54 T{_Future}, v61, using unchecked entrypoint, result_type = T{_Future}) T{_Future}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:140 B20
B19
v149 <- LoadField(v48 T{*} . this) T{_StreamController<X0>}
v150 <- LoadField(v149 . _doneFuture@4048458) T{_Future?}
Branch if StrictCompare:12(!==, v150, v0 T{Null?}) goto (35, 38)
B35
v174 <- LoadField(v150 T{_Future} . _state@4048458) [-9223372036854775808, 9223372036854775807] int64
Branch if TestInt(v174, v214) goto (36, 39)
B36
ParallelMove r1 <- r1, r2 <- C
StaticCall:28( _asyncComplete@4048458<0> v150 T{_Future}, v0 T{Null?})
ParallelMove  goto:42 B40
B39
B38
B37
B40
ParallelMove r0 <- fp[-15] goto:142 B20
B20
ParallelMove r0 <- r0
DartReturn:144(v62)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r1
v5 <- StaticCall:10( runBody<0> v3 T{*}) T{void?}
ParallelMove r0 <- r0
DartReturn:12(v5)
CheckStackOverflowSlowPath
Checking for cid 432 (_PendingEvents)
Generating check for type argument 0: X0
Checking instantiated type parameter for possible top types
Checking for legacy or non-nullable instance type argument
Checking instance type argument for possible bottom types
Checking for legacy or nullable instantiated type parameter
B0
B1
Enter frame
ParallelMove r0 <- fp[2]
Branch if StrictCompare:8(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:18(v6 T{bool})
B4
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3 T{*})
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(MirrorReference_equals) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:20(v4, v5, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{bool}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:22(v4 T{bool})
B0
B1
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(SendPort_get_id) T{*?}
ParallelMove r0 <- r0
DartReturn:8(v3)
B0
B1
Enter frame
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(Capability_equals) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v4, v5, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{bool}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v4 T{bool})
B0
B1
Enter frame
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(Double_equal) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v4, v5, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{bool}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v4 T{bool})
B0
B1
Enter frame
ParallelMove r0 <- fp[2]
Branch if StrictCompare:8(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:18(v6 T{bool})
B4
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3 T{*})
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(Closure_equals) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:20(v4, v5, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{bool}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:22(v4 T{bool})
B0
B1
Intrinsic
Enter frame
ParallelMove r0 <- fp[2]
Branch if StrictCompare:8(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:18(v6 T{bool})
B4
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3 T{*})
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(AbstractType_equality) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:20(v4, v5, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{bool}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:22(v4 T{bool})
B0
B1
Intrinsic
Enter frame
ParallelMove r0 <- fp[2]
Branch if StrictCompare:8(===, v3, v0) goto (3, 4)
B3
ParallelMove r0 <- C
DartReturn:18(v6 T{bool})
B4
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3 T{*})
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(Type_equality) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:20(v4, v5, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{bool}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:22(v4 T{bool})
B0
B1
Intrinsic
B0
B1
Enter frame
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(Integer_greaterThanFromInteger) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v4, v5, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{bool}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v4 T{bool})
B0
B2
Enter frame
ParallelMove r0 <- fp[4]
v5 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r1, r2 <- fp[3], r3 <- fp[2]
v7 <- StaticCall:10( _addError@4048458<0> v5 T{*}, v3, v4) T{void?}
ParallelMove r0 <- r0
DartReturn:12(v7)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[3]
v4 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r1, r2 <- fp[2]
v6 <- StaticCall:10( _add@4048458<0> v4 T{*}, v3) T{void?}
ParallelMove r0 <- r0
DartReturn:12(v6)
CheckStackOverflowSlowPath
B0
B1
Enter frame
MoveArgument(sp[3] <- v2)
MoveArgument(sp[2] <- v3)
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v0)
v5 <- NativeCall(TypedData_SetFloat64x2) T{*?}
ParallelMove r0 <- r0
DartReturn:8(v5)
B0
B1
Enter frame
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(TypedData_GetFloat64x2) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v4, v5, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{_Float64x2}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v4 T{_Float64x2})
B0
B1
Enter frame
MoveArgument(sp[3] <- v2)
MoveArgument(sp[2] <- v3)
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v0)
v5 <- NativeCall(TypedData_SetInt32x4) T{*?}
ParallelMove r0 <- r0
DartReturn:8(v5)
B0
B1
Enter frame
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(TypedData_GetInt32x4) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v4, v5, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{_Int32x4}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v4 T{_Int32x4})
B0
B1
Enter frame
MoveArgument(sp[3] <- v2)
MoveArgument(sp[2] <- v3)
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v0)
v5 <- NativeCall(TypedData_SetFloat32x4) T{*?}
ParallelMove r0 <- r0
DartReturn:8(v5)
B0
B1
Enter frame
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(TypedData_GetFloat32x4) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v4, v5, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{_Float32x4}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v4 T{_Float32x4})
B0
B1
Enter frame
MoveArgument(sp[3] <- v2)
MoveArgument(sp[2] <- v3)
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v0)
v5 <- NativeCall(TypedData_SetFloat64) T{*?}
ParallelMove r0 <- r0
DartReturn:8(v5)
B0
B1
Enter frame
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(TypedData_GetFloat64) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v4, v5, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{_Double}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v4 T{_Double})
B0
B1
Enter frame
MoveArgument(sp[3] <- v2)
MoveArgument(sp[2] <- v3)
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v0)
v5 <- NativeCall(TypedData_SetFloat32) T{*?}
ParallelMove r0 <- r0
DartReturn:8(v5)
B0
B1
Enter frame
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(TypedData_GetFloat32) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v4, v5, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{_Double}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v4 T{_Double})
Checking for concrete finalized classes:
 * 111 (_Int8List)
 * 113 (_ExternalInt8Array)
 * 115 (_Uint8List)
 * 117 (_ExternalUint8Array)
 * 119 (_Uint8ClampedList)
 * 121 (_ExternalUint8ClampedArray)
 * 123 (_Int16List)
 * 125 (_ExternalInt16Array)
 * 127 (_Uint16List)
 * 129 (_ExternalUint16Array)
 * 131 (_Int32List)
 * 133 (_ExternalInt32Array)
 * 135 (_Uint32List)
 * 137 (_ExternalUint32Array)
 * 139 (_Int64List)
 * 141 (_ExternalInt64Array)
 * 143 (_Uint64List)
 * 145 (_ExternalUint64Array)
 * 147 (_Float32List)
 * 149 (_ExternalFloat32Array)
 * 151 (_Float64List)
 * 153 (_ExternalFloat64Array)
 * 155 (_Float32x4List)
 * 157 (_ExternalFloat32x4Array)
 * 159 (_Int32x4List)
 * 161 (_ExternalInt32x4Array)
 * 163 (_Float64x2List)
 * 165 (_ExternalFloat64x2Array)
B0
B1
Enter frame
MoveArgument(sp[3] <- v2)
MoveArgument(sp[2] <- v3)
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v0)
v5 <- NativeCall(StringBase_substringUnchecked) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v5, v6, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{String}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v5 T{String})
B0
B1
Intrinsic
Enter frame
MoveArgument(sp[3] <- v2)
MoveArgument(sp[2] <- v3)
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v0)
v5 <- NativeCall(OneByteString_substringUnchecked) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v5, v6, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{String}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v5 T{String})
B0
B1
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(String_toUpperCase) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v3, v4, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{String}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v3 T{String})
B0
B1
Graph intrinsic begin
ParallelMove r1 <- sp[0]
v1 <- LoadField(v0 . Array.length {final})
ParallelMove r0 <- r0
DartReturn:16(v1)
Graph intrinsic end
B0
B1
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(String_toLowerCase) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v3, v4, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{String}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v3 T{String})
B0
B1
Intrinsic
Enter frame
MoveArgument(sp[3] <- v2)
MoveArgument(sp[2] <- v3)
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v0)
v5 <- NativeCall(RegExp_ExecuteMatchSticky) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v5, v6, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{List<int>??}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v5 T{List<int>??})
B0
B1
Enter frame
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(Double_equalToInteger) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v4, v5, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{bool}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v4 T{bool})
B0
B1
Intrinsic
Enter frame
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(Integer_equalToInteger) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v4, v5, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{bool}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v4 T{bool})
B0
B1
Intrinsic
Enter frame
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(Double_doubleFromInteger) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v4, v5, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{_Double}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v4 T{_Double})
Check number of STC inputs
Call 7 input STC check
Call 6 input STC check
Call 4 input STC check
Call 3 input STC check
Call 2 input STC check
Call runtime
Done
Calling initializer function
Checking that initializer did not set late final field
Calling initializer function
Calling initializer function
Checking that initializer did not set late final field
Calling initializer function
EnterCallRuntimeFrame
EnterCallRuntimeFrame
EnterCallRuntimeFrame
EnterCallRuntimeFrame
EnterCallRuntimeFrame
EnterCallRuntimeFrame
EnterCallRuntimeFrame
EnterCallRuntimeFrame
EnterCallRuntimeFrame
EnterCallRuntimeFrame
Inline allocation of GrowableList
EnterCallRuntimeFrame
Inline allocation of uninitialized closure
Inline initialization of allocated closure
Closure allocation via runtime
EnterCallRuntimeFrame
Inline allocation of uninitialized closure
Inline initialization of allocated closure
Closure allocation via runtime
EnterCallRuntimeFrame
Inline allocation of uninitialized closure
Inline initialization of allocated closure
Closure allocation via runtime
EnterCallRuntimeFrame
Inline allocation of uninitialized closure
Inline initialization of allocated closure
Closure allocation via runtime
EnterCallRuntimeFrame
EnterCallRuntimeFrame
B0
B2
Enter frame
ParallelMove r0 <- fp[3]
v4 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
v5 <- LoadField(v4 . suspendState {final}) T{_SuspendState}
MoveArgument(sp[3] <- v5)
MoveArgument(sp[2] <- v3)
MoveArgument(sp[1] <- v0)
MoveArgument(sp[0] <- v0)
StaticCall:10( _resume@4048458<0> v5, v3, v0, v0, using unchecked entrypoint, recognized_kind = SuspendState_resume)
ParallelMove r0 <- C
DartReturn:12(v0)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r1
v5 <- StaticCall:10( onCancel<0> v3 T{*}) T{*?}
ParallelMove r0 <- r0
DartReturn:12(v5)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r1
v5 <- StaticCall:10( onResume<0> v3 T{*}) T{*?}
ParallelMove r0 <- r0
DartReturn:12(v5)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r1 <- r1
v5 <- StaticCall:10( onListen<0> v3 T{*}) T{*?}
ParallelMove r0 <- r0
DartReturn:12(v5)
CheckStackOverflowSlowPath
B0
B2
Enter frame
ParallelMove r0 <- fp[4]
v5 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
v6 <- LoadField(v5 . suspendState {final}) T{_SuspendState}
MoveArgument(sp[3] <- v6)
MoveArgument(sp[2] <- v0)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v4)
StaticCall:10( _resume@4048458<0> v6, v0, v3, v4, using unchecked entrypoint, recognized_kind = SuspendState_resume)
ParallelMove r0 <- C
DartReturn:12(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(SuspendState_instantiateClosureWithFutureTypeArgument) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v4, v5, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{_Closure}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v4 T{_Closure})
B0
B1
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(DartAsync_fatal) T{*?}
ParallelMove r0 <- r0
DartReturn:8(v3)
B0
B2
Enter frame
ParallelMove r0 <- C
ParallelMove r1 <- fp[3]
v4 <- LoadField(v2 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
v5 <- LoadField(v4 . self {final}) T{_AsyncStarStreamController}
ParallelMove fp[-1] <- r3
StoreField(v5 T{_AsyncStarStreamController} . isAdding = v6 T{bool})
ParallelMove r1 <- r3
StaticCall:12( scheduleGenerator<0> v5 T{_AsyncStarStreamController}, using unchecked entrypoint)
ParallelMove r1 <- fp[-1]
v9 <- LoadField(v5 T{_AsyncStarStreamController} . isScheduled) T{bool}
Branch if StrictCompare:18(!==, v9 T{bool}, v10) goto (3, 4)
BoolTest
B3
ParallelMove r2 <- C
StoreField(v5 T{_AsyncStarStreamController} . isSuspendedAtYield = v10 T{bool})
ParallelMove  goto:30 B5
B4
B5
ParallelMove r0 <- C
DartReturn:34(v0)
CheckStackOverflowSlowPath
B0
B1
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(Builtin_PrintString) T{*?}
ParallelMove r0 <- r0
DartReturn:8(v3)
B0
B1
Enter frame
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v0)
v3 <- NativeCall(RawReceivePort_closeInternal) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v3, v4, 'function result', instantiator_type_args(v0), function_type_args(v0)) [-9223372036854775808, 9223372036854775807] T{int}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v3 T{int})
B0
B1
Enter frame
v3 <- LoadField(v2 . ArgumentsDescriptor.type_args_len {final}) [0, 4611686018427387903] T{_Smi}
Branch if StrictCompare:4(===, v3, v4) goto (2, 3)
B2
ParallelMove r1 <- C goto:14 B5
B3
v5 <- LoadField(v2 . ArgumentsDescriptor.size {final}) [0, 4611686018427387903] T{_Smi}
v6 <- LoadIndexedUnsafe(fp[v5 + 16]) T{TypeArguments?}
ParallelMove r1 <- r2 goto:16 B5
B5
Branch if StrictCompare:22(===, v3 T{_Smi}, v4) goto (6, 7)
B6
ParallelMove r1 <- C goto:32 B8
B7
B8
ParallelMove fp[-1] <- r1
MoveArgument(sp[1] <- v9)
MoveArgument(sp[0] <- v0)
v10 <- NativeCall(Ffi_GetFfiNativeResolver) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- fp[-1], r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:36(v10, v11, 'function result', instantiator_type_args(v0), function_type_args(v9)) T{Pointer}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:38(v10 T{Pointer})
B0
B2
Enter frame
ParallelMove r0 <- fp[5]
v18 <- LoadField(v14 . Closure.context {final}) T{*}
CheckStackOverflow:8(stack=0, loop=0)
v19 <- LoadField(v18 . #ffiTarget0) T{Pointer}
v20 <- LoadField(v19 . PointerBase.data {final}) untagged
ParallelMove fp[-9] <- r20
ParallelMove r23 <- fp[2] goto:14 B3
B3
v22 <- LoadThread() untagged
ParallelMove fp[-8] <- r24
v24 <- LoadUntagged(v22 T{Object}, 1464) untagged
ParallelMove r0 <- r24, r9 <- r9
v25 <- LeafRuntimeCall(target_address=v24, v22) untagged
ParallelMove r0 <- r0
ParallelMove fp[-7] <- r0
v26 <- UnboxInt64([non-speculative], v17 T{int}) [-9223372036854775808, 9223372036854775807] int64
ParallelMove r2 <- r1, r9 <- r20, fp[-6] <- r1
v27 <- FfiCall:16( pointer=v20, v15 (@r0 int64), v16 (@r1 int64), v26 (@r2 int64)) [-9223372036854775808, 9223372036854775807] int64
EmitParamMoves
arg_index 0 arg_target r0 int64
  def_index 0
marshaller_.IsHandleCType(arg_index)
arg_index 1 arg_target r1 int64
  def_index 1
marshaller_.IsHandleCType(arg_index)
arg_index 2 arg_target r2 int64
  def_index 2
def_target r2 int64 <- origin r2 int64
EmitParamMovesEnd
Call
EmitReturnMoves
EmitReturnMovesEnd
ParallelMove r2 <- r0
v28 <- BoxInt64(v27) [-9223372036854775808, 9223372036854775807] T{int}
ParallelMove r20 <- r0, r0 <- fp[-8]
v31 <- LoadUntagged(v22 T{Object}, 1472) untagged
ParallelMove r0 <- r0, r9 <- r9
LeafRuntimeCall(target_address=v31, v22 T{Object}) untagged
ParallelMove r0 <- r20
DartReturn:18(v28)
B4
ParallelMove r23 <- r0, r20 <- r1
v11 <- LoadThread() untagged
v13 <- LoadUntagged(v11 T{Object}, 1472) untagged
ParallelMove r0 <- r0, r9 <- r9
LeafRuntimeCall(target_address=v13, v11) untagged
ParallelMove r0 <- r23, r1 <- r20
ReThrow:22(v8, v9)
CheckStackOverflowSlowPath
B0
B1
Enter frame
MoveArgument(sp[5] <- v2)
MoveArgument(sp[4] <- v3)
MoveArgument(sp[3] <- v4)
MoveArgument(sp[2] <- v5)
MoveArgument(sp[1] <- v6)
MoveArgument(sp[0] <- v0)
v7 <- NativeCall(AssertionError_throwNewSource) T{*?}
ParallelMove r0 <- r0
DartReturn:8(v7)
B0
B1
Enter frame
MoveArgument(sp[3] <- v2)
MoveArgument(sp[2] <- v3)
MoveArgument(sp[1] <- v4)
MoveArgument(sp[0] <- v0)
v5 <- NativeCall(AssertionError_throwNew) T{*?}
ParallelMove r0 <- r0
DartReturn:8(v5)
B0
B1
Enter frame
MoveArgument(sp[4] <- v2)
MoveArgument(sp[3] <- v3)
MoveArgument(sp[2] <- v4)
MoveArgument(sp[1] <- v5)
MoveArgument(sp[0] <- v0)
v6 <- NativeCall(TypeError_throwNew) T{*?}
ParallelMove r0 <- r0
DartReturn:8(v6)
Checking for concrete finalized classes:
 * 93 (_OneByteString)
 * 94 (_TwoByteString)
Checking for cid 65 (_Float64x2)
Checking for cid 64 (_Int32x4)
Checking for cid 63 (_Float32x4)
Checking for cid 61 (_Double)
Checking for concrete finalized classes:
 * 59 (_Smi)
 * 60 (_Mint)
B0
B1
MonomorphicCheckedEntry
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[4]
v5 <- LoadField(v2 . Closure.function {final}) T{Function}
v6 <- LoadField(v5 . Function.signature {final}) T{_FunctionType?}
v7 <- LoadField(v6 . FunctionType.packed_parameter_counts {final}) [0, 4294967295] uint32
v8 <- BoxSmallInt(v7) [0, 4294967295] T{_Smi}
v10 <- BinarySmiOp:12(& [-o], v8, v9) [0, 65532] T{_Smi}
v12 <- BinarySmiOp:14(>> [-o], v10, v11) [0, 16383] T{_Smi}
v16 <- BinarySmiOp:16(& [-o], v8 T{_Smi}, v15) [0, 1073676288] T{_Smi}
v18 <- BinarySmiOp:18(>> [-o], v16, v17) [0, 16383] T{_Smi}
v19 <- BinarySmiOp:20(+ [-o], v12, v18) [0, 32766] T{_Smi}
v22 <- BinarySmiOp:22(& [-o], v8 T{_Smi}, v11) [0, 2] T{_Smi}
v24 <- BinarySmiOp:24(>> [-o], v22, v23) [0, 1] T{_Smi}
v27 <- LoadField(v6 . FunctionType.named_parameter_names {final}) T{_List}
v28 <- LoadField(v6 . FunctionType.parameter_types {final}) T{_List}
ParallelMove fp[-8] <- r8
v29 <- LoadField(v6 . FunctionType.type_parameters {final}) T{TypeParameters?}
ParallelMove fp[-7] <- r9
v30 <- LoadField(v2 . Closure.instantiator_type_arguments {final}) T{TypeArguments?}
ParallelMove fp[-6] <- r10
v31 <- LoadField(v2 . Closure.function_type_arguments {final}) T{TypeArguments?}
ParallelMove fp[-5] <- r11
Branch if StrictCompare:26(!==, v24, v25) T{bool} goto (4, 5)
B4
Branch if StrictCompare:64(===, v12, v33) goto (11, 12)
B11
v97 <- LoadField(v27 . Array.length {final}) [0, 576460752303423487] T{_Smi}
Branch if StrictCompare:74(===, v18, v97) goto (13, 14)
B13
B14
B12
B5
Branch if RelationalOp:38(<=, v12, v33) T{bool} goto (7, 8)
B7
Branch if RelationalOp:50(<=, v33, v19) T{bool} goto (9, 10)
B9
B6
Branch if StrictCompare:254(===, v29, v0) goto (45, 46)
B45
ParallelMove r4 <- r11, r3 <- r8 goto:264 B44
B46
v37 <- LoadField(v6 . FunctionType.packed_type_parameter_counts {final}) [0, 65535] uint16
v38 <- BoxSmallInt(v37) [0, 65535] T{_Smi}
v40 <- BinarySmiOp:86(& [-o], v38, v39) [0, 255] T{_Smi}
ParallelMove fp[-4] <- r4
v44 <- BinarySmiOp:88(& [-o], v38 T{_Smi}, v43) [0, 65280] T{_Smi}
v46 <- BinarySmiOp:90(>> [-o], v44, v45) [0, 255] T{_Smi}
ParallelMove fp[-3] <- r5
v47 <- LoadField(v29 T{TypeParameters} . TypeParameters.flags {final}) T{_List?}
ParallelMove fp[-2] <- r6
v48 <- LoadField(v2 . Closure.delayed_type_arguments {final}) T{TypeArguments?}
ParallelMove fp[-1] <- r7
Branch if StrictCompare:130(===, v48, v49) goto (22, 23)
B22
v81 <- LoadField(v5 T{Function} . Function.data {final}) T{*}
v82 <- LoadField(v81 . ClosureData.packed_fields {final}) [0, 4294967295] uint32
v83 <- BoxSmallInt(v82) [0, 4294967295] T{_Smi}
v84 <- BinarySmiOp:92(& [-o], v83, v39) [0, 255] T{_Smi}
Branch if StrictCompare:96(===, v84, v23) goto (16, 17)
B16
v88 <- LoadField(v29 T{TypeParameters} . TypeParameters.defaults {final}) T{TypeArguments?}
ParallelMove r0 <- r1 goto:120 B15
B17
Branch if StrictCompare:104(===, v84, v25) goto (18, 19)
B18
v85 <- LoadField(v29 T{TypeParameters} . TypeParameters.defaults {final}) T{TypeArguments?}
ParallelMove r2 <- r10, r1 <- r11, r3 <- r3
v86 <- InstantiateTypeArguments:122(v85, instantiator_type_args(v30), function_type_args(v31)) T{*?}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:124 B15
B19
Branch if StrictCompare:112(===, v84, v11) goto (20, 21)
B20
ParallelMove r0 <- fp[-6] goto:126 B15
B21
ParallelMove r0 <- fp[-5] goto:128 B15
B15
ParallelMove r3 <- r0 goto:140 B24
B23
ParallelMove r3 <- fp[-1] goto:142 B24
B24
v52 <- BinarySmiOp:144(+ [tr], v40, v46) [0, 510] T{_Smi}
MoveArgument(sp[3] <- v51)
MoveArgument(sp[2] <- v31)
MoveArgument(sp[1] <- v40)
MoveArgument(sp[0] <- v52)
v53 <- StaticCall:146( _prependTypeArguments@9040228<0> v51, v31, v40, v52) T{*?}
ParallelMove r4 <- r0, r0 <- fp[-1]
ParallelMove fp[-10] <- r4
Branch if StrictCompare:238(===, v48 T{TypeArguments?}, v49) goto (41, 42)
B41
ParallelMove r0 <- fp[-7]
v57 <- LoadField(v29 T{TypeParameters} . TypeParameters.bounds {final}) T{TypeArguments?}
ParallelMove fp[-9] <- r5
Branch if StrictCompare:152(===, v57, v0) goto (27, 28)
B27
B28
v75 <- LoadField:162(v29 T{TypeParameters} . TypeParameters.names {final}) T{_List}
ParallelMove fp[-5] <- r6
ParallelMove r0 <- C goto:162 B26
B26
  Loop 0
  Loop Header
v133 <- BoxInt64(v58) [-4611686018427387903, v46] T{_Smi}
ParallelMove fp[-1] <- r11
Branch if RelationalOp:164(<, v133 T{_Smi}, v46) T{bool} goto (29, 30)
B29
  Loop 0
Branch if StrictCompare:180(===, v47, v0) goto (33, 34)
B33
B34
  Loop 0
v62 <- BinarySmiOp:190(>> [-o], v133 T{_Smi}, v61) [-144115188075855872, 7] T{_Smi}
v63 <- LoadIndexed([_List] v47 T{_List}, v62) T{*?}
v65 <- BinarySmiOp:192(& [-o], v133 T{_Smi}, v64) [0, 31] T{_Smi}
v66 <- BinarySmiOp:194(>> [-o], v63, v65) [-4611686018427387904, 4611686018427387903] T{_Smi}
v67 <- BinarySmiOp:196(& [-o], v66, v23) [0, 1] T{_Smi}
Branch if StrictCompare:198(===, v67, v25) goto (35, 36)
B35
B32
  Loop 0
Branch if StrictCompare:214(===, v53, v0) goto (37, 40)
B37
  Loop 0
ParallelMove r1 <- C goto:228 B38
B40
  Loop 0
v70 <- BinarySmiOp:224(+ [tr], v133 T{_Smi}, v40) [-4611686018427387903, v46+254] T{_Smi}
v71 <- LoadIndexed([TypeArguments] v53 T{*}, v70) T{*}
ParallelMove r1 <- r2 goto:226 B38
B38
  Loop 0
v188 <- LoadIndexed([TypeArguments] v57 T{TypeArguments}, v58) T{*}
v189 <- LoadIndexed([_List] v75, v58) T{*?}
ParallelMove r2 <- fp[-6], r1 <- r4, r0 <- r1, r8 <- r8, r3 <- r3
AssertSubtype:230(v72, v188 T{*}, v189 T{*?}, instantiator_type_args(v30), function_type_args(v53))
ParallelMove  goto:232 B31
B36
B31
  Loop 0
v69 <- BinarySmiOp:234(+ [tr], v133 T{_Smi}, v23) [-4611686018427387902, v46] T{_Smi}
v140 <- UnboxInt64([non-speculative], v69) [-4611686018427387902, v46] int64
ParallelMove r0 <- r0, r4 <- fp[-10], r5 <- fp[-9], r6 <- fp[-5] goto:236 B26
B30
B25
B42
B43
ParallelMove r4 <- fp[-10], r3 <- fp[-8] goto:262 B44
B44
ParallelMove fp[-1] <- r4
v92 <- LoadIndexed([_List] v28, v23) T{*?}
ParallelMove r0 <- fp[3], r8 <- r8, r2 <- fp[-6], r1 <- r4
t11 <- AssertAssignable:266(v3, v92, ':dynamic_assert_assignable_stc_check', instantiator_type_args(v30), function_type_args(v91)) T{*?}
AssertAssignable for runtime type
TTSCall
ParallelMove r0 <- fp[-8]
v94 <- LoadIndexed([_List] v28, v11) T{*?}
ParallelMove r0 <- fp[2], r8 <- r8, r2 <- fp[-6], r1 <- fp[-1]
t11 <- AssertAssignable:268(v4, v94, ':dynamic_assert_assignable_stc_check', instantiator_type_args(v30), function_type_args(v91)) T{*?}
AssertAssignable for runtime type
TTSCall
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3 T{*?})
MoveArgument(sp[0] <- v4 T{*?})
ParallelMove r0 <- fp[4]
v96 <- ClosureCall:270( closure=v2<0>, v2, v3 T{*?}, v4 T{*?}) T{*?}
ParallelMove r0 <- r0
DartReturn:272(v96)
B10
B8
B3
ParallelMove r4 <- C
TailCall(_iso_stub_CallClosureNoSuchMethodStub(v36))
CheckStackOverflowSlowPath
B0
B1
MonomorphicCheckedEntry
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[2]
v3 <- LoadField(v2 . Closure.function {final}) T{Function}
v4 <- LoadField(v3 . Function.signature {final}) T{_FunctionType?}
v5 <- LoadField(v4 . FunctionType.packed_parameter_counts {final}) [0, 4294967295] uint32
v6 <- BoxSmallInt(v5) [0, 4294967295] T{_Smi}
v8 <- BinarySmiOp:12(& [-o], v6, v7) [0, 65532] T{_Smi}
v10 <- BinarySmiOp:14(>> [-o], v8, v9) [0, 16383] T{_Smi}
v14 <- BinarySmiOp:16(& [-o], v6 T{_Smi}, v13) [0, 1073676288] T{_Smi}
v16 <- BinarySmiOp:18(>> [-o], v14, v15) [0, 16383] T{_Smi}
v17 <- BinarySmiOp:20(+ [-o], v10, v16) [0, 32766] T{_Smi}
v20 <- BinarySmiOp:22(& [-o], v6 T{_Smi}, v9) [0, 2] T{_Smi}
v22 <- BinarySmiOp:24(>> [-o], v20, v21) [0, 1] T{_Smi}
v25 <- LoadField(v4 . FunctionType.named_parameter_names {final}) T{_List}
v27 <- LoadField(v4 . FunctionType.type_parameters {final}) T{TypeParameters?}
ParallelMove fp[-7] <- r8
v28 <- LoadField(v2 . Closure.instantiator_type_arguments {final}) T{TypeArguments?}
ParallelMove fp[-6] <- r9
v29 <- LoadField(v2 . Closure.function_type_arguments {final}) T{TypeArguments?}
ParallelMove fp[-5] <- r10
Branch if StrictCompare:26(!==, v22, v23) T{bool} goto (4, 5)
B4
Branch if StrictCompare:64(===, v10, v21) goto (11, 12)
B11
v90 <- LoadField(v25 . Array.length {final}) [0, 576460752303423487] T{_Smi}
Branch if StrictCompare:74(===, v16, v90) goto (13, 14)
B13
B14
B12
B5
Branch if RelationalOp:38(<=, v10, v21) T{bool} goto (7, 8)
B7
Branch if RelationalOp:50(<=, v21, v17) T{bool} goto (9, 10)
B9
B6
Branch if StrictCompare:254(===, v27, v0) goto (45, 46)
B45
B46
v34 <- LoadField(v4 . FunctionType.packed_type_parameter_counts {final}) [0, 65535] uint16
v35 <- BoxSmallInt(v34) [0, 65535] T{_Smi}
v37 <- BinarySmiOp:86(& [-o], v35, v36) [0, 255] T{_Smi}
ParallelMove fp[-4] <- r4
v41 <- BinarySmiOp:88(& [-o], v35 T{_Smi}, v40) [0, 65280] T{_Smi}
v43 <- BinarySmiOp:90(>> [-o], v41, v42) [0, 255] T{_Smi}
ParallelMove fp[-3] <- r5
v44 <- LoadField(v27 T{TypeParameters} . TypeParameters.flags {final}) T{_List?}
ParallelMove fp[-2] <- r6
v45 <- LoadField(v2 . Closure.delayed_type_arguments {final}) T{TypeArguments?}
ParallelMove fp[-1] <- r7
Branch if StrictCompare:130(===, v45, v46) goto (22, 23)
B22
v78 <- LoadField(v3 T{Function} . Function.data {final}) T{*}
v79 <- LoadField(v78 . ClosureData.packed_fields {final}) [0, 4294967295] uint32
v80 <- BoxSmallInt(v79) [0, 4294967295] T{_Smi}
v81 <- BinarySmiOp:92(& [-o], v80, v36) [0, 255] T{_Smi}
Branch if StrictCompare:96(===, v81, v21) goto (16, 17)
B16
v85 <- LoadField(v27 T{TypeParameters} . TypeParameters.defaults {final}) T{TypeArguments?}
ParallelMove r0 <- r1 goto:120 B15
B17
Branch if StrictCompare:104(===, v81, v23) goto (18, 19)
B18
v82 <- LoadField(v27 T{TypeParameters} . TypeParameters.defaults {final}) T{TypeArguments?}
ParallelMove r2 <- r9, r1 <- r10, r3 <- r3
v83 <- InstantiateTypeArguments:122(v82, instantiator_type_args(v28), function_type_args(v29)) T{*?}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:124 B15
B19
Branch if StrictCompare:112(===, v81, v9) goto (20, 21)
B20
ParallelMove r0 <- fp[-6] goto:126 B15
B21
ParallelMove r0 <- fp[-5] goto:128 B15
B15
ParallelMove r3 <- r0 goto:140 B24
B23
ParallelMove r3 <- fp[-1] goto:142 B24
B24
v49 <- BinarySmiOp:144(+ [tr], v37, v43) [0, 510] T{_Smi}
MoveArgument(sp[3] <- v48)
MoveArgument(sp[2] <- v29)
MoveArgument(sp[1] <- v37)
MoveArgument(sp[0] <- v49)
v50 <- StaticCall:146( _prependTypeArguments@9040228<0> v48, v29, v37, v49) T{*?}
ParallelMove r4 <- r0, r0 <- fp[-1]
ParallelMove fp[-9] <- r4
Branch if StrictCompare:238(===, v45 T{TypeArguments?}, v46) goto (41, 42)
B41
ParallelMove r0 <- fp[-7]
v54 <- LoadField(v27 T{TypeParameters} . TypeParameters.bounds {final}) T{TypeArguments?}
ParallelMove fp[-8] <- r5
Branch if StrictCompare:152(===, v54, v0) goto (27, 28)
B27
B28
v72 <- LoadField:162(v27 T{TypeParameters} . TypeParameters.names {final}) T{_List}
ParallelMove fp[-5] <- r6
ParallelMove r0 <- C goto:162 B26
B26
  Loop 0
  Loop Header
v126 <- BoxInt64(v55) [-4611686018427387903, v43] T{_Smi}
ParallelMove fp[-1] <- r11
Branch if RelationalOp:164(<, v126 T{_Smi}, v43) T{bool} goto (29, 30)
B29
  Loop 0
Branch if StrictCompare:180(===, v44, v0) goto (33, 34)
B33
B34
  Loop 0
v59 <- BinarySmiOp:190(>> [-o], v126 T{_Smi}, v58) [-144115188075855872, 7] T{_Smi}
v60 <- LoadIndexed([_List] v44 T{_List}, v59) T{*?}
v62 <- BinarySmiOp:192(& [-o], v126 T{_Smi}, v61) [0, 31] T{_Smi}
v63 <- BinarySmiOp:194(>> [-o], v60, v62) [-4611686018427387904, 4611686018427387903] T{_Smi}
v64 <- BinarySmiOp:196(& [-o], v63, v21) [0, 1] T{_Smi}
Branch if StrictCompare:198(===, v64, v23) goto (35, 36)
B35
B32
  Loop 0
Branch if StrictCompare:214(===, v50, v0) goto (37, 40)
B37
  Loop 0
ParallelMove r1 <- C goto:228 B38
B40
  Loop 0
v67 <- BinarySmiOp:224(+ [tr], v126 T{_Smi}, v37) [-4611686018427387903, v43+254] T{_Smi}
v68 <- LoadIndexed([TypeArguments] v50 T{*}, v67) T{*}
ParallelMove r1 <- r2 goto:226 B38
B38
  Loop 0
v181 <- LoadIndexed([TypeArguments] v54 T{TypeArguments}, v55) T{*}
v182 <- LoadIndexed([_List] v72, v55) T{*?}
ParallelMove r2 <- fp[-6], r1 <- r4, r0 <- r1, r8 <- r8, r3 <- r3
AssertSubtype:230(v69, v181 T{*}, v182 T{*?}, instantiator_type_args(v28), function_type_args(v50))
ParallelMove  goto:232 B31
B36
B31
  Loop 0
v66 <- BinarySmiOp:234(+ [tr], v126 T{_Smi}, v21) [-4611686018427387902, v43] T{_Smi}
v133 <- UnboxInt64([non-speculative], v66) [-4611686018427387902, v43] int64
ParallelMove r0 <- r0, r4 <- fp[-9], r5 <- fp[-8], r6 <- fp[-5] goto:236 B26
B30
B25
B42
B43
B44
MoveArgument(sp[0] <- v2)
ParallelMove r0 <- fp[2]
v89 <- ClosureCall:266( closure=v2<0>, v2) T{*?}
ParallelMove r0 <- r0
DartReturn:268(v89)
B10
B8
B3
ParallelMove r4 <- C
TailCall(_iso_stub_CallClosureNoSuchMethodStub(v33))
CheckStackOverflowSlowPath
B0
B1
MonomorphicCheckedEntry
Enter frame
CheckStackOverflow:8(stack=0, loop=0)
ParallelMove r0 <- fp[3]
v4 <- LoadField(v2 . Closure.function {final}) T{Function}
v5 <- LoadField(v4 . Function.signature {final}) T{_FunctionType?}
v6 <- LoadField(v5 . FunctionType.packed_parameter_counts {final}) [0, 4294967295] uint32
v7 <- BoxSmallInt(v6) [0, 4294967295] T{_Smi}
v9 <- BinarySmiOp:12(& [-o], v7, v8) [0, 65532] T{_Smi}
v11 <- BinarySmiOp:14(>> [-o], v9, v10) [0, 16383] T{_Smi}
v15 <- BinarySmiOp:16(& [-o], v7 T{_Smi}, v14) [0, 1073676288] T{_Smi}
v17 <- BinarySmiOp:18(>> [-o], v15, v16) [0, 16383] T{_Smi}
v18 <- BinarySmiOp:20(+ [-o], v11, v17) [0, 32766] T{_Smi}
v21 <- BinarySmiOp:22(& [-o], v7 T{_Smi}, v10) [0, 2] T{_Smi}
v23 <- BinarySmiOp:24(>> [-o], v21, v22) [0, 1] T{_Smi}
v26 <- LoadField(v5 . FunctionType.named_parameter_names {final}) T{_List}
v27 <- LoadField(v5 . FunctionType.parameter_types {final}) T{_List}
ParallelMove fp[-8] <- r8
v28 <- LoadField(v5 . FunctionType.type_parameters {final}) T{TypeParameters?}
ParallelMove fp[-7] <- r9
v29 <- LoadField(v2 . Closure.instantiator_type_arguments {final}) T{TypeArguments?}
ParallelMove fp[-6] <- r10
v30 <- LoadField(v2 . Closure.function_type_arguments {final}) T{TypeArguments?}
ParallelMove fp[-5] <- r11
Branch if StrictCompare:26(!==, v23, v24) T{bool} goto (4, 5)
B4
Branch if StrictCompare:64(===, v11, v10) goto (11, 12)
B11
v93 <- LoadField(v26 . Array.length {final}) [0, 576460752303423487] T{_Smi}
Branch if StrictCompare:74(===, v17, v93) goto (13, 14)
B13
B14
B12
B5
Branch if RelationalOp:38(<=, v11, v10) T{bool} goto (7, 8)
B7
Branch if RelationalOp:50(<=, v10, v18) T{bool} goto (9, 10)
B9
B6
Branch if StrictCompare:254(===, v28, v0) goto (45, 46)
B45
ParallelMove r1 <- r11, r0 <- r8 goto:264 B44
B46
v35 <- LoadField(v5 . FunctionType.packed_type_parameter_counts {final}) [0, 65535] uint16
v36 <- BoxSmallInt(v35) [0, 65535] T{_Smi}
v38 <- BinarySmiOp:86(& [-o], v36, v37) [0, 255] T{_Smi}
ParallelMove fp[-4] <- r4
v42 <- BinarySmiOp:88(& [-o], v36 T{_Smi}, v41) [0, 65280] T{_Smi}
v44 <- BinarySmiOp:90(>> [-o], v42, v43) [0, 255] T{_Smi}
ParallelMove fp[-3] <- r5
v45 <- LoadField(v28 T{TypeParameters} . TypeParameters.flags {final}) T{_List?}
ParallelMove fp[-2] <- r6
v46 <- LoadField(v2 . Closure.delayed_type_arguments {final}) T{TypeArguments?}
ParallelMove fp[-1] <- r7
Branch if StrictCompare:130(===, v46, v47) goto (22, 23)
B22
v79 <- LoadField(v4 T{Function} . Function.data {final}) T{*}
v80 <- LoadField(v79 . ClosureData.packed_fields {final}) [0, 4294967295] uint32
v81 <- BoxSmallInt(v80) [0, 4294967295] T{_Smi}
v82 <- BinarySmiOp:92(& [-o], v81, v37) [0, 255] T{_Smi}
Branch if StrictCompare:96(===, v82, v22) goto (16, 17)
B16
v86 <- LoadField(v28 T{TypeParameters} . TypeParameters.defaults {final}) T{TypeArguments?}
ParallelMove r0 <- r1 goto:120 B15
B17
Branch if StrictCompare:104(===, v82, v24) goto (18, 19)
B18
v83 <- LoadField(v28 T{TypeParameters} . TypeParameters.defaults {final}) T{TypeArguments?}
ParallelMove r2 <- r10, r1 <- r11, r3 <- r3
v84 <- InstantiateTypeArguments:122(v83, instantiator_type_args(v29), function_type_args(v30)) T{*?}
ParallelMove r0 <- r0
ParallelMove r0 <- r0 goto:124 B15
B19
Branch if StrictCompare:112(===, v82, v10) goto (20, 21)
B20
ParallelMove r0 <- fp[-6] goto:126 B15
B21
ParallelMove r0 <- fp[-5] goto:128 B15
B15
ParallelMove r3 <- r0 goto:140 B24
B23
ParallelMove r3 <- fp[-1] goto:142 B24
B24
v50 <- BinarySmiOp:144(+ [tr], v38, v44) [0, 510] T{_Smi}
MoveArgument(sp[3] <- v49)
MoveArgument(sp[2] <- v30)
MoveArgument(sp[1] <- v38)
MoveArgument(sp[0] <- v50)
v51 <- StaticCall:146( _prependTypeArguments@9040228<0> v49, v30, v38, v50) T{*?}
ParallelMove r4 <- r0, r0 <- fp[-1]
ParallelMove fp[-10] <- r4
Branch if StrictCompare:238(===, v46 T{TypeArguments?}, v47) goto (41, 42)
B41
ParallelMove r0 <- fp[-7]
v55 <- LoadField(v28 T{TypeParameters} . TypeParameters.bounds {final}) T{TypeArguments?}
ParallelMove fp[-9] <- r5
Branch if StrictCompare:152(===, v55, v0) goto (27, 28)
B27
B28
v73 <- LoadField:162(v28 T{TypeParameters} . TypeParameters.names {final}) T{_List}
ParallelMove fp[-5] <- r6
ParallelMove r0 <- C goto:162 B26
B26
  Loop 0
  Loop Header
v129 <- BoxInt64(v56) [-4611686018427387903, v44] T{_Smi}
ParallelMove fp[-1] <- r11
Branch if RelationalOp:164(<, v129 T{_Smi}, v44) T{bool} goto (29, 30)
B29
  Loop 0
Branch if StrictCompare:180(===, v45, v0) goto (33, 34)
B33
B34
  Loop 0
v60 <- BinarySmiOp:190(>> [-o], v129 T{_Smi}, v59) [-144115188075855872, 7] T{_Smi}
v61 <- LoadIndexed([_List] v45 T{_List}, v60) T{*?}
v63 <- BinarySmiOp:192(& [-o], v129 T{_Smi}, v62) [0, 31] T{_Smi}
v64 <- BinarySmiOp:194(>> [-o], v61, v63) [-4611686018427387904, 4611686018427387903] T{_Smi}
v65 <- BinarySmiOp:196(& [-o], v64, v22) [0, 1] T{_Smi}
Branch if StrictCompare:198(===, v65, v24) goto (35, 36)
B35
B32
  Loop 0
Branch if StrictCompare:214(===, v51, v0) goto (37, 40)
B37
  Loop 0
ParallelMove r1 <- C goto:228 B38
B40
  Loop 0
v68 <- BinarySmiOp:224(+ [tr], v129 T{_Smi}, v38) [-4611686018427387903, v44+254] T{_Smi}
v69 <- LoadIndexed([TypeArguments] v51 T{*}, v68) T{*}
ParallelMove r1 <- r2 goto:226 B38
B38
  Loop 0
v184 <- LoadIndexed([TypeArguments] v55 T{TypeArguments}, v56) T{*}
v185 <- LoadIndexed([_List] v73, v56) T{*?}
ParallelMove r2 <- fp[-6], r1 <- r4, r0 <- r1, r8 <- r8, r3 <- r3
AssertSubtype:230(v70, v184 T{*}, v185 T{*?}, instantiator_type_args(v29), function_type_args(v51))
ParallelMove  goto:232 B31
B36
B31
  Loop 0
v67 <- BinarySmiOp:234(+ [tr], v129 T{_Smi}, v22) [-4611686018427387902, v44] T{_Smi}
v136 <- UnboxInt64([non-speculative], v67) [-4611686018427387902, v44] int64
ParallelMove r0 <- r0, r4 <- fp[-10], r5 <- fp[-9], r6 <- fp[-5] goto:236 B26
B30
B25
B42
B43
ParallelMove r1 <- fp[-10], r0 <- fp[-8] goto:262 B44
B44
v90 <- LoadIndexed([_List] v27, v22) T{*?}
ParallelMove r0 <- fp[2], r8 <- r8, r2 <- fp[-6], r1 <- r1
t11 <- AssertAssignable:266(v3, v90, ':dynamic_assert_assignable_stc_check', instantiator_type_args(v29), function_type_args(v89)) T{*?}
AssertAssignable for runtime type
TTSCall
MoveArgument(sp[1] <- v2)
MoveArgument(sp[0] <- v3 T{*?})
ParallelMove r0 <- fp[3]
v92 <- ClosureCall:268( closure=v2<0>, v2, v3 T{*?}) T{*?}
ParallelMove r0 <- r0
DartReturn:270(v92)
B10
B8
B3
ParallelMove r4 <- C
TailCall(_iso_stub_CallClosureNoSuchMethodStub(v34))
CheckStackOverflowSlowPath
B0
B1
MonomorphicCheckedEntry
ParallelMove r0 <- sp[0]
DartReturn:10(v2)
No valid cids to check
B0
B1
Enter frame
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(Object_simpleInstanceOf) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v4, v5, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{bool}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v4 T{bool})
B0
B1
Enter frame
MoveArgument(sp[4] <- v2)
MoveArgument(sp[3] <- v3)
MoveArgument(sp[2] <- v4)
MoveArgument(sp[1] <- v5)
MoveArgument(sp[0] <- v0)
v6 <- NativeCall(Object_instanceOf) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v6, v7, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{bool}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v6 T{bool})
B0
B1
Intrinsic
Enter frame
MoveArgument(sp[2] <- v2)
MoveArgument(sp[1] <- v3)
MoveArgument(sp[0] <- v0)
v4 <- NativeCall(Object_haveSameRuntimeType) T{*?}
ParallelMove r0 <- r0, r2 <- C, r1 <- C, r3 <- r0
ParallelMove fp[-1] <- r3
AssertAssignable:8(v4, v5, 'function result', instantiator_type_args(v0), function_type_args(v0)) T{bool}
AssertAssignable for compile-time type
TTSCall
ParallelMove r0 <- fp[-1]
DartReturn:10(v4 T{bool})
Checking for concrete finalized classes:
 * 87 (_Set)
 * 88 (_ConstSet)
Generating check for type argument 0: FinalizerEntry
Checks for Type
Checking for cid 55 (FinalizerEntry)
